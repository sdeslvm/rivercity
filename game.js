var _STRINGS = {
    'Ad': {
      'Mobile': {
        'Preroll': {
          'ReadyIn': "The game is ready in ",
          'Loading': "Your game is loading...",
          'Close': 'Close'
        },
        'Header': {
          'ReadyIn': "The game is ready in ",
          'Loading': "Your game is loading...",
          'Close': 'Close'
        },
        'End': {
          'ReadyIn': "Advertisement ends in ",
          'Loading': "Please wait ...",
          'Close': 'Close'
        }
      }
    },
    'Splash': {
      'Loading': "Loading ...",
      'LogoLine1': "Some text here",
      'LogoLine2': "powered by MarketJS",
      'LogoLine3': 'none',
      'TapToStart': "TAP TO START"
    },
    'Title': {
      'Play': 'PLAY',
      'Settings': 'SETTINGS',
      'MoreGames': "MORE GAMES",
      'TieredRv': "GET COINS",
      'Minigames': 'MINIGAMES',
      'Upgrade': 'UPGRADE',
      'Shop': 'SHOP',
      'DailyReward': "DAILY REWARDS",
      'Achievement': 'ACHIEVEMENTS'
    },
    'Settings': {
      'Header': 'SETTINGS',
      'BGM': "BGM %i",
      'SFX': "SFX %i",
      'On': 'On',
      'Off': 'Off'
    },
    'Game': {
      'Ready': 'READY!',
      'Set': 'SET!',
      'Go': 'GO!',
      'Meters': '%im',
      'LowFuel': "LOW FUEL",
      'FuelEmpty': "FUEL EMPTY",
      'cooldown': 'COOLDOWN',
      'nitroTutorial': "Press the SPACE button or click to activate",
      'nitroTutorial2': "Tap to activate"
    },
    'Shop': {
      'title': 'SHOP',
      'select': 'SELECT',
      'selected': 'SELECTED',
      'buy': 'BUY'
    },
    'Upgrade': {
      'title': 'UPGRADE',
      'max': 'MAX',
      'speed': "increase the top speed",
      'accel': "increase the acceleration",
      'fuel': "increase the fuel capacity",
      'handle': "increase the handling",
      'nitro': "increase the nitro duration"
    },
    'Results': {
      'GameOver': "GAME OVER",
      'Score': 'SCORE',
      'Best': 'BEST'
    },
    'RewardedVideo': {
      'MoreFuel': "MORE FUEL?",
      'Yes': 'YES',
      'No': 'NO',
      'Successful': "Reward successful!",
      'NotAvailable': "Reward is not available, please try again later"
    },
    'TieredRV': {
      'title': "Get More Coins",
      'description': "Watch daily videos to get powerful bonuses!",
      'buttonAd': "HELP",
      'success': "You have received the reward!",
      'fail': "RV ad has errored. Try again later.",
      'itemTitle': ["SOME COINS", "MORE COINS", "POCKET FULL OF COINS", "POT FULL OF COINS", "CHEST FULL OF COINS"],
      'itemReward': "Reward : #"
    },
    'DailyReward': {
      'title': "Daily Rewards!",
      'desc': "return daily to earn rewards!",
      'continue': 'Continue',
      'day': "Day ",
      'collected': "Reward Collected",
      'collect': 'Collect',
      'gift': "Spin to win rewards",
      'spin': 'SPIN'
    },
    'Lootbox': {
      'collectionTitle': "MY COLLECTION",
      'collectionActionButton': 'Activate',
      'collectionButtonMessage': "Select a Level 1 card to Activate",
      'assemblyTitle': "CARD ASSEMBLY",
      'assemblyMessage': "Select 3 of the same cards, to assemble.\nKeep assembling to upgrade to Level 5 cards",
      'assemblyButton': 'Assemble',
      'lootboxTitle': "LOOT BOXES",
      'boxFreeName': "Basic Loot",
      'boxPremiumName': "Premium Loot",
      'boxFreeDescription': "Open 1 card\nevery minute",
      'boxPremiumDescription': "Open 10 cards",
      'watchButton': 'Claim',
      'collectButton': 'COLLECT',
      'openButton': 'Claim',
      'upgradeButton': 'Upgrade',
      'levelPrefix': 'Lv.',
      'levelMax': 'MAX',
      'kartReward': "Now Available in Store",
      'cardNames': "Redboy;Luegee;Toadie;Princess;Duchess;Mushbroom;Bowie;Booking;Bulldozer;Berr;Speed + Fuel;Speed + Accel;Fuel + Handling;Speed + Nitro;Fuel + Accel;Nitro + Handling;Speed + Handling;Nitro + Fuel;Accel + Nitro;Handling + Accel".split(';'),
      'cardDesc': "Use Redboy;Use Luegee;Use Toadie;Use Princess;Use Duchess;Use Mushbroom;Use Bowie;Use Booking;Use Bulldozer;Use Berr;Increase 25% top speed + 25% fuel;Increase 25% top speed + 25% acceleration;Increase 25% fuel + 25% handling;Increase 25% top speed + 25% nitro;Increase 25% fuel + 25% acceleration;Increase 25% nitro + 25% handling;Increase 25% top speed + 25% handling;Increase 25% nitro + 25% fuel;Increase 25% acceleration + 25% nitro;Increase 25% handling + 25% acceleration".split(';')
    },
    'Achievement': {
      'title': 'ACHIEVEMENTS',
      'reward': "Reward : ",
      'claim': 'CLAIM',
      'completed': 'COMPLETED',
      'unlocked': "Achievement Unlocked!",
      'rewardFx': "Got +",
      'ok': 'Okay',
      'itemReward': "# coins",
      'itemTitle': "FIRST TRY;THE PASSER BY;THE VISITOR;HABITUAL RACER;CASUAL RACER;PERIODIC RACER;ACTIVE RACER;SERIOUS RACER;ADDICTED RACER;THIS RACER NUTS!;XTREME RACER;NUTS RACER;VIP RACER;V-VIP RACER;V-V-VIP RACER;FIRST RACE;NOOB;BEGINNER;NOVICE;AMATEUR;BABY DRIVER;TAIL CHASER;YOUNG RACER;SENIOR RACER;PROFESSIONAL RACER;VETERAN;SPECIALIST;EXPERT;TOP RACER;ELITE;SUPER RACER;CHAMPION;NITRO KNIGHT;RACER KING;RACE MASTER;SUPREME;EMPEROR;TERMINATOR;KART DESTROYER;TURBO MAN;ROAD WARRIOR;GHOST RIDERS;THE VENGEFUL DRIVERS;FAST LANE;PADDOCK POSSE;DRUNK DRIVERS;HEAD UP PISTONS;DIAMOND STEERING;SHOOTING STARS;PHANTOM RACE;CHAMPION FORCE;ROAD DEMONS;STORM RIDERS;PACE SETTERS;THE BAZOOKA;RAGIN THROTTLES;BUMPER BUSTERS;RIDING DOME;KILOMETER KILLERS;SPEED FREAKS;CARBON ENGINES;PISTON N PISTOLS;RAGING CRANKS;ALL WHEEL KINGS;THE GREAT KART RACER;KART COLLECTOR LVL. #;FIRST COIN;MORE COINS;MORE MORE COINS;LUCKY BOY;COIN STACKER;CRAMMED POUCH;GIMME MORE;FULL PIGGY BANK;THE THIEF;TREASURER;I'M RICH;BANK ROLLER;I OWN THE BANK;TOP TAXPAYER;THE RESERVE BANK;FUEL COLLECTOR LVL. #".split(';'),
      'itemDesc': "Play 1 Game;Play # Games;Reach #m distance;Unlock 1 Kart;Unlock # Karts;Collect 1 coin from Race;Collect # coins from Race;Collect # Fuels from Race".split(';')
    },
    'Minigames': {
      'title': 'MINIGAMES',
      'buttonOn': "Play to get reward!",
      'buttonOff': "Resets In #",
      'game1': {
        'title': "Guess The Number",
        'correctGuess': "Nice Guess",
        'wrongGuessHigher': "Incorrect, Guess Higher!",
        'wrongGuessLower': "Incorrect, Guess Lower!",
        'retryButton': 'Retry',
        'collectButton': 'Claim'
      },
      'game2': {
        'title': "Match the Cards",
        'failed': "Cards are not matched",
        'success': "All cards matched!",
        'retryButton': 'Retry',
        'collectButton': 'Claim'
      },
      'game3': {
        'title': "Simon Says",
        'correctGuess': 'Correct!',
        'failed': "Wrong Sequence",
        'success': "Nice Work!",
        'round': "Round [x]",
        'start': 'Start',
        'retryButton': 'Retry',
        'collectButton': 'Claim'
      },
      'game4': {
        'title': "Maze Challenge",
        'success': "Nice Work!",
        'collectButton': 'Claim'
      }
    }
  },
  _SETTINGS = {
    'API': {
      'Enabled': !0x0,
      'Log': {
        'Events': {
          'InitializeGame': !0x0,
          'EndGame': !0x0,
          'Level': {
            'Begin': !0x0,
            'End': !0x0,
            'Win': !0x0,
            'Lose': !0x0,
            'Draw': !0x0
          }
        }
      }
    },
    'Ad': {
      'Mobile': {
        'Preroll': {
          'Enabled': !0x0,
          'Duration': 0x5,
          'Width': 0x12c,
          'Height': 0xfa,
          'Rotation': {
            'Enabled': !0x1,
            'Weight': {
              'MobileAdInGamePreroll': 0x28,
              'MobileAdInGamePreroll2': 0x28,
              'MobileAdInGamePreroll3': 0x14
            }
          }
        },
        'Header': {
          'Enabled': !0x1,
          'Duration': 0x5,
          'Width': 0x140,
          'Height': 0x32,
          'Rotation': {
            'Enabled': !0x1,
            'Weight': {
              'MobileAdInGameHeader': 0x28,
              'MobileAdInGameHeader2': 0x28,
              'MobileAdInGameHeader3': 0x14
            }
          }
        },
        'Footer': {
          'Enabled': !0x1,
          'Duration': 0x5,
          'Width': 0x140,
          'Height': 0x32,
          'Rotation': {
            'Enabled': !0x1,
            'Weight': {
              'MobileAdInGameFooter': 0x28,
              'MobileAdInGameFooter2': 0x28,
              'MobileAdInGameFooter3': 0x14
            }
          }
        },
        'End': {
          'Enabled': !0x1,
          'Duration': 0x1,
          'Width': 0x12c,
          'Height': 0xfa,
          'Rotation': {
            'Enabled': !0x1,
            'Weight': {
              'MobileAdInGameEnd': 0x28,
              'MobileAdInGameEnd2': 0x28,
              'MobileAdInGameEnd3': 0x14
            }
          }
        }
      }
    },
    'Language': {
      'Default': 'en'
    },
    'DeveloperBranding': {
      'Splash': {
        'Enabled': !0x1
      },
      'Logo': {
        'Enabled': !0x0,
        'Link': 'http://marketjs.com',
        'LinkEnabled': !0x1,
        'NewWindow': !0x0,
        'Width': 0xa6,
        'Height': 0x3d
      }
    },
    'Branding': {
      'Splash': {
        'Enabled': !0x1
      },
      'Logo': {
        'Enabled': !0x1,
        'Link': 'http://google.com',
        'LinkEnabled': !0x0,
        'NewWindow': !0x0,
        'Width': 0x118,
        'Height': 0x22
      }
    },
    'MoreGames': {
      'Enabled': !0x1,
      'Link': 'http://www.marketjs.com/game/links/mobile',
      'NewWindow': !0x0
    },
    'Gamecenter': {
      'Enabled': !0x0
    },
    'TapToStartAudioUnlock': {
      'Enabled': !0x1
    },
    'Versioning': {
      'Version': '1.0.0',
      'Build': '6',
      'DisplayLog': !0x0,
      'DrawVersion': !0x0,
      'FontSize': '16px',
      'FontFamily': 'Arial',
      'FillStyle': '#000000'
    },
    'RewardedVideo': {
      'Enabled': !0x0
    }
  };
'undefined' !== typeof _SETTINGS.Versioning && null !== _SETTINGS.Versioning && !0x0 === _SETTINGS.Versioning.DisplayLog && console.log("Release: v" + _SETTINGS.Versioning.Version + '+build.' + _SETTINGS.Versioning.Build);
var MobileAdInGamePreroll = {
    'ad_duration': _SETTINGS.Ad.Mobile.Preroll.Duration,
    'ad_width': _SETTINGS.Ad.Mobile.Preroll.Width,
    'ad_height': _SETTINGS.Ad.Mobile.Preroll.Height,
    'ready_in': _STRINGS.Ad.Mobile.Preroll.ReadyIn,
    'loading': _STRINGS.Ad.Mobile.Preroll.Loading,
    'close': _STRINGS.Ad.Mobile.Preroll.Close + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;',
    'Initialize': function () {
      if (_SETTINGS.Ad.Mobile.Preroll.Rotation.Enabled) {
        var _0x18955c = _SETTINGS.Ad.Mobile.Preroll.Rotation.Weight,
          _0x1f3979 = _0x18955c.MobileAdInGamePreroll,
          _0x1c631c = _0x1f3979 + _0x18955c.MobileAdInGamePreroll2,
          _0x18955c = _0x1c631c + _0x18955c.MobileAdInGamePreroll3,
          _0x3fbda1 = Math.floor(0x64 * Math.random());
        console.log("seed: ", _0x3fbda1), _0x3fbda1 <= _0x1f3979 ? this.selectedOverlayName = 'MobileAdInGamePreroll' : _0x3fbda1 <= _0x1c631c ? this.selectedOverlayName = 'MobileAdInGamePreroll2' : _0x3fbda1 <= _0x18955c && (this.selectedOverlayName = 'MobileAdInGamePreroll3'), console.log("Ad rotating preroll enabled");
      } else this.selectedOverlayName = 'MobileAdInGamePreroll', console.log("Ad rotating preroll disabled");
      console.log('selected:', this.selectedOverlayName), this.overlay = $('#' + this.selectedOverlayName), this.box = $('#' + this.selectedOverlayName + '-Box'), this.game = $('#game'), this.boxContents = {
        'footer': $('#' + this.selectedOverlayName + '-Box-Footer'),
        'header': $('#' + this.selectedOverlayName + '-Box-Header'),
        'close': $('#' + this.selectedOverlayName + '-Box-Close'),
        'body': $('#' + this.selectedOverlayName + '-Box-Body')
      }, this.box.width(this.ad_width), this.box.height(this.ad_height), this.box.css('left', (this.overlay.width() - this.box.width()) / 0x2), this.box.css('top', (this.overlay.height() - this.box.height() - this.boxContents.header.height() - this.boxContents.footer.height()) / 0x2), this.overlay.show(this.Timer(this.ad_duration));
    },
    'Timer': function (_0x1dd730) {
      var _0x52ae06 = _0x1dd730,
        _0x90a95d = setInterval(function () {
          MobileAdInGamePreroll.boxContents.header.text(MobileAdInGamePreroll.ready_in + _0x52ae06 + '...'), MobileAdInGamePreroll.boxContents.footer.text(MobileAdInGamePreroll.loading), _0x52ae06--, 0x0 > _0x52ae06 && (clearInterval(_0x90a95d), MobileAdInGamePreroll.boxContents.close.css('left', MobileAdInGamePreroll.boxContents.body.width() - 0x17), MobileAdInGamePreroll.boxContents.close.show(), MobileAdInGamePreroll.boxContents.header.html(MobileAdInGamePreroll.close), MobileAdInGamePreroll.boxContents.footer.text(''));
        }, 0x3e8);
    },
    'Close': function () {
      this.boxContents.close.hide(), this.overlay.hide();
    }
  },
  MobileAdInGameHeader = {
    'ad_duration': _SETTINGS.Ad.Mobile.Header.Duration,
    'ad_width': _SETTINGS.Ad.Mobile.Header.Width,
    'ad_height': _SETTINGS.Ad.Mobile.Header.Height,
    'Initialize': function () {
      if (_SETTINGS.Ad.Mobile.Header.Rotation.Enabled) {
        var _0x99b3e1 = _SETTINGS.Ad.Mobile.Header.Rotation.Weight,
          _0x1ab346 = _0x99b3e1.MobileAdInGameHeader,
          _0x2dfe7d = _0x1ab346 + _0x99b3e1.MobileAdInGameHeader2,
          _0x99b3e1 = _0x2dfe7d + _0x99b3e1.MobileAdInGameHeader3,
          _0x3c6ef6 = Math.floor(0x64 * Math.random());
        console.log("seed: ", _0x3c6ef6), _0x3c6ef6 <= _0x1ab346 ? this.selectedOverlayName = 'MobileAdInGameHeader' : _0x3c6ef6 <= _0x2dfe7d ? this.selectedOverlayName = 'MobileAdInGameHeader2' : _0x3c6ef6 <= _0x99b3e1 && (this.selectedOverlayName = 'MobileAdInGameHeader3'), console.log("Ad rotating header enabled");
      } else this.selectedOverlayName = 'MobileAdInGameHeader', console.log("Ad rotating header disabled");
      this.div = $('#' + this.selectedOverlayName), this.game = $('#game'), this.div.width(this.ad_width), this.div.height(this.ad_height), this.div.css('left', this.game.position().left + (this.game.width() - this.div.width()) / 0x2), this.div.css('top', 0x0), this.div.show(this.Timer(this.ad_duration));
    },
    'Timer': function (_0x52357d) {
      var _0x1c8c9d = setInterval(function () {
        _0x52357d--, 0x0 > _0x52357d && (MobileAdInGameHeader.div.hide(), clearInterval(_0x1c8c9d));
      }, 0x3e8);
    }
  },
  MobileAdInGameFooter = {
    'ad_duration': _SETTINGS.Ad.Mobile.Footer.Duration,
    'ad_width': _SETTINGS.Ad.Mobile.Footer.Width,
    'ad_height': _SETTINGS.Ad.Mobile.Footer.Height,
    'Initialize': function () {
      if (_SETTINGS.Ad.Mobile.Footer.Rotation.Enabled) {
        var _0x8a8d5c = _SETTINGS.Ad.Mobile.Footer.Rotation.Weight,
          _0x56e393 = _0x8a8d5c.MobileAdInGameFooter,
          _0x5961d9 = _0x56e393 + _0x8a8d5c.MobileAdInGameFooter2,
          _0x8a8d5c = _0x5961d9 + _0x8a8d5c.MobileAdInGameFooter3,
          _0x55eeec = Math.floor(0x64 * Math.random());
        console.log("seed: ", _0x55eeec), _0x55eeec <= _0x56e393 ? this.selectedOverlayName = 'MobileAdInGameFooter' : _0x55eeec <= _0x5961d9 ? this.selectedOverlayName = 'MobileAdInGameFooter2' : _0x55eeec <= _0x8a8d5c && (this.selectedOverlayName = 'MobileAdInGameFooter3'), console.log("Ad rotating footer enabled");
      } else this.selectedOverlayName = 'MobileAdInGameFooter', console.log("Ad rotating footer disabled");
      this.div = $('#' + this.selectedOverlayName), this.game = $('#game'), this.div.width(this.ad_width), this.div.height(this.ad_height), this.div.css('left', this.game.position().left + (this.game.width() - this.div.width()) / 0x2), this.div.css('top', this.game.height() - this.div.height() - 0x5), this.div.show(this.Timer(this.ad_duration));
    },
    'Timer': function (_0x636044) {
      var _0x42a149 = setInterval(function () {
        _0x636044--, 0x0 > _0x636044 && (MobileAdInGameFooter.div.hide(), clearInterval(_0x42a149));
      }, 0x3e8);
    }
  },
  MobileAdInGameEnd = {
    'ad_duration': _SETTINGS.Ad.Mobile.End.Duration,
    'ad_width': _SETTINGS.Ad.Mobile.End.Width,
    'ad_height': _SETTINGS.Ad.Mobile.End.Height,
    'ready_in': _STRINGS.Ad.Mobile.End.ReadyIn,
    'loading': _STRINGS.Ad.Mobile.End.Loading,
    'close': _STRINGS.Ad.Mobile.End.Close + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;',
    'Initialize': function () {
      if (_SETTINGS.Ad.Mobile.End.Rotation.Enabled) {
        var _0x58f206 = _SETTINGS.Ad.Mobile.End.Rotation.Weight,
          _0x56446a = _0x58f206.MobileAdInGameEnd,
          _0x8eb407 = _0x56446a + _0x58f206.MobileAdInGameEnd2,
          _0x58f206 = _0x8eb407 + _0x58f206.MobileAdInGameEnd3,
          _0xf52b4f = Math.floor(0x64 * Math.random());
        console.log("seed: ", _0xf52b4f), _0xf52b4f <= _0x56446a ? this.selectedOverlayName = 'MobileAdInGameEnd' : _0xf52b4f <= _0x8eb407 ? this.selectedOverlayName = 'MobileAdInGameEnd2' : _0xf52b4f <= _0x58f206 && (this.selectedOverlayName = 'MobileAdInGameEnd3'), console.log("Ad rotating end enabled");
      } else this.selectedOverlayName = 'MobileAdInGameEnd', console.log("Ad rotating end disabled");
      console.log('selected:', this.selectedOverlayName), this.overlay = $('#' + this.selectedOverlayName), this.box = $('#' + this.selectedOverlayName + '-Box'), this.game = $('#game'), this.boxContents = {
        'footer': $('#' + this.selectedOverlayName + '-Box-Footer'),
        'header': $('#' + this.selectedOverlayName + '-Box-Header'),
        'close': $('#' + this.selectedOverlayName + '-Box-Close'),
        'body': $('#' + this.selectedOverlayName + '-Box-Body')
      }, this.box.width(this.ad_width), this.box.height(this.ad_height), this.box.css('left', (this.overlay.width() - this.box.width()) / 0x2), this.box.css('top', (this.overlay.height() - this.box.height() - this.boxContents.header.height() - this.boxContents.footer.height()) / 0x2), this.overlay.show(this.Timer(this.ad_duration));
    },
    'Timer': function (_0x135806) {
      var _0x4faeef = _0x135806,
        _0x5495e9 = setInterval(function () {
          MobileAdInGameEnd.boxContents.header.text(MobileAdInGameEnd.ready_in + _0x4faeef + '...'), MobileAdInGameEnd.boxContents.footer.text(MobileAdInGameEnd.loading), _0x4faeef--, 0x0 > _0x4faeef && (clearInterval(_0x5495e9), MobileAdInGameEnd.boxContents.close.css('left', MobileAdInGameEnd.boxContents.body.width() - 0x17), MobileAdInGameEnd.boxContents.close.show(), MobileAdInGameEnd.boxContents.header.html(MobileAdInGameEnd.close), MobileAdInGameEnd.boxContents.footer.text(''));
        }, 0x3e8);
    },
    'Close': function () {
      this.boxContents.close.hide(), this.overlay.hide();
    }
  };
!function (_0x174d16, _0x56f974) {
  'object' == typeof module && 'object' == typeof module.exports ? module.exports = _0x174d16.document ? _0x56f974(_0x174d16, !0x0) : function (_0x4f9eeb) {
    if (!_0x4f9eeb.document) throw Error("jQuery requires a window with a document");
    return _0x56f974(_0x4f9eeb);
  } : _0x56f974(_0x174d16);
}('undefined' != typeof window ? window : this, function (_0x10efb2, _0x383a7b) {
  function _0x357760(_0x18b4df, _0x45346c) {
    _0x45346c = _0x45346c || _0x16e0bd;
    var _0x1ece55 = _0x45346c.createElement('script');
    _0x1ece55.text = _0x18b4df, _0x45346c.head.appendChild(_0x1ece55).parentNode.removeChild(_0x1ece55);
  }
  function _0x4667e1(_0x501d46) {
    var _0x1fe40f = !!_0x501d46 && 'length' in _0x501d46 && _0x501d46.length,
      _0x3744e4 = _0x225465.type(_0x501d46);
    return 'function' !== _0x3744e4 && !_0x225465.isWindow(_0x501d46) && ('array' === _0x3744e4 || 0x0 === _0x1fe40f || 'number' == typeof _0x1fe40f && 0x0 < _0x1fe40f && _0x1fe40f - 0x1 in _0x501d46);
  }
  function _0x4e3d3f(_0x33e08d, _0x5644b8) {
    return _0x33e08d.nodeName && _0x33e08d.nodeName.toLowerCase() === _0x5644b8.toLowerCase();
  }
  function _0x2e0dbc(_0x1b48a2, _0x45bbae, _0x573b7d) {
    return _0x225465.isFunction(_0x45bbae) ? _0x225465.grep(_0x1b48a2, function (_0x5d802e, _0x5afb7f) {
      return !!_0x45bbae.call(_0x5d802e, _0x5afb7f, _0x5d802e) !== _0x573b7d;
    }) : _0x45bbae.nodeType ? _0x225465.grep(_0x1b48a2, function (_0x2bc187) {
      return _0x2bc187 === _0x45bbae !== _0x573b7d;
    }) : 'string' != typeof _0x45bbae ? _0x225465.grep(_0x1b48a2, function (_0x51e54e) {
      return -0x1 < _0x247dce.call(_0x45bbae, _0x51e54e) !== _0x573b7d;
    }) : _0x54ba5d.test(_0x45bbae) ? _0x225465.filter(_0x45bbae, _0x1b48a2, _0x573b7d) : (_0x45bbae = _0x225465.filter(_0x45bbae, _0x1b48a2), _0x225465.grep(_0x1b48a2, function (_0x3f9339) {
      return -0x1 < _0x247dce.call(_0x45bbae, _0x3f9339) !== _0x573b7d && 0x1 === _0x3f9339.nodeType;
    }));
  }
  function _0x378b69(_0x604a3e, _0x3874df) {
    for (; (_0x604a3e = _0x604a3e[_0x3874df]) && 0x1 !== _0x604a3e.nodeType;);
    return _0x604a3e;
  }
  function _0x99e950(_0x25bf05) {
    return _0x25bf05;
  }
  function _0x5c1b06(_0x3ce9d1) {
    throw _0x3ce9d1;
  }
  function _0x4b6e3a(_0x3cd91f, _0x435e4e, _0x569981, _0x24a7f4) {
    var _0x22c725;
    try {
      _0x3cd91f && _0x225465.isFunction(_0x22c725 = _0x3cd91f.promise) ? _0x22c725.call(_0x3cd91f).done(_0x435e4e).fail(_0x569981) : _0x3cd91f && _0x225465.isFunction(_0x22c725 = _0x3cd91f.then) ? _0x22c725.call(_0x3cd91f, _0x435e4e, _0x569981) : _0x435e4e.apply(void 0x0, [_0x3cd91f].slice(_0x24a7f4));
    } catch (_0x49719e) {
      _0x569981.apply(void 0x0, [_0x49719e]);
    }
  }
  function _0xe4dad4() {
    _0x16e0bd.removeEventListener('DOMContentLoaded', _0xe4dad4), _0x10efb2.removeEventListener('load', _0xe4dad4), _0x225465.ready();
  }
  function _0x3a2543() {
    this.expando = _0x225465.expando + _0x3a2543.uid++;
  }
  function _0x46c5ba(_0x557895, _0x130472, _0x488c9a) {
    var _0x51c0e0;
    if (void 0x0 === _0x488c9a && 0x1 === _0x557895.nodeType) {
      if (_0x51c0e0 = 'data-' + _0x130472.replace(_0x53ddb3, '-$&').toLowerCase(), _0x488c9a = _0x557895.getAttribute(_0x51c0e0), 'string' == typeof _0x488c9a) {
        try {
          _0x488c9a = 'true' === _0x488c9a || 'false' !== _0x488c9a && ('null' === _0x488c9a ? null : _0x488c9a === +_0x488c9a + '' ? +_0x488c9a : _0x2c13a2.test(_0x488c9a) ? JSON.parse(_0x488c9a) : _0x488c9a);
        } catch (_0x542512) {}
        _0x46f162.set(_0x557895, _0x130472, _0x488c9a);
      } else _0x488c9a = void 0x0;
    }
    return _0x488c9a;
  }
  function _0x6362a2(_0x161d28, _0x240675, _0x5484c0, _0x352b99) {
    var _0x5d8507,
      _0x570fed = 0x1,
      _0x389e08 = 0x14,
      _0xa9849f = _0x352b99 ? function () {
        return _0x352b99.cur();
      } : function () {
        return _0x225465.css(_0x161d28, _0x240675, '');
      },
      _0x48f0a4 = _0xa9849f(),
      _0x3f482d = _0x5484c0 && _0x5484c0[0x3] || (_0x225465.cssNumber[_0x240675] ? '' : 'px'),
      _0x4fd0aa = (_0x225465.cssNumber[_0x240675] || 'px' !== _0x3f482d && +_0x48f0a4) && _0x4d779d.exec(_0x225465.css(_0x161d28, _0x240675));
    if (_0x4fd0aa && _0x4fd0aa[0x3] !== _0x3f482d) {
      _0x3f482d = _0x3f482d || _0x4fd0aa[0x3], _0x5484c0 = _0x5484c0 || [], _0x4fd0aa = +_0x48f0a4 || 0x1;
      do _0x570fed = _0x570fed || '.5', _0x4fd0aa /= _0x570fed, _0x225465.style(_0x161d28, _0x240675, _0x4fd0aa + _0x3f482d); while (_0x570fed !== (_0x570fed = _0xa9849f() / _0x48f0a4) && 0x1 !== _0x570fed && --_0x389e08);
    }
    return _0x5484c0 && (_0x4fd0aa = +_0x4fd0aa || +_0x48f0a4 || 0x0, _0x5d8507 = _0x5484c0[0x1] ? _0x4fd0aa + (_0x5484c0[0x1] + 0x1) * _0x5484c0[0x2] : +_0x5484c0[0x2], _0x352b99 && (_0x352b99.unit = _0x3f482d, _0x352b99.start = _0x4fd0aa, _0x352b99.end = _0x5d8507)), _0x5d8507;
  }
  function _0x444a18(_0x3d204d, _0x28eb37) {
    for (var _0x1f2a8a, _0x4af490, _0x2a6d21 = [], _0x2e63dc = 0x0, _0x336900 = _0x3d204d.length; _0x2e63dc < _0x336900; _0x2e63dc++) if (_0x4af490 = _0x3d204d[_0x2e63dc], _0x4af490.style) {
      if (_0x1f2a8a = _0x4af490.style.display, _0x28eb37) {
        if ('none' === _0x1f2a8a && (_0x2a6d21[_0x2e63dc] = _0x179236.get(_0x4af490, 'display') || null, _0x2a6d21[_0x2e63dc] || (_0x4af490.style.display = '')), '' === _0x4af490.style.display && _0x4aed72(_0x4af490)) {
          _0x1f2a8a = _0x2a6d21;
          var _0x7bc31 = _0x2e63dc,
            _0xc9b632,
            _0x516f90 = void 0x0;
          _0xc9b632 = _0x4af490.ownerDocument;
          var _0x2d88a1 = _0x4af490.nodeName;
          _0xc9b632 = (_0x4af490 = _0x41298d[_0x2d88a1]) ? _0x4af490 : (_0x516f90 = _0xc9b632.body.appendChild(_0xc9b632.createElement(_0x2d88a1)), _0x4af490 = _0x225465.css(_0x516f90, 'display'), _0x516f90.parentNode.removeChild(_0x516f90), 'none' === _0x4af490 && (_0x4af490 = 'block'), _0x41298d[_0x2d88a1] = _0x4af490, _0x4af490), _0x1f2a8a[_0x7bc31] = _0xc9b632;
        }
      } else 'none' !== _0x1f2a8a && (_0x2a6d21[_0x2e63dc] = 'none', _0x179236.set(_0x4af490, 'display', _0x1f2a8a));
    }
    for (_0x2e63dc = 0x0; _0x2e63dc < _0x336900; _0x2e63dc++) null != _0x2a6d21[_0x2e63dc] && (_0x3d204d[_0x2e63dc].style.display = _0x2a6d21[_0x2e63dc]);
    return _0x3d204d;
  }
  function _0x4d7b78(_0x570896, _0x4c97b9) {
    var _0x4f38ed;
    return _0x4f38ed = 'undefined' != typeof _0x570896.getElementsByTagName ? _0x570896.getElementsByTagName(_0x4c97b9 || '*') : 'undefined' != typeof _0x570896.querySelectorAll ? _0x570896.querySelectorAll(_0x4c97b9 || '*') : [], void 0x0 === _0x4c97b9 || _0x4c97b9 && _0x4e3d3f(_0x570896, _0x4c97b9) ? _0x225465.merge([_0x570896], _0x4f38ed) : _0x4f38ed;
  }
  function _0x4ca42e(_0x230079, _0x2933ff) {
    for (var _0x25d35a = 0x0, _0x3521da = _0x230079.length; _0x25d35a < _0x3521da; _0x25d35a++) _0x179236.set(_0x230079[_0x25d35a], 'globalEval', !_0x2933ff || _0x179236.get(_0x2933ff[_0x25d35a], 'globalEval'));
  }
  function _0x2c0976(_0xac77a3, _0x1a1d3f, _0x438195, _0x3ffea8, _0x451876) {
    for (var _0x211203, _0x486a05, _0x3e908b, _0x59ec8c, _0x3348ae = _0x1a1d3f.createDocumentFragment(), _0x222af5 = [], _0x199fea = 0x0, _0x2425a0 = _0xac77a3.length; _0x199fea < _0x2425a0; _0x199fea++) if (_0x211203 = _0xac77a3[_0x199fea], _0x211203 || 0x0 === _0x211203) {
      if ('object' === _0x225465.type(_0x211203)) _0x225465.merge(_0x222af5, _0x211203.nodeType ? [_0x211203] : _0x211203);else {
        if (_0x3b607f.test(_0x211203)) {
          _0x486a05 = _0x486a05 || _0x3348ae.appendChild(_0x1a1d3f.createElement('div')), _0x3e908b = (_0xb336ff.exec(_0x211203) || ['', ''])[0x1].toLowerCase(), _0x3e908b = _0x1ac6a9[_0x3e908b] || _0x1ac6a9._default, _0x486a05.innerHTML = _0x3e908b[0x1] + _0x225465.htmlPrefilter(_0x211203) + _0x3e908b[0x2];
          for (_0x3e908b = _0x3e908b[0x0]; _0x3e908b--;) _0x486a05 = _0x486a05.lastChild;
          _0x225465.merge(_0x222af5, _0x486a05.childNodes), _0x486a05 = _0x3348ae.firstChild, _0x486a05.textContent = '';
        } else _0x222af5.push(_0x1a1d3f.createTextNode(_0x211203));
      }
    }
    _0x3348ae.textContent = '';
    for (_0x199fea = 0x0; _0x211203 = _0x222af5[_0x199fea++];) if (_0x3ffea8 && -0x1 < _0x225465.inArray(_0x211203, _0x3ffea8)) _0x451876 && _0x451876.push(_0x211203);else {
      if (_0x59ec8c = _0x225465.contains(_0x211203.ownerDocument, _0x211203), _0x486a05 = _0x4d7b78(_0x3348ae.appendChild(_0x211203), 'script'), _0x59ec8c && _0x4ca42e(_0x486a05), _0x438195) {
        for (_0x3e908b = 0x0; _0x211203 = _0x486a05[_0x3e908b++];) _0x5dfc8d.test(_0x211203.type || '') && _0x438195.push(_0x211203);
      }
    }
    return _0x3348ae;
  }
  function _0x170ceb() {
    return !0x0;
  }
  function _0x2f9c46() {
    return !0x1;
  }
  function _0x4e025b() {
    try {
      return _0x16e0bd.activeElement;
    } catch (_0x3d5aec) {}
  }
  function _0x244b17(_0x232837, _0x285f5e, _0x1703ac, _0x451d87, _0x148bf0, _0xcefd85) {
    var _0x311d5a, _0x2437c7;
    if ('object' == typeof _0x285f5e) {
      'string' != typeof _0x1703ac && (_0x451d87 = _0x451d87 || _0x1703ac, _0x1703ac = void 0x0);
      for (_0x2437c7 in _0x285f5e) _0x244b17(_0x232837, _0x2437c7, _0x1703ac, _0x451d87, _0x285f5e[_0x2437c7], _0xcefd85);
      return _0x232837;
    }
    if (null == _0x451d87 && null == _0x148bf0 ? (_0x148bf0 = _0x1703ac, _0x451d87 = _0x1703ac = void 0x0) : null == _0x148bf0 && ('string' == typeof _0x1703ac ? (_0x148bf0 = _0x451d87, _0x451d87 = void 0x0) : (_0x148bf0 = _0x451d87, _0x451d87 = _0x1703ac, _0x1703ac = void 0x0)), !0x1 === _0x148bf0) _0x148bf0 = _0x2f9c46;else {
      if (!_0x148bf0) return _0x232837;
    }
    return 0x1 === _0xcefd85 && (_0x311d5a = _0x148bf0, _0x148bf0 = function (_0x3bedb5) {
      return _0x225465().off(_0x3bedb5), _0x311d5a.apply(this, arguments);
    }, _0x148bf0.guid = _0x311d5a.guid || (_0x311d5a.guid = _0x225465.guid++)), _0x232837.each(function () {
      _0x225465.event.add(this, _0x285f5e, _0x148bf0, _0x451d87, _0x1703ac);
    });
  }
  function _0x1428a9(_0x351b68, _0x252488) {
    return _0x4e3d3f(_0x351b68, 'table') && _0x4e3d3f(0xb !== _0x252488.nodeType ? _0x252488 : _0x252488.firstChild, 'tr') ? _0x225465('>tbody', _0x351b68)[0x0] || _0x351b68 : _0x351b68;
  }
  function _0x3e055d(_0x216b44) {
    return _0x216b44.type = (null !== _0x216b44.getAttribute('type')) + '/' + _0x216b44.type, _0x216b44;
  }
  function _0x1fd6be(_0x909b67) {
    var _0x13fbd4 = _0x3775ae.exec(_0x909b67.type);
    return _0x13fbd4 ? _0x909b67.type = _0x13fbd4[0x1] : _0x909b67.removeAttribute('type'), _0x909b67;
  }
  function _0x5084b6(_0x3cf53e, _0x56f668) {
    var _0x10783a, _0x3b586d, _0x27ea58, _0x47660a, _0x1efe62, _0x5da3fe;
    if (0x1 === _0x56f668.nodeType) {
      if (_0x179236.hasData(_0x3cf53e) && (_0x10783a = _0x179236.access(_0x3cf53e), _0x3b586d = _0x179236.set(_0x56f668, _0x10783a), _0x5da3fe = _0x10783a.events)) for (_0x27ea58 in delete _0x3b586d.handle, _0x3b586d.events = {}, _0x5da3fe) {
        _0x10783a = 0x0;
        for (_0x3b586d = _0x5da3fe[_0x27ea58].length; _0x10783a < _0x3b586d; _0x10783a++) _0x225465.event.add(_0x56f668, _0x27ea58, _0x5da3fe[_0x27ea58][_0x10783a]);
      }
      _0x46f162.hasData(_0x3cf53e) && (_0x47660a = _0x46f162.access(_0x3cf53e), _0x1efe62 = _0x225465.extend({}, _0x47660a), _0x46f162.set(_0x56f668, _0x1efe62));
    }
  }
  function _0xf36e5e(_0x349ca8, _0x22c960, _0x6d7824, _0x32c83c) {
    _0x22c960 = _0x2ac6d2.apply([], _0x22c960);
    var _0x7cd4c9,
      _0x18e459,
      _0x1d38c8,
      _0x4edc23,
      _0x3b7b33 = 0x0,
      _0x206b70 = _0x349ca8.length,
      _0xfd96f4 = _0x206b70 - 0x1,
      _0x1ec2ab = _0x22c960[0x0],
      _0x24e9d1 = _0x225465.isFunction(_0x1ec2ab);
    if (_0x24e9d1 || 0x1 < _0x206b70 && 'string' == typeof _0x1ec2ab && !_0x509db7.checkClone && _0x35fa77.test(_0x1ec2ab)) return _0x349ca8.each(function (_0x58f09d) {
      var _0x5b613f = _0x349ca8.eq(_0x58f09d);
      _0x24e9d1 && (_0x22c960[0x0] = _0x1ec2ab.call(this, _0x58f09d, _0x5b613f.html())), _0xf36e5e(_0x5b613f, _0x22c960, _0x6d7824, _0x32c83c);
    });
    if (_0x206b70 && (_0x7cd4c9 = _0x2c0976(_0x22c960, _0x349ca8[0x0].ownerDocument, !0x1, _0x349ca8, _0x32c83c), _0x18e459 = _0x7cd4c9.firstChild, 0x1 === _0x7cd4c9.childNodes.length && (_0x7cd4c9 = _0x18e459), _0x18e459 || _0x32c83c)) {
      _0x18e459 = _0x225465.map(_0x4d7b78(_0x7cd4c9, 'script'), _0x3e055d);
      for (_0x1d38c8 = _0x18e459.length; _0x3b7b33 < _0x206b70; _0x3b7b33++) _0x4edc23 = _0x7cd4c9, _0x3b7b33 !== _0xfd96f4 && (_0x4edc23 = _0x225465.clone(_0x4edc23, !0x0, !0x0), _0x1d38c8 && _0x225465.merge(_0x18e459, _0x4d7b78(_0x4edc23, 'script'))), _0x6d7824.call(_0x349ca8[_0x3b7b33], _0x4edc23, _0x3b7b33);
      if (_0x1d38c8) {
        _0x7cd4c9 = _0x18e459[_0x18e459.length - 0x1].ownerDocument, _0x225465.map(_0x18e459, _0x1fd6be);
        for (_0x3b7b33 = 0x0; _0x3b7b33 < _0x1d38c8; _0x3b7b33++) _0x4edc23 = _0x18e459[_0x3b7b33], _0x5dfc8d.test(_0x4edc23.type || '') && !_0x179236.access(_0x4edc23, 'globalEval') && _0x225465.contains(_0x7cd4c9, _0x4edc23) && (_0x4edc23.src ? _0x225465._evalUrl && _0x225465._evalUrl(_0x4edc23.src) : _0x357760(_0x4edc23.textContent.replace(_0x1ce696, ''), _0x7cd4c9));
      }
    }
    return _0x349ca8;
  }
  function _0x4326d9(_0x289e21, _0xa706b0, _0x28162d) {
    for (var _0x2fa8ad = _0xa706b0 ? _0x225465.filter(_0xa706b0, _0x289e21) : _0x289e21, _0x2c69af = 0x0; null != (_0xa706b0 = _0x2fa8ad[_0x2c69af]); _0x2c69af++) _0x28162d || 0x1 !== _0xa706b0.nodeType || _0x225465.cleanData(_0x4d7b78(_0xa706b0)), _0xa706b0.parentNode && (_0x28162d && _0x225465.contains(_0xa706b0.ownerDocument, _0xa706b0) && _0x4ca42e(_0x4d7b78(_0xa706b0, 'script')), _0xa706b0.parentNode.removeChild(_0xa706b0));
    return _0x289e21;
  }
  function _0x34fa99(_0xb1fd66, _0x5bf894, _0x524219) {
    var _0x410356,
      _0x545d47,
      _0x5e19ee,
      _0x114f0a,
      _0x341d56 = _0xb1fd66.style;
    return _0x524219 = _0x524219 || _0x1ab53d(_0xb1fd66), _0x524219 && (_0x114f0a = _0x524219.getPropertyValue(_0x5bf894) || _0x524219[_0x5bf894], '' !== _0x114f0a || _0x225465.contains(_0xb1fd66.ownerDocument, _0xb1fd66) || (_0x114f0a = _0x225465.style(_0xb1fd66, _0x5bf894)), !_0x509db7.pixelMarginRight() && _0x132dc9.test(_0x114f0a) && _0x4252f7.test(_0x5bf894) && (_0x410356 = _0x341d56.width, _0x545d47 = _0x341d56.minWidth, _0x5e19ee = _0x341d56.maxWidth, _0x341d56.minWidth = _0x341d56.maxWidth = _0x341d56.width = _0x114f0a, _0x114f0a = _0x524219.width, _0x341d56.width = _0x410356, _0x341d56.minWidth = _0x545d47, _0x341d56.maxWidth = _0x5e19ee)), void 0x0 !== _0x114f0a ? _0x114f0a + '' : _0x114f0a;
  }
  function _0x433761(_0x272921, _0x201135) {
    return {
      'get': function () {
        return _0x272921() ? void delete this.get : (this.get = _0x201135).apply(this, arguments);
      }
    };
  }
  function _0x479244(_0xef938d) {
    var _0x4421f2 = _0x225465.cssProps[_0xef938d];
    if (!_0x4421f2) {
      var _0x4421f2 = _0x225465.cssProps,
        _0x461a5e;
      _0x3959cf: if (_0x461a5e = _0xef938d, !(_0x461a5e in _0x79f5c3)) {
        for (var _0x858afd = _0x461a5e[0x0].toUpperCase() + _0x461a5e.slice(0x1), _0x4a06c8 = _0x7a128b.length; _0x4a06c8--;) if (_0x461a5e = _0x7a128b[_0x4a06c8] + _0x858afd, _0x461a5e in _0x79f5c3) break _0x3959cf;
        _0x461a5e = void 0x0;
      }
      _0x4421f2 = _0x4421f2[_0xef938d] = _0x461a5e || _0xef938d;
    }
    return _0x4421f2;
  }
  function _0x58be27(_0x34d8fd, _0xcfce91, _0x1e5638) {
    return (_0x34d8fd = _0x4d779d.exec(_0xcfce91)) ? Math.max(0x0, _0x34d8fd[0x2] - (_0x1e5638 || 0x0)) + (_0x34d8fd[0x3] || 'px') : _0xcfce91;
  }
  function _0x113c3f(_0x50b972, _0x4ea1f0, _0x4ac68c, _0x5edcb1, _0x1422d4) {
    var _0x3ad67 = 0x0;
    for (_0x4ea1f0 = _0x4ac68c === (_0x5edcb1 ? 'border' : 'content') ? 0x4 : 'width' === _0x4ea1f0 ? 0x1 : 0x0; 0x4 > _0x4ea1f0; _0x4ea1f0 += 0x2) 'margin' === _0x4ac68c && (_0x3ad67 += _0x225465.css(_0x50b972, _0x4ac68c + _0x1648cd[_0x4ea1f0], !0x0, _0x1422d4)), _0x5edcb1 ? ('content' === _0x4ac68c && (_0x3ad67 -= _0x225465.css(_0x50b972, 'padding' + _0x1648cd[_0x4ea1f0], !0x0, _0x1422d4)), 'margin' !== _0x4ac68c && (_0x3ad67 -= _0x225465.css(_0x50b972, 'border' + _0x1648cd[_0x4ea1f0] + 'Width', !0x0, _0x1422d4))) : (_0x3ad67 += _0x225465.css(_0x50b972, 'padding' + _0x1648cd[_0x4ea1f0], !0x0, _0x1422d4), 'padding' !== _0x4ac68c && (_0x3ad67 += _0x225465.css(_0x50b972, 'border' + _0x1648cd[_0x4ea1f0] + 'Width', !0x0, _0x1422d4)));
    return _0x3ad67;
  }
  function _0x5d7446(_0x4dfe08, _0x2b795c, _0x5cc3d6) {
    var _0x4cc6db,
      _0xf73e8b = _0x1ab53d(_0x4dfe08),
      _0x31754c = _0x34fa99(_0x4dfe08, _0x2b795c, _0xf73e8b),
      _0x40024a = 'border-box' === _0x225465.css(_0x4dfe08, 'boxSizing', !0x1, _0xf73e8b);
    return _0x132dc9.test(_0x31754c) ? _0x31754c : (_0x4cc6db = _0x40024a && (_0x509db7.boxSizingReliable() || _0x31754c === _0x4dfe08.style[_0x2b795c]), 'auto' === _0x31754c && (_0x31754c = _0x4dfe08['offset' + _0x2b795c[0x0].toUpperCase() + _0x2b795c.slice(0x1)]), _0x31754c = parseFloat(_0x31754c) || 0x0, _0x31754c + _0x113c3f(_0x4dfe08, _0x2b795c, _0x5cc3d6 || (_0x40024a ? 'border' : 'content'), _0x4cc6db, _0xf73e8b) + 'px');
  }
  function _0x18d739(_0x55e5e4, _0x20c49f, _0x4f5b03, _0x170152, _0x48e03d) {
    return new _0x18d739.prototype.init(_0x55e5e4, _0x20c49f, _0x4f5b03, _0x170152, _0x48e03d);
  }
  function _0x32e65f() {
    _0x188d92 && (!0x1 === _0x16e0bd.hidden && _0x10efb2.requestAnimationFrame ? _0x10efb2.requestAnimationFrame(_0x32e65f) : _0x10efb2.setTimeout(_0x32e65f, _0x225465.fx.interval), _0x225465.fx.tick());
  }
  function _0x47c141() {
    return _0x10efb2.setTimeout(function () {
      _0x102b5e = void 0x0;
    }), _0x102b5e = _0x225465.now();
  }
  function _0xc49b68(_0x20b220, _0x3dcd93) {
    var _0x2a1e58,
      _0x542f45 = 0x0,
      _0x15c69c = {
        'height': _0x20b220
      };
    for (_0x3dcd93 = _0x3dcd93 ? 0x1 : 0x0; 0x4 > _0x542f45; _0x542f45 += 0x2 - _0x3dcd93) _0x2a1e58 = _0x1648cd[_0x542f45], _0x15c69c['margin' + _0x2a1e58] = _0x15c69c['padding' + _0x2a1e58] = _0x20b220;
    return _0x3dcd93 && (_0x15c69c.opacity = _0x15c69c.width = _0x20b220), _0x15c69c;
  }
  function _0x1a1410(_0x33fc99, _0x2370fd, _0x59c590) {
    for (var _0x511a1b, _0x140a12 = (_0x1a88f9.tweeners[_0x2370fd] || []).concat(_0x1a88f9.tweeners['*']), _0x18d322 = 0x0, _0x2cad14 = _0x140a12.length; _0x18d322 < _0x2cad14; _0x18d322++) if (_0x511a1b = _0x140a12[_0x18d322].call(_0x59c590, _0x2370fd, _0x33fc99)) return _0x511a1b;
  }
  function _0x1a88f9(_0x1f95f6, _0x2dd185, _0x427c27) {
    var _0x4687b0,
      _0x2a35fe,
      _0x159de6 = 0x0,
      _0x5444ea = _0x1a88f9.prefilters.length,
      _0x47a3ee = _0x225465.Deferred().always(function () {
        delete _0x5f1e07.elem;
      }),
      _0x5f1e07 = function () {
        if (_0x2a35fe) return !0x1;
        for (var _0x5a5d4f = _0x102b5e || _0x47c141(), _0x5a5d4f = Math.max(0x0, _0x386bdd.startTime + _0x386bdd.duration - _0x5a5d4f), _0x2bc30f = 0x1 - (_0x5a5d4f / _0x386bdd.duration || 0x0), _0x34ac91 = 0x0, _0x280ba8 = _0x386bdd.tweens.length; _0x34ac91 < _0x280ba8; _0x34ac91++) _0x386bdd.tweens[_0x34ac91].run(_0x2bc30f);
        return _0x47a3ee.notifyWith(_0x1f95f6, [_0x386bdd, _0x2bc30f, _0x5a5d4f]), 0x1 > _0x2bc30f && _0x280ba8 ? _0x5a5d4f : (_0x280ba8 || _0x47a3ee.notifyWith(_0x1f95f6, [_0x386bdd, 0x1, 0x0]), _0x47a3ee.resolveWith(_0x1f95f6, [_0x386bdd]), !0x1);
      },
      _0x386bdd = _0x47a3ee.promise({
        'elem': _0x1f95f6,
        'props': _0x225465.extend({}, _0x2dd185),
        'opts': _0x225465.extend(!0x0, {
          'specialEasing': {},
          'easing': _0x225465.easing._default
        }, _0x427c27),
        'originalProperties': _0x2dd185,
        'originalOptions': _0x427c27,
        'startTime': _0x102b5e || _0x47c141(),
        'duration': _0x427c27.duration,
        'tweens': [],
        'createTween': function (_0x24551a, _0x15f3ee) {
          var _0x1e8334 = _0x225465.Tween(_0x1f95f6, _0x386bdd.opts, _0x24551a, _0x15f3ee, _0x386bdd.opts.specialEasing[_0x24551a] || _0x386bdd.opts.easing);
          return _0x386bdd.tweens.push(_0x1e8334), _0x1e8334;
        },
        'stop': function (_0x5783ee) {
          var _0x1619b1 = 0x0,
            _0x1e65e1 = _0x5783ee ? _0x386bdd.tweens.length : 0x0;
          if (_0x2a35fe) return this;
          for (_0x2a35fe = !0x0; _0x1619b1 < _0x1e65e1; _0x1619b1++) _0x386bdd.tweens[_0x1619b1].run(0x1);
          return _0x5783ee ? (_0x47a3ee.notifyWith(_0x1f95f6, [_0x386bdd, 0x1, 0x0]), _0x47a3ee.resolveWith(_0x1f95f6, [_0x386bdd, _0x5783ee])) : _0x47a3ee.rejectWith(_0x1f95f6, [_0x386bdd, _0x5783ee]), this;
        }
      });
    _0x2dd185 = _0x386bdd.props, _0x427c27 = _0x386bdd.opts.specialEasing;
    var _0x199808, _0x3c7f59, _0x2645f2, _0x34b7b8;
    for (_0x4687b0 in _0x2dd185) if (_0x199808 = _0x225465.camelCase(_0x4687b0), _0x3c7f59 = _0x427c27[_0x199808], _0x2645f2 = _0x2dd185[_0x4687b0], Array.isArray(_0x2645f2) && (_0x3c7f59 = _0x2645f2[0x1], _0x2645f2 = _0x2dd185[_0x4687b0] = _0x2645f2[0x0]), _0x4687b0 !== _0x199808 && (_0x2dd185[_0x199808] = _0x2645f2, delete _0x2dd185[_0x4687b0]), _0x34b7b8 = _0x225465.cssHooks[_0x199808], _0x34b7b8 && 'expand' in _0x34b7b8) {
      for (_0x4687b0 in _0x2645f2 = _0x34b7b8.expand(_0x2645f2), delete _0x2dd185[_0x199808], _0x2645f2) _0x4687b0 in _0x2dd185 || (_0x2dd185[_0x4687b0] = _0x2645f2[_0x4687b0], _0x427c27[_0x4687b0] = _0x3c7f59);
    } else _0x427c27[_0x199808] = _0x3c7f59;
    for (; _0x159de6 < _0x5444ea; _0x159de6++) if (_0x4687b0 = _0x1a88f9.prefilters[_0x159de6].call(_0x386bdd, _0x1f95f6, _0x2dd185, _0x386bdd.opts)) return _0x225465.isFunction(_0x4687b0.stop) && (_0x225465._queueHooks(_0x386bdd.elem, _0x386bdd.opts.queue).stop = _0x225465.proxy(_0x4687b0.stop, _0x4687b0)), _0x4687b0;
    return _0x225465.map(_0x2dd185, _0x1a1410, _0x386bdd), _0x225465.isFunction(_0x386bdd.opts.start) && _0x386bdd.opts.start.call(_0x1f95f6, _0x386bdd), _0x386bdd.progress(_0x386bdd.opts.progress).done(_0x386bdd.opts.done, _0x386bdd.opts.complete).fail(_0x386bdd.opts.fail).always(_0x386bdd.opts.always), _0x225465.fx.timer(_0x225465.extend(_0x5f1e07, {
      'elem': _0x1f95f6,
      'anim': _0x386bdd,
      'queue': _0x386bdd.opts.queue
    })), _0x386bdd;
  }
  function _0xb51c8d(_0x29c1) {
    return (_0x29c1.match(_0x10c9e2) || []).join(" ");
  }
  function _0x1922d7(_0x562000) {
    return _0x562000.getAttribute && _0x562000.getAttribute('class') || '';
  }
  function _0x5b46b4(_0x1d2dac, _0x2a277b, _0x11639c, _0x596d4e) {
    var _0x2e1afb;
    if (Array.isArray(_0x2a277b)) _0x225465.each(_0x2a277b, function (_0x39020f, _0x2fd20d) {
      _0x11639c || _0x238712.test(_0x1d2dac) ? _0x596d4e(_0x1d2dac, _0x2fd20d) : _0x5b46b4(_0x1d2dac + '[' + ('object' == typeof _0x2fd20d && null != _0x2fd20d ? _0x39020f : '') + ']', _0x2fd20d, _0x11639c, _0x596d4e);
    });else {
      if (_0x11639c || 'object' !== _0x225465.type(_0x2a277b)) _0x596d4e(_0x1d2dac, _0x2a277b);else {
        for (_0x2e1afb in _0x2a277b) _0x5b46b4(_0x1d2dac + '[' + _0x2e1afb + ']', _0x2a277b[_0x2e1afb], _0x11639c, _0x596d4e);
      }
    }
  }
  function _0x482cae(_0x3b9839) {
    return function (_0x2ef04c, _0x9d3777) {
      'string' != typeof _0x2ef04c && (_0x9d3777 = _0x2ef04c, _0x2ef04c = '*');
      var _0x53293b,
        _0x5e981e = 0x0,
        _0x2c4975 = _0x2ef04c.toLowerCase().match(_0x10c9e2) || [];
      if (_0x225465.isFunction(_0x9d3777)) {
        for (; _0x53293b = _0x2c4975[_0x5e981e++];) '+' === _0x53293b[0x0] ? (_0x53293b = _0x53293b.slice(0x1) || '*', (_0x3b9839[_0x53293b] = _0x3b9839[_0x53293b] || []).unshift(_0x9d3777)) : (_0x3b9839[_0x53293b] = _0x3b9839[_0x53293b] || []).push(_0x9d3777);
      }
    };
  }
  function _0x4a5678(_0x37b166, _0x4ef159, _0x461c38, _0xd1492b) {
    function _0xd484a7(_0x24196f) {
      var _0x51ef18;
      return _0x12fc6a[_0x24196f] = !0x0, _0x225465.each(_0x37b166[_0x24196f] || [], function (_0x3b5448, _0x8f19df) {
        var _0xa83c0d = _0x8f19df(_0x4ef159, _0x461c38, _0xd1492b);
        return 'string' != typeof _0xa83c0d || _0x235501 || _0x12fc6a[_0xa83c0d] ? _0x235501 ? !(_0x51ef18 = _0xa83c0d) : void 0x0 : (_0x4ef159.dataTypes.unshift(_0xa83c0d), _0xd484a7(_0xa83c0d), !0x1);
      }), _0x51ef18;
    }
    var _0x12fc6a = {},
      _0x235501 = _0x37b166 === _0x520db5;
    return _0xd484a7(_0x4ef159.dataTypes[0x0]) || !_0x12fc6a['*'] && _0xd484a7('*');
  }
  function _0x5ae50b(_0x63a75, _0x213d1b) {
    var _0x46a164,
      _0x5081f4,
      _0x523f27 = _0x225465.ajaxSettings.flatOptions || {};
    for (_0x46a164 in _0x213d1b) void 0x0 !== _0x213d1b[_0x46a164] && ((_0x523f27[_0x46a164] ? _0x63a75 : _0x5081f4 || (_0x5081f4 = {}))[_0x46a164] = _0x213d1b[_0x46a164]);
    return _0x5081f4 && _0x225465.extend(!0x0, _0x63a75, _0x5081f4), _0x63a75;
  }
  var _0x30ce71 = [],
    _0x16e0bd = _0x10efb2.document,
    _0x3837dc = Object.getPrototypeOf,
    _0x1703ed = _0x30ce71.slice,
    _0x2ac6d2 = _0x30ce71.concat,
    _0x556557 = _0x30ce71.push,
    _0x247dce = _0x30ce71.indexOf,
    _0x16e05b = {},
    _0x37720e = _0x16e05b.toString,
    _0x131bfa = _0x16e05b.hasOwnProperty,
    _0x170fa9 = _0x131bfa.toString,
    _0x13c24a = _0x170fa9.call(Object),
    _0x509db7 = {},
    _0x225465 = function (_0x3c65fe, _0x1ee4b7) {
      return new _0x225465.fn.init(_0x3c65fe, _0x1ee4b7);
    },
    _0xfd178f = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
    _0x688a15 = /^-ms-/,
    _0x7fc1a = /-([a-z])/g,
    _0x4eb683 = function (_0x425f2b, _0x7d50cb) {
      return _0x7d50cb.toUpperCase();
    };
  _0x225465.fn = _0x225465.prototype = {
    'jquery': '3.2.1',
    'constructor': _0x225465,
    'length': 0x0,
    'toArray': function () {
      return _0x1703ed.call(this);
    },
    'get': function (_0x2828b6) {
      return null == _0x2828b6 ? _0x1703ed.call(this) : 0x0 > _0x2828b6 ? this[_0x2828b6 + this.length] : this[_0x2828b6];
    },
    'pushStack': function (_0xf2af31) {
      return _0xf2af31 = _0x225465.merge(this.constructor(), _0xf2af31), _0xf2af31.prevObject = this, _0xf2af31;
    },
    'each': function (_0x4b1dd0) {
      return _0x225465.each(this, _0x4b1dd0);
    },
    'map': function (_0x22e465) {
      return this.pushStack(_0x225465.map(this, function (_0x5a89ae, _0x28bb59) {
        return _0x22e465.call(_0x5a89ae, _0x28bb59, _0x5a89ae);
      }));
    },
    'slice': function () {
      return this.pushStack(_0x1703ed.apply(this, arguments));
    },
    'first': function () {
      return this.eq(0x0);
    },
    'last': function () {
      return this.eq(-0x1);
    },
    'eq': function (_0x3b04b6) {
      var _0x1b9a57 = this.length;
      return _0x3b04b6 = +_0x3b04b6 + (0x0 > _0x3b04b6 ? _0x1b9a57 : 0x0), this.pushStack(0x0 <= _0x3b04b6 && _0x3b04b6 < _0x1b9a57 ? [this[_0x3b04b6]] : []);
    },
    'end': function () {
      return this.prevObject || this.constructor();
    },
    'push': _0x556557,
    'sort': _0x30ce71.sort,
    'splice': _0x30ce71.splice
  }, _0x225465.extend = _0x225465.fn.extend = function () {
    var _0x471754,
      _0x356359,
      _0x48732a,
      _0x306d2e,
      _0x2a0fa6,
      _0x48bef4,
      _0x448c19 = arguments[0x0] || {},
      _0x24ac8c = 0x1,
      _0xf7a641 = arguments.length,
      _0x5eb73b = !0x1;
    'boolean' == typeof _0x448c19 && (_0x5eb73b = _0x448c19, _0x448c19 = arguments[_0x24ac8c] || {}, _0x24ac8c++), 'object' == typeof _0x448c19 || _0x225465.isFunction(_0x448c19) || (_0x448c19 = {});
    for (_0x24ac8c === _0xf7a641 && (_0x448c19 = this, _0x24ac8c--); _0x24ac8c < _0xf7a641; _0x24ac8c++) if (null != (_0x471754 = arguments[_0x24ac8c])) {
      for (_0x356359 in _0x471754) _0x48732a = _0x448c19[_0x356359], _0x306d2e = _0x471754[_0x356359], _0x448c19 !== _0x306d2e && (_0x5eb73b && _0x306d2e && (_0x225465.isPlainObject(_0x306d2e) || (_0x2a0fa6 = Array.isArray(_0x306d2e))) ? (_0x2a0fa6 ? (_0x2a0fa6 = !0x1, _0x48bef4 = _0x48732a && Array.isArray(_0x48732a) ? _0x48732a : []) : _0x48bef4 = _0x48732a && _0x225465.isPlainObject(_0x48732a) ? _0x48732a : {}, _0x448c19[_0x356359] = _0x225465.extend(_0x5eb73b, _0x48bef4, _0x306d2e)) : void 0x0 !== _0x306d2e && (_0x448c19[_0x356359] = _0x306d2e));
    }
    return _0x448c19;
  }, _0x225465.extend({
    'expando': 'jQuery' + ('3.2.1' + Math.random()).replace(/\D/g, ''),
    'isReady': !0x0,
    'error': function (_0x2358ec) {
      throw Error(_0x2358ec);
    },
    'noop': function () {},
    'isFunction': function (_0x22fa8b) {
      return 'function' === _0x225465.type(_0x22fa8b);
    },
    'isWindow': function (_0x3567f1) {
      return null != _0x3567f1 && _0x3567f1 === _0x3567f1.window;
    },
    'isNumeric': function (_0xbb7fd7) {
      var _0x11cd31 = _0x225465.type(_0xbb7fd7);
      return ('number' === _0x11cd31 || 'string' === _0x11cd31) && !isNaN(_0xbb7fd7 - parseFloat(_0xbb7fd7));
    },
    'isPlainObject': function (_0x33ba95) {
      var _0x4c6438, _0x2f9e74;
      return !(!_0x33ba95 || "[object Object]" !== _0x37720e.call(_0x33ba95)) && (!(_0x4c6438 = _0x3837dc(_0x33ba95)) || (_0x2f9e74 = _0x131bfa.call(_0x4c6438, 'constructor') && _0x4c6438.constructor, 'function' == typeof _0x2f9e74 && _0x170fa9.call(_0x2f9e74) === _0x13c24a));
    },
    'isEmptyObject': function (_0x33e9c7) {
      for (var _0x1ec09e in _0x33e9c7) return !0x1;
      return !0x0;
    },
    'type': function (_0x44a2ad) {
      return null == _0x44a2ad ? _0x44a2ad + '' : 'object' == typeof _0x44a2ad || 'function' == typeof _0x44a2ad ? _0x16e05b[_0x37720e.call(_0x44a2ad)] || 'object' : typeof _0x44a2ad;
    },
    'globalEval': function (_0x5d6cb6) {
      _0x357760(_0x5d6cb6);
    },
    'camelCase': function (_0x122a6d) {
      return _0x122a6d.replace(_0x688a15, 'ms-').replace(_0x7fc1a, _0x4eb683);
    },
    'each': function (_0x3c96f7, _0x21b2dd) {
      var _0x3b0396,
        _0x506f56 = 0x0;
      if (_0x4667e1(_0x3c96f7)) {
        for (_0x3b0396 = _0x3c96f7.length; _0x506f56 < _0x3b0396 && !0x1 !== _0x21b2dd.call(_0x3c96f7[_0x506f56], _0x506f56, _0x3c96f7[_0x506f56]); _0x506f56++);
      } else {
        for (_0x506f56 in _0x3c96f7) if (!0x1 === _0x21b2dd.call(_0x3c96f7[_0x506f56], _0x506f56, _0x3c96f7[_0x506f56])) break;
      }
      return _0x3c96f7;
    },
    'trim': function (_0x42918c) {
      return null == _0x42918c ? '' : (_0x42918c + '').replace(_0xfd178f, '');
    },
    'makeArray': function (_0x5ccc81, _0x1e86cb) {
      var _0x3a81af = _0x1e86cb || [];
      return null != _0x5ccc81 && (_0x4667e1(Object(_0x5ccc81)) ? _0x225465.merge(_0x3a81af, 'string' == typeof _0x5ccc81 ? [_0x5ccc81] : _0x5ccc81) : _0x556557.call(_0x3a81af, _0x5ccc81)), _0x3a81af;
    },
    'inArray': function (_0x55cd32, _0x5ba404, _0x2c146d) {
      return null == _0x5ba404 ? -0x1 : _0x247dce.call(_0x5ba404, _0x55cd32, _0x2c146d);
    },
    'merge': function (_0xccf32d, _0x39c2f0) {
      for (var _0x469d4a = +_0x39c2f0.length, _0x5e0a3d = 0x0, _0x6c4a9b = _0xccf32d.length; _0x5e0a3d < _0x469d4a; _0x5e0a3d++) _0xccf32d[_0x6c4a9b++] = _0x39c2f0[_0x5e0a3d];
      return _0xccf32d.length = _0x6c4a9b, _0xccf32d;
    },
    'grep': function (_0x245652, _0x256853, _0x59a96a) {
      for (var _0x4e0030 = [], _0x3df581 = 0x0, _0x1b7e87 = _0x245652.length, _0x34dda4 = !_0x59a96a; _0x3df581 < _0x1b7e87; _0x3df581++) _0x59a96a = !_0x256853(_0x245652[_0x3df581], _0x3df581), _0x59a96a !== _0x34dda4 && _0x4e0030.push(_0x245652[_0x3df581]);
      return _0x4e0030;
    },
    'map': function (_0x14795e, _0x5be564, _0x4cb58) {
      var _0x154ad0,
        _0x2db286,
        _0xfc47d2 = 0x0,
        _0x33862f = [];
      if (_0x4667e1(_0x14795e)) {
        for (_0x154ad0 = _0x14795e.length; _0xfc47d2 < _0x154ad0; _0xfc47d2++) _0x2db286 = _0x5be564(_0x14795e[_0xfc47d2], _0xfc47d2, _0x4cb58), null != _0x2db286 && _0x33862f.push(_0x2db286);
      } else {
        for (_0xfc47d2 in _0x14795e) _0x2db286 = _0x5be564(_0x14795e[_0xfc47d2], _0xfc47d2, _0x4cb58), null != _0x2db286 && _0x33862f.push(_0x2db286);
      }
      return _0x2ac6d2.apply([], _0x33862f);
    },
    'guid': 0x1,
    'proxy': function (_0x155e6b, _0x293a8e) {
      var _0x571088, _0x269c39, _0x217806;
      if ('string' == typeof _0x293a8e && (_0x571088 = _0x155e6b[_0x293a8e], _0x293a8e = _0x155e6b, _0x155e6b = _0x571088), _0x225465.isFunction(_0x155e6b)) return _0x269c39 = _0x1703ed.call(arguments, 0x2), _0x217806 = function () {
        return _0x155e6b.apply(_0x293a8e || this, _0x269c39.concat(_0x1703ed.call(arguments)));
      }, _0x217806.guid = _0x155e6b.guid = _0x155e6b.guid || _0x225465.guid++, _0x217806;
    },
    'now': Date.now,
    'support': _0x509db7
  }), 'function' == typeof Symbol && (_0x225465.fn[Symbol.iterator] = _0x30ce71[Symbol.iterator]), _0x225465.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (_0x3ea073, _0x305599) {
    _0x16e05b["[object " + _0x305599 + ']'] = _0x305599.toLowerCase();
  });
  var _0x1321c3,
    _0x3fb4ca = _0x10efb2,
    _0x5816db = function (_0x113e6d, _0x4b3096, _0x3943d9, _0x1dabba) {
      var _0x5727f2,
        _0x458b5e,
        _0x37d293,
        _0x1038fc,
        _0x57ea32,
        _0x51ca5d = _0x4b3096 && _0x4b3096.ownerDocument,
        _0x28abb9 = _0x4b3096 ? _0x4b3096.nodeType : 0x9;
      if (_0x3943d9 = _0x3943d9 || [], 'string' != typeof _0x113e6d || !_0x113e6d || 0x1 !== _0x28abb9 && 0x9 !== _0x28abb9 && 0xb !== _0x28abb9) return _0x3943d9;
      if (!_0x1dabba && ((_0x4b3096 ? _0x4b3096.ownerDocument || _0x4b3096 : _0x584ecc) !== _0x1e1143 && _0x37d656(_0x4b3096), _0x4b3096 = _0x4b3096 || _0x1e1143, _0x180703)) {
        if (0xb !== _0x28abb9 && (_0x1038fc = _0x334c8a.exec(_0x113e6d))) {
          if (_0x5727f2 = _0x1038fc[0x1]) {
            if (0x9 === _0x28abb9) {
              if (!(_0x458b5e = _0x4b3096.getElementById(_0x5727f2))) return _0x3943d9;
              if (_0x458b5e.id === _0x5727f2) return _0x3943d9.push(_0x458b5e), _0x3943d9;
            } else {
              if (_0x51ca5d && (_0x458b5e = _0x51ca5d.getElementById(_0x5727f2)) && _0x3a4afa(_0x4b3096, _0x458b5e) && _0x458b5e.id === _0x5727f2) return _0x3943d9.push(_0x458b5e), _0x3943d9;
            }
          } else {
            if (_0x1038fc[0x2]) return _0x3dac98.apply(_0x3943d9, _0x4b3096.getElementsByTagName(_0x113e6d)), _0x3943d9;
            if ((_0x5727f2 = _0x1038fc[0x3]) && _0x2a3c09.getElementsByClassName && _0x4b3096.getElementsByClassName) return _0x3dac98.apply(_0x3943d9, _0x4b3096.getElementsByClassName(_0x5727f2)), _0x3943d9;
          }
        }
        if (_0x2a3c09.qsa && !_0x936a27[_0x113e6d + " "] && (!_0x1b0eb6 || !_0x1b0eb6.test(_0x113e6d))) {
          if (0x1 !== _0x28abb9) _0x51ca5d = _0x4b3096, _0x57ea32 = _0x113e6d;else {
            if ('object' !== _0x4b3096.nodeName.toLowerCase()) {
              (_0x37d293 = _0x4b3096.getAttribute('id')) ? _0x37d293 = _0x37d293.replace(_0x22bb97, _0xdf04d0) : _0x4b3096.setAttribute('id', _0x37d293 = _0xece684), _0x458b5e = _0x16f08c(_0x113e6d);
              for (_0x5727f2 = _0x458b5e.length; _0x5727f2--;) _0x458b5e[_0x5727f2] = '#' + _0x37d293 + " " + _0xb16336(_0x458b5e[_0x5727f2]);
              _0x57ea32 = _0x458b5e.join(','), _0x51ca5d = _0x243cd0.test(_0x113e6d) && _0x30dfd2(_0x4b3096.parentNode) || _0x4b3096;
            }
          }
          if (_0x57ea32) try {
            return _0x3dac98.apply(_0x3943d9, _0x51ca5d.querySelectorAll(_0x57ea32)), _0x3943d9;
          } catch (_0x173aca) {} finally {
            _0x37d293 === _0xece684 && _0x4b3096.removeAttribute('id');
          }
        }
      }
      return _0x39400e(_0x113e6d.replace(_0x19313b, '$1'), _0x4b3096, _0x3943d9, _0x1dabba);
    },
    _0x10b4ee = function () {
      function _0x237d02(_0x165ed6, _0x2e4d8d) {
        return _0xf8f257.push(_0x165ed6 + " ") > _0x6f86b3.cacheLength && delete _0x237d02[_0xf8f257.shift()], _0x237d02[_0x165ed6 + " "] = _0x2e4d8d;
      }
      var _0xf8f257 = [];
      return _0x237d02;
    },
    _0xffc911 = function (_0x317bd6) {
      return _0x317bd6[_0xece684] = !0x0, _0x317bd6;
    },
    _0x563c88 = function (_0x23db67) {
      var _0x4653dc = _0x1e1143.createElement('fieldset');
      try {
        return !!_0x23db67(_0x4653dc);
      } catch (_0x343817) {
        return !0x1;
      } finally {
        _0x4653dc.parentNode && _0x4653dc.parentNode.removeChild(_0x4653dc);
      }
    },
    _0x459855 = function (_0x58d3f0, _0x365159) {
      for (var _0x418af1 = _0x58d3f0.split('|'), _0x5b0164 = _0x418af1.length; _0x5b0164--;) _0x6f86b3.attrHandle[_0x418af1[_0x5b0164]] = _0x365159;
    },
    _0x32204d = function (_0x354fa6, _0x3d12dd) {
      var _0x3c99cf = _0x3d12dd && _0x354fa6,
        _0x55c238 = _0x3c99cf && 0x1 === _0x354fa6.nodeType && 0x1 === _0x3d12dd.nodeType && _0x354fa6.sourceIndex - _0x3d12dd.sourceIndex;
      if (_0x55c238) return _0x55c238;
      if (_0x3c99cf) {
        for (; _0x3c99cf = _0x3c99cf.nextSibling;) if (_0x3c99cf === _0x3d12dd) return -0x1;
      }
      return _0x354fa6 ? 0x1 : -0x1;
    },
    _0x357548 = function (_0x4fc739) {
      return function (_0x3cdb65) {
        return 'input' === _0x3cdb65.nodeName.toLowerCase() && _0x3cdb65.type === _0x4fc739;
      };
    },
    _0x3eae8e = function (_0x157626) {
      return function (_0x5f4e28) {
        var _0x3584d5 = _0x5f4e28.nodeName.toLowerCase();
        return ('input' === _0x3584d5 || 'button' === _0x3584d5) && _0x5f4e28.type === _0x157626;
      };
    },
    _0x284d41 = function (_0x24bde1) {
      return function (_0x2434a5) {
        return 'form' in _0x2434a5 ? _0x2434a5.parentNode && !0x1 === _0x2434a5.disabled ? 'label' in _0x2434a5 ? 'label' in _0x2434a5.parentNode ? _0x2434a5.parentNode.disabled === _0x24bde1 : _0x2434a5.disabled === _0x24bde1 : _0x2434a5.isDisabled === _0x24bde1 || _0x2434a5.isDisabled !== !_0x24bde1 && _0x31eac0(_0x2434a5) === _0x24bde1 : _0x2434a5.disabled === _0x24bde1 : 'label' in _0x2434a5 && _0x2434a5.disabled === _0x24bde1;
      };
    },
    _0x8be309 = function (_0x2aa29b) {
      return _0xffc911(function (_0x3fb6c5) {
        return _0x3fb6c5 = +_0x3fb6c5, _0xffc911(function (_0x46e2e1, _0x22c368) {
          for (var _0x3efaff, _0x3c8ae5 = _0x2aa29b([], _0x46e2e1.length, _0x3fb6c5), _0x2745c9 = _0x3c8ae5.length; _0x2745c9--;) _0x46e2e1[_0x3efaff = _0x3c8ae5[_0x2745c9]] && (_0x46e2e1[_0x3efaff] = !(_0x22c368[_0x3efaff] = _0x46e2e1[_0x3efaff]));
        });
      });
    },
    _0x30dfd2 = function (_0x1d763b) {
      return _0x1d763b && 'undefined' != typeof _0x1d763b.getElementsByTagName && _0x1d763b;
    },
    _0x15ede7 = function () {},
    _0xb16336 = function (_0xa9fca4) {
      for (var _0xd19cdc = 0x0, _0x4eb376 = _0xa9fca4.length, _0x473638 = ''; _0xd19cdc < _0x4eb376; _0xd19cdc++) _0x473638 += _0xa9fca4[_0xd19cdc].value;
      return _0x473638;
    },
    _0x7dca2d = function (_0x19157f, _0x2c7cd1, _0x90e768) {
      var _0x1553d4 = _0x2c7cd1.dir,
        _0x3fd388 = _0x2c7cd1.next,
        _0x44f7cd = _0x3fd388 || _0x1553d4,
        _0x483080 = _0x90e768 && 'parentNode' === _0x44f7cd,
        _0x55a14b = _0x19be94++;
      return _0x2c7cd1.first ? function (_0x15451a, _0x20a339, _0x2df514) {
        for (; _0x15451a = _0x15451a[_0x1553d4];) if (0x1 === _0x15451a.nodeType || _0x483080) return _0x19157f(_0x15451a, _0x20a339, _0x2df514);
        return !0x1;
      } : function (_0x195550, _0x35314a, _0x1f6336) {
        var _0x26cf25,
          _0x497a76,
          _0x2c7ebc,
          _0x107b61 = [_0x333cd7, _0x55a14b];
        if (_0x1f6336) for (; _0x195550 = _0x195550[_0x1553d4];) {
          if ((0x1 === _0x195550.nodeType || _0x483080) && _0x19157f(_0x195550, _0x35314a, _0x1f6336)) return !0x0;
        } else {
          for (; _0x195550 = _0x195550[_0x1553d4];) if (0x1 === _0x195550.nodeType || _0x483080) {
            if (_0x2c7ebc = _0x195550[_0xece684] || (_0x195550[_0xece684] = {}), _0x497a76 = _0x2c7ebc[_0x195550.uniqueID] || (_0x2c7ebc[_0x195550.uniqueID] = {}), _0x3fd388 && _0x3fd388 === _0x195550.nodeName.toLowerCase()) _0x195550 = _0x195550[_0x1553d4] || _0x195550;else {
              if ((_0x26cf25 = _0x497a76[_0x44f7cd]) && _0x26cf25[0x0] === _0x333cd7 && _0x26cf25[0x1] === _0x55a14b) return _0x107b61[0x2] = _0x26cf25[0x2];
              if (_0x497a76[_0x44f7cd] = _0x107b61, _0x107b61[0x2] = _0x19157f(_0x195550, _0x35314a, _0x1f6336)) return !0x0;
            }
          }
        }
        return !0x1;
      };
    },
    _0x240206 = function (_0x4b3207) {
      return 0x1 < _0x4b3207.length ? function (_0x10e2e5, _0x2b4b0b, _0x57b354) {
        for (var _0x1c81dc = _0x4b3207.length; _0x1c81dc--;) if (!_0x4b3207[_0x1c81dc](_0x10e2e5, _0x2b4b0b, _0x57b354)) return !0x1;
        return !0x0;
      } : _0x4b3207[0x0];
    },
    _0x35a8d3 = function (_0x1ccb21, _0x3bd817, _0x447fb8, _0x414768, _0x1d3731) {
      for (var _0xd5cc8a, _0xe29d9e = [], _0xdd7ee = 0x0, _0x1e6e96 = _0x1ccb21.length, _0x22db94 = null != _0x3bd817; _0xdd7ee < _0x1e6e96; _0xdd7ee++) (_0xd5cc8a = _0x1ccb21[_0xdd7ee]) && (_0x447fb8 && !_0x447fb8(_0xd5cc8a, _0x414768, _0x1d3731) || (_0xe29d9e.push(_0xd5cc8a), _0x22db94 && _0x3bd817.push(_0xdd7ee)));
      return _0xe29d9e;
    },
    _0xb46129 = function (_0x5e9d56, _0x192344, _0x4d20d8, _0xff0eda, _0x134bac, _0x5f332c) {
      return _0xff0eda && !_0xff0eda[_0xece684] && (_0xff0eda = _0xb46129(_0xff0eda)), _0x134bac && !_0x134bac[_0xece684] && (_0x134bac = _0xb46129(_0x134bac, _0x5f332c)), _0xffc911(function (_0xf7d61e, _0x572945, _0x49f750, _0x2a303e) {
        var _0x52f271,
          _0x3e9bd7,
          _0x119884 = [],
          _0x4c61aa = [],
          _0x2d9fbe = _0x572945.length,
          _0xf3fe1b;
        if (!(_0xf3fe1b = _0xf7d61e)) {
          _0xf3fe1b = _0x192344 || '*';
          for (var _0x4f54ca = _0x49f750.nodeType ? [_0x49f750] : _0x49f750, _0x352904 = [], _0x56c91c = 0x0, _0x1f8ac6 = _0x4f54ca.length; _0x56c91c < _0x1f8ac6; _0x56c91c++) _0x5816db(_0xf3fe1b, _0x4f54ca[_0x56c91c], _0x352904);
          _0xf3fe1b = _0x352904;
        }
        _0xf3fe1b = !_0x5e9d56 || !_0xf7d61e && _0x192344 ? _0xf3fe1b : _0x35a8d3(_0xf3fe1b, _0x119884, _0x5e9d56, _0x49f750, _0x2a303e), _0x4f54ca = _0x4d20d8 ? _0x134bac || (_0xf7d61e ? _0x5e9d56 : _0x2d9fbe || _0xff0eda) ? [] : _0x572945 : _0xf3fe1b;
        if (_0x4d20d8 && _0x4d20d8(_0xf3fe1b, _0x4f54ca, _0x49f750, _0x2a303e), _0xff0eda) {
          _0x52f271 = _0x35a8d3(_0x4f54ca, _0x4c61aa), _0xff0eda(_0x52f271, [], _0x49f750, _0x2a303e);
          for (_0x49f750 = _0x52f271.length; _0x49f750--;) (_0x3e9bd7 = _0x52f271[_0x49f750]) && (_0x4f54ca[_0x4c61aa[_0x49f750]] = !(_0xf3fe1b[_0x4c61aa[_0x49f750]] = _0x3e9bd7));
        }
        if (_0xf7d61e) {
          if (_0x134bac || _0x5e9d56) {
            if (_0x134bac) {
              _0x52f271 = [];
              for (_0x49f750 = _0x4f54ca.length; _0x49f750--;) (_0x3e9bd7 = _0x4f54ca[_0x49f750]) && _0x52f271.push(_0xf3fe1b[_0x49f750] = _0x3e9bd7);
              _0x134bac(null, _0x4f54ca = [], _0x52f271, _0x2a303e);
            }
            for (_0x49f750 = _0x4f54ca.length; _0x49f750--;) (_0x3e9bd7 = _0x4f54ca[_0x49f750]) && -0x1 < (_0x52f271 = _0x134bac ? _0x149a21(_0xf7d61e, _0x3e9bd7) : _0x119884[_0x49f750]) && (_0xf7d61e[_0x52f271] = !(_0x572945[_0x52f271] = _0x3e9bd7));
          }
        } else _0x4f54ca = _0x35a8d3(_0x4f54ca === _0x572945 ? _0x4f54ca.splice(_0x2d9fbe, _0x4f54ca.length) : _0x4f54ca), _0x134bac ? _0x134bac(null, _0x572945, _0x4f54ca, _0x2a303e) : _0x3dac98.apply(_0x572945, _0x4f54ca);
      });
    },
    _0x4effb7 = function (_0x31c7c5) {
      var _0x3f13ee,
        _0x26e751,
        _0x375661,
        _0x5062ae = _0x31c7c5.length,
        _0x505133 = _0x6f86b3.relative[_0x31c7c5[0x0].type];
      _0x26e751 = _0x505133 || _0x6f86b3.relative[" "];
      for (var _0x2b613a = _0x505133 ? 0x1 : 0x0, _0x4cadcc = _0x7dca2d(function (_0x31e81e) {
          return _0x31e81e === _0x3f13ee;
        }, _0x26e751, !0x0), _0x3af5c5 = _0x7dca2d(function (_0x1498f7) {
          return -0x1 < _0x149a21(_0x3f13ee, _0x1498f7);
        }, _0x26e751, !0x0), _0x481859 = [function (_0x599e51, _0x1e2185, _0x2bd219) {
          return _0x599e51 = !_0x505133 && (_0x2bd219 || _0x1e2185 !== _0x1fdf3a) || ((_0x3f13ee = _0x1e2185).nodeType ? _0x4cadcc(_0x599e51, _0x1e2185, _0x2bd219) : _0x3af5c5(_0x599e51, _0x1e2185, _0x2bd219)), _0x3f13ee = null, _0x599e51;
        }]; _0x2b613a < _0x5062ae; _0x2b613a++) if (_0x26e751 = _0x6f86b3.relative[_0x31c7c5[_0x2b613a].type]) _0x481859 = [_0x7dca2d(_0x240206(_0x481859), _0x26e751)];else {
        if (_0x26e751 = _0x6f86b3.filter[_0x31c7c5[_0x2b613a].type].apply(null, _0x31c7c5[_0x2b613a].matches), _0x26e751[_0xece684]) {
          for (_0x375661 = ++_0x2b613a; _0x375661 < _0x5062ae && !_0x6f86b3.relative[_0x31c7c5[_0x375661].type]; _0x375661++);
          return _0xb46129(0x1 < _0x2b613a && _0x240206(_0x481859), 0x1 < _0x2b613a && _0xb16336(_0x31c7c5.slice(0x0, _0x2b613a - 0x1).concat({
            'value': " " === _0x31c7c5[_0x2b613a - 0x2].type ? '*' : ''
          })).replace(_0x19313b, '$1'), _0x26e751, _0x2b613a < _0x375661 && _0x4effb7(_0x31c7c5.slice(_0x2b613a, _0x375661)), _0x375661 < _0x5062ae && _0x4effb7(_0x31c7c5 = _0x31c7c5.slice(_0x375661)), _0x375661 < _0x5062ae && _0xb16336(_0x31c7c5));
        }
        _0x481859.push(_0x26e751);
      }
      return _0x240206(_0x481859);
    },
    _0x237183,
    _0x2a3c09,
    _0x6f86b3,
    _0x284bc7,
    _0x4e981c,
    _0x16f08c,
    _0x4d8957,
    _0x39400e,
    _0x1fdf3a,
    _0x57267b,
    _0x16eeca,
    _0x37d656,
    _0x1e1143,
    _0x2d9a30,
    _0x180703,
    _0x1b0eb6,
    _0x30b584,
    _0x5cf111,
    _0x3a4afa,
    _0xece684 = 'sizzle' + 0x1 * new Date(),
    _0x584ecc = _0x3fb4ca.document,
    _0x333cd7 = 0x0,
    _0x19be94 = 0x0,
    _0x418afe = _0x10b4ee(),
    _0xaea4b5 = _0x10b4ee(),
    _0x936a27 = _0x10b4ee(),
    _0x252c78 = function (_0x4ae10a, _0xb384dd) {
      return _0x4ae10a === _0xb384dd && (_0x16eeca = !0x0), 0x0;
    },
    _0x2b9d6a = {}.hasOwnProperty,
    _0x4d0220 = [],
    _0x251502 = _0x4d0220.pop,
    _0x2fb02c = _0x4d0220.push,
    _0x3dac98 = _0x4d0220.push,
    _0x1cc617 = _0x4d0220.slice,
    _0x149a21 = function (_0x1c4568, _0x354c83) {
      for (var _0x317829 = 0x0, _0x268fb4 = _0x1c4568.length; _0x317829 < _0x268fb4; _0x317829++) if (_0x1c4568[_0x317829] === _0x354c83) return _0x317829;
      return -0x1;
    },
    _0x2622bf = /[\x20\t\r\n\f]+/g,
    _0x19313b = /^[\x20\t\r\n\f]+|((?:^|[^\\])(?:\\.)*)[\x20\t\r\n\f]+$/g,
    _0x1f667c = /^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/,
    _0x52bc4e = /^[\x20\t\r\n\f]*([>+~]|[\x20\t\r\n\f])[\x20\t\r\n\f]*/,
    _0x287a06 = /=[\x20\t\r\n\f]*([^\]'"]*?)[\x20\t\r\n\f]*\]/g,
    _0x25bd31 = RegExp(":((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)"),
    _0x16d3b0 = /^(?:\\.|[\w-]|[^\x00-\xa0])+$/,
    _0x315d7b = {
      'ID': /^#((?:\\.|[\w-]|[^\x00-\xa0])+)/,
      'CLASS': /^\.((?:\\.|[\w-]|[^\x00-\xa0])+)/,
      'TAG': /^((?:\\.|[\w-]|[^\x00-\xa0])+|[*])/,
      'ATTR': RegExp("^\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\]"),
      'PSEUDO': RegExp("^:((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)"),
      'CHILD': RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\([\\x20\\t\\r\\n\\f]*(even|odd|(([+-]|)(\\d*)n|)[\\x20\\t\\r\\n\\f]*(?:([+-]|)[\\x20\\t\\r\\n\\f]*(\\d+)|))[\\x20\\t\\r\\n\\f]*\\)|)", 'i'),
      'bool': RegExp('^(?:checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)$', 'i'),
      'needsContext': RegExp("^[\\x20\\t\\r\\n\\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\([\\x20\\t\\r\\n\\f]*((?:-\\d)?\\d*)[\\x20\\t\\r\\n\\f]*\\)|)(?=[^-]|$)", 'i')
    },
    _0x1f9930 = /^(?:input|select|textarea|button)$/i,
    _0x11d378 = /^h\d$/i,
    _0xbca58c = /^[^{]+\{\s*\[native \w/,
    _0x334c8a = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
    _0x243cd0 = /[+~]/,
    _0x45dd03 = /\\([\da-f]{1,6}[\x20\t\r\n\f]?|([\x20\t\r\n\f])|.)/ig,
    _0x3070ad = function (_0x411450, _0x2e37da, _0x56d125) {
      return _0x411450 = '0x' + _0x2e37da - 0x10000, _0x411450 !== _0x411450 || _0x56d125 ? _0x2e37da : 0x0 > _0x411450 ? String.fromCharCode(_0x411450 + 0x10000) : String.fromCharCode(_0x411450 >> 0xa | 0xd800, 0x3ff & _0x411450 | 0xdc00);
    },
    _0x22bb97 = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
    _0xdf04d0 = function (_0x5953a2, _0x3c1b53) {
      return _0x3c1b53 ? "\0" === _0x5953a2 ? '�' : _0x5953a2.slice(0x0, -0x1) + "\\" + _0x5953a2.charCodeAt(_0x5953a2.length - 0x1).toString(0x10) + " " : "\\" + _0x5953a2;
    },
    _0x21bbda = function () {
      _0x37d656();
    },
    _0x31eac0 = _0x7dca2d(function (_0x2a5c1b) {
      return !0x0 === _0x2a5c1b.disabled && ('form' in _0x2a5c1b || 'label' in _0x2a5c1b);
    }, {
      'dir': 'parentNode',
      'next': 'legend'
    });
  try {
    _0x3dac98.apply(_0x4d0220 = _0x1cc617.call(_0x584ecc.childNodes), _0x584ecc.childNodes), _0x4d0220[_0x584ecc.childNodes.length].nodeType;
  } catch (_0x263cd2) {
    _0x3dac98 = {
      'apply': _0x4d0220.length ? function (_0x5c1a47, _0x2c1404) {
        _0x2fb02c.apply(_0x5c1a47, _0x1cc617.call(_0x2c1404));
      } : function (_0x1f3080, _0x718ed4) {
        for (var _0x44623f = _0x1f3080.length, _0x1a56cb = 0x0; _0x1f3080[_0x44623f++] = _0x718ed4[_0x1a56cb++];);
        _0x1f3080.length = _0x44623f - 0x1;
      }
    };
  }
  _0x2a3c09 = _0x5816db.support = {}, _0x4e981c = _0x5816db.isXML = function (_0x49c41a) {
    return _0x49c41a = _0x49c41a && (_0x49c41a.ownerDocument || _0x49c41a).documentElement, !!_0x49c41a && 'HTML' !== _0x49c41a.nodeName;
  }, _0x37d656 = _0x5816db.setDocument = function (_0x150068) {
    var _0x3694bb, _0xa9af2a;
    return _0x150068 = _0x150068 ? _0x150068.ownerDocument || _0x150068 : _0x584ecc, _0x150068 !== _0x1e1143 && 0x9 === _0x150068.nodeType && _0x150068.documentElement ? (_0x1e1143 = _0x150068, _0x2d9a30 = _0x1e1143.documentElement, _0x180703 = !_0x4e981c(_0x1e1143), _0x584ecc !== _0x1e1143 && (_0xa9af2a = _0x1e1143.defaultView) && _0xa9af2a.top !== _0xa9af2a && (_0xa9af2a.addEventListener ? _0xa9af2a.addEventListener('unload', _0x21bbda, !0x1) : _0xa9af2a.attachEvent && _0xa9af2a.attachEvent('onunload', _0x21bbda)), _0x2a3c09.attributes = _0x563c88(function (_0x5e8080) {
      return _0x5e8080.className = 'i', !_0x5e8080.getAttribute('className');
    }), _0x2a3c09.getElementsByTagName = _0x563c88(function (_0x48b9b8) {
      return _0x48b9b8.appendChild(_0x1e1143.createComment('')), !_0x48b9b8.getElementsByTagName('*').length;
    }), _0x2a3c09.getElementsByClassName = _0xbca58c.test(_0x1e1143.getElementsByClassName), _0x2a3c09.getById = _0x563c88(function (_0x1a73ce) {
      return _0x2d9a30.appendChild(_0x1a73ce).id = _0xece684, !_0x1e1143.getElementsByName || !_0x1e1143.getElementsByName(_0xece684).length;
    }), _0x2a3c09.getById ? (_0x6f86b3.filter.ID = function (_0x19556e) {
      var _0x457787 = _0x19556e.replace(_0x45dd03, _0x3070ad);
      return function (_0x591708) {
        return _0x591708.getAttribute('id') === _0x457787;
      };
    }, _0x6f86b3.find.ID = function (_0x20bdb7, _0x557789) {
      if ('undefined' != typeof _0x557789.getElementById && _0x180703) {
        var _0x44e5dd = _0x557789.getElementById(_0x20bdb7);
        return _0x44e5dd ? [_0x44e5dd] : [];
      }
    }) : (_0x6f86b3.filter.ID = function (_0x4924e6) {
      var _0x4f67ac = _0x4924e6.replace(_0x45dd03, _0x3070ad);
      return function (_0x21111a) {
        return (_0x21111a = 'undefined' != typeof _0x21111a.getAttributeNode && _0x21111a.getAttributeNode('id')) && _0x21111a.value === _0x4f67ac;
      };
    }, _0x6f86b3.find.ID = function (_0x368f69, _0xb4d5d9) {
      if ('undefined' != typeof _0xb4d5d9.getElementById && _0x180703) {
        var _0x974717,
          _0x2e95d5,
          _0x48724a,
          _0x53cb94 = _0xb4d5d9.getElementById(_0x368f69);
        if (_0x53cb94) {
          if (_0x974717 = _0x53cb94.getAttributeNode('id'), _0x974717 && _0x974717.value === _0x368f69) return [_0x53cb94];
          _0x48724a = _0xb4d5d9.getElementsByName(_0x368f69);
          for (_0x2e95d5 = 0x0; _0x53cb94 = _0x48724a[_0x2e95d5++];) if (_0x974717 = _0x53cb94.getAttributeNode('id'), _0x974717 && _0x974717.value === _0x368f69) return [_0x53cb94];
        }
        return [];
      }
    }), _0x6f86b3.find.TAG = _0x2a3c09.getElementsByTagName ? function (_0x4bd14e, _0x31272f) {
      return 'undefined' != typeof _0x31272f.getElementsByTagName ? _0x31272f.getElementsByTagName(_0x4bd14e) : _0x2a3c09.qsa ? _0x31272f.querySelectorAll(_0x4bd14e) : void 0x0;
    } : function (_0x4d5631, _0x213eec) {
      var _0x31241b,
        _0x25e428 = [],
        _0x294ae6 = 0x0,
        _0x31f40d = _0x213eec.getElementsByTagName(_0x4d5631);
      if ('*' === _0x4d5631) {
        for (; _0x31241b = _0x31f40d[_0x294ae6++];) 0x1 === _0x31241b.nodeType && _0x25e428.push(_0x31241b);
        return _0x25e428;
      }
      return _0x31f40d;
    }, _0x6f86b3.find.CLASS = _0x2a3c09.getElementsByClassName && function (_0x2d1688, _0x303723) {
      if ('undefined' != typeof _0x303723.getElementsByClassName && _0x180703) return _0x303723.getElementsByClassName(_0x2d1688);
    }, _0x30b584 = [], _0x1b0eb6 = [], (_0x2a3c09.qsa = _0xbca58c.test(_0x1e1143.querySelectorAll)) && (_0x563c88(function (_0x5f13f3) {
      _0x2d9a30.appendChild(_0x5f13f3).innerHTML = "<a id='" + _0xece684 + "'></a><select id='" + _0xece684 + "-\r\\' msallowcapture=''><option selected=''></option></select>", _0x5f13f3.querySelectorAll("[msallowcapture^='']").length && _0x1b0eb6.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|\"\")"), _0x5f13f3.querySelectorAll('[selected]').length || _0x1b0eb6.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped)"), _0x5f13f3.querySelectorAll('[id~=' + _0xece684 + '-]').length || _0x1b0eb6.push('~='), _0x5f13f3.querySelectorAll(':checked').length || _0x1b0eb6.push(':checked'), _0x5f13f3.querySelectorAll('a#' + _0xece684 + '+*').length || _0x1b0eb6.push('.#.+[+~]');
    }), _0x563c88(function (_0x2e6fe8) {
      _0x2e6fe8.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
      var _0x2f1755 = _0x1e1143.createElement('input');
      _0x2f1755.setAttribute('type', 'hidden'), _0x2e6fe8.appendChild(_0x2f1755).setAttribute('name', 'D'), _0x2e6fe8.querySelectorAll('[name=d]').length && _0x1b0eb6.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?="), 0x2 !== _0x2e6fe8.querySelectorAll(':enabled').length && _0x1b0eb6.push(':enabled', ':disabled'), _0x2d9a30.appendChild(_0x2e6fe8).disabled = !0x0, 0x2 !== _0x2e6fe8.querySelectorAll(':disabled').length && _0x1b0eb6.push(':enabled', ':disabled'), _0x2e6fe8.querySelectorAll('*,:x'), _0x1b0eb6.push(',.*:');
    })), (_0x2a3c09.matchesSelector = _0xbca58c.test(_0x5cf111 = _0x2d9a30.matches || _0x2d9a30.webkitMatchesSelector || _0x2d9a30.mozMatchesSelector || _0x2d9a30.oMatchesSelector || _0x2d9a30.msMatchesSelector)) && _0x563c88(function (_0xbc6a3c) {
      _0x2a3c09.disconnectedMatch = _0x5cf111.call(_0xbc6a3c, '*'), _0x5cf111.call(_0xbc6a3c, "[s!='']:x"), _0x30b584.push('!=', ":((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[\\w-]|[^\0-\\xa0])+)(?:[\\x20\\t\\r\\n\\f]*([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|((?:\\\\.|[\\w-]|[^\0-\\xa0])+))|)[\\x20\\t\\r\\n\\f]*\\])*)|.*)\\)|)");
    }), _0x1b0eb6 = _0x1b0eb6.length && RegExp(_0x1b0eb6.join('|')), _0x30b584 = _0x30b584.length && RegExp(_0x30b584.join('|')), _0x3694bb = _0xbca58c.test(_0x2d9a30.compareDocumentPosition), _0x3a4afa = _0x3694bb || _0xbca58c.test(_0x2d9a30.contains) ? function (_0xdbdb1e, _0x3109e7) {
      var _0xa2776f = 0x9 === _0xdbdb1e.nodeType ? _0xdbdb1e.documentElement : _0xdbdb1e,
        _0x3ad58f = _0x3109e7 && _0x3109e7.parentNode;
      return _0xdbdb1e === _0x3ad58f || !(!_0x3ad58f || 0x1 !== _0x3ad58f.nodeType || !(_0xa2776f.contains ? _0xa2776f.contains(_0x3ad58f) : _0xdbdb1e.compareDocumentPosition && 0x10 & _0xdbdb1e.compareDocumentPosition(_0x3ad58f)));
    } : function (_0x5e6df9, _0x426c98) {
      if (_0x426c98) {
        for (; _0x426c98 = _0x426c98.parentNode;) if (_0x426c98 === _0x5e6df9) return !0x0;
      }
      return !0x1;
    }, _0x252c78 = _0x3694bb ? function (_0x3fa5af, _0x44f83f) {
      if (_0x3fa5af === _0x44f83f) return _0x16eeca = !0x0, 0x0;
      var _0xb53d2f = !_0x3fa5af.compareDocumentPosition - !_0x44f83f.compareDocumentPosition;
      return _0xb53d2f ? _0xb53d2f : (_0xb53d2f = (_0x3fa5af.ownerDocument || _0x3fa5af) === (_0x44f83f.ownerDocument || _0x44f83f) ? _0x3fa5af.compareDocumentPosition(_0x44f83f) : 0x1, 0x1 & _0xb53d2f || !_0x2a3c09.sortDetached && _0x44f83f.compareDocumentPosition(_0x3fa5af) === _0xb53d2f ? _0x3fa5af === _0x1e1143 || _0x3fa5af.ownerDocument === _0x584ecc && _0x3a4afa(_0x584ecc, _0x3fa5af) ? -0x1 : _0x44f83f === _0x1e1143 || _0x44f83f.ownerDocument === _0x584ecc && _0x3a4afa(_0x584ecc, _0x44f83f) ? 0x1 : _0x57267b ? _0x149a21(_0x57267b, _0x3fa5af) - _0x149a21(_0x57267b, _0x44f83f) : 0x0 : 0x4 & _0xb53d2f ? -0x1 : 0x1);
    } : function (_0x172913, _0x3ac685) {
      if (_0x172913 === _0x3ac685) return _0x16eeca = !0x0, 0x0;
      var _0x5456a6,
        _0x2d4ca4 = 0x0;
      _0x5456a6 = _0x172913.parentNode;
      var _0x15e90e = _0x3ac685.parentNode,
        _0x131000 = [_0x172913],
        _0x5f2d26 = [_0x3ac685];
      if (!_0x5456a6 || !_0x15e90e) return _0x172913 === _0x1e1143 ? -0x1 : _0x3ac685 === _0x1e1143 ? 0x1 : _0x5456a6 ? -0x1 : _0x15e90e ? 0x1 : _0x57267b ? _0x149a21(_0x57267b, _0x172913) - _0x149a21(_0x57267b, _0x3ac685) : 0x0;
      if (_0x5456a6 === _0x15e90e) return _0x32204d(_0x172913, _0x3ac685);
      for (_0x5456a6 = _0x172913; _0x5456a6 = _0x5456a6.parentNode;) _0x131000.unshift(_0x5456a6);
      for (_0x5456a6 = _0x3ac685; _0x5456a6 = _0x5456a6.parentNode;) _0x5f2d26.unshift(_0x5456a6);
      for (; _0x131000[_0x2d4ca4] === _0x5f2d26[_0x2d4ca4];) _0x2d4ca4++;
      return _0x2d4ca4 ? _0x32204d(_0x131000[_0x2d4ca4], _0x5f2d26[_0x2d4ca4]) : _0x131000[_0x2d4ca4] === _0x584ecc ? -0x1 : _0x5f2d26[_0x2d4ca4] === _0x584ecc ? 0x1 : 0x0;
    }, _0x1e1143) : _0x1e1143;
  }, _0x5816db.matches = function (_0x377f1d, _0x311ea6) {
    return _0x5816db(_0x377f1d, null, null, _0x311ea6);
  }, _0x5816db.matchesSelector = function (_0x1f4d09, _0x2b8375) {
    if ((_0x1f4d09.ownerDocument || _0x1f4d09) !== _0x1e1143 && _0x37d656(_0x1f4d09), _0x2b8375 = _0x2b8375.replace(_0x287a06, "='$1']"), _0x2a3c09.matchesSelector && _0x180703 && !_0x936a27[_0x2b8375 + " "] && (!_0x30b584 || !_0x30b584.test(_0x2b8375)) && (!_0x1b0eb6 || !_0x1b0eb6.test(_0x2b8375))) try {
      var _0x3033f6 = _0x5cf111.call(_0x1f4d09, _0x2b8375);
      if (_0x3033f6 || _0x2a3c09.disconnectedMatch || _0x1f4d09.document && 0xb !== _0x1f4d09.document.nodeType) return _0x3033f6;
    } catch (_0x1363dd) {}
    return 0x0 < _0x5816db(_0x2b8375, _0x1e1143, null, [_0x1f4d09]).length;
  }, _0x5816db.contains = function (_0x294a31, _0x34a158) {
    return (_0x294a31.ownerDocument || _0x294a31) !== _0x1e1143 && _0x37d656(_0x294a31), _0x3a4afa(_0x294a31, _0x34a158);
  }, _0x5816db.attr = function (_0x355900, _0x40e8c5) {
    (_0x355900.ownerDocument || _0x355900) !== _0x1e1143 && _0x37d656(_0x355900);
    var _0x68384f = _0x6f86b3.attrHandle[_0x40e8c5.toLowerCase()],
      _0x68384f = _0x68384f && _0x2b9d6a.call(_0x6f86b3.attrHandle, _0x40e8c5.toLowerCase()) ? _0x68384f(_0x355900, _0x40e8c5, !_0x180703) : void 0x0;
    return void 0x0 !== _0x68384f ? _0x68384f : _0x2a3c09.attributes || !_0x180703 ? _0x355900.getAttribute(_0x40e8c5) : (_0x68384f = _0x355900.getAttributeNode(_0x40e8c5)) && _0x68384f.specified ? _0x68384f.value : null;
  }, _0x5816db.escape = function (_0x4c2462) {
    return (_0x4c2462 + '').replace(_0x22bb97, _0xdf04d0);
  }, _0x5816db.error = function (_0x3aca4f) {
    throw Error("Syntax error, unrecognized expression: " + _0x3aca4f);
  }, _0x5816db.uniqueSort = function (_0x40fd6c) {
    var _0x2c1c66,
      _0x3fd175 = [],
      _0x2730ba = 0x0,
      _0x28d527 = 0x0;
    if (_0x16eeca = !_0x2a3c09.detectDuplicates, _0x57267b = !_0x2a3c09.sortStable && _0x40fd6c.slice(0x0), _0x40fd6c.sort(_0x252c78), _0x16eeca) {
      for (; _0x2c1c66 = _0x40fd6c[_0x28d527++];) _0x2c1c66 === _0x40fd6c[_0x28d527] && (_0x2730ba = _0x3fd175.push(_0x28d527));
      for (; _0x2730ba--;) _0x40fd6c.splice(_0x3fd175[_0x2730ba], 0x1);
    }
    return _0x57267b = null, _0x40fd6c;
  }, _0x284bc7 = _0x5816db.getText = function (_0x281b82) {
    var _0x3c7485,
      _0x5a9ba4 = '',
      _0x551f69 = 0x0;
    if (_0x3c7485 = _0x281b82.nodeType) {
      if (0x1 === _0x3c7485 || 0x9 === _0x3c7485 || 0xb === _0x3c7485) {
        if ('string' == typeof _0x281b82.textContent) return _0x281b82.textContent;
        for (_0x281b82 = _0x281b82.firstChild; _0x281b82; _0x281b82 = _0x281b82.nextSibling) _0x5a9ba4 += _0x284bc7(_0x281b82);
      } else {
        if (0x3 === _0x3c7485 || 0x4 === _0x3c7485) return _0x281b82.nodeValue;
      }
    } else {
      for (; _0x3c7485 = _0x281b82[_0x551f69++];) _0x5a9ba4 += _0x284bc7(_0x3c7485);
    }
    return _0x5a9ba4;
  }, _0x6f86b3 = _0x5816db.selectors = {
    'cacheLength': 0x32,
    'createPseudo': _0xffc911,
    'match': _0x315d7b,
    'attrHandle': {},
    'find': {},
    'relative': {
      '>': {
        'dir': 'parentNode',
        'first': !0x0
      },
      " ": {
        'dir': 'parentNode'
      },
      '+': {
        'dir': 'previousSibling',
        'first': !0x0
      },
      '~': {
        'dir': 'previousSibling'
      }
    },
    'preFilter': {
      'ATTR': function (_0x4fb803) {
        return _0x4fb803[0x1] = _0x4fb803[0x1].replace(_0x45dd03, _0x3070ad), _0x4fb803[0x3] = (_0x4fb803[0x3] || _0x4fb803[0x4] || _0x4fb803[0x5] || '').replace(_0x45dd03, _0x3070ad), '~=' === _0x4fb803[0x2] && (_0x4fb803[0x3] = " " + _0x4fb803[0x3] + " "), _0x4fb803.slice(0x0, 0x4);
      },
      'CHILD': function (_0x357ec2) {
        return _0x357ec2[0x1] = _0x357ec2[0x1].toLowerCase(), 'nth' === _0x357ec2[0x1].slice(0x0, 0x3) ? (_0x357ec2[0x3] || _0x5816db.error(_0x357ec2[0x0]), _0x357ec2[0x4] = +(_0x357ec2[0x4] ? _0x357ec2[0x5] + (_0x357ec2[0x6] || 0x1) : 0x2 * ('even' === _0x357ec2[0x3] || 'odd' === _0x357ec2[0x3])), _0x357ec2[0x5] = +(_0x357ec2[0x7] + _0x357ec2[0x8] || 'odd' === _0x357ec2[0x3])) : _0x357ec2[0x3] && _0x5816db.error(_0x357ec2[0x0]), _0x357ec2;
      },
      'PSEUDO': function (_0x357786) {
        var _0x17047e,
          _0x51ba13 = !_0x357786[0x6] && _0x357786[0x2];
        return _0x315d7b.CHILD.test(_0x357786[0x0]) ? null : (_0x357786[0x3] ? _0x357786[0x2] = _0x357786[0x4] || _0x357786[0x5] || '' : _0x51ba13 && _0x25bd31.test(_0x51ba13) && (_0x17047e = _0x16f08c(_0x51ba13, !0x0)) && (_0x17047e = _0x51ba13.indexOf(')', _0x51ba13.length - _0x17047e) - _0x51ba13.length) && (_0x357786[0x0] = _0x357786[0x0].slice(0x0, _0x17047e), _0x357786[0x2] = _0x51ba13.slice(0x0, _0x17047e)), _0x357786.slice(0x0, 0x3));
      }
    },
    'filter': {
      'TAG': function (_0xff7c7a) {
        var _0x4070b2 = _0xff7c7a.replace(_0x45dd03, _0x3070ad).toLowerCase();
        return '*' === _0xff7c7a ? function () {
          return !0x0;
        } : function (_0x453a9d) {
          return _0x453a9d.nodeName && _0x453a9d.nodeName.toLowerCase() === _0x4070b2;
        };
      },
      'CLASS': function (_0x4525bf) {
        var _0x3f10a3 = _0x418afe[_0x4525bf + " "];
        return _0x3f10a3 || (_0x3f10a3 = RegExp("(^|[\\x20\\t\\r\\n\\f])" + _0x4525bf + "([\\x20\\t\\r\\n\\f]|$)")) && _0x418afe(_0x4525bf, function (_0x2cbfa0) {
          return _0x3f10a3.test('string' == typeof _0x2cbfa0.className && _0x2cbfa0.className || 'undefined' != typeof _0x2cbfa0.getAttribute && _0x2cbfa0.getAttribute('class') || '');
        });
      },
      'ATTR': function (_0x5042bf, _0xa1bc8f, _0x3124fa) {
        return function (_0x677905) {
          return _0x677905 = _0x5816db.attr(_0x677905, _0x5042bf), null == _0x677905 ? '!=' === _0xa1bc8f : !_0xa1bc8f || (_0x677905 += '', '=' === _0xa1bc8f ? _0x677905 === _0x3124fa : '!=' === _0xa1bc8f ? _0x677905 !== _0x3124fa : '^=' === _0xa1bc8f ? _0x3124fa && 0x0 === _0x677905.indexOf(_0x3124fa) : '*=' === _0xa1bc8f ? _0x3124fa && -0x1 < _0x677905.indexOf(_0x3124fa) : '$=' === _0xa1bc8f ? _0x3124fa && _0x677905.slice(-_0x3124fa.length) === _0x3124fa : '~=' === _0xa1bc8f ? -0x1 < (" " + _0x677905.replace(_0x2622bf, " ") + " ").indexOf(_0x3124fa) : '|=' === _0xa1bc8f && (_0x677905 === _0x3124fa || _0x677905.slice(0x0, _0x3124fa.length + 0x1) === _0x3124fa + '-'));
        };
      },
      'CHILD': function (_0x29fdd4, _0xf1275e, _0x2b3c40, _0x3b6250, _0x3a68ff) {
        var _0x2d6c5f = 'nth' !== _0x29fdd4.slice(0x0, 0x3),
          _0x11b91a = 'last' !== _0x29fdd4.slice(-0x4),
          _0x13ba1b = 'of-type' === _0xf1275e;
        return 0x1 === _0x3b6250 && 0x0 === _0x3a68ff ? function (_0x15a5b4) {
          return !!_0x15a5b4.parentNode;
        } : function (_0x41b543, _0x5ea095, _0x194783) {
          var _0x18e08c, _0x22e71a, _0x179cad, _0x14aced, _0x451178, _0x34e668;
          _0x5ea095 = _0x2d6c5f !== _0x11b91a ? 'nextSibling' : 'previousSibling';
          var _0x5df1e0 = _0x41b543.parentNode,
            _0x2528ea = _0x13ba1b && _0x41b543.nodeName.toLowerCase();
          _0x194783 = !_0x194783 && !_0x13ba1b;
          var _0x36866e = !0x1;
          if (_0x5df1e0) {
            if (_0x2d6c5f) {
              for (; _0x5ea095;) {
                for (_0x14aced = _0x41b543; _0x14aced = _0x14aced[_0x5ea095];) if (_0x13ba1b ? _0x14aced.nodeName.toLowerCase() === _0x2528ea : 0x1 === _0x14aced.nodeType) return !0x1;
                _0x34e668 = _0x5ea095 = 'only' === _0x29fdd4 && !_0x34e668 && 'nextSibling';
              }
              return !0x0;
            }
            if (_0x34e668 = [_0x11b91a ? _0x5df1e0.firstChild : _0x5df1e0.lastChild], _0x11b91a && _0x194783) {
              _0x14aced = _0x5df1e0, _0x179cad = _0x14aced[_0xece684] || (_0x14aced[_0xece684] = {}), _0x22e71a = _0x179cad[_0x14aced.uniqueID] || (_0x179cad[_0x14aced.uniqueID] = {}), _0x18e08c = _0x22e71a[_0x29fdd4] || [], _0x36866e = (_0x451178 = _0x18e08c[0x0] === _0x333cd7 && _0x18e08c[0x1]) && _0x18e08c[0x2];
              for (_0x14aced = _0x451178 && _0x5df1e0.childNodes[_0x451178]; _0x14aced = ++_0x451178 && _0x14aced && _0x14aced[_0x5ea095] || (_0x36866e = _0x451178 = 0x0) || _0x34e668.pop();) if (0x1 === _0x14aced.nodeType && ++_0x36866e && _0x14aced === _0x41b543) {
                _0x22e71a[_0x29fdd4] = [_0x333cd7, _0x451178, _0x36866e];
                break;
              }
            } else {
              if (_0x194783 && (_0x14aced = _0x41b543, _0x179cad = _0x14aced[_0xece684] || (_0x14aced[_0xece684] = {}), _0x22e71a = _0x179cad[_0x14aced.uniqueID] || (_0x179cad[_0x14aced.uniqueID] = {}), _0x18e08c = _0x22e71a[_0x29fdd4] || [], _0x451178 = _0x18e08c[0x0] === _0x333cd7 && _0x18e08c[0x1], _0x36866e = _0x451178), !0x1 === _0x36866e) {
                for (; (_0x14aced = ++_0x451178 && _0x14aced && _0x14aced[_0x5ea095] || (_0x36866e = _0x451178 = 0x0) || _0x34e668.pop()) && (!(_0x13ba1b ? _0x14aced.nodeName.toLowerCase() === _0x2528ea : 0x1 === _0x14aced.nodeType) || !++_0x36866e || !(_0x194783 && (_0x179cad = _0x14aced[_0xece684] || (_0x14aced[_0xece684] = {}), _0x22e71a = _0x179cad[_0x14aced.uniqueID] || (_0x179cad[_0x14aced.uniqueID] = {}), _0x22e71a[_0x29fdd4] = [_0x333cd7, _0x36866e]), _0x14aced === _0x41b543)););
              }
            }
            return _0x36866e -= _0x3a68ff, _0x36866e === _0x3b6250 || 0x0 === _0x36866e % _0x3b6250 && 0x0 <= _0x36866e / _0x3b6250;
          }
        };
      },
      'PSEUDO': function (_0x47313a, _0x4d5c47) {
        var _0x505a51,
          _0xb6f2c1 = _0x6f86b3.pseudos[_0x47313a] || _0x6f86b3.setFilters[_0x47313a.toLowerCase()] || _0x5816db.error("unsupported pseudo: " + _0x47313a);
        return _0xb6f2c1[_0xece684] ? _0xb6f2c1(_0x4d5c47) : 0x1 < _0xb6f2c1.length ? (_0x505a51 = [_0x47313a, _0x47313a, '', _0x4d5c47], _0x6f86b3.setFilters.hasOwnProperty(_0x47313a.toLowerCase()) ? _0xffc911(function (_0x3844b4, _0x9c6ddf) {
          for (var _0x5699a6, _0x1fe6e8 = _0xb6f2c1(_0x3844b4, _0x4d5c47), _0x3f352e = _0x1fe6e8.length; _0x3f352e--;) _0x5699a6 = _0x149a21(_0x3844b4, _0x1fe6e8[_0x3f352e]), _0x3844b4[_0x5699a6] = !(_0x9c6ddf[_0x5699a6] = _0x1fe6e8[_0x3f352e]);
        }) : function (_0xa178be) {
          return _0xb6f2c1(_0xa178be, 0x0, _0x505a51);
        }) : _0xb6f2c1;
      }
    },
    'pseudos': {
      'not': _0xffc911(function (_0x347548) {
        var _0x1a088c = [],
          _0x5c6d5a = [],
          _0x111831 = _0x4d8957(_0x347548.replace(_0x19313b, '$1'));
        return _0x111831[_0xece684] ? _0xffc911(function (_0x17e1a5, _0x370836, _0x1232a1, _0x427cc1) {
          var _0x2c42e0;
          _0x1232a1 = _0x111831(_0x17e1a5, null, _0x427cc1, []);
          for (_0x427cc1 = _0x17e1a5.length; _0x427cc1--;) (_0x2c42e0 = _0x1232a1[_0x427cc1]) && (_0x17e1a5[_0x427cc1] = !(_0x370836[_0x427cc1] = _0x2c42e0));
        }) : function (_0x21b6f9, _0x29c6d6, _0x24440b) {
          return _0x1a088c[0x0] = _0x21b6f9, _0x111831(_0x1a088c, null, _0x24440b, _0x5c6d5a), _0x1a088c[0x0] = null, !_0x5c6d5a.pop();
        };
      }),
      'has': _0xffc911(function (_0x23a18e) {
        return function (_0x299e00) {
          return 0x0 < _0x5816db(_0x23a18e, _0x299e00).length;
        };
      }),
      'contains': _0xffc911(function (_0x1ac0e7) {
        return _0x1ac0e7 = _0x1ac0e7.replace(_0x45dd03, _0x3070ad), function (_0x1861c1) {
          return -0x1 < (_0x1861c1.textContent || _0x1861c1.innerText || _0x284bc7(_0x1861c1)).indexOf(_0x1ac0e7);
        };
      }),
      'lang': _0xffc911(function (_0x116e08) {
        return _0x16d3b0.test(_0x116e08 || '') || _0x5816db.error("unsupported lang: " + _0x116e08), _0x116e08 = _0x116e08.replace(_0x45dd03, _0x3070ad).toLowerCase(), function (_0x443a90) {
          var _0x4391e0;
          do if (_0x4391e0 = _0x180703 ? _0x443a90.lang : _0x443a90.getAttribute('xml:lang') || _0x443a90.getAttribute('lang')) return _0x4391e0 = _0x4391e0.toLowerCase(), _0x4391e0 === _0x116e08 || 0x0 === _0x4391e0.indexOf(_0x116e08 + '-'); while ((_0x443a90 = _0x443a90.parentNode) && 0x1 === _0x443a90.nodeType);
          return !0x1;
        };
      }),
      'target': function (_0x1a169a) {
        var _0x3a8006 = _0x3fb4ca.location && _0x3fb4ca.location.hash;
        return _0x3a8006 && _0x3a8006.slice(0x1) === _0x1a169a.id;
      },
      'root': function (_0x2f2cb9) {
        return _0x2f2cb9 === _0x2d9a30;
      },
      'focus': function (_0x40f9ef) {
        return _0x40f9ef === _0x1e1143.activeElement && (!_0x1e1143.hasFocus || _0x1e1143.hasFocus()) && !(!_0x40f9ef.type && !_0x40f9ef.href && !~_0x40f9ef.tabIndex);
      },
      'enabled': _0x284d41(!0x1),
      'disabled': _0x284d41(!0x0),
      'checked': function (_0x5a294c) {
        var _0x25a1e6 = _0x5a294c.nodeName.toLowerCase();
        return 'input' === _0x25a1e6 && !!_0x5a294c.checked || 'option' === _0x25a1e6 && !!_0x5a294c.selected;
      },
      'selected': function (_0x3c952c) {
        return _0x3c952c.parentNode && _0x3c952c.parentNode.selectedIndex, !0x0 === _0x3c952c.selected;
      },
      'empty': function (_0xa3b868) {
        for (_0xa3b868 = _0xa3b868.firstChild; _0xa3b868; _0xa3b868 = _0xa3b868.nextSibling) if (0x6 > _0xa3b868.nodeType) return !0x1;
        return !0x0;
      },
      'parent': function (_0x43d48c) {
        return !_0x6f86b3.pseudos.empty(_0x43d48c);
      },
      'header': function (_0x5de847) {
        return _0x11d378.test(_0x5de847.nodeName);
      },
      'input': function (_0x259565) {
        return _0x1f9930.test(_0x259565.nodeName);
      },
      'button': function (_0x3b462c) {
        var _0x4fd0f0 = _0x3b462c.nodeName.toLowerCase();
        return 'input' === _0x4fd0f0 && 'button' === _0x3b462c.type || 'button' === _0x4fd0f0;
      },
      'text': function (_0x180d5b) {
        var _0x5242f4;
        return 'input' === _0x180d5b.nodeName.toLowerCase() && 'text' === _0x180d5b.type && (null == (_0x5242f4 = _0x180d5b.getAttribute('type')) || 'text' === _0x5242f4.toLowerCase());
      },
      'first': _0x8be309(function () {
        return [0x0];
      }),
      'last': _0x8be309(function (_0x37cb04, _0x5a2f55) {
        return [_0x5a2f55 - 0x1];
      }),
      'eq': _0x8be309(function (_0x30856a, _0x1015a2, _0x22c36e) {
        return [0x0 > _0x22c36e ? _0x22c36e + _0x1015a2 : _0x22c36e];
      }),
      'even': _0x8be309(function (_0x9a1ae4, _0x381255) {
        for (var _0x403992 = 0x0; _0x403992 < _0x381255; _0x403992 += 0x2) _0x9a1ae4.push(_0x403992);
        return _0x9a1ae4;
      }),
      'odd': _0x8be309(function (_0x41536c, _0x366635) {
        for (var _0x4908a6 = 0x1; _0x4908a6 < _0x366635; _0x4908a6 += 0x2) _0x41536c.push(_0x4908a6);
        return _0x41536c;
      }),
      'lt': _0x8be309(function (_0x5ce57f, _0x2fdf29, _0x1ee86a) {
        for (_0x2fdf29 = 0x0 > _0x1ee86a ? _0x1ee86a + _0x2fdf29 : _0x1ee86a; 0x0 <= --_0x2fdf29;) _0x5ce57f.push(_0x2fdf29);
        return _0x5ce57f;
      }),
      'gt': _0x8be309(function (_0x2364a4, _0x43b67f, _0x1b2e9c) {
        for (_0x1b2e9c = 0x0 > _0x1b2e9c ? _0x1b2e9c + _0x43b67f : _0x1b2e9c; ++_0x1b2e9c < _0x43b67f;) _0x2364a4.push(_0x1b2e9c);
        return _0x2364a4;
      })
    }
  }, _0x6f86b3.pseudos.nth = _0x6f86b3.pseudos.eq;
  for (_0x237183 in {
    'radio': !0x0,
    'checkbox': !0x0,
    'file': !0x0,
    'password': !0x0,
    'image': !0x0
  }) _0x6f86b3.pseudos[_0x237183] = _0x357548(_0x237183);
  for (_0x237183 in {
    'submit': !0x0,
    'reset': !0x0
  }) _0x6f86b3.pseudos[_0x237183] = _0x3eae8e(_0x237183);
  _0x15ede7.prototype = _0x6f86b3.filters = _0x6f86b3.pseudos, _0x6f86b3.setFilters = new _0x15ede7(), _0x16f08c = _0x5816db.tokenize = function (_0x17a333, _0x1a2628) {
    var _0x1fc916, _0x59753e, _0x4ba0a0, _0x92065f, _0x7c356d, _0x1e13fb, _0x44ce25;
    if (_0x7c356d = _0xaea4b5[_0x17a333 + " "]) return _0x1a2628 ? 0x0 : _0x7c356d.slice(0x0);
    _0x7c356d = _0x17a333, _0x1e13fb = [];
    for (_0x44ce25 = _0x6f86b3.preFilter; _0x7c356d;) {
      _0x1fc916 && !(_0x59753e = _0x1f667c.exec(_0x7c356d)) || (_0x59753e && (_0x7c356d = _0x7c356d.slice(_0x59753e[0x0].length) || _0x7c356d), _0x1e13fb.push(_0x4ba0a0 = [])), _0x1fc916 = !0x1, (_0x59753e = _0x52bc4e.exec(_0x7c356d)) && (_0x1fc916 = _0x59753e.shift(), _0x4ba0a0.push({
        'value': _0x1fc916,
        'type': _0x59753e[0x0].replace(_0x19313b, " ")
      }), _0x7c356d = _0x7c356d.slice(_0x1fc916.length));
      for (_0x92065f in _0x6f86b3.filter) !(_0x59753e = _0x315d7b[_0x92065f].exec(_0x7c356d)) || _0x44ce25[_0x92065f] && !(_0x59753e = _0x44ce25[_0x92065f](_0x59753e)) || (_0x1fc916 = _0x59753e.shift(), _0x4ba0a0.push({
        'value': _0x1fc916,
        'type': _0x92065f,
        'matches': _0x59753e
      }), _0x7c356d = _0x7c356d.slice(_0x1fc916.length));
      if (!_0x1fc916) break;
    }
    return _0x1a2628 ? _0x7c356d.length : _0x7c356d ? _0x5816db.error(_0x17a333) : _0xaea4b5(_0x17a333, _0x1e13fb).slice(0x0);
  }, _0x1321c3 = (_0x4d8957 = _0x5816db.compile = function (_0x467ed0, _0x3879a3) {
    var _0x4f7749,
      _0x4a8341 = [],
      _0x40c719 = [],
      _0x5fd46f = _0x936a27[_0x467ed0 + " "];
    if (!_0x5fd46f) {
      _0x3879a3 || (_0x3879a3 = _0x16f08c(_0x467ed0));
      for (_0x4f7749 = _0x3879a3.length; _0x4f7749--;) _0x5fd46f = _0x4effb7(_0x3879a3[_0x4f7749]), _0x5fd46f[_0xece684] ? _0x4a8341.push(_0x5fd46f) : _0x40c719.push(_0x5fd46f);
      _0x4f7749 = _0x936a27;
      var _0x27d8b0 = 0x0 < _0x4a8341.length,
        _0x39756f = 0x0 < _0x40c719.length,
        _0x5fd46f = function (_0xbd3334, _0x1c7eea, _0x2ae473, _0x3cbb2d, _0x33bc2c) {
          var _0x4ecf97,
            _0x4d6d5e,
            _0x18e818,
            _0x259fc3 = 0x0,
            _0x2c530b = '0',
            _0x588ee5 = _0xbd3334 && [],
            _0x4412cb = [],
            _0x158923 = _0x1fdf3a,
            _0x347025 = _0xbd3334 || _0x39756f && _0x6f86b3.find.TAG('*', _0x33bc2c),
            _0x1b56e6 = _0x333cd7 += null == _0x158923 ? 0x1 : Math.random() || 0.1,
            _0x3bc68c = _0x347025.length;
          for (_0x33bc2c && (_0x1fdf3a = _0x1c7eea === _0x1e1143 || _0x1c7eea || _0x33bc2c); _0x2c530b !== _0x3bc68c && null != (_0x4ecf97 = _0x347025[_0x2c530b]); _0x2c530b++) {
            if (_0x39756f && _0x4ecf97) {
              _0x4d6d5e = 0x0;
              for (_0x1c7eea || _0x4ecf97.ownerDocument === _0x1e1143 || (_0x37d656(_0x4ecf97), _0x2ae473 = !_0x180703); _0x18e818 = _0x40c719[_0x4d6d5e++];) if (_0x18e818(_0x4ecf97, _0x1c7eea || _0x1e1143, _0x2ae473)) {
                _0x3cbb2d.push(_0x4ecf97);
                break;
              }
              _0x33bc2c && (_0x333cd7 = _0x1b56e6);
            }
            _0x27d8b0 && ((_0x4ecf97 = !_0x18e818 && _0x4ecf97) && _0x259fc3--, _0xbd3334 && _0x588ee5.push(_0x4ecf97));
          }
          if (_0x259fc3 += _0x2c530b, _0x27d8b0 && _0x2c530b !== _0x259fc3) {
            for (_0x4d6d5e = 0x0; _0x18e818 = _0x4a8341[_0x4d6d5e++];) _0x18e818(_0x588ee5, _0x4412cb, _0x1c7eea, _0x2ae473);
            if (_0xbd3334) {
              if (0x0 < _0x259fc3) {
                for (; _0x2c530b--;) _0x588ee5[_0x2c530b] || _0x4412cb[_0x2c530b] || (_0x4412cb[_0x2c530b] = _0x251502.call(_0x3cbb2d));
              }
              _0x4412cb = _0x35a8d3(_0x4412cb);
            }
            _0x3dac98.apply(_0x3cbb2d, _0x4412cb), _0x33bc2c && !_0xbd3334 && 0x0 < _0x4412cb.length && 0x1 < _0x259fc3 + _0x4a8341.length && _0x5816db.uniqueSort(_0x3cbb2d);
          }
          return _0x33bc2c && (_0x333cd7 = _0x1b56e6, _0x1fdf3a = _0x158923), _0x588ee5;
        },
        _0x5fd46f = _0x27d8b0 ? _0xffc911(_0x5fd46f) : _0x5fd46f,
        _0x5fd46f = _0x4f7749(_0x467ed0, _0x5fd46f);
      _0x5fd46f.selector = _0x467ed0;
    }
    return _0x5fd46f;
  }, _0x39400e = _0x5816db.select = function (_0x5466e0, _0x1c4eb4, _0x105810, _0x15e40e) {
    var _0x581be8,
      _0x190f72,
      _0x2a5fd1,
      _0x3a06d2,
      _0x29a6af,
      _0x4d3a75 = 'function' == typeof _0x5466e0 && _0x5466e0,
      _0x2cba29 = !_0x15e40e && _0x16f08c(_0x5466e0 = _0x4d3a75.selector || _0x5466e0);
    if (_0x105810 = _0x105810 || [], 0x1 === _0x2cba29.length) {
      if (_0x190f72 = _0x2cba29[0x0] = _0x2cba29[0x0].slice(0x0), 0x2 < _0x190f72.length && 'ID' === (_0x2a5fd1 = _0x190f72[0x0]).type && 0x9 === _0x1c4eb4.nodeType && _0x180703 && _0x6f86b3.relative[_0x190f72[0x1].type]) {
        if (_0x1c4eb4 = (_0x6f86b3.find.ID(_0x2a5fd1.matches[0x0].replace(_0x45dd03, _0x3070ad), _0x1c4eb4) || [])[0x0], !_0x1c4eb4) return _0x105810;
        _0x4d3a75 && (_0x1c4eb4 = _0x1c4eb4.parentNode), _0x5466e0 = _0x5466e0.slice(_0x190f72.shift().value.length);
      }
      for (_0x581be8 = _0x315d7b.needsContext.test(_0x5466e0) ? 0x0 : _0x190f72.length; _0x581be8-- && !(_0x2a5fd1 = _0x190f72[_0x581be8], _0x6f86b3.relative[_0x3a06d2 = _0x2a5fd1.type]);) if ((_0x29a6af = _0x6f86b3.find[_0x3a06d2]) && (_0x15e40e = _0x29a6af(_0x2a5fd1.matches[0x0].replace(_0x45dd03, _0x3070ad), _0x243cd0.test(_0x190f72[0x0].type) && _0x30dfd2(_0x1c4eb4.parentNode) || _0x1c4eb4))) {
        if (_0x190f72.splice(_0x581be8, 0x1), _0x5466e0 = _0x15e40e.length && _0xb16336(_0x190f72), !_0x5466e0) return _0x3dac98.apply(_0x105810, _0x15e40e), _0x105810;
        break;
      }
    }
    return (_0x4d3a75 || _0x4d8957(_0x5466e0, _0x2cba29))(_0x15e40e, _0x1c4eb4, !_0x180703, _0x105810, !_0x1c4eb4 || _0x243cd0.test(_0x5466e0) && _0x30dfd2(_0x1c4eb4.parentNode) || _0x1c4eb4), _0x105810;
  }, _0x2a3c09.sortStable = _0xece684.split('').sort(_0x252c78).join('') === _0xece684, _0x2a3c09.detectDuplicates = !!_0x16eeca, _0x37d656(), _0x2a3c09.sortDetached = _0x563c88(function (_0x28b069) {
    return 0x1 & _0x28b069.compareDocumentPosition(_0x1e1143.createElement('fieldset'));
  }), _0x563c88(function (_0x5828af) {
    return _0x5828af.innerHTML = "<a href='#'></a>", '#' === _0x5828af.firstChild.getAttribute('href');
  }) || _0x459855('type|href|height|width', function (_0xb476a2, _0x10097a, _0x4c4834) {
    if (!_0x4c4834) return _0xb476a2.getAttribute(_0x10097a, 'type' === _0x10097a.toLowerCase() ? 0x1 : 0x2);
  }), _0x2a3c09.attributes && _0x563c88(function (_0x32eb20) {
    return _0x32eb20.innerHTML = '<input/>', _0x32eb20.firstChild.setAttribute('value', ''), '' === _0x32eb20.firstChild.getAttribute('value');
  }) || _0x459855('value', function (_0xc33585, _0xbb1faa, _0x4ff55c) {
    if (!_0x4ff55c && 'input' === _0xc33585.nodeName.toLowerCase()) return _0xc33585.defaultValue;
  }), _0x563c88(function (_0x32d1b6) {
    return null == _0x32d1b6.getAttribute('disabled');
  }) || _0x459855('checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped', function (_0x17410e, _0x14194f, _0x4e9a5d) {
    var _0x18d0bc;
    if (!_0x4e9a5d) return !0x0 === _0x17410e[_0x14194f] ? _0x14194f.toLowerCase() : (_0x18d0bc = _0x17410e.getAttributeNode(_0x14194f)) && _0x18d0bc.specified ? _0x18d0bc.value : null;
  }), _0x5816db), _0x225465.find = _0x1321c3, _0x225465.expr = _0x1321c3.selectors, _0x225465.expr[':'] = _0x225465.expr.pseudos, _0x225465.uniqueSort = _0x225465.unique = _0x1321c3.uniqueSort, _0x225465.text = _0x1321c3.getText, _0x225465.isXMLDoc = _0x1321c3.isXML, _0x225465.contains = _0x1321c3.contains, _0x225465.escapeSelector = _0x1321c3.escape;
  var _0x1df723 = function (_0x1bf9d1, _0x128461, _0xe97d24) {
      for (var _0x26788d = [], _0x5bdb15 = void 0x0 !== _0xe97d24; (_0x1bf9d1 = _0x1bf9d1[_0x128461]) && 0x9 !== _0x1bf9d1.nodeType;) if (0x1 === _0x1bf9d1.nodeType) {
        if (_0x5bdb15 && _0x225465(_0x1bf9d1).is(_0xe97d24)) break;
        _0x26788d.push(_0x1bf9d1);
      }
      return _0x26788d;
    },
    _0x4454e1 = function (_0x42e061, _0x31fdf0) {
      for (var _0x4bb834 = []; _0x42e061; _0x42e061 = _0x42e061.nextSibling) 0x1 === _0x42e061.nodeType && _0x42e061 !== _0x31fdf0 && _0x4bb834.push(_0x42e061);
      return _0x4bb834;
    },
    _0x2d4eac = _0x225465.expr.match.needsContext,
    _0x4fa015 = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,
    _0x54ba5d = /^.[^:#\[\.,]*$/;
  _0x225465.filter = function (_0x2c21f8, _0x5ef2d4, _0x3cd0d8) {
    var _0x23889a = _0x5ef2d4[0x0];
    return _0x3cd0d8 && (_0x2c21f8 = ':not(' + _0x2c21f8 + ')'), 0x1 === _0x5ef2d4.length && 0x1 === _0x23889a.nodeType ? _0x225465.find.matchesSelector(_0x23889a, _0x2c21f8) ? [_0x23889a] : [] : _0x225465.find.matches(_0x2c21f8, _0x225465.grep(_0x5ef2d4, function (_0x4e3f25) {
      return 0x1 === _0x4e3f25.nodeType;
    }));
  }, _0x225465.fn.extend({
    'find': function (_0x17a696) {
      var _0xabd7fa,
        _0x2279e4,
        _0x34202c = this.length,
        _0x1b8258 = this;
      if ('string' != typeof _0x17a696) return this.pushStack(_0x225465(_0x17a696).filter(function () {
        for (_0xabd7fa = 0x0; _0xabd7fa < _0x34202c; _0xabd7fa++) if (_0x225465.contains(_0x1b8258[_0xabd7fa], this)) return !0x0;
      }));
      _0x2279e4 = this.pushStack([]);
      for (_0xabd7fa = 0x0; _0xabd7fa < _0x34202c; _0xabd7fa++) _0x225465.find(_0x17a696, _0x1b8258[_0xabd7fa], _0x2279e4);
      return 0x1 < _0x34202c ? _0x225465.uniqueSort(_0x2279e4) : _0x2279e4;
    },
    'filter': function (_0x839a42) {
      return this.pushStack(_0x2e0dbc(this, _0x839a42 || [], !0x1));
    },
    'not': function (_0x21815f) {
      return this.pushStack(_0x2e0dbc(this, _0x21815f || [], !0x0));
    },
    'is': function (_0xcfef04) {
      return !!_0x2e0dbc(this, 'string' == typeof _0xcfef04 && _0x2d4eac.test(_0xcfef04) ? _0x225465(_0xcfef04) : _0xcfef04 || [], !0x1).length;
    }
  });
  var _0xa9d2e8,
    _0x13490e = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
  (_0x225465.fn.init = function (_0xed15a7, _0x853cbb, _0x4a25e0) {
    var _0x3e3cca, _0x4bdc8c;
    if (!_0xed15a7) return this;
    if (_0x4a25e0 = _0x4a25e0 || _0xa9d2e8, 'string' == typeof _0xed15a7) {
      if (_0x3e3cca = '<' === _0xed15a7[0x0] && '>' === _0xed15a7[_0xed15a7.length - 0x1] && 0x3 <= _0xed15a7.length ? [null, _0xed15a7, null] : _0x13490e.exec(_0xed15a7), !_0x3e3cca || !_0x3e3cca[0x1] && _0x853cbb) return !_0x853cbb || _0x853cbb.jquery ? (_0x853cbb || _0x4a25e0).find(_0xed15a7) : this.constructor(_0x853cbb).find(_0xed15a7);
      if (_0x3e3cca[0x1]) {
        if (_0x853cbb = _0x853cbb instanceof _0x225465 ? _0x853cbb[0x0] : _0x853cbb, _0x225465.merge(this, _0x225465.parseHTML(_0x3e3cca[0x1], _0x853cbb && _0x853cbb.nodeType ? _0x853cbb.ownerDocument || _0x853cbb : _0x16e0bd, !0x0)), _0x4fa015.test(_0x3e3cca[0x1]) && _0x225465.isPlainObject(_0x853cbb)) {
          for (_0x3e3cca in _0x853cbb) _0x225465.isFunction(this[_0x3e3cca]) ? this[_0x3e3cca](_0x853cbb[_0x3e3cca]) : this.attr(_0x3e3cca, _0x853cbb[_0x3e3cca]);
        }
        return this;
      }
      return _0x4bdc8c = _0x16e0bd.getElementById(_0x3e3cca[0x2]), _0x4bdc8c && (this[0x0] = _0x4bdc8c, this.length = 0x1), this;
    }
    return _0xed15a7.nodeType ? (this[0x0] = _0xed15a7, this.length = 0x1, this) : _0x225465.isFunction(_0xed15a7) ? void 0x0 !== _0x4a25e0.ready ? _0x4a25e0.ready(_0xed15a7) : _0xed15a7(_0x225465) : _0x225465.makeArray(_0xed15a7, this);
  }).prototype = _0x225465.fn, _0xa9d2e8 = _0x225465(_0x16e0bd);
  var _0x1f95f3 = /^(?:parents|prev(?:Until|All))/,
    _0x30a764 = {
      'children': !0x0,
      'contents': !0x0,
      'next': !0x0,
      'prev': !0x0
    };
  _0x225465.fn.extend({
    'has': function (_0x29585c) {
      var _0x14a00c = _0x225465(_0x29585c, this),
        _0x2a5320 = _0x14a00c.length;
      return this.filter(function () {
        for (var _0x2ffb02 = 0x0; _0x2ffb02 < _0x2a5320; _0x2ffb02++) if (_0x225465.contains(this, _0x14a00c[_0x2ffb02])) return !0x0;
      });
    },
    'closest': function (_0x3d4633, _0x990f0e) {
      var _0x5da025,
        _0x52564a = 0x0,
        _0x450e81 = this.length,
        _0x57d157 = [],
        _0xcd585c = 'string' != typeof _0x3d4633 && _0x225465(_0x3d4633);
      if (!_0x2d4eac.test(_0x3d4633)) {
        for (; _0x52564a < _0x450e81; _0x52564a++) for (_0x5da025 = this[_0x52564a]; _0x5da025 && _0x5da025 !== _0x990f0e; _0x5da025 = _0x5da025.parentNode) if (0xb > _0x5da025.nodeType && (_0xcd585c ? -0x1 < _0xcd585c.index(_0x5da025) : 0x1 === _0x5da025.nodeType && _0x225465.find.matchesSelector(_0x5da025, _0x3d4633))) {
          _0x57d157.push(_0x5da025);
          break;
        }
      }
      return this.pushStack(0x1 < _0x57d157.length ? _0x225465.uniqueSort(_0x57d157) : _0x57d157);
    },
    'index': function (_0x4cf7c3) {
      return _0x4cf7c3 ? 'string' == typeof _0x4cf7c3 ? _0x247dce.call(_0x225465(_0x4cf7c3), this[0x0]) : _0x247dce.call(this, _0x4cf7c3.jquery ? _0x4cf7c3[0x0] : _0x4cf7c3) : this[0x0] && this[0x0].parentNode ? this.first().prevAll().length : -0x1;
    },
    'add': function (_0x30a8c1, _0x33b0e7) {
      return this.pushStack(_0x225465.uniqueSort(_0x225465.merge(this.get(), _0x225465(_0x30a8c1, _0x33b0e7))));
    },
    'addBack': function (_0x5df571) {
      return this.add(null == _0x5df571 ? this.prevObject : this.prevObject.filter(_0x5df571));
    }
  }), _0x225465.each({
    'parent': function (_0x259cbf) {
      return (_0x259cbf = _0x259cbf.parentNode) && 0xb !== _0x259cbf.nodeType ? _0x259cbf : null;
    },
    'parents': function (_0xf06a47) {
      return _0x1df723(_0xf06a47, 'parentNode');
    },
    'parentsUntil': function (_0x246bba, _0x3a2f13, _0x25b1c0) {
      return _0x1df723(_0x246bba, 'parentNode', _0x25b1c0);
    },
    'next': function (_0x411158) {
      return _0x378b69(_0x411158, 'nextSibling');
    },
    'prev': function (_0x599c74) {
      return _0x378b69(_0x599c74, 'previousSibling');
    },
    'nextAll': function (_0x3591e8) {
      return _0x1df723(_0x3591e8, 'nextSibling');
    },
    'prevAll': function (_0x23bb6e) {
      return _0x1df723(_0x23bb6e, 'previousSibling');
    },
    'nextUntil': function (_0x320ac8, _0x9419f8, _0x66a00f) {
      return _0x1df723(_0x320ac8, 'nextSibling', _0x66a00f);
    },
    'prevUntil': function (_0x196433, _0x22c411, _0x280bb9) {
      return _0x1df723(_0x196433, 'previousSibling', _0x280bb9);
    },
    'siblings': function (_0x157be8) {
      return _0x4454e1((_0x157be8.parentNode || {}).firstChild, _0x157be8);
    },
    'children': function (_0x1081f6) {
      return _0x4454e1(_0x1081f6.firstChild);
    },
    'contents': function (_0x598637) {
      return _0x4e3d3f(_0x598637, 'iframe') ? _0x598637.contentDocument : (_0x4e3d3f(_0x598637, 'template') && (_0x598637 = _0x598637.content || _0x598637), _0x225465.merge([], _0x598637.childNodes));
    }
  }, function (_0xccfd85, _0x5d4bce) {
    _0x225465.fn[_0xccfd85] = function (_0x17fa55, _0x2c5068) {
      var _0x20daa9 = _0x225465.map(this, _0x5d4bce, _0x17fa55);
      return 'Until' !== _0xccfd85.slice(-0x5) && (_0x2c5068 = _0x17fa55), _0x2c5068 && 'string' == typeof _0x2c5068 && (_0x20daa9 = _0x225465.filter(_0x2c5068, _0x20daa9)), 0x1 < this.length && (_0x30a764[_0xccfd85] || _0x225465.uniqueSort(_0x20daa9), _0x1f95f3.test(_0xccfd85) && _0x20daa9.reverse()), this.pushStack(_0x20daa9);
    };
  });
  var _0x10c9e2 = /[^\x20\t\r\n\f]+/g;
  _0x225465.Callbacks = function (_0x20ac4a) {
    var _0x40a87a;
    if ('string' == typeof _0x20ac4a) {
      var _0x6da206 = {};
      _0x40a87a = (_0x225465.each(_0x20ac4a.match(_0x10c9e2) || [], function (_0x402642, _0x53eee8) {
        _0x6da206[_0x53eee8] = !0x0;
      }), _0x6da206);
    } else _0x40a87a = _0x225465.extend({}, _0x20ac4a);
    _0x20ac4a = _0x40a87a;
    var _0xb663cb,
      _0x4e5266,
      _0xac1a1d,
      _0x9f69e1,
      _0x2f6c7a = [],
      _0x49f24f = [],
      _0x5e0477 = -0x1,
      _0xb365d1 = function () {
        _0x9f69e1 = _0x9f69e1 || _0x20ac4a.once;
        for (_0xac1a1d = _0xb663cb = !0x0; _0x49f24f.length; _0x5e0477 = -0x1) for (_0x4e5266 = _0x49f24f.shift(); ++_0x5e0477 < _0x2f6c7a.length;) !0x1 === _0x2f6c7a[_0x5e0477].apply(_0x4e5266[0x0], _0x4e5266[0x1]) && _0x20ac4a.stopOnFalse && (_0x5e0477 = _0x2f6c7a.length, _0x4e5266 = !0x1);
        _0x20ac4a.memory || (_0x4e5266 = !0x1), _0xb663cb = !0x1, _0x9f69e1 && (_0x2f6c7a = _0x4e5266 ? [] : '');
      },
      _0x1af2b1 = {
        'add': function () {
          return _0x2f6c7a && (_0x4e5266 && !_0xb663cb && (_0x5e0477 = _0x2f6c7a.length - 0x1, _0x49f24f.push(_0x4e5266)), function _0x2ac729(_0x3bcbe7) {
            _0x225465.each(_0x3bcbe7, function (_0x3697e8, _0x3e3084) {
              _0x225465.isFunction(_0x3e3084) ? _0x20ac4a.unique && _0x1af2b1.has(_0x3e3084) || _0x2f6c7a.push(_0x3e3084) : _0x3e3084 && _0x3e3084.length && 'string' !== _0x225465.type(_0x3e3084) && _0x2ac729(_0x3e3084);
            });
          }(arguments), _0x4e5266 && !_0xb663cb && _0xb365d1()), this;
        },
        'remove': function () {
          return _0x225465.each(arguments, function (_0x28cc0e, _0x317760) {
            for (var _0x3ad8b4; -0x1 < (_0x3ad8b4 = _0x225465.inArray(_0x317760, _0x2f6c7a, _0x3ad8b4));) _0x2f6c7a.splice(_0x3ad8b4, 0x1), _0x3ad8b4 <= _0x5e0477 && _0x5e0477--;
          }), this;
        },
        'has': function (_0x16d518) {
          return _0x16d518 ? -0x1 < _0x225465.inArray(_0x16d518, _0x2f6c7a) : 0x0 < _0x2f6c7a.length;
        },
        'empty': function () {
          return _0x2f6c7a && (_0x2f6c7a = []), this;
        },
        'disable': function () {
          return _0x9f69e1 = _0x49f24f = [], _0x2f6c7a = _0x4e5266 = '', this;
        },
        'disabled': function () {
          return !_0x2f6c7a;
        },
        'lock': function () {
          return _0x9f69e1 = _0x49f24f = [], _0x4e5266 || _0xb663cb || (_0x2f6c7a = _0x4e5266 = ''), this;
        },
        'locked': function () {
          return !!_0x9f69e1;
        },
        'fireWith': function (_0x2bfc8e, _0x256242) {
          return _0x9f69e1 || (_0x256242 = _0x256242 || [], _0x256242 = [_0x2bfc8e, _0x256242.slice ? _0x256242.slice() : _0x256242], _0x49f24f.push(_0x256242), _0xb663cb || _0xb365d1()), this;
        },
        'fire': function () {
          return _0x1af2b1.fireWith(this, arguments), this;
        },
        'fired': function () {
          return !!_0xac1a1d;
        }
      };
    return _0x1af2b1;
  }, _0x225465.extend({
    'Deferred': function (_0x4c5b56) {
      var _0x578d19 = [['notify', 'progress', _0x225465.Callbacks('memory'), _0x225465.Callbacks('memory'), 0x2], ['resolve', 'done', _0x225465.Callbacks("once memory"), _0x225465.Callbacks("once memory"), 0x0, 'resolved'], ['reject', 'fail', _0x225465.Callbacks("once memory"), _0x225465.Callbacks("once memory"), 0x1, 'rejected']],
        _0x513b6e = 'pending',
        _0x5510bf = {
          'state': function () {
            return _0x513b6e;
          },
          'always': function () {
            return _0x2e5ef0.done(arguments).fail(arguments), this;
          },
          'catch': function (_0x192942) {
            return _0x5510bf.then(null, _0x192942);
          },
          'pipe': function () {
            var _0x1ff7a1 = arguments;
            return _0x225465.Deferred(function (_0x2d22b2) {
              _0x225465.each(_0x578d19, function (_0x5785dd, _0x29f5a1) {
                var _0x4e3888 = _0x225465.isFunction(_0x1ff7a1[_0x29f5a1[0x4]]) && _0x1ff7a1[_0x29f5a1[0x4]];
                _0x2e5ef0[_0x29f5a1[0x1]](function () {
                  var _0x444d5a = _0x4e3888 && _0x4e3888.apply(this, arguments);
                  _0x444d5a && _0x225465.isFunction(_0x444d5a.promise) ? _0x444d5a.promise().progress(_0x2d22b2.notify).done(_0x2d22b2.resolve).fail(_0x2d22b2.reject) : _0x2d22b2[_0x29f5a1[0x0] + 'With'](this, _0x4e3888 ? [_0x444d5a] : arguments);
                });
              }), _0x1ff7a1 = null;
            }).promise();
          },
          'then': function (_0x5c12e7, _0x4b7658, _0x4f9fd4) {
            function _0x5f0a20(_0x41ca07, _0x3ef253, _0x372936, _0x451465) {
              return function () {
                var _0x155e5c = this,
                  _0x20ab12 = arguments,
                  _0x2a3954 = function () {
                    var _0x245da7, _0x5a33bd;
                    if (!(_0x41ca07 < _0x192b16)) {
                      if (_0x245da7 = _0x372936.apply(_0x155e5c, _0x20ab12), _0x245da7 === _0x3ef253.promise()) throw new TypeError("Thenable self-resolution");
                      _0x5a33bd = _0x245da7 && ('object' == typeof _0x245da7 || 'function' == typeof _0x245da7) && _0x245da7.then, _0x225465.isFunction(_0x5a33bd) ? _0x451465 ? _0x5a33bd.call(_0x245da7, _0x5f0a20(_0x192b16, _0x3ef253, _0x99e950, _0x451465), _0x5f0a20(_0x192b16, _0x3ef253, _0x5c1b06, _0x451465)) : (_0x192b16++, _0x5a33bd.call(_0x245da7, _0x5f0a20(_0x192b16, _0x3ef253, _0x99e950, _0x451465), _0x5f0a20(_0x192b16, _0x3ef253, _0x5c1b06, _0x451465), _0x5f0a20(_0x192b16, _0x3ef253, _0x99e950, _0x3ef253.notifyWith))) : (_0x372936 !== _0x99e950 && (_0x155e5c = void 0x0, _0x20ab12 = [_0x245da7]), (_0x451465 || _0x3ef253.resolveWith)(_0x155e5c, _0x20ab12));
                    }
                  },
                  _0x244651 = _0x451465 ? _0x2a3954 : function () {
                    try {
                      _0x2a3954();
                    } catch (_0x8b07b4) {
                      _0x225465.Deferred.exceptionHook && _0x225465.Deferred.exceptionHook(_0x8b07b4, _0x244651.stackTrace), _0x41ca07 + 0x1 >= _0x192b16 && (_0x372936 !== _0x5c1b06 && (_0x155e5c = void 0x0, _0x20ab12 = [_0x8b07b4]), _0x3ef253.rejectWith(_0x155e5c, _0x20ab12));
                    }
                  };
                _0x41ca07 ? _0x244651() : (_0x225465.Deferred.getStackHook && (_0x244651.stackTrace = _0x225465.Deferred.getStackHook()), _0x10efb2.setTimeout(_0x244651));
              };
            }
            var _0x192b16 = 0x0;
            return _0x225465.Deferred(function (_0x4d2446) {
              _0x578d19[0x0][0x3].add(_0x5f0a20(0x0, _0x4d2446, _0x225465.isFunction(_0x4f9fd4) ? _0x4f9fd4 : _0x99e950, _0x4d2446.notifyWith)), _0x578d19[0x1][0x3].add(_0x5f0a20(0x0, _0x4d2446, _0x225465.isFunction(_0x5c12e7) ? _0x5c12e7 : _0x99e950)), _0x578d19[0x2][0x3].add(_0x5f0a20(0x0, _0x4d2446, _0x225465.isFunction(_0x4b7658) ? _0x4b7658 : _0x5c1b06));
            }).promise();
          },
          'promise': function (_0x3326b9) {
            return null != _0x3326b9 ? _0x225465.extend(_0x3326b9, _0x5510bf) : _0x5510bf;
          }
        },
        _0x2e5ef0 = {};
      return _0x225465.each(_0x578d19, function (_0x4d8759, _0x3d3b48) {
        var _0x1d2a69 = _0x3d3b48[0x2],
          _0x56aaaa = _0x3d3b48[0x5];
        _0x5510bf[_0x3d3b48[0x1]] = _0x1d2a69.add, _0x56aaaa && _0x1d2a69.add(function () {
          _0x513b6e = _0x56aaaa;
        }, _0x578d19[0x3 - _0x4d8759][0x2].disable, _0x578d19[0x0][0x2].lock), _0x1d2a69.add(_0x3d3b48[0x3].fire), _0x2e5ef0[_0x3d3b48[0x0]] = function () {
          return _0x2e5ef0[_0x3d3b48[0x0] + 'With'](this === _0x2e5ef0 ? void 0x0 : this, arguments), this;
        }, _0x2e5ef0[_0x3d3b48[0x0] + 'With'] = _0x1d2a69.fireWith;
      }), _0x5510bf.promise(_0x2e5ef0), _0x4c5b56 && _0x4c5b56.call(_0x2e5ef0, _0x2e5ef0), _0x2e5ef0;
    },
    'when': function (_0x2920f0) {
      var _0x485526 = arguments.length,
        _0x4e6b39 = _0x485526,
        _0x25fb7b = Array(_0x4e6b39),
        _0x54d086 = _0x1703ed.call(arguments),
        _0x14fe17 = _0x225465.Deferred(),
        _0x32022c = function (_0x2bbb8a) {
          return function (_0x238185) {
            _0x25fb7b[_0x2bbb8a] = this, _0x54d086[_0x2bbb8a] = 0x1 < arguments.length ? _0x1703ed.call(arguments) : _0x238185, --_0x485526 || _0x14fe17.resolveWith(_0x25fb7b, _0x54d086);
          };
        };
      if (0x1 >= _0x485526 && (_0x4b6e3a(_0x2920f0, _0x14fe17.done(_0x32022c(_0x4e6b39)).resolve, _0x14fe17.reject, !_0x485526), 'pending' === _0x14fe17.state() || _0x225465.isFunction(_0x54d086[_0x4e6b39] && _0x54d086[_0x4e6b39].then))) return _0x14fe17.then();
      for (; _0x4e6b39--;) _0x4b6e3a(_0x54d086[_0x4e6b39], _0x32022c(_0x4e6b39), _0x14fe17.reject);
      return _0x14fe17.promise();
    }
  });
  var _0x5948df = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
  _0x225465.Deferred.exceptionHook = function (_0xeb25d5, _0x5561b2) {
    _0x10efb2.console && _0x10efb2.console.warn && _0xeb25d5 && _0x5948df.test(_0xeb25d5.name) && _0x10efb2.console.warn("jQuery.Deferred exception: " + _0xeb25d5.message, _0xeb25d5.stack, _0x5561b2);
  }, _0x225465.readyException = function (_0x5c0097) {
    _0x10efb2.setTimeout(function () {
      throw _0x5c0097;
    });
  };
  var _0x51a866 = _0x225465.Deferred();
  _0x225465.fn.ready = function (_0x3e8b90) {
    return _0x51a866.then(_0x3e8b90)['catch'](function (_0x525446) {
      _0x225465.readyException(_0x525446);
    }), this;
  }, _0x225465.extend({
    'isReady': !0x1,
    'readyWait': 0x1,
    'ready': function (_0x117076) {
      (!0x0 === _0x117076 ? --_0x225465.readyWait : _0x225465.isReady) || (_0x225465.isReady = !0x0, !0x0 !== _0x117076 && 0x0 < --_0x225465.readyWait || _0x51a866.resolveWith(_0x16e0bd, [_0x225465]));
    }
  }), _0x225465.ready.then = _0x51a866.then, 'complete' === _0x16e0bd.readyState || 'loading' !== _0x16e0bd.readyState && !_0x16e0bd.documentElement.doScroll ? _0x10efb2.setTimeout(_0x225465.ready) : (_0x16e0bd.addEventListener('DOMContentLoaded', _0xe4dad4), _0x10efb2.addEventListener('load', _0xe4dad4));
  var _0x26df6d = function (_0x1bb83f, _0x26f16b, _0x3877f7, _0x2eec56, _0x3dbff0, _0xdefc42, _0x17baad) {
      var _0x4104f9 = 0x0,
        _0x1ef87a = _0x1bb83f.length,
        _0xd514b = null == _0x3877f7;
      if ('object' === _0x225465.type(_0x3877f7)) {
        for (_0x4104f9 in _0x3dbff0 = !0x0, _0x3877f7) _0x26df6d(_0x1bb83f, _0x26f16b, _0x4104f9, _0x3877f7[_0x4104f9], !0x0, _0xdefc42, _0x17baad);
      } else {
        if (void 0x0 !== _0x2eec56 && (_0x3dbff0 = !0x0, _0x225465.isFunction(_0x2eec56) || (_0x17baad = !0x0), _0xd514b && (_0x17baad ? (_0x26f16b.call(_0x1bb83f, _0x2eec56), _0x26f16b = null) : (_0xd514b = _0x26f16b, _0x26f16b = function (_0x411390, _0x56ee05, _0xa9739b) {
          return _0xd514b.call(_0x225465(_0x411390), _0xa9739b);
        })), _0x26f16b)) {
          for (; _0x4104f9 < _0x1ef87a; _0x4104f9++) _0x26f16b(_0x1bb83f[_0x4104f9], _0x3877f7, _0x17baad ? _0x2eec56 : _0x2eec56.call(_0x1bb83f[_0x4104f9], _0x4104f9, _0x26f16b(_0x1bb83f[_0x4104f9], _0x3877f7)));
        }
      }
      return _0x3dbff0 ? _0x1bb83f : _0xd514b ? _0x26f16b.call(_0x1bb83f) : _0x1ef87a ? _0x26f16b(_0x1bb83f[0x0], _0x3877f7) : _0xdefc42;
    },
    _0x10f24b = function (_0x212ed5) {
      return 0x1 === _0x212ed5.nodeType || 0x9 === _0x212ed5.nodeType || !+_0x212ed5.nodeType;
    };
  _0x3a2543.uid = 0x1, _0x3a2543.prototype = {
    'cache': function (_0x485b1c) {
      var _0x2d51e2 = _0x485b1c[this.expando];
      return _0x2d51e2 || (_0x2d51e2 = {}, _0x10f24b(_0x485b1c) && (_0x485b1c.nodeType ? _0x485b1c[this.expando] = _0x2d51e2 : Object.defineProperty(_0x485b1c, this.expando, {
        'value': _0x2d51e2,
        'configurable': !0x0
      }))), _0x2d51e2;
    },
    'set': function (_0x219c7f, _0x41ae9a, _0x4cbe59) {
      var _0x433d2e;
      _0x219c7f = this.cache(_0x219c7f);
      if ('string' == typeof _0x41ae9a) _0x219c7f[_0x225465.camelCase(_0x41ae9a)] = _0x4cbe59;else {
        for (_0x433d2e in _0x41ae9a) _0x219c7f[_0x225465.camelCase(_0x433d2e)] = _0x41ae9a[_0x433d2e];
      }
      return _0x219c7f;
    },
    'get': function (_0xccb7ee, _0x4c472d) {
      return void 0x0 === _0x4c472d ? this.cache(_0xccb7ee) : _0xccb7ee[this.expando] && _0xccb7ee[this.expando][_0x225465.camelCase(_0x4c472d)];
    },
    'access': function (_0x2aadad, _0x9164, _0x1e1549) {
      return void 0x0 === _0x9164 || _0x9164 && 'string' == typeof _0x9164 && void 0x0 === _0x1e1549 ? this.get(_0x2aadad, _0x9164) : (this.set(_0x2aadad, _0x9164, _0x1e1549), void 0x0 !== _0x1e1549 ? _0x1e1549 : _0x9164);
    },
    'remove': function (_0x5d4aff, _0x4539b1) {
      var _0x18c6b3,
        _0x53d542 = _0x5d4aff[this.expando];
      if (void 0x0 !== _0x53d542) {
        if (void 0x0 !== _0x4539b1) {
          Array.isArray(_0x4539b1) ? _0x4539b1 = _0x4539b1.map(_0x225465.camelCase) : (_0x4539b1 = _0x225465.camelCase(_0x4539b1), _0x4539b1 = _0x4539b1 in _0x53d542 ? [_0x4539b1] : _0x4539b1.match(_0x10c9e2) || []);
          for (_0x18c6b3 = _0x4539b1.length; _0x18c6b3--;) delete _0x53d542[_0x4539b1[_0x18c6b3]];
        }
        (void 0x0 === _0x4539b1 || _0x225465.isEmptyObject(_0x53d542)) && (_0x5d4aff.nodeType ? _0x5d4aff[this.expando] = void 0x0 : delete _0x5d4aff[this.expando]);
      }
    },
    'hasData': function (_0x19c279) {
      return _0x19c279 = _0x19c279[this.expando], void 0x0 !== _0x19c279 && !_0x225465.isEmptyObject(_0x19c279);
    }
  };
  var _0x179236 = new _0x3a2543(),
    _0x46f162 = new _0x3a2543(),
    _0x2c13a2 = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
    _0x53ddb3 = /[A-Z]/g;
  _0x225465.extend({
    'hasData': function (_0x4faab3) {
      return _0x46f162.hasData(_0x4faab3) || _0x179236.hasData(_0x4faab3);
    },
    'data': function (_0x515de7, _0x4023af, _0x2dac2e) {
      return _0x46f162.access(_0x515de7, _0x4023af, _0x2dac2e);
    },
    'removeData': function (_0x465479, _0x30c49c) {
      _0x46f162.remove(_0x465479, _0x30c49c);
    },
    '_data': function (_0x4e622a, _0x41684a, _0x15fc93) {
      return _0x179236.access(_0x4e622a, _0x41684a, _0x15fc93);
    },
    '_removeData': function (_0x5325b7, _0xb7dfd0) {
      _0x179236.remove(_0x5325b7, _0xb7dfd0);
    }
  }), _0x225465.fn.extend({
    'data': function (_0x56ac9e, _0x2ef220) {
      var _0x389ab0,
        _0x56fc90,
        _0x364a99,
        _0x59768e = this[0x0],
        _0x5b8604 = _0x59768e && _0x59768e.attributes;
      if (void 0x0 === _0x56ac9e) {
        if (this.length && (_0x364a99 = _0x46f162.get(_0x59768e), 0x1 === _0x59768e.nodeType && !_0x179236.get(_0x59768e, 'hasDataAttrs'))) {
          for (_0x389ab0 = _0x5b8604.length; _0x389ab0--;) _0x5b8604[_0x389ab0] && (_0x56fc90 = _0x5b8604[_0x389ab0].name, 0x0 === _0x56fc90.indexOf('data-') && (_0x56fc90 = _0x225465.camelCase(_0x56fc90.slice(0x5)), _0x46c5ba(_0x59768e, _0x56fc90, _0x364a99[_0x56fc90])));
          _0x179236.set(_0x59768e, 'hasDataAttrs', !0x0);
        }
        return _0x364a99;
      }
      return 'object' == typeof _0x56ac9e ? this.each(function () {
        _0x46f162.set(this, _0x56ac9e);
      }) : _0x26df6d(this, function (_0x2bf4c5) {
        var _0x18a5b7;
        if (_0x59768e && void 0x0 === _0x2bf4c5) {
          if ((_0x18a5b7 = _0x46f162.get(_0x59768e, _0x56ac9e), void 0x0 !== _0x18a5b7) || (_0x18a5b7 = _0x46c5ba(_0x59768e, _0x56ac9e), void 0x0 !== _0x18a5b7)) return _0x18a5b7;
        } else this.each(function () {
          _0x46f162.set(this, _0x56ac9e, _0x2bf4c5);
        });
      }, null, _0x2ef220, 0x1 < arguments.length, null, !0x0);
    },
    'removeData': function (_0x288f58) {
      return this.each(function () {
        _0x46f162.remove(this, _0x288f58);
      });
    }
  }), _0x225465.extend({
    'queue': function (_0x3c3651, _0x301d33, _0xe4e76d) {
      var _0x5c477c;
      if (_0x3c3651) return _0x301d33 = (_0x301d33 || 'fx') + 'queue', _0x5c477c = _0x179236.get(_0x3c3651, _0x301d33), _0xe4e76d && (!_0x5c477c || Array.isArray(_0xe4e76d) ? _0x5c477c = _0x179236.access(_0x3c3651, _0x301d33, _0x225465.makeArray(_0xe4e76d)) : _0x5c477c.push(_0xe4e76d)), _0x5c477c || [];
    },
    'dequeue': function (_0x1a03ad, _0x1014fb) {
      _0x1014fb = _0x1014fb || 'fx';
      var _0x586c80 = _0x225465.queue(_0x1a03ad, _0x1014fb),
        _0x244b09 = _0x586c80.length,
        _0x304f2a = _0x586c80.shift(),
        _0x647d9a = _0x225465._queueHooks(_0x1a03ad, _0x1014fb),
        _0x1b37ab = function () {
          _0x225465.dequeue(_0x1a03ad, _0x1014fb);
        };
      'inprogress' === _0x304f2a && (_0x304f2a = _0x586c80.shift(), _0x244b09--), _0x304f2a && ('fx' === _0x1014fb && _0x586c80.unshift('inprogress'), delete _0x647d9a.stop, _0x304f2a.call(_0x1a03ad, _0x1b37ab, _0x647d9a)), !_0x244b09 && _0x647d9a && _0x647d9a.empty.fire();
    },
    '_queueHooks': function (_0x3c5be2, _0x19dec8) {
      var _0x2e0534 = _0x19dec8 + 'queueHooks';
      return _0x179236.get(_0x3c5be2, _0x2e0534) || _0x179236.access(_0x3c5be2, _0x2e0534, {
        'empty': _0x225465.Callbacks("once memory").add(function () {
          _0x179236.remove(_0x3c5be2, [_0x19dec8 + 'queue', _0x2e0534]);
        })
      });
    }
  }), _0x225465.fn.extend({
    'queue': function (_0x26dee3, _0x2482bc) {
      var _0x5342d9 = 0x2;
      return 'string' != typeof _0x26dee3 && (_0x2482bc = _0x26dee3, _0x26dee3 = 'fx', _0x5342d9--), arguments.length < _0x5342d9 ? _0x225465.queue(this[0x0], _0x26dee3) : void 0x0 === _0x2482bc ? this : this.each(function () {
        var _0x4a219e = _0x225465.queue(this, _0x26dee3, _0x2482bc);
        _0x225465._queueHooks(this, _0x26dee3), 'fx' === _0x26dee3 && 'inprogress' !== _0x4a219e[0x0] && _0x225465.dequeue(this, _0x26dee3);
      });
    },
    'dequeue': function (_0x175c41) {
      return this.each(function () {
        _0x225465.dequeue(this, _0x175c41);
      });
    },
    'clearQueue': function (_0x152a56) {
      return this.queue(_0x152a56 || 'fx', []);
    },
    'promise': function (_0xc2e9a8, _0x53e180) {
      var _0x488e39,
        _0x464a2b = 0x1,
        _0xdb476f = _0x225465.Deferred(),
        _0x101039 = this,
        _0x4935df = this.length,
        _0x38ff70 = function () {
          --_0x464a2b || _0xdb476f.resolveWith(_0x101039, [_0x101039]);
        };
      'string' != typeof _0xc2e9a8 && (_0x53e180 = _0xc2e9a8, _0xc2e9a8 = void 0x0);
      for (_0xc2e9a8 = _0xc2e9a8 || 'fx'; _0x4935df--;) (_0x488e39 = _0x179236.get(_0x101039[_0x4935df], _0xc2e9a8 + 'queueHooks')) && _0x488e39.empty && (_0x464a2b++, _0x488e39.empty.add(_0x38ff70));
      return _0x38ff70(), _0xdb476f.promise(_0x53e180);
    }
  });
  var _0x199664 = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
    _0x4d779d = RegExp('^(?:([+-])=|)(' + _0x199664 + ')([a-z%]*)$', 'i'),
    _0x1648cd = ['Top', 'Right', 'Bottom', 'Left'],
    _0x4aed72 = function (_0x65c17f, _0xaf863) {
      return _0x65c17f = _0xaf863 || _0x65c17f, 'none' === _0x65c17f.style.display || '' === _0x65c17f.style.display && _0x225465.contains(_0x65c17f.ownerDocument, _0x65c17f) && 'none' === _0x225465.css(_0x65c17f, 'display');
    },
    _0x19b0f6 = function (_0x1e2958, _0x1bfee8, _0x1220fd, _0x4170e7) {
      var _0x4b7644,
        _0x126292 = {};
      for (_0x4b7644 in _0x1bfee8) _0x126292[_0x4b7644] = _0x1e2958.style[_0x4b7644], _0x1e2958.style[_0x4b7644] = _0x1bfee8[_0x4b7644];
      _0x1220fd = _0x1220fd.apply(_0x1e2958, _0x4170e7 || []);
      for (_0x4b7644 in _0x1bfee8) _0x1e2958.style[_0x4b7644] = _0x126292[_0x4b7644];
      return _0x1220fd;
    },
    _0x41298d = {};
  _0x225465.fn.extend({
    'show': function () {
      return _0x444a18(this, !0x0);
    },
    'hide': function () {
      return _0x444a18(this);
    },
    'toggle': function (_0x1ee08a) {
      return 'boolean' == typeof _0x1ee08a ? _0x1ee08a ? this.show() : this.hide() : this.each(function () {
        _0x4aed72(this) ? _0x225465(this).show() : _0x225465(this).hide();
      });
    }
  });
  var _0x5de2dd = /^(?:checkbox|radio)$/i,
    _0xb336ff = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
    _0x5dfc8d = /^$|\/(?:java|ecma)script/i,
    _0x1ac6a9 = {
      'option': [0x1, "<select multiple='multiple'>", '</select>'],
      'thead': [0x1, '<table>', '</table>'],
      'col': [0x2, '<table><colgroup>', '</colgroup></table>'],
      'tr': [0x2, '<table><tbody>', '</tbody></table>'],
      'td': [0x3, '<table><tbody><tr>', '</tr></tbody></table>'],
      '_default': [0x0, '', '']
    };
  _0x1ac6a9.optgroup = _0x1ac6a9.option, _0x1ac6a9.tbody = _0x1ac6a9.tfoot = _0x1ac6a9.colgroup = _0x1ac6a9.caption = _0x1ac6a9.thead, _0x1ac6a9.th = _0x1ac6a9.td;
  var _0x3b607f = /<|&#?\w+;/,
    _0x33ff3a = _0x16e0bd.createDocumentFragment().appendChild(_0x16e0bd.createElement('div')),
    _0x284491 = _0x16e0bd.createElement('input');
  _0x284491.setAttribute('type', 'radio'), _0x284491.setAttribute('checked', 'checked'), _0x284491.setAttribute('name', 't'), _0x33ff3a.appendChild(_0x284491), _0x509db7.checkClone = _0x33ff3a.cloneNode(!0x0).cloneNode(!0x0).lastChild.checked, _0x33ff3a.innerHTML = '<textarea>x</textarea>', _0x509db7.noCloneChecked = !!_0x33ff3a.cloneNode(!0x0).lastChild.defaultValue, !0x0;
  var _0x4bcb70 = _0x16e0bd.documentElement,
    _0x1772e8 = /^key/,
    _0x169678 = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
    _0x4535d4 = /^([^.]*)(?:\.(.+)|)/;
  _0x225465.event = {
    'global': {},
    'add': function (_0x3ad958, _0x167e08, _0x55c2e5, _0x222bc4, _0x2271aa) {
      var _0x48ad12, _0x190e69, _0x391cdc, _0xc63c25, _0x19e775, _0x5e0fb0, _0x1a9df0, _0x4c0246, _0x46738, _0x3403f;
      if (_0x19e775 = _0x179236.get(_0x3ad958)) {
        _0x55c2e5.handler && (_0x48ad12 = _0x55c2e5, _0x55c2e5 = _0x48ad12.handler, _0x2271aa = _0x48ad12.selector), _0x2271aa && _0x225465.find.matchesSelector(_0x4bcb70, _0x2271aa), _0x55c2e5.guid || (_0x55c2e5.guid = _0x225465.guid++), (_0xc63c25 = _0x19e775.events) || (_0xc63c25 = _0x19e775.events = {}), (_0x190e69 = _0x19e775.handle) || (_0x190e69 = _0x19e775.handle = function (_0x190c59) {
          return 'undefined' != typeof _0x225465 && _0x225465.event.triggered !== _0x190c59.type ? _0x225465.event.dispatch.apply(_0x3ad958, arguments) : void 0x0;
        }), _0x167e08 = (_0x167e08 || '').match(_0x10c9e2) || [''];
        for (_0x19e775 = _0x167e08.length; _0x19e775--;) _0x391cdc = _0x4535d4.exec(_0x167e08[_0x19e775]) || [], _0x46738 = _0x3403f = _0x391cdc[0x1], _0x391cdc = (_0x391cdc[0x2] || '').split('.').sort(), _0x46738 && (_0x1a9df0 = _0x225465.event.special[_0x46738] || {}, _0x46738 = (_0x2271aa ? _0x1a9df0.delegateType : _0x1a9df0.bindType) || _0x46738, _0x1a9df0 = _0x225465.event.special[_0x46738] || {}, _0x5e0fb0 = _0x225465.extend({
          'type': _0x46738,
          'origType': _0x3403f,
          'data': _0x222bc4,
          'handler': _0x55c2e5,
          'guid': _0x55c2e5.guid,
          'selector': _0x2271aa,
          'needsContext': _0x2271aa && _0x225465.expr.match.needsContext.test(_0x2271aa),
          'namespace': _0x391cdc.join('.')
        }, _0x48ad12), (_0x4c0246 = _0xc63c25[_0x46738]) || (_0x4c0246 = _0xc63c25[_0x46738] = [], _0x4c0246.delegateCount = 0x0, _0x1a9df0.setup && !0x1 !== _0x1a9df0.setup.call(_0x3ad958, _0x222bc4, _0x391cdc, _0x190e69) || _0x3ad958.addEventListener && _0x3ad958.addEventListener(_0x46738, _0x190e69)), _0x1a9df0.add && (_0x1a9df0.add.call(_0x3ad958, _0x5e0fb0), _0x5e0fb0.handler.guid || (_0x5e0fb0.handler.guid = _0x55c2e5.guid)), _0x2271aa ? _0x4c0246.splice(_0x4c0246.delegateCount++, 0x0, _0x5e0fb0) : _0x4c0246.push(_0x5e0fb0), _0x225465.event.global[_0x46738] = !0x0);
      }
    },
    'remove': function (_0x9aa647, _0x43dafc, _0x6524b1, _0x59a236, _0xeb8ba8) {
      var _0x5edb15,
        _0x3c1314,
        _0x236863,
        _0x14c6b8,
        _0x2f2d49,
        _0x51fd82,
        _0xf8d05f,
        _0x382bbd,
        _0x5576ea,
        _0x47fbb2,
        _0x1f893d,
        _0x287944 = _0x179236.hasData(_0x9aa647) && _0x179236.get(_0x9aa647);
      if (_0x287944 && (_0x14c6b8 = _0x287944.events)) {
        _0x43dafc = (_0x43dafc || '').match(_0x10c9e2) || [''];
        for (_0x2f2d49 = _0x43dafc.length; _0x2f2d49--;) if (_0x236863 = _0x4535d4.exec(_0x43dafc[_0x2f2d49]) || [], _0x5576ea = _0x1f893d = _0x236863[0x1], _0x47fbb2 = (_0x236863[0x2] || '').split('.').sort(), _0x5576ea) {
          _0xf8d05f = _0x225465.event.special[_0x5576ea] || {}, _0x5576ea = (_0x59a236 ? _0xf8d05f.delegateType : _0xf8d05f.bindType) || _0x5576ea, _0x382bbd = _0x14c6b8[_0x5576ea] || [], _0x236863 = _0x236863[0x2] && RegExp("(^|\\.)" + _0x47fbb2.join("\\.(?:.*\\.|)") + "(\\.|$)");
          for (_0x3c1314 = _0x5edb15 = _0x382bbd.length; _0x5edb15--;) _0x51fd82 = _0x382bbd[_0x5edb15], !_0xeb8ba8 && _0x1f893d !== _0x51fd82.origType || _0x6524b1 && _0x6524b1.guid !== _0x51fd82.guid || _0x236863 && !_0x236863.test(_0x51fd82.namespace) || _0x59a236 && _0x59a236 !== _0x51fd82.selector && ('**' !== _0x59a236 || !_0x51fd82.selector) || (_0x382bbd.splice(_0x5edb15, 0x1), _0x51fd82.selector && _0x382bbd.delegateCount--, _0xf8d05f.remove && _0xf8d05f.remove.call(_0x9aa647, _0x51fd82));
          _0x3c1314 && !_0x382bbd.length && (_0xf8d05f.teardown && !0x1 !== _0xf8d05f.teardown.call(_0x9aa647, _0x47fbb2, _0x287944.handle) || _0x225465.removeEvent(_0x9aa647, _0x5576ea, _0x287944.handle), delete _0x14c6b8[_0x5576ea]);
        } else {
          for (_0x5576ea in _0x14c6b8) _0x225465.event.remove(_0x9aa647, _0x5576ea + _0x43dafc[_0x2f2d49], _0x6524b1, _0x59a236, !0x0);
        }
        _0x225465.isEmptyObject(_0x14c6b8) && _0x179236.remove(_0x9aa647, "handle events");
      }
    },
    'dispatch': function (_0x584cce) {
      var _0x262b7b = _0x225465.event.fix(_0x584cce),
        _0x377c31,
        _0x395dba,
        _0x4b8740,
        _0x2f3bc0,
        _0x189083,
        _0x396bc3,
        _0x25da79 = Array(arguments.length);
      _0x395dba = (_0x179236.get(this, 'events') || {})[_0x262b7b.type] || [];
      var _0x590077 = _0x225465.event.special[_0x262b7b.type] || {};
      _0x25da79[0x0] = _0x262b7b;
      for (_0x377c31 = 0x1; _0x377c31 < arguments.length; _0x377c31++) _0x25da79[_0x377c31] = arguments[_0x377c31];
      if (_0x262b7b.delegateTarget = this, !_0x590077.preDispatch || !0x1 !== _0x590077.preDispatch.call(this, _0x262b7b)) {
        _0x396bc3 = _0x225465.event.handlers.call(this, _0x262b7b, _0x395dba);
        for (_0x377c31 = 0x0; (_0x2f3bc0 = _0x396bc3[_0x377c31++]) && !_0x262b7b.isPropagationStopped();) {
          _0x262b7b.currentTarget = _0x2f3bc0.elem;
          for (_0x395dba = 0x0; (_0x189083 = _0x2f3bc0.handlers[_0x395dba++]) && !_0x262b7b.isImmediatePropagationStopped();) _0x262b7b.rnamespace && !_0x262b7b.rnamespace.test(_0x189083.namespace) || (_0x262b7b.handleObj = _0x189083, _0x262b7b.data = _0x189083.data, _0x4b8740 = ((_0x225465.event.special[_0x189083.origType] || {}).handle || _0x189083.handler).apply(_0x2f3bc0.elem, _0x25da79), void 0x0 !== _0x4b8740 && !0x1 === (_0x262b7b.result = _0x4b8740) && (_0x262b7b.preventDefault(), _0x262b7b.stopPropagation()));
        }
        return _0x590077.postDispatch && _0x590077.postDispatch.call(this, _0x262b7b), _0x262b7b.result;
      }
    },
    'handlers': function (_0x2bb624, _0x43b431) {
      var _0xdfd857,
        _0x4af43b,
        _0x5c4e00,
        _0x5433e7,
        _0x22ba9e,
        _0x46dc44 = [],
        _0x334498 = _0x43b431.delegateCount,
        _0xca5a91 = _0x2bb624.target;
      if (_0x334498 && _0xca5a91.nodeType && !('click' === _0x2bb624.type && 0x1 <= _0x2bb624.button)) {
        for (; _0xca5a91 !== this; _0xca5a91 = _0xca5a91.parentNode || this) if (0x1 === _0xca5a91.nodeType && ('click' !== _0x2bb624.type || !0x0 !== _0xca5a91.disabled)) {
          _0x5433e7 = [], _0x22ba9e = {};
          for (_0xdfd857 = 0x0; _0xdfd857 < _0x334498; _0xdfd857++) _0x4af43b = _0x43b431[_0xdfd857], _0x5c4e00 = _0x4af43b.selector + " ", void 0x0 === _0x22ba9e[_0x5c4e00] && (_0x22ba9e[_0x5c4e00] = _0x4af43b.needsContext ? -0x1 < _0x225465(_0x5c4e00, this).index(_0xca5a91) : _0x225465.find(_0x5c4e00, this, null, [_0xca5a91]).length), _0x22ba9e[_0x5c4e00] && _0x5433e7.push(_0x4af43b);
          _0x5433e7.length && _0x46dc44.push({
            'elem': _0xca5a91,
            'handlers': _0x5433e7
          });
        }
      }
      return _0xca5a91 = this, _0x334498 < _0x43b431.length && _0x46dc44.push({
        'elem': _0xca5a91,
        'handlers': _0x43b431.slice(_0x334498)
      }), _0x46dc44;
    },
    'addProp': function (_0x4aa40a, _0x2f1208) {
      Object.defineProperty(_0x225465.Event.prototype, _0x4aa40a, {
        'enumerable': !0x0,
        'configurable': !0x0,
        'get': _0x225465.isFunction(_0x2f1208) ? function () {
          if (this.originalEvent) return _0x2f1208(this.originalEvent);
        } : function () {
          if (this.originalEvent) return this.originalEvent[_0x4aa40a];
        },
        'set': function (_0x593cec) {
          Object.defineProperty(this, _0x4aa40a, {
            'enumerable': !0x0,
            'configurable': !0x0,
            'writable': !0x0,
            'value': _0x593cec
          });
        }
      });
    },
    'fix': function (_0x6ed414) {
      return _0x6ed414[_0x225465.expando] ? _0x6ed414 : new _0x225465.Event(_0x6ed414);
    },
    'special': {
      'load': {
        'noBubble': !0x0
      },
      'focus': {
        'trigger': function () {
          if (this !== _0x4e025b() && this.focus) return this.focus(), !0x1;
        },
        'delegateType': 'focusin'
      },
      'blur': {
        'trigger': function () {
          if (this === _0x4e025b() && this.blur) return this.blur(), !0x1;
        },
        'delegateType': 'focusout'
      },
      'click': {
        'trigger': function () {
          if ('checkbox' === this.type && this.click && _0x4e3d3f(this, 'input')) return this.click(), !0x1;
        },
        '_default': function (_0x46254a) {
          return _0x4e3d3f(_0x46254a.target, 'a');
        }
      },
      'beforeunload': {
        'postDispatch': function (_0x5be631) {
          void 0x0 !== _0x5be631.result && _0x5be631.originalEvent && (_0x5be631.originalEvent.returnValue = _0x5be631.result);
        }
      }
    }
  }, _0x225465.removeEvent = function (_0x1a8913, _0x1a270b, _0x42e091) {
    _0x1a8913.removeEventListener && _0x1a8913.removeEventListener(_0x1a270b, _0x42e091);
  }, _0x225465.Event = function (_0x63690, _0x29c145) {
    return this instanceof _0x225465.Event ? (_0x63690 && _0x63690.type ? (this.originalEvent = _0x63690, this.type = _0x63690.type, this.isDefaultPrevented = _0x63690.defaultPrevented || void 0x0 === _0x63690.defaultPrevented && !0x1 === _0x63690.returnValue ? _0x170ceb : _0x2f9c46, this.target = _0x63690.target && 0x3 === _0x63690.target.nodeType ? _0x63690.target.parentNode : _0x63690.target, this.currentTarget = _0x63690.currentTarget, this.relatedTarget = _0x63690.relatedTarget) : this.type = _0x63690, _0x29c145 && _0x225465.extend(this, _0x29c145), this.timeStamp = _0x63690 && _0x63690.timeStamp || _0x225465.now(), void (this[_0x225465.expando] = !0x0)) : new _0x225465.Event(_0x63690, _0x29c145);
  }, _0x225465.Event.prototype = {
    'constructor': _0x225465.Event,
    'isDefaultPrevented': _0x2f9c46,
    'isPropagationStopped': _0x2f9c46,
    'isImmediatePropagationStopped': _0x2f9c46,
    'isSimulated': !0x1,
    'preventDefault': function () {
      var _0x1d1fb5 = this.originalEvent;
      this.isDefaultPrevented = _0x170ceb, _0x1d1fb5 && !this.isSimulated && _0x1d1fb5.preventDefault();
    },
    'stopPropagation': function () {
      var _0x39b1be = this.originalEvent;
      this.isPropagationStopped = _0x170ceb, _0x39b1be && !this.isSimulated && _0x39b1be.stopPropagation();
    },
    'stopImmediatePropagation': function () {
      var _0x357b70 = this.originalEvent;
      this.isImmediatePropagationStopped = _0x170ceb, _0x357b70 && !this.isSimulated && _0x357b70.stopImmediatePropagation(), this.stopPropagation();
    }
  }, _0x225465.each({
    'altKey': !0x0,
    'bubbles': !0x0,
    'cancelable': !0x0,
    'changedTouches': !0x0,
    'ctrlKey': !0x0,
    'detail': !0x0,
    'eventPhase': !0x0,
    'metaKey': !0x0,
    'pageX': !0x0,
    'pageY': !0x0,
    'shiftKey': !0x0,
    'view': !0x0,
    'char': !0x0,
    'charCode': !0x0,
    'key': !0x0,
    'keyCode': !0x0,
    'button': !0x0,
    'buttons': !0x0,
    'clientX': !0x0,
    'clientY': !0x0,
    'offsetX': !0x0,
    'offsetY': !0x0,
    'pointerId': !0x0,
    'pointerType': !0x0,
    'screenX': !0x0,
    'screenY': !0x0,
    'targetTouches': !0x0,
    'toElement': !0x0,
    'touches': !0x0,
    'which': function (_0x169a3f) {
      var _0x58399e = _0x169a3f.button;
      return null == _0x169a3f.which && _0x1772e8.test(_0x169a3f.type) ? null != _0x169a3f.charCode ? _0x169a3f.charCode : _0x169a3f.keyCode : !_0x169a3f.which && void 0x0 !== _0x58399e && _0x169678.test(_0x169a3f.type) ? 0x1 & _0x58399e ? 0x1 : 0x2 & _0x58399e ? 0x3 : 0x4 & _0x58399e ? 0x2 : 0x0 : _0x169a3f.which;
    }
  }, _0x225465.event.addProp), _0x225465.each({
    'mouseenter': 'mouseover',
    'mouseleave': 'mouseout',
    'pointerenter': 'pointerover',
    'pointerleave': 'pointerout'
  }, function (_0x405152, _0x3a4c9d) {
    _0x225465.event.special[_0x405152] = {
      'delegateType': _0x3a4c9d,
      'bindType': _0x3a4c9d,
      'handle': function (_0x31b965) {
        var _0x806ce9,
          _0xcca9f7 = _0x31b965.relatedTarget,
          _0x526921 = _0x31b965.handleObj;
        return _0xcca9f7 && (_0xcca9f7 === this || _0x225465.contains(this, _0xcca9f7)) || (_0x31b965.type = _0x526921.origType, _0x806ce9 = _0x526921.handler.apply(this, arguments), _0x31b965.type = _0x3a4c9d), _0x806ce9;
      }
    };
  }), _0x225465.fn.extend({
    'on': function (_0x969060, _0x7393b, _0x6a62a8, _0x26889d) {
      return _0x244b17(this, _0x969060, _0x7393b, _0x6a62a8, _0x26889d);
    },
    'one': function (_0x15ad0f, _0x1da464, _0x433266, _0x213a90) {
      return _0x244b17(this, _0x15ad0f, _0x1da464, _0x433266, _0x213a90, 0x1);
    },
    'off': function (_0x4da81a, _0x53218a, _0x30691e) {
      var _0x51c4f2, _0x2999a0;
      if (_0x4da81a && _0x4da81a.preventDefault && _0x4da81a.handleObj) return _0x51c4f2 = _0x4da81a.handleObj, _0x225465(_0x4da81a.delegateTarget).off(_0x51c4f2.namespace ? _0x51c4f2.origType + '.' + _0x51c4f2.namespace : _0x51c4f2.origType, _0x51c4f2.selector, _0x51c4f2.handler), this;
      if ('object' == typeof _0x4da81a) {
        for (_0x2999a0 in _0x4da81a) this.off(_0x2999a0, _0x53218a, _0x4da81a[_0x2999a0]);
        return this;
      }
      return !0x1 !== _0x53218a && 'function' != typeof _0x53218a || (_0x30691e = _0x53218a, _0x53218a = void 0x0), !0x1 === _0x30691e && (_0x30691e = _0x2f9c46), this.each(function () {
        _0x225465.event.remove(this, _0x4da81a, _0x30691e, _0x53218a);
      });
    }
  });
  var _0x58d7bc = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
    _0x42602a = /<script|<style|<link/i,
    _0x35fa77 = /checked\s*(?:[^=]|=\s*.checked.)/i,
    _0x3775ae = /^true\/(.*)/,
    _0x1ce696 = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
  _0x225465.extend({
    'htmlPrefilter': function (_0x4ece03) {
      return _0x4ece03.replace(_0x58d7bc, '<$1></$2>');
    },
    'clone': function (_0x50d220, _0x140ab3, _0x50705c) {
      var _0x3bd4fe,
        _0x507e95,
        _0x48ec7b,
        _0x12816c,
        _0x1fb55a = _0x50d220.cloneNode(!0x0),
        _0x23dd3f = _0x225465.contains(_0x50d220.ownerDocument, _0x50d220);
      if (!_0x509db7.noCloneChecked && !(0x1 !== _0x50d220.nodeType && 0xb !== _0x50d220.nodeType || _0x225465.isXMLDoc(_0x50d220))) {
        _0x12816c = _0x4d7b78(_0x1fb55a), _0x48ec7b = _0x4d7b78(_0x50d220), _0x3bd4fe = 0x0;
        for (_0x507e95 = _0x48ec7b.length; _0x3bd4fe < _0x507e95; _0x3bd4fe++) {
          var _0x3de608 = _0x48ec7b[_0x3bd4fe],
            _0x89a34a = _0x12816c[_0x3bd4fe],
            _0x2e5078 = _0x89a34a.nodeName.toLowerCase();
          'input' === _0x2e5078 && _0x5de2dd.test(_0x3de608.type) ? _0x89a34a.checked = _0x3de608.checked : 'input' !== _0x2e5078 && 'textarea' !== _0x2e5078 || (_0x89a34a.defaultValue = _0x3de608.defaultValue);
        }
      }
      if (_0x140ab3) {
        if (_0x50705c) {
          _0x48ec7b = _0x48ec7b || _0x4d7b78(_0x50d220), _0x12816c = _0x12816c || _0x4d7b78(_0x1fb55a), _0x3bd4fe = 0x0;
          for (_0x507e95 = _0x48ec7b.length; _0x3bd4fe < _0x507e95; _0x3bd4fe++) _0x5084b6(_0x48ec7b[_0x3bd4fe], _0x12816c[_0x3bd4fe]);
        } else _0x5084b6(_0x50d220, _0x1fb55a);
      }
      return _0x12816c = _0x4d7b78(_0x1fb55a, 'script'), 0x0 < _0x12816c.length && _0x4ca42e(_0x12816c, !_0x23dd3f && _0x4d7b78(_0x50d220, 'script')), _0x1fb55a;
    },
    'cleanData': function (_0x4e71a3) {
      for (var _0x16e632, _0x5cb682, _0x5b174c, _0x587b33 = _0x225465.event.special, _0xaf07e3 = 0x0; void 0x0 !== (_0x5cb682 = _0x4e71a3[_0xaf07e3]); _0xaf07e3++) if (_0x10f24b(_0x5cb682)) {
        if (_0x16e632 = _0x5cb682[_0x179236.expando]) {
          if (_0x16e632.events) {
            for (_0x5b174c in _0x16e632.events) _0x587b33[_0x5b174c] ? _0x225465.event.remove(_0x5cb682, _0x5b174c) : _0x225465.removeEvent(_0x5cb682, _0x5b174c, _0x16e632.handle);
          }
          _0x5cb682[_0x179236.expando] = void 0x0;
        }
        _0x5cb682[_0x46f162.expando] && (_0x5cb682[_0x46f162.expando] = void 0x0);
      }
    }
  }), _0x225465.fn.extend({
    'detach': function (_0x3830e9) {
      return _0x4326d9(this, _0x3830e9, !0x0);
    },
    'remove': function (_0x232008) {
      return _0x4326d9(this, _0x232008);
    },
    'text': function (_0x4035b9) {
      return _0x26df6d(this, function (_0x5f15b2) {
        return void 0x0 === _0x5f15b2 ? _0x225465.text(this) : this.empty().each(function () {
          0x1 !== this.nodeType && 0xb !== this.nodeType && 0x9 !== this.nodeType || (this.textContent = _0x5f15b2);
        });
      }, null, _0x4035b9, arguments.length);
    },
    'append': function () {
      return _0xf36e5e(this, arguments, function (_0x4dd9fb) {
        (0x1 === this.nodeType || 0xb === this.nodeType || 0x9 === this.nodeType) && _0x1428a9(this, _0x4dd9fb).appendChild(_0x4dd9fb);
      });
    },
    'prepend': function () {
      return _0xf36e5e(this, arguments, function (_0x4ef529) {
        if (0x1 === this.nodeType || 0xb === this.nodeType || 0x9 === this.nodeType) {
          var _0x1ea0c6 = _0x1428a9(this, _0x4ef529);
          _0x1ea0c6.insertBefore(_0x4ef529, _0x1ea0c6.firstChild);
        }
      });
    },
    'before': function () {
      return _0xf36e5e(this, arguments, function (_0x5a42cf) {
        this.parentNode && this.parentNode.insertBefore(_0x5a42cf, this);
      });
    },
    'after': function () {
      return _0xf36e5e(this, arguments, function (_0x4e5c9f) {
        this.parentNode && this.parentNode.insertBefore(_0x4e5c9f, this.nextSibling);
      });
    },
    'empty': function () {
      for (var _0xa21457, _0x21966d = 0x0; null != (_0xa21457 = this[_0x21966d]); _0x21966d++) 0x1 === _0xa21457.nodeType && (_0x225465.cleanData(_0x4d7b78(_0xa21457, !0x1)), _0xa21457.textContent = '');
      return this;
    },
    'clone': function (_0x5aed25, _0x58ede9) {
      return _0x5aed25 = null != _0x5aed25 && _0x5aed25, _0x58ede9 = null == _0x58ede9 ? _0x5aed25 : _0x58ede9, this.map(function () {
        return _0x225465.clone(this, _0x5aed25, _0x58ede9);
      });
    },
    'html': function (_0x3fa288) {
      return _0x26df6d(this, function (_0x76b745) {
        var _0x5201e0 = this[0x0] || {},
          _0x59994b = 0x0,
          _0x35c0d5 = this.length;
        if (void 0x0 === _0x76b745 && 0x1 === _0x5201e0.nodeType) return _0x5201e0.innerHTML;
        if ('string' == typeof _0x76b745 && !_0x42602a.test(_0x76b745) && !_0x1ac6a9[(_0xb336ff.exec(_0x76b745) || ['', ''])[0x1].toLowerCase()]) {
          _0x76b745 = _0x225465.htmlPrefilter(_0x76b745);
          try {
            for (; _0x59994b < _0x35c0d5; _0x59994b++) _0x5201e0 = this[_0x59994b] || {}, 0x1 === _0x5201e0.nodeType && (_0x225465.cleanData(_0x4d7b78(_0x5201e0, !0x1)), _0x5201e0.innerHTML = _0x76b745);
            _0x5201e0 = 0x0;
          } catch (_0x56ebe9) {}
        }
        _0x5201e0 && this.empty().append(_0x76b745);
      }, null, _0x3fa288, arguments.length);
    },
    'replaceWith': function () {
      var _0x10637b = [];
      return _0xf36e5e(this, arguments, function (_0x43a4b6) {
        var _0x1e3468 = this.parentNode;
        0x0 > _0x225465.inArray(this, _0x10637b) && (_0x225465.cleanData(_0x4d7b78(this)), _0x1e3468 && _0x1e3468.replaceChild(_0x43a4b6, this));
      }, _0x10637b);
    }
  }), _0x225465.each({
    'appendTo': 'append',
    'prependTo': 'prepend',
    'insertBefore': 'before',
    'insertAfter': 'after',
    'replaceAll': 'replaceWith'
  }, function (_0x57e2ee, _0x291b72) {
    _0x225465.fn[_0x57e2ee] = function (_0x4d346b) {
      for (var _0x1553fe = [], _0x17109 = _0x225465(_0x4d346b), _0x35886a = _0x17109.length - 0x1, _0x3b94ba = 0x0; _0x3b94ba <= _0x35886a; _0x3b94ba++) _0x4d346b = _0x3b94ba === _0x35886a ? this : this.clone(!0x0), _0x225465(_0x17109[_0x3b94ba])[_0x291b72](_0x4d346b), _0x556557.apply(_0x1553fe, _0x4d346b.get());
      return this.pushStack(_0x1553fe);
    };
  });
  var _0x4252f7 = /^margin/,
    _0x132dc9 = RegExp('^(' + _0x199664 + ')(?!px)[a-z%]+$', 'i'),
    _0x1ab53d = function (_0xf6142d) {
      var _0x1bb11e = _0xf6142d.ownerDocument.defaultView;
      return _0x1bb11e && _0x1bb11e.opener || (_0x1bb11e = _0x10efb2), _0x1bb11e.getComputedStyle(_0xf6142d);
    },
    _0x471cdb = function () {
      if (_0x376391) {
        _0x376391.style.cssText = 'box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%', _0x376391.innerHTML = '', _0x4bcb70.appendChild(_0x1241ff);
        var _0x103ef3 = _0x10efb2.getComputedStyle(_0x376391);
        _0x720aab = '1%' !== _0x103ef3.top, _0x5bec1e = '2px' === _0x103ef3.marginLeft, _0x10bf25 = '4px' === _0x103ef3.width, _0x376391.style.marginRight = '50%', _0x43bc7d = '4px' === _0x103ef3.marginRight, _0x4bcb70.removeChild(_0x1241ff), _0x376391 = null;
      }
    },
    _0x720aab,
    _0x10bf25,
    _0x43bc7d,
    _0x5bec1e,
    _0x1241ff = _0x16e0bd.createElement('div'),
    _0x376391 = _0x16e0bd.createElement('div');
  _0x376391.style && (_0x376391.style.backgroundClip = 'content-box', _0x376391.cloneNode(!0x0).style.backgroundClip = '', _0x509db7.clearCloneStyle = 'content-box' === _0x376391.style.backgroundClip, _0x1241ff.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute', _0x1241ff.appendChild(_0x376391), _0x225465.extend(_0x509db7, {
    'pixelPosition': function () {
      return _0x471cdb(), _0x720aab;
    },
    'boxSizingReliable': function () {
      return _0x471cdb(), _0x10bf25;
    },
    'pixelMarginRight': function () {
      return _0x471cdb(), _0x43bc7d;
    },
    'reliableMarginLeft': function () {
      return _0x471cdb(), _0x5bec1e;
    }
  })), !0x0;
  var _0x1946a8 = /^(none|table(?!-c[ea]).+)/,
    _0x3e8d50 = /^--/,
    _0x19dbbe = {
      'position': 'absolute',
      'visibility': 'hidden',
      'display': 'block'
    },
    _0x45a5c3 = {
      'letterSpacing': '0',
      'fontWeight': '400'
    },
    _0x7a128b = ['Webkit', 'Moz', 'ms'],
    _0x79f5c3 = _0x16e0bd.createElement('div').style;
  _0x225465.extend({
    'cssHooks': {
      'opacity': {
        'get': function (_0x3e3b83, _0x3e5e93) {
          if (_0x3e5e93) {
            var _0xc51cc3 = _0x34fa99(_0x3e3b83, 'opacity');
            return '' === _0xc51cc3 ? '1' : _0xc51cc3;
          }
        }
      }
    },
    'cssNumber': {
      'animationIterationCount': !0x0,
      'columnCount': !0x0,
      'fillOpacity': !0x0,
      'flexGrow': !0x0,
      'flexShrink': !0x0,
      'fontWeight': !0x0,
      'lineHeight': !0x0,
      'opacity': !0x0,
      'order': !0x0,
      'orphans': !0x0,
      'widows': !0x0,
      'zIndex': !0x0,
      'zoom': !0x0
    },
    'cssProps': {
      'float': 'cssFloat'
    },
    'style': function (_0x66f002, _0x13762f, _0x30afed, _0xa9c6e) {
      if (_0x66f002 && 0x3 !== _0x66f002.nodeType && 0x8 !== _0x66f002.nodeType && _0x66f002.style) {
        var _0x4f7de5,
          _0x36af7a,
          _0x3657d9,
          _0x35d7b3 = _0x225465.camelCase(_0x13762f),
          _0x10becf = _0x3e8d50.test(_0x13762f),
          _0x30372f = _0x66f002.style;
        return _0x10becf || (_0x13762f = _0x479244(_0x35d7b3)), _0x3657d9 = _0x225465.cssHooks[_0x13762f] || _0x225465.cssHooks[_0x35d7b3], void 0x0 === _0x30afed ? _0x3657d9 && 'get' in _0x3657d9 && void 0x0 !== (_0x4f7de5 = _0x3657d9.get(_0x66f002, !0x1, _0xa9c6e)) ? _0x4f7de5 : _0x30372f[_0x13762f] : (_0x36af7a = typeof _0x30afed, 'string' === _0x36af7a && (_0x4f7de5 = _0x4d779d.exec(_0x30afed)) && _0x4f7de5[0x1] && (_0x30afed = _0x6362a2(_0x66f002, _0x13762f, _0x4f7de5), _0x36af7a = 'number'), null != _0x30afed && _0x30afed === _0x30afed && ('number' === _0x36af7a && (_0x30afed += _0x4f7de5 && _0x4f7de5[0x3] || (_0x225465.cssNumber[_0x35d7b3] ? '' : 'px')), _0x509db7.clearCloneStyle || '' !== _0x30afed || 0x0 !== _0x13762f.indexOf('background') || (_0x30372f[_0x13762f] = 'inherit'), _0x3657d9 && 'set' in _0x3657d9 && void 0x0 === (_0x30afed = _0x3657d9.set(_0x66f002, _0x30afed, _0xa9c6e)) || (_0x10becf ? _0x30372f.setProperty(_0x13762f, _0x30afed) : _0x30372f[_0x13762f] = _0x30afed)), void 0x0);
      }
    },
    'css': function (_0x543794, _0x31b4e2, _0x1512c2, _0x254021) {
      var _0xc3ad9d,
        _0x236b6e,
        _0x1efe7a,
        _0x460fc4 = _0x225465.camelCase(_0x31b4e2);
      return _0x3e8d50.test(_0x31b4e2) || (_0x31b4e2 = _0x479244(_0x460fc4)), _0x1efe7a = _0x225465.cssHooks[_0x31b4e2] || _0x225465.cssHooks[_0x460fc4], _0x1efe7a && 'get' in _0x1efe7a && (_0xc3ad9d = _0x1efe7a.get(_0x543794, !0x0, _0x1512c2)), void 0x0 === _0xc3ad9d && (_0xc3ad9d = _0x34fa99(_0x543794, _0x31b4e2, _0x254021)), 'normal' === _0xc3ad9d && _0x31b4e2 in _0x45a5c3 && (_0xc3ad9d = _0x45a5c3[_0x31b4e2]), '' === _0x1512c2 || _0x1512c2 ? (_0x236b6e = parseFloat(_0xc3ad9d), !0x0 === _0x1512c2 || isFinite(_0x236b6e) ? _0x236b6e || 0x0 : _0xc3ad9d) : _0xc3ad9d;
    }
  }), _0x225465.each(['height', 'width'], function (_0x20d189, _0x3cf7f1) {
    _0x225465.cssHooks[_0x3cf7f1] = {
      'get': function (_0x3e2401, _0x2b3129, _0xc580c9) {
        if (_0x2b3129) return !_0x1946a8.test(_0x225465.css(_0x3e2401, 'display')) || _0x3e2401.getClientRects().length && _0x3e2401.getBoundingClientRect().width ? _0x5d7446(_0x3e2401, _0x3cf7f1, _0xc580c9) : _0x19b0f6(_0x3e2401, _0x19dbbe, function () {
          return _0x5d7446(_0x3e2401, _0x3cf7f1, _0xc580c9);
        });
      },
      'set': function (_0x9d09a5, _0x37c645, _0x29bfe2) {
        var _0x4f1a7e,
          _0x3a7d67 = _0x29bfe2 && _0x1ab53d(_0x9d09a5);
        return _0x29bfe2 = _0x29bfe2 && _0x113c3f(_0x9d09a5, _0x3cf7f1, _0x29bfe2, 'border-box' === _0x225465.css(_0x9d09a5, 'boxSizing', !0x1, _0x3a7d67), _0x3a7d67), _0x29bfe2 && (_0x4f1a7e = _0x4d779d.exec(_0x37c645)) && 'px' !== (_0x4f1a7e[0x3] || 'px') && (_0x9d09a5.style[_0x3cf7f1] = _0x37c645, _0x37c645 = _0x225465.css(_0x9d09a5, _0x3cf7f1)), _0x58be27(_0x9d09a5, _0x37c645, _0x29bfe2);
      }
    };
  }), _0x225465.cssHooks.marginLeft = _0x433761(_0x509db7.reliableMarginLeft, function (_0x376c38, _0x327828) {
    if (_0x327828) return (parseFloat(_0x34fa99(_0x376c38, 'marginLeft')) || _0x376c38.getBoundingClientRect().left - _0x19b0f6(_0x376c38, {
      'marginLeft': 0x0
    }, function () {
      return _0x376c38.getBoundingClientRect().left;
    })) + 'px';
  }), _0x225465.each({
    'margin': '',
    'padding': '',
    'border': 'Width'
  }, function (_0x28e7c6, _0x148fa7) {
    _0x225465.cssHooks[_0x28e7c6 + _0x148fa7] = {
      'expand': function (_0x170e79) {
        var _0x4ac327 = 0x0,
          _0x180172 = {};
        for (_0x170e79 = 'string' == typeof _0x170e79 ? _0x170e79.split(" ") : [_0x170e79]; 0x4 > _0x4ac327; _0x4ac327++) _0x180172[_0x28e7c6 + _0x1648cd[_0x4ac327] + _0x148fa7] = _0x170e79[_0x4ac327] || _0x170e79[_0x4ac327 - 0x2] || _0x170e79[0x0];
        return _0x180172;
      }
    }, _0x4252f7.test(_0x28e7c6) || (_0x225465.cssHooks[_0x28e7c6 + _0x148fa7].set = _0x58be27);
  }), _0x225465.fn.extend({
    'css': function (_0x26605b, _0x5e37ed) {
      return _0x26df6d(this, function (_0x2b208c, _0x1af9cc, _0x567d52) {
        var _0x4b1457,
          _0x66a4bc = {},
          _0x104979 = 0x0;
        if (Array.isArray(_0x1af9cc)) {
          _0x567d52 = _0x1ab53d(_0x2b208c);
          for (_0x4b1457 = _0x1af9cc.length; _0x104979 < _0x4b1457; _0x104979++) _0x66a4bc[_0x1af9cc[_0x104979]] = _0x225465.css(_0x2b208c, _0x1af9cc[_0x104979], !0x1, _0x567d52);
          return _0x66a4bc;
        }
        return void 0x0 !== _0x567d52 ? _0x225465.style(_0x2b208c, _0x1af9cc, _0x567d52) : _0x225465.css(_0x2b208c, _0x1af9cc);
      }, _0x26605b, _0x5e37ed, 0x1 < arguments.length);
    }
  }), _0x225465.Tween = _0x18d739, _0x18d739.prototype = {
    'constructor': _0x18d739,
    'init': function (_0x549815, _0x357b1d, _0x4f46fa, _0x947a82, _0x42beda, _0x4bb0fa) {
      this.elem = _0x549815, this.prop = _0x4f46fa, this.easing = _0x42beda || _0x225465.easing._default, this.options = _0x357b1d, this.start = this.now = this.cur(), this.end = _0x947a82, this.unit = _0x4bb0fa || (_0x225465.cssNumber[_0x4f46fa] ? '' : 'px');
    },
    'cur': function () {
      var _0x2c694f = _0x18d739.propHooks[this.prop];
      return _0x2c694f && _0x2c694f.get ? _0x2c694f.get(this) : _0x18d739.propHooks._default.get(this);
    },
    'run': function (_0x44086f) {
      var _0x528c77,
        _0x5b80bf = _0x18d739.propHooks[this.prop];
      return this.options.duration ? this.pos = _0x528c77 = _0x225465.easing[this.easing](_0x44086f, this.options.duration * _0x44086f, 0x0, 0x1, this.options.duration) : this.pos = _0x528c77 = _0x44086f, this.now = (this.end - this.start) * _0x528c77 + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), _0x5b80bf && _0x5b80bf.set ? _0x5b80bf.set(this) : _0x18d739.propHooks._default.set(this), this;
    }
  }, _0x18d739.prototype.init.prototype = _0x18d739.prototype, _0x18d739.propHooks = {
    '_default': {
      'get': function (_0xff3a44) {
        var _0x484c0a;
        return 0x1 !== _0xff3a44.elem.nodeType || null != _0xff3a44.elem[_0xff3a44.prop] && null == _0xff3a44.elem.style[_0xff3a44.prop] ? _0xff3a44.elem[_0xff3a44.prop] : (_0x484c0a = _0x225465.css(_0xff3a44.elem, _0xff3a44.prop, ''), _0x484c0a && 'auto' !== _0x484c0a ? _0x484c0a : 0x0);
      },
      'set': function (_0x55feab) {
        _0x225465.fx.step[_0x55feab.prop] ? _0x225465.fx.step[_0x55feab.prop](_0x55feab) : 0x1 !== _0x55feab.elem.nodeType || null == _0x55feab.elem.style[_0x225465.cssProps[_0x55feab.prop]] && !_0x225465.cssHooks[_0x55feab.prop] ? _0x55feab.elem[_0x55feab.prop] = _0x55feab.now : _0x225465.style(_0x55feab.elem, _0x55feab.prop, _0x55feab.now + _0x55feab.unit);
      }
    }
  }, _0x18d739.propHooks.scrollTop = _0x18d739.propHooks.scrollLeft = {
    'set': function (_0x282dad) {
      _0x282dad.elem.nodeType && _0x282dad.elem.parentNode && (_0x282dad.elem[_0x282dad.prop] = _0x282dad.now);
    }
  }, _0x225465.easing = {
    'linear': function (_0x2404ec) {
      return _0x2404ec;
    },
    'swing': function (_0x22e053) {
      return 0.5 - Math.cos(_0x22e053 * Math.PI) / 0x2;
    },
    '_default': 'swing'
  }, _0x225465.fx = _0x18d739.prototype.init, _0x225465.fx.step = {};
  var _0x102b5e,
    _0x188d92,
    _0x246ca2 = /^(?:toggle|show|hide)$/,
    _0x31571f = /queueHooks$/;
  _0x225465.Animation = _0x225465.extend(_0x1a88f9, {
    'tweeners': {
      '*': [function (_0x1ad390, _0x707609) {
        var _0x3a49ab = this.createTween(_0x1ad390, _0x707609);
        return _0x6362a2(_0x3a49ab.elem, _0x1ad390, _0x4d779d.exec(_0x707609), _0x3a49ab), _0x3a49ab;
      }]
    },
    'tweener': function (_0x3ab9c5, _0x247521) {
      _0x225465.isFunction(_0x3ab9c5) ? (_0x247521 = _0x3ab9c5, _0x3ab9c5 = ['*']) : _0x3ab9c5 = _0x3ab9c5.match(_0x10c9e2);
      for (var _0x39ac85, _0x30a356 = 0x0, _0x4e6452 = _0x3ab9c5.length; _0x30a356 < _0x4e6452; _0x30a356++) _0x39ac85 = _0x3ab9c5[_0x30a356], _0x1a88f9.tweeners[_0x39ac85] = _0x1a88f9.tweeners[_0x39ac85] || [], _0x1a88f9.tweeners[_0x39ac85].unshift(_0x247521);
    },
    'prefilters': [function (_0xaa3258, _0x5c8a5e, _0x4b2b2f) {
      var _0x19290e,
        _0x250fa7,
        _0x54ac06,
        _0x2c3a35,
        _0x1441c8,
        _0x1e7fd6,
        _0x5ee7fa,
        _0x1a2be9,
        _0x549655 = 'width' in _0x5c8a5e || 'height' in _0x5c8a5e,
        _0x58e69a = this,
        _0x4e80a5 = {},
        _0x22ad99 = _0xaa3258.style,
        _0x3db7ea = _0xaa3258.nodeType && _0x4aed72(_0xaa3258),
        _0x513a21 = _0x179236.get(_0xaa3258, 'fxshow');
      _0x4b2b2f.queue || (_0x2c3a35 = _0x225465._queueHooks(_0xaa3258, 'fx'), null == _0x2c3a35.unqueued && (_0x2c3a35.unqueued = 0x0, _0x1441c8 = _0x2c3a35.empty.fire, _0x2c3a35.empty.fire = function () {
        _0x2c3a35.unqueued || _0x1441c8();
      }), _0x2c3a35.unqueued++, _0x58e69a.always(function () {
        _0x58e69a.always(function () {
          _0x2c3a35.unqueued--, _0x225465.queue(_0xaa3258, 'fx').length || _0x2c3a35.empty.fire();
        });
      }));
      for (_0x19290e in _0x5c8a5e) if (_0x250fa7 = _0x5c8a5e[_0x19290e], _0x246ca2.test(_0x250fa7)) {
        if (delete _0x5c8a5e[_0x19290e], _0x54ac06 = _0x54ac06 || 'toggle' === _0x250fa7, _0x250fa7 === (_0x3db7ea ? 'hide' : 'show')) {
          if ('show' !== _0x250fa7 || !_0x513a21 || void 0x0 === _0x513a21[_0x19290e]) continue;
          _0x3db7ea = !0x0;
        }
        _0x4e80a5[_0x19290e] = _0x513a21 && _0x513a21[_0x19290e] || _0x225465.style(_0xaa3258, _0x19290e);
      }
      if (_0x1e7fd6 = !_0x225465.isEmptyObject(_0x5c8a5e), _0x1e7fd6 || !_0x225465.isEmptyObject(_0x4e80a5)) {
        for (_0x19290e in _0x549655 && 0x1 === _0xaa3258.nodeType && (_0x4b2b2f.overflow = [_0x22ad99.overflow, _0x22ad99.overflowX, _0x22ad99.overflowY], _0x5ee7fa = _0x513a21 && _0x513a21.display, null == _0x5ee7fa && (_0x5ee7fa = _0x179236.get(_0xaa3258, 'display')), _0x1a2be9 = _0x225465.css(_0xaa3258, 'display'), 'none' === _0x1a2be9 && (_0x5ee7fa ? _0x1a2be9 = _0x5ee7fa : (_0x444a18([_0xaa3258], !0x0), _0x5ee7fa = _0xaa3258.style.display || _0x5ee7fa, _0x1a2be9 = _0x225465.css(_0xaa3258, 'display'), _0x444a18([_0xaa3258]))), ('inline' === _0x1a2be9 || 'inline-block' === _0x1a2be9 && null != _0x5ee7fa) && 'none' === _0x225465.css(_0xaa3258, 'float') && (_0x1e7fd6 || (_0x58e69a.done(function () {
          _0x22ad99.display = _0x5ee7fa;
        }), null == _0x5ee7fa && (_0x1a2be9 = _0x22ad99.display, _0x5ee7fa = 'none' === _0x1a2be9 ? '' : _0x1a2be9)), _0x22ad99.display = 'inline-block')), _0x4b2b2f.overflow && (_0x22ad99.overflow = 'hidden', _0x58e69a.always(function () {
          _0x22ad99.overflow = _0x4b2b2f.overflow[0x0], _0x22ad99.overflowX = _0x4b2b2f.overflow[0x1], _0x22ad99.overflowY = _0x4b2b2f.overflow[0x2];
        })), _0x1e7fd6 = !0x1, _0x4e80a5) _0x1e7fd6 || (_0x513a21 ? 'hidden' in _0x513a21 && (_0x3db7ea = _0x513a21.hidden) : _0x513a21 = _0x179236.access(_0xaa3258, 'fxshow', {
          'display': _0x5ee7fa
        }), _0x54ac06 && (_0x513a21.hidden = !_0x3db7ea), _0x3db7ea && _0x444a18([_0xaa3258], !0x0), _0x58e69a.done(function () {
          _0x3db7ea || _0x444a18([_0xaa3258]), _0x179236.remove(_0xaa3258, 'fxshow');
          for (_0x19290e in _0x4e80a5) _0x225465.style(_0xaa3258, _0x19290e, _0x4e80a5[_0x19290e]);
        })), _0x1e7fd6 = _0x1a1410(_0x3db7ea ? _0x513a21[_0x19290e] : 0x0, _0x19290e, _0x58e69a), _0x19290e in _0x513a21 || (_0x513a21[_0x19290e] = _0x1e7fd6.start, _0x3db7ea && (_0x1e7fd6.end = _0x1e7fd6.start, _0x1e7fd6.start = 0x0));
      }
    }],
    'prefilter': function (_0x237033, _0x312afb) {
      _0x312afb ? _0x1a88f9.prefilters.unshift(_0x237033) : _0x1a88f9.prefilters.push(_0x237033);
    }
  }), _0x225465.speed = function (_0x5b4712, _0x33b386, _0xa7aa67) {
    var _0x2679eb = _0x5b4712 && 'object' == typeof _0x5b4712 ? _0x225465.extend({}, _0x5b4712) : {
      'complete': _0xa7aa67 || !_0xa7aa67 && _0x33b386 || _0x225465.isFunction(_0x5b4712) && _0x5b4712,
      'duration': _0x5b4712,
      'easing': _0xa7aa67 && _0x33b386 || _0x33b386 && !_0x225465.isFunction(_0x33b386) && _0x33b386
    };
    return _0x225465.fx.off ? _0x2679eb.duration = 0x0 : 'number' != typeof _0x2679eb.duration && (_0x2679eb.duration in _0x225465.fx.speeds ? _0x2679eb.duration = _0x225465.fx.speeds[_0x2679eb.duration] : _0x2679eb.duration = _0x225465.fx.speeds._default), null != _0x2679eb.queue && !0x0 !== _0x2679eb.queue || (_0x2679eb.queue = 'fx'), _0x2679eb.old = _0x2679eb.complete, _0x2679eb.complete = function () {
      _0x225465.isFunction(_0x2679eb.old) && _0x2679eb.old.call(this), _0x2679eb.queue && _0x225465.dequeue(this, _0x2679eb.queue);
    }, _0x2679eb;
  }, _0x225465.fn.extend({
    'fadeTo': function (_0x4e1fa2, _0x572234, _0x4ca15a, _0x5d07e1) {
      return this.filter(_0x4aed72).css('opacity', 0x0).show().end().animate({
        'opacity': _0x572234
      }, _0x4e1fa2, _0x4ca15a, _0x5d07e1);
    },
    'animate': function (_0x5b0f4e, _0x4ba051, _0x2bd6be, _0x1cd080) {
      var _0x118e9f = _0x225465.isEmptyObject(_0x5b0f4e),
        _0x434efd = _0x225465.speed(_0x4ba051, _0x2bd6be, _0x1cd080);
      return _0x4ba051 = function () {
        var _0x1ac53e = _0x1a88f9(this, _0x225465.extend({}, _0x5b0f4e), _0x434efd);
        (_0x118e9f || _0x179236.get(this, 'finish')) && _0x1ac53e.stop(!0x0);
      }, _0x4ba051.finish = _0x4ba051, _0x118e9f || !0x1 === _0x434efd.queue ? this.each(_0x4ba051) : this.queue(_0x434efd.queue, _0x4ba051);
    },
    'stop': function (_0x13e23a, _0x3fe9ee, _0x52c67f) {
      var _0x311c19 = function (_0x3ca663) {
        var _0x61f90e = _0x3ca663.stop;
        delete _0x3ca663.stop, _0x61f90e(_0x52c67f);
      };
      return 'string' != typeof _0x13e23a && (_0x52c67f = _0x3fe9ee, _0x3fe9ee = _0x13e23a, _0x13e23a = void 0x0), _0x3fe9ee && !0x1 !== _0x13e23a && this.queue(_0x13e23a || 'fx', []), this.each(function () {
        var _0x5d0572 = !0x0,
          _0x1c8dd5 = null != _0x13e23a && _0x13e23a + 'queueHooks',
          _0x48735a = _0x225465.timers,
          _0x1559cf = _0x179236.get(this);
        if (_0x1c8dd5) _0x1559cf[_0x1c8dd5] && _0x1559cf[_0x1c8dd5].stop && _0x311c19(_0x1559cf[_0x1c8dd5]);else {
          for (_0x1c8dd5 in _0x1559cf) _0x1559cf[_0x1c8dd5] && _0x1559cf[_0x1c8dd5].stop && _0x31571f.test(_0x1c8dd5) && _0x311c19(_0x1559cf[_0x1c8dd5]);
        }
        for (_0x1c8dd5 = _0x48735a.length; _0x1c8dd5--;) _0x48735a[_0x1c8dd5].elem !== this || null != _0x13e23a && _0x48735a[_0x1c8dd5].queue !== _0x13e23a || (_0x48735a[_0x1c8dd5].anim.stop(_0x52c67f), _0x5d0572 = !0x1, _0x48735a.splice(_0x1c8dd5, 0x1));
        !_0x5d0572 && _0x52c67f || _0x225465.dequeue(this, _0x13e23a);
      });
    },
    'finish': function (_0x5eb036) {
      return !0x1 !== _0x5eb036 && (_0x5eb036 = _0x5eb036 || 'fx'), this.each(function () {
        var _0x532fdc,
          _0x157617 = _0x179236.get(this),
          _0x411ffe = _0x157617[_0x5eb036 + 'queue'];
        _0x532fdc = _0x157617[_0x5eb036 + 'queueHooks'];
        var _0x4ce1b2 = _0x225465.timers,
          _0x331b7e = _0x411ffe ? _0x411ffe.length : 0x0;
        _0x157617.finish = !0x0, _0x225465.queue(this, _0x5eb036, []), _0x532fdc && _0x532fdc.stop && _0x532fdc.stop.call(this, !0x0);
        for (_0x532fdc = _0x4ce1b2.length; _0x532fdc--;) _0x4ce1b2[_0x532fdc].elem === this && _0x4ce1b2[_0x532fdc].queue === _0x5eb036 && (_0x4ce1b2[_0x532fdc].anim.stop(!0x0), _0x4ce1b2.splice(_0x532fdc, 0x1));
        for (_0x532fdc = 0x0; _0x532fdc < _0x331b7e; _0x532fdc++) _0x411ffe[_0x532fdc] && _0x411ffe[_0x532fdc].finish && _0x411ffe[_0x532fdc].finish.call(this);
        delete _0x157617.finish;
      });
    }
  }), _0x225465.each(['toggle', 'show', 'hide'], function (_0x1f5b7b, _0x426efd) {
    var _0x44b79e = _0x225465.fn[_0x426efd];
    _0x225465.fn[_0x426efd] = function (_0x1786d9, _0x133849, _0x762494) {
      return null == _0x1786d9 || 'boolean' == typeof _0x1786d9 ? _0x44b79e.apply(this, arguments) : this.animate(_0xc49b68(_0x426efd, !0x0), _0x1786d9, _0x133849, _0x762494);
    };
  }), _0x225465.each({
    'slideDown': _0xc49b68('show'),
    'slideUp': _0xc49b68('hide'),
    'slideToggle': _0xc49b68('toggle'),
    'fadeIn': {
      'opacity': 'show'
    },
    'fadeOut': {
      'opacity': 'hide'
    },
    'fadeToggle': {
      'opacity': 'toggle'
    }
  }, function (_0x31d09a, _0x2a0b96) {
    _0x225465.fn[_0x31d09a] = function (_0x7dd7be, _0x39d666, _0x505259) {
      return this.animate(_0x2a0b96, _0x7dd7be, _0x39d666, _0x505259);
    };
  }), _0x225465.timers = [], _0x225465.fx.tick = function () {
    var _0x4f586b,
      _0x1d32d4 = 0x0,
      _0x49b121 = _0x225465.timers;
    for (_0x102b5e = _0x225465.now(); _0x1d32d4 < _0x49b121.length; _0x1d32d4++) _0x4f586b = _0x49b121[_0x1d32d4], _0x4f586b() || _0x49b121[_0x1d32d4] !== _0x4f586b || _0x49b121.splice(_0x1d32d4--, 0x1);
    _0x49b121.length || _0x225465.fx.stop(), _0x102b5e = void 0x0;
  }, _0x225465.fx.timer = function (_0x52a7b7) {
    _0x225465.timers.push(_0x52a7b7), _0x225465.fx.start();
  }, _0x225465.fx.interval = 0xd, _0x225465.fx.start = function () {
    _0x188d92 || (_0x188d92 = !0x0, _0x32e65f());
  }, _0x225465.fx.stop = function () {
    _0x188d92 = null;
  }, _0x225465.fx.speeds = {
    'slow': 0x258,
    'fast': 0xc8,
    '_default': 0x190
  }, _0x225465.fn.delay = function (_0x59c6b9, _0x11042d) {
    return _0x59c6b9 = _0x225465.fx ? _0x225465.fx.speeds[_0x59c6b9] || _0x59c6b9 : _0x59c6b9, _0x11042d = _0x11042d || 'fx', this.queue(_0x11042d, function (_0x36cf11, _0x132c3a) {
      var _0x2c4ff7 = _0x10efb2.setTimeout(_0x36cf11, _0x59c6b9);
      _0x132c3a.stop = function () {
        _0x10efb2.clearTimeout(_0x2c4ff7);
      };
    });
  };
  var _0x5ed24a = _0x16e0bd.createElement('input'),
    _0x1b53e3 = _0x16e0bd.createElement('select').appendChild(_0x16e0bd.createElement('option'));
  _0x5ed24a.type = 'checkbox', _0x509db7.checkOn = '' !== _0x5ed24a.value, _0x509db7.optSelected = _0x1b53e3.selected, _0x5ed24a = _0x16e0bd.createElement('input'), _0x5ed24a.value = 't', _0x5ed24a.type = 'radio', _0x509db7.radioValue = 't' === _0x5ed24a.value;
  var _0x202335,
    _0x220a66 = _0x225465.expr.attrHandle;
  _0x225465.fn.extend({
    'attr': function (_0x4589b4, _0x193372) {
      return _0x26df6d(this, _0x225465.attr, _0x4589b4, _0x193372, 0x1 < arguments.length);
    },
    'removeAttr': function (_0x36f8ae) {
      return this.each(function () {
        _0x225465.removeAttr(this, _0x36f8ae);
      });
    }
  }), _0x225465.extend({
    'attr': function (_0x3e3201, _0x3d22c0, _0x18ba07) {
      var _0x2719bf,
        _0x449e44,
        _0x5c6e63 = _0x3e3201.nodeType;
      if (0x3 !== _0x5c6e63 && 0x8 !== _0x5c6e63 && 0x2 !== _0x5c6e63) return 'undefined' == typeof _0x3e3201.getAttribute ? _0x225465.prop(_0x3e3201, _0x3d22c0, _0x18ba07) : (0x1 === _0x5c6e63 && _0x225465.isXMLDoc(_0x3e3201) || (_0x449e44 = _0x225465.attrHooks[_0x3d22c0.toLowerCase()] || (_0x225465.expr.match.bool.test(_0x3d22c0) ? _0x202335 : void 0x0)), void 0x0 !== _0x18ba07 ? null === _0x18ba07 ? void _0x225465.removeAttr(_0x3e3201, _0x3d22c0) : _0x449e44 && 'set' in _0x449e44 && void 0x0 !== (_0x2719bf = _0x449e44.set(_0x3e3201, _0x18ba07, _0x3d22c0)) ? _0x2719bf : (_0x3e3201.setAttribute(_0x3d22c0, _0x18ba07 + ''), _0x18ba07) : _0x449e44 && 'get' in _0x449e44 && null !== (_0x2719bf = _0x449e44.get(_0x3e3201, _0x3d22c0)) ? _0x2719bf : (_0x2719bf = _0x225465.find.attr(_0x3e3201, _0x3d22c0), null == _0x2719bf ? void 0x0 : _0x2719bf));
    },
    'attrHooks': {
      'type': {
        'set': function (_0x258057, _0x3c3652) {
          if (!_0x509db7.radioValue && 'radio' === _0x3c3652 && _0x4e3d3f(_0x258057, 'input')) {
            var _0x19602d = _0x258057.value;
            return _0x258057.setAttribute('type', _0x3c3652), _0x19602d && (_0x258057.value = _0x19602d), _0x3c3652;
          }
        }
      }
    },
    'removeAttr': function (_0x3fcfe8, _0x342fc7) {
      var _0x3e6e76,
        _0x1b6e11 = 0x0,
        _0x87ed2d = _0x342fc7 && _0x342fc7.match(_0x10c9e2);
      if (_0x87ed2d && 0x1 === _0x3fcfe8.nodeType) {
        for (; _0x3e6e76 = _0x87ed2d[_0x1b6e11++];) _0x3fcfe8.removeAttribute(_0x3e6e76);
      }
    }
  }), _0x202335 = {
    'set': function (_0x1b7d79, _0x55d17a, _0x248d9d) {
      return !0x1 === _0x55d17a ? _0x225465.removeAttr(_0x1b7d79, _0x248d9d) : _0x1b7d79.setAttribute(_0x248d9d, _0x248d9d), _0x248d9d;
    }
  }, _0x225465.each(_0x225465.expr.match.bool.source.match(/\w+/g), function (_0x158164, _0x5c7e4b) {
    var _0x4e12e1 = _0x220a66[_0x5c7e4b] || _0x225465.find.attr;
    _0x220a66[_0x5c7e4b] = function (_0x3ab621, _0x13b757, _0x166b7f) {
      var _0x317f2d,
        _0x2201c1,
        _0x159b43 = _0x13b757.toLowerCase();
      return _0x166b7f || (_0x2201c1 = _0x220a66[_0x159b43], _0x220a66[_0x159b43] = _0x317f2d, _0x317f2d = null != _0x4e12e1(_0x3ab621, _0x13b757, _0x166b7f) ? _0x159b43 : null, _0x220a66[_0x159b43] = _0x2201c1), _0x317f2d;
    };
  });
  var _0x2277b4 = /^(?:input|select|textarea|button)$/i,
    _0x496769 = /^(?:a|area)$/i;
  _0x225465.fn.extend({
    'prop': function (_0x25844c, _0x4f95f8) {
      return _0x26df6d(this, _0x225465.prop, _0x25844c, _0x4f95f8, 0x1 < arguments.length);
    },
    'removeProp': function (_0x4152d7) {
      return this.each(function () {
        delete this[_0x225465.propFix[_0x4152d7] || _0x4152d7];
      });
    }
  }), _0x225465.extend({
    'prop': function (_0x45bf0d, _0x1c721e, _0x42c71c) {
      var _0x18b259,
        _0x49ef31,
        _0x5ed177 = _0x45bf0d.nodeType;
      if (0x3 !== _0x5ed177 && 0x8 !== _0x5ed177 && 0x2 !== _0x5ed177) return 0x1 === _0x5ed177 && _0x225465.isXMLDoc(_0x45bf0d) || (_0x1c721e = _0x225465.propFix[_0x1c721e] || _0x1c721e, _0x49ef31 = _0x225465.propHooks[_0x1c721e]), void 0x0 !== _0x42c71c ? _0x49ef31 && 'set' in _0x49ef31 && void 0x0 !== (_0x18b259 = _0x49ef31.set(_0x45bf0d, _0x42c71c, _0x1c721e)) ? _0x18b259 : _0x45bf0d[_0x1c721e] = _0x42c71c : _0x49ef31 && 'get' in _0x49ef31 && null !== (_0x18b259 = _0x49ef31.get(_0x45bf0d, _0x1c721e)) ? _0x18b259 : _0x45bf0d[_0x1c721e];
    },
    'propHooks': {
      'tabIndex': {
        'get': function (_0x2e034c) {
          var _0xbc97d9 = _0x225465.find.attr(_0x2e034c, 'tabindex');
          return _0xbc97d9 ? parseInt(_0xbc97d9, 0xa) : _0x2277b4.test(_0x2e034c.nodeName) || _0x496769.test(_0x2e034c.nodeName) && _0x2e034c.href ? 0x0 : -0x1;
        }
      }
    },
    'propFix': {
      'for': 'htmlFor',
      'class': 'className'
    }
  }), _0x509db7.optSelected || (_0x225465.propHooks.selected = {
    'get': function (_0x1efe57) {
      return _0x1efe57 = _0x1efe57.parentNode, _0x1efe57 && _0x1efe57.parentNode && _0x1efe57.parentNode.selectedIndex, null;
    },
    'set': function (_0x4d725a) {
      _0x4d725a = _0x4d725a.parentNode, _0x4d725a && (_0x4d725a.selectedIndex, _0x4d725a.parentNode && _0x4d725a.parentNode.selectedIndex);
    }
  }), _0x225465.each("tabIndex readOnly maxLength cellSpacing cellPadding rowSpan colSpan useMap frameBorder contentEditable".split(" "), function () {
    _0x225465.propFix[this.toLowerCase()] = this;
  }), _0x225465.fn.extend({
    'addClass': function (_0xf52099) {
      var _0x15bc2f,
        _0x15dbc1,
        _0x2e686d,
        _0x34eac2,
        _0x1abd1d,
        _0xece157,
        _0xebb91d = 0x0;
      if (_0x225465.isFunction(_0xf52099)) return this.each(function (_0x386b9d) {
        _0x225465(this).addClass(_0xf52099.call(this, _0x386b9d, _0x1922d7(this)));
      });
      if ('string' == typeof _0xf52099 && _0xf52099) {
        for (_0x15bc2f = _0xf52099.match(_0x10c9e2) || []; _0x15dbc1 = this[_0xebb91d++];) if (_0x34eac2 = _0x1922d7(_0x15dbc1), _0x2e686d = 0x1 === _0x15dbc1.nodeType && " " + _0xb51c8d(_0x34eac2) + " ") {
          for (_0xece157 = 0x0; _0x1abd1d = _0x15bc2f[_0xece157++];) 0x0 > _0x2e686d.indexOf(" " + _0x1abd1d + " ") && (_0x2e686d += _0x1abd1d + " ");
          _0x2e686d = _0xb51c8d(_0x2e686d), _0x34eac2 !== _0x2e686d && _0x15dbc1.setAttribute('class', _0x2e686d);
        }
      }
      return this;
    },
    'removeClass': function (_0x1e48f5) {
      var _0x55632a,
        _0x2e9643,
        _0x4ee6da,
        _0x5dd989,
        _0x873f92,
        _0x11ddc9,
        _0x6470f9 = 0x0;
      if (_0x225465.isFunction(_0x1e48f5)) return this.each(function (_0x475aa8) {
        _0x225465(this).removeClass(_0x1e48f5.call(this, _0x475aa8, _0x1922d7(this)));
      });
      if (!arguments.length) return this.attr('class', '');
      if ('string' == typeof _0x1e48f5 && _0x1e48f5) {
        for (_0x55632a = _0x1e48f5.match(_0x10c9e2) || []; _0x2e9643 = this[_0x6470f9++];) if (_0x5dd989 = _0x1922d7(_0x2e9643), _0x4ee6da = 0x1 === _0x2e9643.nodeType && " " + _0xb51c8d(_0x5dd989) + " ") {
          for (_0x11ddc9 = 0x0; _0x873f92 = _0x55632a[_0x11ddc9++];) for (; -0x1 < _0x4ee6da.indexOf(" " + _0x873f92 + " ");) _0x4ee6da = _0x4ee6da.replace(" " + _0x873f92 + " ", " ");
          _0x4ee6da = _0xb51c8d(_0x4ee6da), _0x5dd989 !== _0x4ee6da && _0x2e9643.setAttribute('class', _0x4ee6da);
        }
      }
      return this;
    },
    'toggleClass': function (_0x3b2047, _0x4a87d6) {
      var _0x46fb7e = typeof _0x3b2047;
      return 'boolean' == typeof _0x4a87d6 && 'string' === _0x46fb7e ? _0x4a87d6 ? this.addClass(_0x3b2047) : this.removeClass(_0x3b2047) : _0x225465.isFunction(_0x3b2047) ? this.each(function (_0x59b8d5) {
        _0x225465(this).toggleClass(_0x3b2047.call(this, _0x59b8d5, _0x1922d7(this), _0x4a87d6), _0x4a87d6);
      }) : this.each(function () {
        var _0x48b52f, _0xe22030, _0x4e41be, _0x26abf2;
        if ('string' === _0x46fb7e) {
          _0xe22030 = 0x0, _0x4e41be = _0x225465(this);
          for (_0x26abf2 = _0x3b2047.match(_0x10c9e2) || []; _0x48b52f = _0x26abf2[_0xe22030++];) _0x4e41be.hasClass(_0x48b52f) ? _0x4e41be.removeClass(_0x48b52f) : _0x4e41be.addClass(_0x48b52f);
        } else void 0x0 !== _0x3b2047 && 'boolean' !== _0x46fb7e || (_0x48b52f = _0x1922d7(this), _0x48b52f && _0x179236.set(this, '__className__', _0x48b52f), this.setAttribute && this.setAttribute('class', _0x48b52f || !0x1 === _0x3b2047 ? '' : _0x179236.get(this, '__className__') || ''));
      });
    },
    'hasClass': function (_0x31b98e) {
      var _0x12d738,
        _0x58a4bc = 0x0;
      for (_0x31b98e = " " + _0x31b98e + " "; _0x12d738 = this[_0x58a4bc++];) if (0x1 === _0x12d738.nodeType && -0x1 < (" " + _0xb51c8d(_0x1922d7(_0x12d738)) + " ").indexOf(_0x31b98e)) return !0x0;
      return !0x1;
    }
  });
  var _0x44531f = /\r/g;
  _0x225465.fn.extend({
    'val': function (_0x1c1421) {
      var _0x810576,
        _0x5bcbaa,
        _0x55321a,
        _0x488045 = this[0x0];
      if (arguments.length) return _0x55321a = _0x225465.isFunction(_0x1c1421), this.each(function (_0x28fb27) {
        var _0x6c7798;
        0x1 === this.nodeType && (_0x6c7798 = _0x55321a ? _0x1c1421.call(this, _0x28fb27, _0x225465(this).val()) : _0x1c1421, null == _0x6c7798 ? _0x6c7798 = '' : 'number' == typeof _0x6c7798 ? _0x6c7798 += '' : Array.isArray(_0x6c7798) && (_0x6c7798 = _0x225465.map(_0x6c7798, function (_0x4841ae) {
          return null == _0x4841ae ? '' : _0x4841ae + '';
        })), _0x810576 = _0x225465.valHooks[this.type] || _0x225465.valHooks[this.nodeName.toLowerCase()], _0x810576 && 'set' in _0x810576 && void 0x0 !== _0x810576.set(this, _0x6c7798, 'value') || (this.value = _0x6c7798));
      });
      if (_0x488045) return _0x810576 = _0x225465.valHooks[_0x488045.type] || _0x225465.valHooks[_0x488045.nodeName.toLowerCase()], _0x810576 && 'get' in _0x810576 && void 0x0 !== (_0x5bcbaa = _0x810576.get(_0x488045, 'value')) ? _0x5bcbaa : (_0x5bcbaa = _0x488045.value, 'string' == typeof _0x5bcbaa ? _0x5bcbaa.replace(_0x44531f, '') : null == _0x5bcbaa ? '' : _0x5bcbaa);
    }
  }), _0x225465.extend({
    'valHooks': {
      'option': {
        'get': function (_0x4d1eff) {
          var _0x576bf3 = _0x225465.find.attr(_0x4d1eff, 'value');
          return null != _0x576bf3 ? _0x576bf3 : _0xb51c8d(_0x225465.text(_0x4d1eff));
        }
      },
      'select': {
        'get': function (_0x162811) {
          var _0x1b7883,
            _0x3a2177,
            _0x3cdb83 = _0x162811.options,
            _0x1dddab = _0x162811.selectedIndex,
            _0x1a877b = 'select-one' === _0x162811.type,
            _0x8e5cab = _0x1a877b ? null : [],
            _0x578888 = _0x1a877b ? _0x1dddab + 0x1 : _0x3cdb83.length;
          for (_0x3a2177 = 0x0 > _0x1dddab ? _0x578888 : _0x1a877b ? _0x1dddab : 0x0; _0x3a2177 < _0x578888; _0x3a2177++) if (_0x1b7883 = _0x3cdb83[_0x3a2177], (_0x1b7883.selected || _0x3a2177 === _0x1dddab) && !_0x1b7883.disabled && (!_0x1b7883.parentNode.disabled || !_0x4e3d3f(_0x1b7883.parentNode, 'optgroup'))) {
            if (_0x162811 = _0x225465(_0x1b7883).val(), _0x1a877b) return _0x162811;
            _0x8e5cab.push(_0x162811);
          }
          return _0x8e5cab;
        },
        'set': function (_0x496d2f, _0x5de843) {
          for (var _0x3bf58c, _0x279e3f, _0xd4631a = _0x496d2f.options, _0x30e9e5 = _0x225465.makeArray(_0x5de843), _0x3e2877 = _0xd4631a.length; _0x3e2877--;) _0x279e3f = _0xd4631a[_0x3e2877], (_0x279e3f.selected = -0x1 < _0x225465.inArray(_0x225465.valHooks.option.get(_0x279e3f), _0x30e9e5)) && (_0x3bf58c = !0x0);
          return _0x3bf58c || (_0x496d2f.selectedIndex = -0x1), _0x30e9e5;
        }
      }
    }
  }), _0x225465.each(['radio', 'checkbox'], function () {
    _0x225465.valHooks[this] = {
      'set': function (_0x483abc, _0x2778ac) {
        if (Array.isArray(_0x2778ac)) return _0x483abc.checked = -0x1 < _0x225465.inArray(_0x225465(_0x483abc).val(), _0x2778ac);
      }
    }, _0x509db7.checkOn || (_0x225465.valHooks[this].get = function (_0x56e4c9) {
      return null === _0x56e4c9.getAttribute('value') ? 'on' : _0x56e4c9.value;
    });
  });
  var _0x4b947c = /^(?:focusinfocus|focusoutblur)$/;
  _0x225465.extend(_0x225465.event, {
    'trigger': function (_0x5097ab, _0x135869, _0x28b5a8, _0x18362d) {
      var _0xa87c90,
        _0x4decc1,
        _0x50e9cd,
        _0xebc02e,
        _0x263140,
        _0x1b3c77,
        _0x106759,
        _0x3996cd = [_0x28b5a8 || _0x16e0bd],
        _0x3bf6bb = _0x131bfa.call(_0x5097ab, 'type') ? _0x5097ab.type : _0x5097ab;
      _0xa87c90 = _0x131bfa.call(_0x5097ab, 'namespace') ? _0x5097ab.namespace.split('.') : [];
      if (_0x4decc1 = _0x50e9cd = _0x28b5a8 = _0x28b5a8 || _0x16e0bd, 0x3 !== _0x28b5a8.nodeType && 0x8 !== _0x28b5a8.nodeType && !_0x4b947c.test(_0x3bf6bb + _0x225465.event.triggered) && (-0x1 < _0x3bf6bb.indexOf('.') && (_0xa87c90 = _0x3bf6bb.split('.'), _0x3bf6bb = _0xa87c90.shift(), _0xa87c90.sort()), _0x263140 = 0x0 > _0x3bf6bb.indexOf(':') && 'on' + _0x3bf6bb, _0x5097ab = _0x5097ab[_0x225465.expando] ? _0x5097ab : new _0x225465.Event(_0x3bf6bb, 'object' == typeof _0x5097ab && _0x5097ab), _0x5097ab.isTrigger = _0x18362d ? 0x2 : 0x3, _0x5097ab.namespace = _0xa87c90.join('.'), _0x5097ab.rnamespace = _0x5097ab.namespace ? RegExp("(^|\\.)" + _0xa87c90.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, _0x5097ab.result = void 0x0, _0x5097ab.target || (_0x5097ab.target = _0x28b5a8), _0x135869 = null == _0x135869 ? [_0x5097ab] : _0x225465.makeArray(_0x135869, [_0x5097ab]), _0x106759 = _0x225465.event.special[_0x3bf6bb] || {}, _0x18362d || !_0x106759.trigger || !0x1 !== _0x106759.trigger.apply(_0x28b5a8, _0x135869))) {
        if (!_0x18362d && !_0x106759.noBubble && !_0x225465.isWindow(_0x28b5a8)) {
          _0xebc02e = _0x106759.delegateType || _0x3bf6bb;
          for (_0x4b947c.test(_0xebc02e + _0x3bf6bb) || (_0x4decc1 = _0x4decc1.parentNode); _0x4decc1; _0x4decc1 = _0x4decc1.parentNode) _0x3996cd.push(_0x4decc1), _0x50e9cd = _0x4decc1;
          _0x50e9cd === (_0x28b5a8.ownerDocument || _0x16e0bd) && _0x3996cd.push(_0x50e9cd.defaultView || _0x50e9cd.parentWindow || _0x10efb2);
        }
        for (_0xa87c90 = 0x0; (_0x4decc1 = _0x3996cd[_0xa87c90++]) && !_0x5097ab.isPropagationStopped();) _0x5097ab.type = 0x1 < _0xa87c90 ? _0xebc02e : _0x106759.bindType || _0x3bf6bb, (_0x1b3c77 = (_0x179236.get(_0x4decc1, 'events') || {})[_0x5097ab.type] && _0x179236.get(_0x4decc1, 'handle')) && _0x1b3c77.apply(_0x4decc1, _0x135869), (_0x1b3c77 = _0x263140 && _0x4decc1[_0x263140]) && _0x1b3c77.apply && _0x10f24b(_0x4decc1) && (_0x5097ab.result = _0x1b3c77.apply(_0x4decc1, _0x135869), !0x1 === _0x5097ab.result && _0x5097ab.preventDefault());
        return _0x5097ab.type = _0x3bf6bb, _0x18362d || _0x5097ab.isDefaultPrevented() || _0x106759._default && !0x1 !== _0x106759._default.apply(_0x3996cd.pop(), _0x135869) || !_0x10f24b(_0x28b5a8) || _0x263140 && _0x225465.isFunction(_0x28b5a8[_0x3bf6bb]) && !_0x225465.isWindow(_0x28b5a8) && (_0x50e9cd = _0x28b5a8[_0x263140], _0x50e9cd && (_0x28b5a8[_0x263140] = null), _0x225465.event.triggered = _0x3bf6bb, _0x28b5a8[_0x3bf6bb](), _0x225465.event.triggered = void 0x0, _0x50e9cd && (_0x28b5a8[_0x263140] = _0x50e9cd)), _0x5097ab.result;
      }
    },
    'simulate': function (_0x97bc7c, _0x2066c3, _0x24b759) {
      _0x97bc7c = _0x225465.extend(new _0x225465.Event(), _0x24b759, {
        'type': _0x97bc7c,
        'isSimulated': !0x0
      }), _0x225465.event.trigger(_0x97bc7c, null, _0x2066c3);
    }
  }), _0x225465.fn.extend({
    'trigger': function (_0x4e77d5, _0x570568) {
      return this.each(function () {
        _0x225465.event.trigger(_0x4e77d5, _0x570568, this);
      });
    },
    'triggerHandler': function (_0x408af5, _0x799a33) {
      var _0x48e4a9 = this[0x0];
      if (_0x48e4a9) return _0x225465.event.trigger(_0x408af5, _0x799a33, _0x48e4a9, !0x0);
    }
  }), _0x225465.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (_0x2b5178, _0x584ab3) {
    _0x225465.fn[_0x584ab3] = function (_0x35b830, _0x171dbc) {
      return 0x0 < arguments.length ? this.on(_0x584ab3, null, _0x35b830, _0x171dbc) : this.trigger(_0x584ab3);
    };
  }), _0x225465.fn.extend({
    'hover': function (_0x510f8b, _0x2e79df) {
      return this.mouseenter(_0x510f8b).mouseleave(_0x2e79df || _0x510f8b);
    }
  }), _0x509db7.focusin = 'onfocusin' in _0x10efb2, _0x509db7.focusin || _0x225465.each({
    'focus': 'focusin',
    'blur': 'focusout'
  }, function (_0x1480ca, _0x3a9612) {
    var _0x1df9ca = function (_0x4363ee) {
      _0x225465.event.simulate(_0x3a9612, _0x4363ee.target, _0x225465.event.fix(_0x4363ee));
    };
    _0x225465.event.special[_0x3a9612] = {
      'setup': function () {
        var _0x2a9c2c = this.ownerDocument || this,
          _0x1dd67a = _0x179236.access(_0x2a9c2c, _0x3a9612);
        _0x1dd67a || _0x2a9c2c.addEventListener(_0x1480ca, _0x1df9ca, !0x0), _0x179236.access(_0x2a9c2c, _0x3a9612, (_0x1dd67a || 0x0) + 0x1);
      },
      'teardown': function () {
        var _0x53f3b7 = this.ownerDocument || this,
          _0x1b26e6 = _0x179236.access(_0x53f3b7, _0x3a9612) - 0x1;
        _0x1b26e6 ? _0x179236.access(_0x53f3b7, _0x3a9612, _0x1b26e6) : (_0x53f3b7.removeEventListener(_0x1480ca, _0x1df9ca, !0x0), _0x179236.remove(_0x53f3b7, _0x3a9612));
      }
    };
  });
  var _0x4fa78b = _0x10efb2.location,
    _0x1bdfb8 = _0x225465.now(),
    _0x503446 = /\?/;
  _0x225465.parseXML = function (_0x4c8f25) {
    var _0x352425;
    if (!_0x4c8f25 || 'string' != typeof _0x4c8f25) return null;
    try {
      _0x352425 = new _0x10efb2.DOMParser().parseFromString(_0x4c8f25, 'text/xml');
    } catch (_0x2956e7) {
      _0x352425 = void 0x0;
    }
    return _0x352425 && !_0x352425.getElementsByTagName('parsererror').length || _0x225465.error("Invalid XML: " + _0x4c8f25), _0x352425;
  };
  var _0x238712 = /\[\]$/,
    _0x186b56 = /\r?\n/g,
    _0x2a035e = /^(?:submit|button|image|reset|file)$/i,
    _0xc3a1ae = /^(?:input|select|textarea|keygen)/i;
  _0x225465.param = function (_0x568abc, _0x493b5e) {
    var _0x36e724,
      _0x59222b = [],
      _0x2169eb = function (_0x5ea139, _0x424092) {
        var _0xf0de5e = _0x225465.isFunction(_0x424092) ? _0x424092() : _0x424092;
        _0x59222b[_0x59222b.length] = encodeURIComponent(_0x5ea139) + '=' + encodeURIComponent(null == _0xf0de5e ? '' : _0xf0de5e);
      };
    if (Array.isArray(_0x568abc) || _0x568abc.jquery && !_0x225465.isPlainObject(_0x568abc)) _0x225465.each(_0x568abc, function () {
      _0x2169eb(this.name, this.value);
    });else {
      for (_0x36e724 in _0x568abc) _0x5b46b4(_0x36e724, _0x568abc[_0x36e724], _0x493b5e, _0x2169eb);
    }
    return _0x59222b.join('&');
  }, _0x225465.fn.extend({
    'serialize': function () {
      return _0x225465.param(this.serializeArray());
    },
    'serializeArray': function () {
      return this.map(function () {
        var _0x48db1c = _0x225465.prop(this, 'elements');
        return _0x48db1c ? _0x225465.makeArray(_0x48db1c) : this;
      }).filter(function () {
        var _0x17db31 = this.type;
        return this.name && !_0x225465(this).is(':disabled') && _0xc3a1ae.test(this.nodeName) && !_0x2a035e.test(_0x17db31) && (this.checked || !_0x5de2dd.test(_0x17db31));
      }).map(function (_0x299014, _0x1130e5) {
        var _0x1d7c44 = _0x225465(this).val();
        return null == _0x1d7c44 ? null : Array.isArray(_0x1d7c44) ? _0x225465.map(_0x1d7c44, function (_0x14aeff) {
          return {
            'name': _0x1130e5.name,
            'value': _0x14aeff.replace(_0x186b56, "\r\n")
          };
        }) : {
          'name': _0x1130e5.name,
          'value': _0x1d7c44.replace(_0x186b56, "\r\n")
        };
      }).get();
    }
  });
  var _0x23bcc7 = /%20/g,
    _0x3ecfcb = /#.*$/,
    _0x40149e = /([?&])_=[^&]*/,
    _0x1766e8 = /^(.*?):[ \t]*([^\r\n]*)$/gm,
    _0x9021dc = /^(?:GET|HEAD)$/,
    _0x504a89 = /^\/\//,
    _0x222165 = {},
    _0x520db5 = {},
    _0x4e7117 = '*/'.concat('*'),
    _0x4cd077 = _0x16e0bd.createElement('a');
  _0x4cd077.href = _0x4fa78b.href, _0x225465.extend({
    'active': 0x0,
    'lastModified': {},
    'etag': {},
    'ajaxSettings': {
      'url': _0x4fa78b.href,
      'type': 'GET',
      'isLocal': /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(_0x4fa78b.protocol),
      'global': !0x0,
      'processData': !0x0,
      'async': !0x0,
      'contentType': "application/x-www-form-urlencoded; charset=UTF-8",
      'accepts': {
        '*': _0x4e7117,
        'text': 'text/plain',
        'html': 'text/html',
        'xml': "application/xml, text/xml",
        'json': "application/json, text/javascript"
      },
      'contents': {
        'xml': /\bxml\b/,
        'html': /\bhtml/,
        'json': /\bjson\b/
      },
      'responseFields': {
        'xml': 'responseXML',
        'text': 'responseText',
        'json': 'responseJSON'
      },
      'converters': {
        "* text": String,
        "text html": !0x0,
        "text json": JSON.parse,
        "text xml": _0x225465.parseXML
      },
      'flatOptions': {
        'url': !0x0,
        'context': !0x0
      }
    },
    'ajaxSetup': function (_0x4f5f27, _0x12f908) {
      return _0x12f908 ? _0x5ae50b(_0x5ae50b(_0x4f5f27, _0x225465.ajaxSettings), _0x12f908) : _0x5ae50b(_0x225465.ajaxSettings, _0x4f5f27);
    },
    'ajaxPrefilter': _0x482cae(_0x222165),
    'ajaxTransport': _0x482cae(_0x520db5),
    'ajax': function (_0x129651, _0x168e3d) {
      function _0x2d6122(_0x2585d1, _0x42fcee, _0x1b9980, _0x590ce6) {
        var _0x3371c1,
          _0x17b844,
          _0x7e544e,
          _0x46a8c3,
          _0x5b273c = _0x42fcee;
        if (!_0x415a48) {
          _0x415a48 = !0x0, _0x424a4f && _0x10efb2.clearTimeout(_0x424a4f), _0xa3cadb = void 0x0, _0x2e9937 = _0x590ce6 || '', _0x275c16.readyState = 0x0 < _0x2585d1 ? 0x4 : 0x0, _0x590ce6 = 0xc8 <= _0x2585d1 && 0x12c > _0x2585d1 || 0x130 === _0x2585d1;
          if (_0x1b9980) {
            _0x7e544e = _0x42c29b;
            for (var _0x1f5c46 = _0x275c16, _0x53745f, _0x3ed261, _0x26d90a, _0x53ba9a, _0x3a8e71 = _0x7e544e.contents, _0x50662e = _0x7e544e.dataTypes; '*' === _0x50662e[0x0];) _0x50662e.shift(), void 0x0 === _0x53745f && (_0x53745f = _0x7e544e.mimeType || _0x1f5c46.getResponseHeader('Content-Type'));
            if (_0x53745f) {
              for (_0x3ed261 in _0x3a8e71) if (_0x3a8e71[_0x3ed261] && _0x3a8e71[_0x3ed261].test(_0x53745f)) {
                _0x50662e.unshift(_0x3ed261);
                break;
              }
            }
            if (_0x50662e[0x0] in _0x1b9980) _0x26d90a = _0x50662e[0x0];else {
              for (_0x3ed261 in _0x1b9980) {
                if (!_0x50662e[0x0] || _0x7e544e.converters[_0x3ed261 + " " + _0x50662e[0x0]]) {
                  _0x26d90a = _0x3ed261;
                  break;
                }
                _0x53ba9a || (_0x53ba9a = _0x3ed261);
              }
              _0x26d90a = _0x26d90a || _0x53ba9a;
            }
            _0x7e544e = _0x1b9980 = _0x26d90a ? (_0x26d90a !== _0x50662e[0x0] && _0x50662e.unshift(_0x26d90a), _0x1b9980[_0x26d90a]) : void 0x0;
          }
          var _0x15c977;
          _0x62cdfb: {
            _0x1b9980 = _0x42c29b, _0x53745f = _0x7e544e, _0x3ed261 = _0x275c16, _0x26d90a = _0x590ce6;
            var _0x4b622d, _0x55ff9c, _0x2d93d9;
            _0x7e544e = {}, _0x1f5c46 = _0x1b9980.dataTypes.slice();
            if (_0x1f5c46[0x1]) {
              for (_0x4b622d in _0x1b9980.converters) _0x7e544e[_0x4b622d.toLowerCase()] = _0x1b9980.converters[_0x4b622d];
            }
            for (_0x53ba9a = _0x1f5c46.shift(); _0x53ba9a;) if (_0x1b9980.responseFields[_0x53ba9a] && (_0x3ed261[_0x1b9980.responseFields[_0x53ba9a]] = _0x53745f), !_0x2d93d9 && _0x26d90a && _0x1b9980.dataFilter && (_0x53745f = _0x1b9980.dataFilter(_0x53745f, _0x1b9980.dataType)), _0x2d93d9 = _0x53ba9a, _0x53ba9a = _0x1f5c46.shift()) {
              if ('*' === _0x53ba9a) _0x53ba9a = _0x2d93d9;else {
                if ('*' !== _0x2d93d9 && _0x2d93d9 !== _0x53ba9a) {
                  if (_0x4b622d = _0x7e544e[_0x2d93d9 + " " + _0x53ba9a] || _0x7e544e["* " + _0x53ba9a], !_0x4b622d) {
                    for (_0x15c977 in _0x7e544e) if (_0x55ff9c = _0x15c977.split(" "), _0x55ff9c[0x1] === _0x53ba9a && (_0x4b622d = _0x7e544e[_0x2d93d9 + " " + _0x55ff9c[0x0]] || _0x7e544e["* " + _0x55ff9c[0x0]])) {
                      !0x0 === _0x4b622d ? _0x4b622d = _0x7e544e[_0x15c977] : !0x0 !== _0x7e544e[_0x15c977] && (_0x53ba9a = _0x55ff9c[0x0], _0x1f5c46.unshift(_0x55ff9c[0x1]));
                      break;
                    }
                  }
                  if (!0x0 !== _0x4b622d) {
                    if (_0x4b622d && _0x1b9980.throws) _0x53745f = _0x4b622d(_0x53745f);else try {
                      _0x53745f = _0x4b622d(_0x53745f);
                    } catch (_0x23d21b) {
                      _0x15c977 = {
                        'state': 'parsererror',
                        'error': _0x4b622d ? _0x23d21b : "No conversion from " + _0x2d93d9 + " to " + _0x53ba9a
                      };
                      break _0x62cdfb;
                    }
                  }
                }
              }
            }
            _0x15c977 = {
              'state': 'success',
              'data': _0x53745f
            };
          }
          _0x7e544e = _0x15c977, _0x590ce6 ? (_0x42c29b.ifModified && (_0x46a8c3 = _0x275c16.getResponseHeader('Last-Modified'), _0x46a8c3 && (_0x225465.lastModified[_0x448e22] = _0x46a8c3), _0x46a8c3 = _0x275c16.getResponseHeader('etag'), _0x46a8c3 && (_0x225465.etag[_0x448e22] = _0x46a8c3)), 0xcc === _0x2585d1 || 'HEAD' === _0x42c29b.type ? _0x5b273c = 'nocontent' : 0x130 === _0x2585d1 ? _0x5b273c = 'notmodified' : (_0x5b273c = _0x7e544e.state, _0x3371c1 = _0x7e544e.data, _0x17b844 = _0x7e544e.error, _0x590ce6 = !_0x17b844)) : (_0x17b844 = _0x5b273c, !_0x2585d1 && _0x5b273c || (_0x5b273c = 'error', 0x0 > _0x2585d1 && (_0x2585d1 = 0x0))), _0x275c16.status = _0x2585d1, _0x275c16.statusText = (_0x42fcee || _0x5b273c) + '', _0x590ce6 ? _0x3358b8.resolveWith(_0x2b404b, [_0x3371c1, _0x5b273c, _0x275c16]) : _0x3358b8.rejectWith(_0x2b404b, [_0x275c16, _0x5b273c, _0x17b844]), _0x275c16.statusCode(_0x8eaf6f), _0x8eaf6f = void 0x0, _0x14da58 && _0x201b09.trigger(_0x590ce6 ? 'ajaxSuccess' : 'ajaxError', [_0x275c16, _0x42c29b, _0x590ce6 ? _0x3371c1 : _0x17b844]), _0x249f2d.fireWith(_0x2b404b, [_0x275c16, _0x5b273c]), _0x14da58 && (_0x201b09.trigger('ajaxComplete', [_0x275c16, _0x42c29b]), --_0x225465.active || _0x225465.event.trigger('ajaxStop'));
        }
      }
      'object' == typeof _0x129651 && (_0x168e3d = _0x129651, _0x129651 = void 0x0), _0x168e3d = _0x168e3d || {};
      var _0xa3cadb,
        _0x448e22,
        _0x2e9937,
        _0x5c5db4,
        _0x424a4f,
        _0x4a828c,
        _0x415a48,
        _0x14da58,
        _0x330f75,
        _0x3c7032,
        _0x42c29b = _0x225465.ajaxSetup({}, _0x168e3d),
        _0x2b404b = _0x42c29b.context || _0x42c29b,
        _0x201b09 = _0x42c29b.context && (_0x2b404b.nodeType || _0x2b404b.jquery) ? _0x225465(_0x2b404b) : _0x225465.event,
        _0x3358b8 = _0x225465.Deferred(),
        _0x249f2d = _0x225465.Callbacks("once memory"),
        _0x8eaf6f = _0x42c29b.statusCode || {},
        _0x3cdd6a = {},
        _0x472c20 = {},
        _0x526024 = 'canceled',
        _0x275c16 = {
          'readyState': 0x0,
          'getResponseHeader': function (_0xa59c45) {
            var _0x1155f4;
            if (_0x415a48) {
              if (!_0x5c5db4) {
                for (_0x5c5db4 = {}; _0x1155f4 = _0x1766e8.exec(_0x2e9937);) _0x5c5db4[_0x1155f4[0x1].toLowerCase()] = _0x1155f4[0x2];
              }
              _0x1155f4 = _0x5c5db4[_0xa59c45.toLowerCase()];
            }
            return null == _0x1155f4 ? null : _0x1155f4;
          },
          'getAllResponseHeaders': function () {
            return _0x415a48 ? _0x2e9937 : null;
          },
          'setRequestHeader': function (_0x27c24f, _0x31ba05) {
            return null == _0x415a48 && (_0x27c24f = _0x472c20[_0x27c24f.toLowerCase()] = _0x472c20[_0x27c24f.toLowerCase()] || _0x27c24f, _0x3cdd6a[_0x27c24f] = _0x31ba05), this;
          },
          'overrideMimeType': function (_0x5c6065) {
            return null == _0x415a48 && (_0x42c29b.mimeType = _0x5c6065), this;
          },
          'statusCode': function (_0x333aca) {
            var _0x2ea539;
            if (_0x333aca) {
              if (_0x415a48) _0x275c16.always(_0x333aca[_0x275c16.status]);else {
                for (_0x2ea539 in _0x333aca) _0x8eaf6f[_0x2ea539] = [_0x8eaf6f[_0x2ea539], _0x333aca[_0x2ea539]];
              }
            }
            return this;
          },
          'abort': function (_0x503a2c) {
            return _0x503a2c = _0x503a2c || _0x526024, _0xa3cadb && _0xa3cadb.abort(_0x503a2c), _0x2d6122(0x0, _0x503a2c), this;
          }
        };
      if (_0x3358b8.promise(_0x275c16), _0x42c29b.url = ((_0x129651 || _0x42c29b.url || _0x4fa78b.href) + '').replace(_0x504a89, _0x4fa78b.protocol + '//'), _0x42c29b.type = _0x168e3d.method || _0x168e3d.type || _0x42c29b.method || _0x42c29b.type, _0x42c29b.dataTypes = (_0x42c29b.dataType || '*').toLowerCase().match(_0x10c9e2) || [''], null == _0x42c29b.crossDomain) {
        _0x4a828c = _0x16e0bd.createElement('a');
        try {
          _0x4a828c.href = _0x42c29b.url, _0x4a828c.href = _0x4a828c.href, _0x42c29b.crossDomain = _0x4cd077.protocol + '//' + _0x4cd077.host != _0x4a828c.protocol + '//' + _0x4a828c.host;
        } catch (_0x44b3d5) {
          _0x42c29b.crossDomain = !0x0;
        }
      }
      if (_0x42c29b.data && _0x42c29b.processData && 'string' != typeof _0x42c29b.data && (_0x42c29b.data = _0x225465.param(_0x42c29b.data, _0x42c29b.traditional)), _0x4a5678(_0x222165, _0x42c29b, _0x168e3d, _0x275c16), _0x415a48) return _0x275c16;
      (_0x14da58 = _0x225465.event && _0x42c29b.global) && 0x0 === _0x225465.active++ && _0x225465.event.trigger('ajaxStart'), _0x42c29b.type = _0x42c29b.type.toUpperCase(), _0x42c29b.hasContent = !_0x9021dc.test(_0x42c29b.type), _0x448e22 = _0x42c29b.url.replace(_0x3ecfcb, ''), _0x42c29b.hasContent ? _0x42c29b.data && _0x42c29b.processData && 0x0 === (_0x42c29b.contentType || '').indexOf('application/x-www-form-urlencoded') && (_0x42c29b.data = _0x42c29b.data.replace(_0x23bcc7, '+')) : (_0x3c7032 = _0x42c29b.url.slice(_0x448e22.length), _0x42c29b.data && (_0x448e22 += (_0x503446.test(_0x448e22) ? '&' : '?') + _0x42c29b.data, delete _0x42c29b.data), !0x1 === _0x42c29b.cache && (_0x448e22 = _0x448e22.replace(_0x40149e, '$1'), _0x3c7032 = (_0x503446.test(_0x448e22) ? '&' : '?') + '_=' + _0x1bdfb8++ + _0x3c7032), _0x42c29b.url = _0x448e22 + _0x3c7032), _0x42c29b.ifModified && (_0x225465.lastModified[_0x448e22] && _0x275c16.setRequestHeader('If-Modified-Since', _0x225465.lastModified[_0x448e22]), _0x225465.etag[_0x448e22] && _0x275c16.setRequestHeader('If-None-Match', _0x225465.etag[_0x448e22])), (_0x42c29b.data && _0x42c29b.hasContent && !0x1 !== _0x42c29b.contentType || _0x168e3d.contentType) && _0x275c16.setRequestHeader('Content-Type', _0x42c29b.contentType), _0x275c16.setRequestHeader('Accept', _0x42c29b.dataTypes[0x0] && _0x42c29b.accepts[_0x42c29b.dataTypes[0x0]] ? _0x42c29b.accepts[_0x42c29b.dataTypes[0x0]] + ('*' !== _0x42c29b.dataTypes[0x0] ? ", " + _0x4e7117 + "; q=0.01" : '') : _0x42c29b.accepts['*']);
      for (_0x330f75 in _0x42c29b.headers) _0x275c16.setRequestHeader(_0x330f75, _0x42c29b.headers[_0x330f75]);
      if (_0x42c29b.beforeSend && (!0x1 === _0x42c29b.beforeSend.call(_0x2b404b, _0x275c16, _0x42c29b) || _0x415a48)) return _0x275c16.abort();
      if (_0x526024 = 'abort', _0x249f2d.add(_0x42c29b.complete), _0x275c16.done(_0x42c29b.success), _0x275c16.fail(_0x42c29b.error), _0xa3cadb = _0x4a5678(_0x520db5, _0x42c29b, _0x168e3d, _0x275c16)) {
        if (_0x275c16.readyState = 0x1, _0x14da58 && _0x201b09.trigger('ajaxSend', [_0x275c16, _0x42c29b]), _0x415a48) return _0x275c16;
        _0x42c29b.async && 0x0 < _0x42c29b.timeout && (_0x424a4f = _0x10efb2.setTimeout(function () {
          _0x275c16.abort('timeout');
        }, _0x42c29b.timeout));
        try {
          _0x415a48 = !0x1, _0xa3cadb.send(_0x3cdd6a, _0x2d6122);
        } catch (_0x5f4afe) {
          if (_0x415a48) throw _0x5f4afe;
          _0x2d6122(-0x1, _0x5f4afe);
        }
      } else _0x2d6122(-0x1, "No Transport");
      return _0x275c16;
    },
    'getJSON': function (_0xb81970, _0x26eefd, _0x26ac5e) {
      return _0x225465.get(_0xb81970, _0x26eefd, _0x26ac5e, 'json');
    },
    'getScript': function (_0x122b8b, _0x25d144) {
      return _0x225465.get(_0x122b8b, void 0x0, _0x25d144, 'script');
    }
  }), _0x225465.each(['get', 'post'], function (_0x561ab5, _0x1b033c) {
    _0x225465[_0x1b033c] = function (_0x185e57, _0x2cc7d6, _0x302d09, _0x33e265) {
      return _0x225465.isFunction(_0x2cc7d6) && (_0x33e265 = _0x33e265 || _0x302d09, _0x302d09 = _0x2cc7d6, _0x2cc7d6 = void 0x0), _0x225465.ajax(_0x225465.extend({
        'url': _0x185e57,
        'type': _0x1b033c,
        'dataType': _0x33e265,
        'data': _0x2cc7d6,
        'success': _0x302d09
      }, _0x225465.isPlainObject(_0x185e57) && _0x185e57));
    };
  }), _0x225465._evalUrl = function (_0x2aa40f) {
    return _0x225465.ajax({
      'url': _0x2aa40f,
      'type': 'GET',
      'dataType': 'script',
      'cache': !0x0,
      'async': !0x1,
      'global': !0x1,
      'throws': !0x0
    });
  }, _0x225465.fn.extend({
    'wrapAll': function (_0x20d41c) {
      var _0x1a302b;
      return this[0x0] && (_0x225465.isFunction(_0x20d41c) && (_0x20d41c = _0x20d41c.call(this[0x0])), _0x1a302b = _0x225465(_0x20d41c, this[0x0].ownerDocument).eq(0x0).clone(!0x0), this[0x0].parentNode && _0x1a302b.insertBefore(this[0x0]), _0x1a302b.map(function () {
        for (var _0x55af9e = this; _0x55af9e.firstElementChild;) _0x55af9e = _0x55af9e.firstElementChild;
        return _0x55af9e;
      }).append(this)), this;
    },
    'wrapInner': function (_0x46080b) {
      return _0x225465.isFunction(_0x46080b) ? this.each(function (_0x371c76) {
        _0x225465(this).wrapInner(_0x46080b.call(this, _0x371c76));
      }) : this.each(function () {
        var _0x1a40a6 = _0x225465(this),
          _0xe9be99 = _0x1a40a6.contents();
        _0xe9be99.length ? _0xe9be99.wrapAll(_0x46080b) : _0x1a40a6.append(_0x46080b);
      });
    },
    'wrap': function (_0x4f122b) {
      var _0x5ab8ce = _0x225465.isFunction(_0x4f122b);
      return this.each(function (_0x1c00d9) {
        _0x225465(this).wrapAll(_0x5ab8ce ? _0x4f122b.call(this, _0x1c00d9) : _0x4f122b);
      });
    },
    'unwrap': function (_0x5b6750) {
      return this.parent(_0x5b6750).not('body').each(function () {
        _0x225465(this).replaceWith(this.childNodes);
      }), this;
    }
  }), _0x225465.expr.pseudos.hidden = function (_0x3721d0) {
    return !_0x225465.expr.pseudos.visible(_0x3721d0);
  }, _0x225465.expr.pseudos.visible = function (_0x1696b5) {
    return !(!_0x1696b5.offsetWidth && !_0x1696b5.offsetHeight && !_0x1696b5.getClientRects().length);
  }, _0x225465.ajaxSettings.xhr = function () {
    try {
      return new _0x10efb2.XMLHttpRequest();
    } catch (_0x3a089d) {}
  };
  var _0x1de631 = {
      '0': 0xc8,
      0x4c7: 0xcc
    },
    _0x173806 = _0x225465.ajaxSettings.xhr();
  _0x509db7.cors = !!_0x173806 && 'withCredentials' in _0x173806, _0x509db7.ajax = _0x173806 = !!_0x173806, _0x225465.ajaxTransport(function (_0x556add) {
    var _0x289a6f, _0x4e1bc7;
    if (_0x509db7.cors || _0x173806 && !_0x556add.crossDomain) return {
      'send': function (_0x338a77, _0x3ad4df) {
        var _0x3a7391,
          _0xb773e3 = _0x556add.xhr();
        if (_0xb773e3.open(_0x556add.type, _0x556add.url, _0x556add.async, _0x556add.username, _0x556add.password), _0x556add.xhrFields) {
          for (_0x3a7391 in _0x556add.xhrFields) _0xb773e3[_0x3a7391] = _0x556add.xhrFields[_0x3a7391];
        }
        _0x556add.mimeType && _0xb773e3.overrideMimeType && _0xb773e3.overrideMimeType(_0x556add.mimeType), _0x556add.crossDomain || _0x338a77['X-Requested-With'] || (_0x338a77['X-Requested-With'] = 'XMLHttpRequest');
        for (_0x3a7391 in _0x338a77) _0xb773e3.setRequestHeader(_0x3a7391, _0x338a77[_0x3a7391]);
        _0x289a6f = function (_0x4750eb) {
          return function () {
            _0x289a6f && (_0x289a6f = _0x4e1bc7 = _0xb773e3.onload = _0xb773e3.onerror = _0xb773e3.onabort = _0xb773e3.onreadystatechange = null, 'abort' === _0x4750eb ? _0xb773e3.abort() : 'error' === _0x4750eb ? 'number' != typeof _0xb773e3.status ? _0x3ad4df(0x0, 'error') : _0x3ad4df(_0xb773e3.status, _0xb773e3.statusText) : _0x3ad4df(_0x1de631[_0xb773e3.status] || _0xb773e3.status, _0xb773e3.statusText, 'text' !== (_0xb773e3.responseType || 'text') || 'string' != typeof _0xb773e3.responseText ? {
              'binary': _0xb773e3.response
            } : {
              'text': _0xb773e3.responseText
            }, _0xb773e3.getAllResponseHeaders()));
          };
        }, _0xb773e3.onload = _0x289a6f(), _0x4e1bc7 = _0xb773e3.onerror = _0x289a6f('error'), void 0x0 !== _0xb773e3.onabort ? _0xb773e3.onabort = _0x4e1bc7 : _0xb773e3.onreadystatechange = function () {
          0x4 === _0xb773e3.readyState && _0x10efb2.setTimeout(function () {
            _0x289a6f && _0x4e1bc7();
          });
        }, _0x289a6f = _0x289a6f('abort');
        try {
          _0xb773e3.send(_0x556add.hasContent && _0x556add.data || null);
        } catch (_0x5266ad) {
          if (_0x289a6f) throw _0x5266ad;
        }
      },
      'abort': function () {
        _0x289a6f && _0x289a6f();
      }
    };
  }), _0x225465.ajaxPrefilter(function (_0x276b32) {
    _0x276b32.crossDomain && (_0x276b32.contents.script = !0x1);
  }), _0x225465.ajaxSetup({
    'accepts': {
      'script': "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
    },
    'contents': {
      'script': /\b(?:java|ecma)script\b/
    },
    'converters': {
      "text script": function (_0x21e846) {
        return _0x225465.globalEval(_0x21e846), _0x21e846;
      }
    }
  }), _0x225465.ajaxPrefilter('script', function (_0x4b9049) {
    void 0x0 === _0x4b9049.cache && (_0x4b9049.cache = !0x1), _0x4b9049.crossDomain && (_0x4b9049.type = 'GET');
  }), _0x225465.ajaxTransport('script', function (_0x43930f) {
    if (_0x43930f.crossDomain) {
      var _0x1b2788, _0x234bf0;
      return {
        'send': function (_0x1e1669, _0x5ee1b3) {
          _0x1b2788 = _0x225465('<script>').prop({
            'charset': _0x43930f.scriptCharset,
            'src': _0x43930f.url
          }).on("load error", _0x234bf0 = function (_0x15275c) {
            _0x1b2788.remove(), _0x234bf0 = null, _0x15275c && _0x5ee1b3('error' === _0x15275c.type ? 0x194 : 0xc8, _0x15275c.type);
          }), _0x16e0bd.head.appendChild(_0x1b2788[0x0]);
        },
        'abort': function () {
          _0x234bf0 && _0x234bf0();
        }
      };
    }
  });
  var _0x317c45 = [],
    _0x31137f = /(=)\?(?=&|$)|\?\?/;
  _0x225465.ajaxSetup({
    'jsonp': 'callback',
    'jsonpCallback': function () {
      var _0x510614 = _0x317c45.pop() || _0x225465.expando + '_' + _0x1bdfb8++;
      return this[_0x510614] = !0x0, _0x510614;
    }
  }), _0x225465.ajaxPrefilter("json jsonp", function (_0x52f638, _0x598809, _0x501dc6) {
    var _0x34bda7,
      _0x1c4c96,
      _0x11b0d9,
      _0x2d9006 = !0x1 !== _0x52f638.jsonp && (_0x31137f.test(_0x52f638.url) ? 'url' : 'string' == typeof _0x52f638.data && 0x0 === (_0x52f638.contentType || '').indexOf('application/x-www-form-urlencoded') && _0x31137f.test(_0x52f638.data) && 'data');
    if (_0x2d9006 || 'jsonp' === _0x52f638.dataTypes[0x0]) return _0x34bda7 = _0x52f638.jsonpCallback = _0x225465.isFunction(_0x52f638.jsonpCallback) ? _0x52f638.jsonpCallback() : _0x52f638.jsonpCallback, _0x2d9006 ? _0x52f638[_0x2d9006] = _0x52f638[_0x2d9006].replace(_0x31137f, '$1' + _0x34bda7) : !0x1 !== _0x52f638.jsonp && (_0x52f638.url += (_0x503446.test(_0x52f638.url) ? '&' : '?') + _0x52f638.jsonp + '=' + _0x34bda7), _0x52f638.converters["script json"] = function () {
      return _0x11b0d9 || _0x225465.error(_0x34bda7 + " was not called"), _0x11b0d9[0x0];
    }, _0x52f638.dataTypes[0x0] = 'json', _0x1c4c96 = _0x10efb2[_0x34bda7], _0x10efb2[_0x34bda7] = function () {
      _0x11b0d9 = arguments;
    }, _0x501dc6.always(function () {
      void 0x0 === _0x1c4c96 ? _0x225465(_0x10efb2).removeProp(_0x34bda7) : _0x10efb2[_0x34bda7] = _0x1c4c96, _0x52f638[_0x34bda7] && (_0x52f638.jsonpCallback = _0x598809.jsonpCallback, _0x317c45.push(_0x34bda7)), _0x11b0d9 && _0x225465.isFunction(_0x1c4c96) && _0x1c4c96(_0x11b0d9[0x0]), _0x11b0d9 = _0x1c4c96 = void 0x0;
    }), 'script';
  });
  var _0x2899b6 = _0x509db7,
    _0x23922d,
    _0x298899 = _0x16e0bd.implementation.createHTMLDocument('').body;
  _0x23922d = (_0x298899.innerHTML = '<form></form><form></form>', 0x2 === _0x298899.childNodes.length), _0x2899b6.createHTMLDocument = _0x23922d, _0x225465.parseHTML = function (_0x4ab987, _0x2a9bb5, _0x56d3bc) {
    if ('string' != typeof _0x4ab987) return [];
    'boolean' == typeof _0x2a9bb5 && (_0x56d3bc = _0x2a9bb5, _0x2a9bb5 = !0x1);
    var _0x1604fd, _0x46e53d, _0x2b7946;
    return _0x2a9bb5 || (_0x509db7.createHTMLDocument ? (_0x2a9bb5 = _0x16e0bd.implementation.createHTMLDocument(''), _0x1604fd = _0x2a9bb5.createElement('base'), _0x1604fd.href = _0x16e0bd.location.href, _0x2a9bb5.head.appendChild(_0x1604fd)) : _0x2a9bb5 = _0x16e0bd), _0x46e53d = _0x4fa015.exec(_0x4ab987), _0x2b7946 = !_0x56d3bc && [], _0x46e53d ? [_0x2a9bb5.createElement(_0x46e53d[0x1])] : (_0x46e53d = _0x2c0976([_0x4ab987], _0x2a9bb5, _0x2b7946), _0x2b7946 && _0x2b7946.length && _0x225465(_0x2b7946).remove(), _0x225465.merge([], _0x46e53d.childNodes));
  }, _0x225465.fn.load = function (_0x4de661, _0x3d732b, _0x3856d5) {
    var _0x44c003,
      _0x40de7b,
      _0x33b1c7,
      _0x374131 = this,
      _0x357b4d = _0x4de661.indexOf(" ");
    return -0x1 < _0x357b4d && (_0x44c003 = _0xb51c8d(_0x4de661.slice(_0x357b4d)), _0x4de661 = _0x4de661.slice(0x0, _0x357b4d)), _0x225465.isFunction(_0x3d732b) ? (_0x3856d5 = _0x3d732b, _0x3d732b = void 0x0) : _0x3d732b && 'object' == typeof _0x3d732b && (_0x40de7b = 'POST'), 0x0 < _0x374131.length && _0x225465.ajax({
      'url': _0x4de661,
      'type': _0x40de7b || 'GET',
      'dataType': 'html',
      'data': _0x3d732b
    }).done(function (_0xeb8500) {
      _0x33b1c7 = arguments, _0x374131.html(_0x44c003 ? _0x225465('<div>').append(_0x225465.parseHTML(_0xeb8500)).find(_0x44c003) : _0xeb8500);
    }).always(_0x3856d5 && function (_0x576bce, _0x15ab43) {
      _0x374131.each(function () {
        _0x3856d5.apply(this, _0x33b1c7 || [_0x576bce.responseText, _0x15ab43, _0x576bce]);
      });
    }), this;
  }, _0x225465.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (_0x426d83, _0x989ffa) {
    _0x225465.fn[_0x989ffa] = function (_0x23174a) {
      return this.on(_0x989ffa, _0x23174a);
    };
  }), _0x225465.expr.pseudos.animated = function (_0x52b89a) {
    return _0x225465.grep(_0x225465.timers, function (_0x227d1e) {
      return _0x52b89a === _0x227d1e.elem;
    }).length;
  }, _0x225465.offset = {
    'setOffset': function (_0x63f1fd, _0x3468ec, _0x341128) {
      var _0x4fd84b,
        _0x13b6ae,
        _0x4ed4a4,
        _0x159342,
        _0x221220,
        _0xd404f2,
        _0x5345fc = _0x225465.css(_0x63f1fd, 'position'),
        _0x30a021 = _0x225465(_0x63f1fd),
        _0x2e688d = {};
      'static' === _0x5345fc && (_0x63f1fd.style.position = 'relative'), _0x221220 = _0x30a021.offset(), _0x4ed4a4 = _0x225465.css(_0x63f1fd, 'top'), _0xd404f2 = _0x225465.css(_0x63f1fd, 'left'), ('absolute' === _0x5345fc || 'fixed' === _0x5345fc) && -0x1 < (_0x4ed4a4 + _0xd404f2).indexOf('auto') ? (_0x4fd84b = _0x30a021.position(), _0x159342 = _0x4fd84b.top, _0x13b6ae = _0x4fd84b.left) : (_0x159342 = parseFloat(_0x4ed4a4) || 0x0, _0x13b6ae = parseFloat(_0xd404f2) || 0x0), _0x225465.isFunction(_0x3468ec) && (_0x3468ec = _0x3468ec.call(_0x63f1fd, _0x341128, _0x225465.extend({}, _0x221220))), null != _0x3468ec.top && (_0x2e688d.top = _0x3468ec.top - _0x221220.top + _0x159342), null != _0x3468ec.left && (_0x2e688d.left = _0x3468ec.left - _0x221220.left + _0x13b6ae), 'using' in _0x3468ec ? _0x3468ec.using.call(_0x63f1fd, _0x2e688d) : _0x30a021.css(_0x2e688d);
    }
  }, _0x225465.fn.extend({
    'offset': function (_0x31c4e9) {
      if (arguments.length) return void 0x0 === _0x31c4e9 ? this : this.each(function (_0x5f0513) {
        _0x225465.offset.setOffset(this, _0x31c4e9, _0x5f0513);
      });
      var _0x201d54,
        _0x49f892,
        _0x1b1bb0,
        _0x15ec54,
        _0x23c9bb = this[0x0];
      if (_0x23c9bb) return _0x23c9bb.getClientRects().length ? (_0x1b1bb0 = _0x23c9bb.getBoundingClientRect(), _0x201d54 = _0x23c9bb.ownerDocument, _0x49f892 = _0x201d54.documentElement, _0x15ec54 = _0x201d54.defaultView, {
        'top': _0x1b1bb0.top + _0x15ec54.pageYOffset - _0x49f892.clientTop,
        'left': _0x1b1bb0.left + _0x15ec54.pageXOffset - _0x49f892.clientLeft
      }) : {
        'top': 0x0,
        'left': 0x0
      };
    },
    'position': function () {
      if (this[0x0]) {
        var _0x43cc06,
          _0x3eaa2c,
          _0x2e13a3 = this[0x0],
          _0x1cf9b2 = {
            'top': 0x0,
            'left': 0x0
          };
        return 'fixed' === _0x225465.css(_0x2e13a3, 'position') ? _0x3eaa2c = _0x2e13a3.getBoundingClientRect() : (_0x43cc06 = this.offsetParent(), _0x3eaa2c = this.offset(), _0x4e3d3f(_0x43cc06[0x0], 'html') || (_0x1cf9b2 = _0x43cc06.offset()), _0x1cf9b2 = {
          'top': _0x1cf9b2.top + _0x225465.css(_0x43cc06[0x0], 'borderTopWidth', !0x0),
          'left': _0x1cf9b2.left + _0x225465.css(_0x43cc06[0x0], 'borderLeftWidth', !0x0)
        }), {
          'top': _0x3eaa2c.top - _0x1cf9b2.top - _0x225465.css(_0x2e13a3, 'marginTop', !0x0),
          'left': _0x3eaa2c.left - _0x1cf9b2.left - _0x225465.css(_0x2e13a3, 'marginLeft', !0x0)
        };
      }
    },
    'offsetParent': function () {
      return this.map(function () {
        for (var _0x12a370 = this.offsetParent; _0x12a370 && 'static' === _0x225465.css(_0x12a370, 'position');) _0x12a370 = _0x12a370.offsetParent;
        return _0x12a370 || _0x4bcb70;
      });
    }
  }), _0x225465.each({
    'scrollLeft': 'pageXOffset',
    'scrollTop': 'pageYOffset'
  }, function (_0x4123db, _0x468ca8) {
    var _0x1e7472 = 'pageYOffset' === _0x468ca8;
    _0x225465.fn[_0x4123db] = function (_0x4c57a2) {
      return _0x26df6d(this, function (_0x11b89d, _0x5a5d8a, _0x35741d) {
        var _0x39842f;
        return _0x225465.isWindow(_0x11b89d) ? _0x39842f = _0x11b89d : 0x9 === _0x11b89d.nodeType && (_0x39842f = _0x11b89d.defaultView), void 0x0 === _0x35741d ? _0x39842f ? _0x39842f[_0x468ca8] : _0x11b89d[_0x5a5d8a] : void (_0x39842f ? _0x39842f.scrollTo(_0x1e7472 ? _0x39842f.pageXOffset : _0x35741d, _0x1e7472 ? _0x35741d : _0x39842f.pageYOffset) : _0x11b89d[_0x5a5d8a] = _0x35741d);
      }, _0x4123db, _0x4c57a2, arguments.length);
    };
  }), _0x225465.each(['top', 'left'], function (_0x2fa1e4, _0x10db44) {
    _0x225465.cssHooks[_0x10db44] = _0x433761(_0x509db7.pixelPosition, function (_0x87b0c3, _0x380d37) {
      if (_0x380d37) return _0x380d37 = _0x34fa99(_0x87b0c3, _0x10db44), _0x132dc9.test(_0x380d37) ? _0x225465(_0x87b0c3).position()[_0x10db44] + 'px' : _0x380d37;
    });
  }), _0x225465.each({
    'Height': 'height',
    'Width': 'width'
  }, function (_0x55a27c, _0x50c373) {
    _0x225465.each({
      'padding': 'inner' + _0x55a27c,
      'content': _0x50c373,
      '': 'outer' + _0x55a27c
    }, function (_0x42952a, _0x4d0495) {
      _0x225465.fn[_0x4d0495] = function (_0x51c525, _0x57598f) {
        var _0x16f0d2 = arguments.length && (_0x42952a || 'boolean' != typeof _0x51c525),
          _0x4d0502 = _0x42952a || (!0x0 === _0x51c525 || !0x0 === _0x57598f ? 'margin' : 'border');
        return _0x26df6d(this, function (_0x35c8a2, _0x103ef4, _0x165839) {
          var _0x2e8b1b;
          return _0x225465.isWindow(_0x35c8a2) ? 0x0 === _0x4d0495.indexOf('outer') ? _0x35c8a2['inner' + _0x55a27c] : _0x35c8a2.document.documentElement['client' + _0x55a27c] : 0x9 === _0x35c8a2.nodeType ? (_0x2e8b1b = _0x35c8a2.documentElement, Math.max(_0x35c8a2.body['scroll' + _0x55a27c], _0x2e8b1b['scroll' + _0x55a27c], _0x35c8a2.body['offset' + _0x55a27c], _0x2e8b1b['offset' + _0x55a27c], _0x2e8b1b['client' + _0x55a27c])) : void 0x0 === _0x165839 ? _0x225465.css(_0x35c8a2, _0x103ef4, _0x4d0502) : _0x225465.style(_0x35c8a2, _0x103ef4, _0x165839, _0x4d0502);
        }, _0x50c373, _0x16f0d2 ? _0x51c525 : void 0x0, _0x16f0d2);
      };
    });
  }), _0x225465.fn.extend({
    'bind': function (_0x36a811, _0x5be95c, _0xc2d0db) {
      return this.on(_0x36a811, null, _0x5be95c, _0xc2d0db);
    },
    'unbind': function (_0x598429, _0x32ae95) {
      return this.off(_0x598429, null, _0x32ae95);
    },
    'delegate': function (_0x3eaad1, _0x2aad94, _0x1bcee8, _0x2e5d62) {
      return this.on(_0x2aad94, _0x3eaad1, _0x1bcee8, _0x2e5d62);
    },
    'undelegate': function (_0x2250e9, _0x1ea9ff, _0x57094c) {
      return 0x1 === arguments.length ? this.off(_0x2250e9, '**') : this.off(_0x1ea9ff, _0x2250e9 || '**', _0x57094c);
    }
  }), _0x225465.holdReady = function (_0xce068e) {
    _0xce068e ? _0x225465.readyWait++ : _0x225465.ready(!0x0);
  }, _0x225465.isArray = Array.isArray, _0x225465.parseJSON = JSON.parse, _0x225465.nodeName = _0x4e3d3f, 'function' == typeof define && define.amd && define('jquery', [], function () {
    return _0x225465;
  });
  var _0x203505 = _0x10efb2.jQuery,
    _0x3675ef = _0x10efb2.$;
  return _0x225465.noConflict = function (_0x5a82bd) {
    return _0x10efb2.$ === _0x225465 && (_0x10efb2.$ = _0x3675ef), _0x5a82bd && _0x10efb2.jQuery === _0x225465 && (_0x10efb2.jQuery = _0x203505), _0x225465;
  }, _0x383a7b || (_0x10efb2.jQuery = _0x10efb2.$ = _0x225465), _0x225465;
});
function getInternetExplorerVersion() {
  var _0x4e6842 = -0x1;
  return "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (_0x4e6842 = parseFloat(RegExp.$1)), _0x4e6842;
}
var ie = getInternetExplorerVersion();
function getQueryVariable(_0x42c834) {
  for (var _0x27cc3d = window.location.search.substring(0x1).split('&'), _0x4dc970 = 0x0; _0x4dc970 < _0x27cc3d.length; _0x4dc970++) {
    var _0x2aabd0 = _0x27cc3d[_0x4dc970].match(/([^=]+?)=(.+)/);
    if (_0x2aabd0 && decodeURIComponent(_0x2aabd0[0x1]) == _0x42c834) return decodeURIComponent(_0x2aabd0[0x2]);
  }
}
this.jukebox = {}, jukebox.Player = function (_0x39423d, _0x2048c2) {
  this.id = ++jukebox.__jukeboxId, this.origin = _0x2048c2 || null, this.settings = {};
  for (var _0x2afab9 in this.defaults) this.settings[_0x2afab9] = this.defaults[_0x2afab9];
  if ("[object Object]" === Object.prototype.toString.call(_0x39423d)) {
    for (var _0x311e39 in _0x39423d) this.settings[_0x311e39] = _0x39423d[_0x311e39];
  }
  "[object Function]" === Object.prototype.toString.call(jukebox.Manager) && (jukebox.Manager = new jukebox.Manager()), this.resource = this.isPlaying = null, this.resource = "[object Object]" === Object.prototype.toString.call(jukebox.Manager) ? jukebox.Manager.getPlayableResource(this.settings.resources) : this.settings.resources[0x0] || null;
  if (null === this.resource) throw "Your browser can't playback the given resources - or you have missed to include jukebox.Manager";
  return this.__init(), this;
}, jukebox.__jukeboxId = 0x0, jukebox.Player.prototype = {
  'defaults': {
    'resources': [],
    'autoplay': !0x1,
    'spritemap': {},
    'flashMediaElement': './swf/FlashMediaElement.swf',
    'timeout': 0x3e8
  },
  '__addToManager': function () {
    !0x0 !== this.__wasAddedToManager && (jukebox.Manager.add(this), this.__wasAddedToManager = !0x0);
  },
  '__init': function () {
    var _0x2b075a = this,
      _0x551528 = this.settings,
      _0x5a5bd2 = {},
      _0x99596e;
    jukebox.Manager && void 0x0 !== jukebox.Manager.features && (_0x5a5bd2 = jukebox.Manager.features);
    if (!0x0 === _0x5a5bd2.html5audio) {
      this.context = new Audio(), this.context.src = this.resource;
      if (null === this.origin) {
        var _0x200dae = function (_0x4001fc) {
          _0x2b075a.__addToManager(_0x4001fc);
        };
        this.context.addEventListener('canplaythrough', _0x200dae, !0x0), window.setTimeout(function () {
          _0x2b075a.context.removeEventListener('canplaythrough', _0x200dae, !0x0), _0x200dae('timeout');
        }, _0x551528.timeout);
      }
      this.context.autobuffer = !0x0, this.context.preload = !0x0;
      for (_0x99596e in this.HTML5API) this[_0x99596e] = this.HTML5API[_0x99596e];
      0x1 < _0x5a5bd2.channels ? !0x0 === _0x551528.autoplay ? this.context.autoplay = !0x0 : void 0x0 !== _0x551528.spritemap[_0x551528.autoplay] && this.play(_0x551528.autoplay) : 0x1 === _0x5a5bd2.channels && void 0x0 !== _0x551528.spritemap[_0x551528.autoplay] && (this.backgroundMusic = _0x551528.spritemap[_0x551528.autoplay], this.backgroundMusic.started = Date.now ? Date.now() : +new Date(), this.play(_0x551528.autoplay)), 0x1 == _0x5a5bd2.channels && !0x0 !== _0x551528.canPlayBackground && (window.addEventListener('pagehide', function () {
        null !== _0x2b075a.isPlaying && (_0x2b075a.pause(), _0x2b075a.__wasAutoPaused = !0x0);
      }), window.addEventListener('pageshow', function () {
        _0x2b075a.__wasAutoPaused && (_0x2b075a.resume(), delete _0x2b075a._wasAutoPaused);
      }));
    } else {
      if (!0x0 === _0x5a5bd2.flashaudio) {
        for (_0x99596e in this.FLASHAPI) this[_0x99596e] = this.FLASHAPI[_0x99596e];
        _0x5a5bd2 = ['id=jukebox-flashstream-' + this.id, 'autoplay=' + _0x551528.autoplay, 'file=' + window.encodeURIComponent(this.resource)], this.__initFlashContext(_0x5a5bd2), !0x0 === _0x551528.autoplay ? this.play(0x0) : _0x551528.spritemap[_0x551528.autoplay] && this.play(_0x551528.autoplay);
      } else throw "Your Browser does not support Flash Audio or HTML5 Audio.";
    }
  },
  '__initFlashContext': function (_0x2dcff7) {
    var _0x217f37,
      _0x198814 = this.settings.flashMediaElement,
      _0x5777c0,
      _0x3366b6 = {
        'flashvars': _0x2dcff7.join('&'),
        'quality': 'high',
        'bgcolor': '#000000',
        'wmode': 'transparent',
        'allowscriptaccess': 'always',
        'allowfullscreen': 'true'
      };
    if (navigator.userAgent.match(/MSIE/)) {
      _0x217f37 = document.createElement('div'), document.getElementsByTagName('body')[0x0].appendChild(_0x217f37);
      var _0x37c786 = document.createElement('object');
      _0x37c786.id = 'jukebox-flashstream-' + this.id, _0x37c786.setAttribute('type', 'application/x-shockwave-flash'), _0x37c786.setAttribute('classid', 'clsid:d27cdb6e-ae6d-11cf-96b8-444553540000'), _0x37c786.setAttribute('width', '0'), _0x37c786.setAttribute('height', '0'), _0x3366b6.movie = _0x198814 + '?x=' + (Date.now ? Date.now() : +new Date()), _0x3366b6.flashvars = _0x2dcff7.join('&amp;');
      for (_0x5777c0 in _0x3366b6) _0x2dcff7 = document.createElement('param'), _0x2dcff7.setAttribute('name', _0x5777c0), _0x2dcff7.setAttribute('value', _0x3366b6[_0x5777c0]), _0x37c786.appendChild(_0x2dcff7);
      _0x217f37.outerHTML = _0x37c786.outerHTML, this.context = document.getElementById('jukebox-flashstream-' + this.id);
    } else {
      _0x217f37 = document.createElement('embed'), _0x217f37.id = 'jukebox-flashstream-' + this.id, _0x217f37.setAttribute('type', 'application/x-shockwave-flash'), _0x217f37.setAttribute('width', '100'), _0x217f37.setAttribute('height', '100'), _0x3366b6.play = !0x1, _0x3366b6.loop = !0x1, _0x3366b6.src = _0x198814 + '?x=' + (Date.now ? Date.now() : +new Date());
      for (_0x5777c0 in _0x3366b6) _0x217f37.setAttribute(_0x5777c0, _0x3366b6[_0x5777c0]);
      document.getElementsByTagName('body')[0x0].appendChild(_0x217f37), this.context = _0x217f37;
    }
  },
  'backgroundHackForiOS': function () {
    if (void 0x0 !== this.backgroundMusic) {
      var _0x2492d2 = Date.now ? Date.now() : +new Date();
      void 0x0 === this.backgroundMusic.started ? (this.backgroundMusic.started = _0x2492d2, this.setCurrentTime(this.backgroundMusic.start)) : (this.backgroundMusic.lastPointer = (_0x2492d2 - this.backgroundMusic.started) / 0x3e8 % (this.backgroundMusic.end - this.backgroundMusic.start) + this.backgroundMusic.start, this.play(this.backgroundMusic.lastPointer));
    }
  },
  'play': function (_0xd18dcd, _0x1183ff) {
    if (null !== this.isPlaying && !0x0 !== _0x1183ff) void 0x0 !== jukebox.Manager && jukebox.Manager.addToQueue(_0xd18dcd, this.id);else {
      var _0x4c9f8e = this.settings.spritemap,
        _0x4b69d3;
      if (void 0x0 !== _0x4c9f8e[_0xd18dcd]) _0x4b69d3 = _0x4c9f8e[_0xd18dcd].start;else {
        if ('number' === typeof _0xd18dcd) {
          _0x4b69d3 = _0xd18dcd;
          for (var _0x1191c6 in _0x4c9f8e) if (_0x4b69d3 >= _0x4c9f8e[_0x1191c6].start && _0x4b69d3 <= _0x4c9f8e[_0x1191c6].end) {
            _0xd18dcd = _0x1191c6;
            break;
          }
        }
      }
      void 0x0 !== _0x4b69d3 && "[object Object]" === Object.prototype.toString.call(_0x4c9f8e[_0xd18dcd]) && (this.isPlaying = this.settings.spritemap[_0xd18dcd], this.context.play && this.context.play(), this.wasReady = this.setCurrentTime(_0x4b69d3));
    }
  },
  'stop': function () {
    return this.__lastPosition = 0x0, this.isPlaying = null, this.backgroundMusic ? this.backgroundHackForiOS() : this.context.pause(), !0x0;
  },
  'pause': function () {
    return this.isPlaying = null, this.__lastPosition = this.getCurrentTime(), this.context.pause(), this.__lastPosition;
  },
  'resume': function (_0x409684) {
    _0x409684 = 'number' === typeof _0x409684 ? _0x409684 : this.__lastPosition;
    if (null !== _0x409684) return this.play(_0x409684), this.__lastPosition = null, !0x0;
    return this.context.play(), !0x1;
  },
  'HTML5API': {
    'getVolume': function () {
      return this.context.volume || 0x1;
    },
    'setVolume': function (_0x57be2b) {
      return this.context.volume = _0x57be2b, 0.0001 > Math.abs(this.context.volume - _0x57be2b) ? !0x0 : !0x1;
    },
    'getCurrentTime': function () {
      return this.context.currentTime || 0x0;
    },
    'setCurrentTime': function (_0x4ee654) {
      try {
        return this.context.currentTime = _0x4ee654, !0x0;
      } catch (_0x3d0a61) {
        return !0x1;
      }
    }
  },
  'FLASHAPI': {
    'getVolume': function () {
      return this.context && 'function' === typeof this.context.getVolume ? this.context.getVolume() : 0x1;
    },
    'setVolume': function (_0x46fe02) {
      return this.context && 'function' === typeof this.context.setVolume ? (this.context.setVolume(_0x46fe02), !0x0) : !0x1;
    },
    'getCurrentTime': function () {
      return this.context && 'function' === typeof this.context.getCurrentTime ? this.context.getCurrentTime() : 0x0;
    },
    'setCurrentTime': function (_0x5d548f) {
      return this.context && 'function' === typeof this.context.setCurrentTime ? this.context.setCurrentTime(_0x5d548f) : !0x1;
    }
  }
};
if (void 0x0 === this.jukebox) throw "jukebox.Manager requires jukebox.Player (Player.js) to run properly.";
jukebox.Manager = function (_0x1ac3a7) {
  this.features = {}, this.codecs = {}, this.__players = {}, this.__playersLength = 0x0, this.__clones = {}, this.__queue = [], this.settings = {};
  for (var _0x25b033 in this.defaults) this.settings[_0x25b033] = this.defaults[_0x25b033];
  if ("[object Object]" === Object.prototype.toString.call(_0x1ac3a7)) {
    for (var _0x3b8318 in _0x1ac3a7) this.settings[_0x3b8318] = _0x1ac3a7[_0x3b8318];
  }
  this.__detectFeatures(), jukebox.Manager.__initialized = !0x1 === this.settings.useGameLoop ? window.setInterval(function () {
    jukebox.Manager.loop();
  }, 0x14) : !0x0;
}, jukebox.Manager.prototype = {
  'defaults': {
    'useFlash': !0x1,
    'useGameLoop': !0x1
  },
  '__detectFeatures': function () {
    var _0x4409ed = window.Audio && new Audio();
    if (_0x4409ed && _0x4409ed.canPlayType && !0x1 === this.settings.useFlash) {
      for (var _0x375b6c = [{
          'e': '3gp',
          'm': ['audio/3gpp', 'audio/amr']
        }, {
          'e': 'aac',
          'm': ['audio/aac', 'audio/aacp']
        }, {
          'e': 'amr',
          'm': ['audio/amr', 'audio/3gpp']
        }, {
          'e': 'caf',
          'm': ['audio/IMA-ADPCM', 'audio/x-adpcm', "audio/x-aiff; codecs=\"IMA-ADPCM, ADPCM\""]
        }, {
          'e': 'm4a',
          'm': "audio/mp4{audio/mp4; codecs=\"mp4a.40.2,avc1.42E01E\"{audio/mpeg4{audio/mpeg4-generic{audio/mp4a-latm{audio/MP4A-LATM{audio/x-m4a".split('{')
        }, {
          'e': 'mp3',
          'm': ['audio/mp3', 'audio/mpeg', "audio/mpeg; codecs=\"mp3\"", 'audio/MPA', 'audio/mpa-robust']
        }, {
          'e': 'mpga',
          'm': ['audio/MPA', 'audio/mpa-robust', 'audio/mpeg', 'video/mpeg']
        }, {
          'e': 'mp4',
          'm': ['audio/mp4', 'video/mp4']
        }, {
          'e': 'ogg',
          'm': ['application/ogg', 'audio/ogg', "audio/ogg; codecs=\"theora, vorbis\"", 'video/ogg', "video/ogg; codecs=\"theora, vorbis\""]
        }, {
          'e': 'wav',
          'm': ['audio/wave', 'audio/wav', "audio/wav; codecs=\"1\"", 'audio/x-wav', 'audio/x-pn-wav']
        }, {
          'e': 'webm',
          'm': ['audio/webm', "audio/webm; codecs=\"vorbis\"", 'video/webm']
        }], _0x505f6f, _0x528408, _0x204def = 0x0, _0x2685ce = _0x375b6c.length; _0x204def < _0x2685ce; _0x204def++) if (_0x528408 = _0x375b6c[_0x204def].e, _0x375b6c[_0x204def].m.length && 'object' === typeof _0x375b6c[_0x204def].m) {
        for (var _0x847b22 = 0x0, _0x3bda23 = _0x375b6c[_0x204def].m.length; _0x847b22 < _0x3bda23; _0x847b22++) if (_0x505f6f = _0x375b6c[_0x204def].m[_0x847b22], '' !== _0x4409ed.canPlayType(_0x505f6f)) {
          this.codecs[_0x528408] = _0x505f6f;
          break;
        } else this.codecs[_0x528408] || (this.codecs[_0x528408] = !0x1);
      }
      this.features.html5audio = !(!this.codecs.mp3 && !this.codecs.ogg && !this.codecs.webm && !this.codecs.wav), this.features.channels = 0x8, _0x4409ed.volume = 0.1337, this.features.volume = !!(0.0001 > Math.abs(_0x4409ed.volume - 0.1337)), navigator.userAgent.match(/iPhone|iPod|iPad/i) && (this.features.channels = 0x1);
    }
    this.features.flashaudio = !!navigator.mimeTypes['application/x-shockwave-flash'] || !!navigator.plugins["Shockwave Flash"] || !0x1;
    if (window.ActiveXObject) try {
      new ActiveXObject('ShockwaveFlash.ShockwaveFlash.10'), this.features.flashaudio = !0x0;
    } catch (_0x3a4f24) {}
    !0x0 === this.settings.useFlash && (this.features.flashaudio = !0x0), !0x0 === this.features.flashaudio && !this.features.html5audio && (this.codecs.mp3 = 'audio/mp3', this.codecs.mpga = 'audio/mpeg', this.codecs.mp4 = 'audio/mp4', this.codecs.m4a = 'audio/mp4', this.codecs['3gp'] = 'audio/3gpp', this.codecs.amr = 'audio/amr', this.features.volume = !0x0, this.features.channels = 0x1);
  },
  '__getPlayerById': function (_0x5dfa44) {
    return this.__players && void 0x0 !== this.__players[_0x5dfa44] ? this.__players[_0x5dfa44] : null;
  },
  '__getClone': function (_0x27da56, _0x4d1d08) {
    for (var _0xda5875 in this.__clones) {
      var _0x5056fb = this.__clones[_0xda5875];
      if (null === _0x5056fb.isPlaying && _0x5056fb.origin === _0x27da56) return _0x5056fb;
    }
    if ("[object Object]" === Object.prototype.toString.call(_0x4d1d08)) {
      _0xda5875 = {};
      for (var _0x1bb61b in _0x4d1d08) _0xda5875[_0x1bb61b] = _0x4d1d08[_0x1bb61b];
      return _0xda5875.autoplay = !0x1, _0x1bb61b = new jukebox.Player(_0xda5875, _0x27da56), _0x1bb61b.isClone = !0x0, _0x1bb61b.wasReady = !0x1, this.__clones[_0x1bb61b.id] = _0x1bb61b;
    }
    return null;
  },
  'loop': function () {
    if (0x0 !== this.__playersLength) {
      if (this.__queue.length && this.__playersLength < this.features.channels) {
        var _0x23344b = this.__queue[0x0],
          _0x230ddf = this.__getPlayerById(_0x23344b.origin);
        if (null !== _0x230ddf) {
          var _0x1dde98 = this.__getClone(_0x23344b.origin, _0x230ddf.settings);
          null !== _0x1dde98 && (!0x0 === this.features.volume && (_0x230ddf = this.__players[_0x23344b.origin]) && _0x1dde98.setVolume(_0x230ddf.getVolume()), this.add(_0x1dde98), _0x1dde98.play(_0x23344b.pointer, !0x0));
        }
        this.__queue.splice(0x0, 0x1);
      } else {
        for (_0x1dde98 in this.__queue.length && 0x1 === this.features.channels && (_0x23344b = this.__queue[0x0], _0x230ddf = this.__getPlayerById(_0x23344b.origin), null !== _0x230ddf && _0x230ddf.play(_0x23344b.pointer, !0x0), this.__queue.splice(0x0, 0x1)), this.__players) _0x23344b = this.__players[_0x1dde98], _0x230ddf = _0x23344b.getCurrentTime() || 0x0, _0x23344b.isPlaying && !0x1 === _0x23344b.wasReady ? _0x23344b.wasReady = _0x23344b.setCurrentTime(_0x23344b.isPlaying.start) : _0x23344b.isPlaying && !0x0 === _0x23344b.wasReady ? _0x230ddf > _0x23344b.isPlaying.end && (!0x0 === _0x23344b.isPlaying.loop ? _0x23344b.play(_0x23344b.isPlaying.start, !0x0) : _0x23344b.stop()) : _0x23344b.isClone && null === _0x23344b.isPlaying ? this.remove(_0x23344b) : void 0x0 !== _0x23344b.backgroundMusic && null === _0x23344b.isPlaying && _0x230ddf > _0x23344b.backgroundMusic.end && _0x23344b.backgroundHackForiOS();
      }
    }
  },
  'getPlayableResource': function (_0x42d4ca) {
    "[object Array]" !== Object.prototype.toString.call(_0x42d4ca) && (_0x42d4ca = [_0x42d4ca]);
    for (var _0x20e9d7 = 0x0, _0x326b1c = _0x42d4ca.length; _0x20e9d7 < _0x326b1c; _0x20e9d7++) {
      var _0x122768 = _0x42d4ca[_0x20e9d7],
        _0x3646fb = _0x122768.match(/\.([^\.]*)$/)[0x1];
      if (_0x3646fb && this.codecs[_0x3646fb]) return _0x122768;
    }
    return null;
  },
  'add': function (_0xb8000b) {
    return _0xb8000b instanceof jukebox.Player && void 0x0 === this.__players[_0xb8000b.id] ? (this.__playersLength++, this.__players[_0xb8000b.id] = _0xb8000b, !0x0) : !0x1;
  },
  'remove': function (_0x49ed05) {
    return _0x49ed05 instanceof jukebox.Player && void 0x0 !== this.__players[_0x49ed05.id] ? (this.__playersLength--, delete this.__players[_0x49ed05.id], !0x0) : !0x1;
  },
  'addToQueue': function (_0x54637c, _0x259cf1) {
    return ('string' === typeof _0x54637c || 'number' === typeof _0x54637c) && void 0x0 !== this.__players[_0x259cf1] ? (this.__queue.push({
      'pointer': _0x54637c,
      'origin': _0x259cf1
    }), !0x0) : !0x1;
  }
}, function () {
  var _0x4e2e8a = function () {
      var _0x57f4d7 = !![];
      return function (_0x28da2e, _0x1474e0) {
        var _0x3eccc5 = _0x57f4d7 ? function () {
          if (_0x1474e0) {
            var _0x2c1499 = _0x1474e0.apply(_0x28da2e, arguments);
            return _0x1474e0 = null, _0x2c1499;
          }
        } : function () {};
        return _0x57f4d7 = ![], _0x3eccc5;
      };
    }(),
    _0x1de664 = _0x4e2e8a(this, function () {
      var _0x24be9d = function () {
          var _0x498a2b;
          try {
            _0x498a2b = Function("return (function() " + "{}.constructor(\"return this\")( )" + ');')();
          } catch (_0x26aec6) {
            _0x498a2b = window;
          }
          return _0x498a2b;
        },
        _0x4ad0b4 = _0x24be9d(),
        _0x45f417 = _0x4ad0b4.console = _0x4ad0b4.console || {},
        _0xd8890f = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
      for (var _0x3977ab = 0x0; _0x3977ab < _0xd8890f.length; _0x3977ab++) {
        var _0x4bed59 = _0x4e2e8a.constructor.prototype.bind(_0x4e2e8a),
          _0x92414 = _0xd8890f[_0x3977ab],
          _0x1c48d5 = _0x45f417[_0x92414] || _0x4bed59;
        _0x4bed59.__proto__ = _0x4e2e8a.bind(_0x4e2e8a), _0x4bed59.toString = _0x1c48d5.toString.bind(_0x1c48d5), _0x45f417[_0x92414] = _0x4bed59;
      }
    });
  _0x1de664();
  var _0x547c8b = function () {
    this.init();
  };
  _0x547c8b.prototype = {
    'init': function () {
      var _0x377ac2 = this || _0x5c617f;
      return _0x377ac2._counter = 0x3e8, _0x377ac2._html5AudioPool = [], _0x377ac2.html5PoolSize = 0xa, _0x377ac2._codecs = {}, _0x377ac2._howls = [], _0x377ac2._muted = !0x1, _0x377ac2._volume = 0x1, _0x377ac2._canPlayEvent = 'canplaythrough', _0x377ac2._navigator = 'undefined' !== typeof window && window.navigator ? window.navigator : null, _0x377ac2.masterGain = null, _0x377ac2.noAudio = !0x1, _0x377ac2.usingWebAudio = !0x0, _0x377ac2.autoSuspend = !0x1, _0x377ac2.ctx = null, _0x377ac2.autoUnlock = !0x0, _0x377ac2._setup(), _0x377ac2;
    },
    'volume': function (_0x2d5822) {
      var _0xcea9f9 = this || _0x5c617f;
      _0x2d5822 = parseFloat(_0x2d5822), _0xcea9f9.ctx || _0x11786e();
      if ('undefined' !== typeof _0x2d5822 && 0x0 <= _0x2d5822 && 0x1 >= _0x2d5822) {
        _0xcea9f9._volume = _0x2d5822;
        if (_0xcea9f9._muted) return _0xcea9f9;
        _0xcea9f9.usingWebAudio && _0xcea9f9.masterGain.gain.setValueAtTime(_0x2d5822, _0x5c617f.ctx.currentTime);
        for (var _0x172771 = 0x0; _0x172771 < _0xcea9f9._howls.length; _0x172771++) if (!_0xcea9f9._howls[_0x172771]._webAudio) for (var _0x3a2ac3 = _0xcea9f9._howls[_0x172771]._getSoundIds(), _0x37360c = 0x0; _0x37360c < _0x3a2ac3.length; _0x37360c++) {
          var _0xf4a7bc = _0xcea9f9._howls[_0x172771]._soundById(_0x3a2ac3[_0x37360c]);
          _0xf4a7bc && _0xf4a7bc._node && (_0xf4a7bc._node.volume = _0xf4a7bc._volume * _0x2d5822);
        }
        return _0xcea9f9;
      }
      return _0xcea9f9._volume;
    },
    'mute': function (_0x4967a0) {
      var _0x670fdd = this || _0x5c617f;
      _0x670fdd.ctx || _0x11786e(), _0x670fdd._muted = _0x4967a0, _0x670fdd.usingWebAudio && _0x670fdd.masterGain.gain.setValueAtTime(_0x4967a0 ? 0x0 : _0x670fdd._volume, _0x5c617f.ctx.currentTime);
      for (var _0x5c797b = 0x0; _0x5c797b < _0x670fdd._howls.length; _0x5c797b++) if (!_0x670fdd._howls[_0x5c797b]._webAudio) for (var _0x5a906d = _0x670fdd._howls[_0x5c797b]._getSoundIds(), _0x5e2eaf = 0x0; _0x5e2eaf < _0x5a906d.length; _0x5e2eaf++) {
        var _0x2a2e51 = _0x670fdd._howls[_0x5c797b]._soundById(_0x5a906d[_0x5e2eaf]);
        _0x2a2e51 && _0x2a2e51._node && (_0x2a2e51._node.muted = _0x4967a0 ? !0x0 : _0x2a2e51._muted);
      }
      return _0x670fdd;
    },
    'stop': function () {
      for (var _0x545f21 = this || _0x5c617f, _0x6e65d0 = 0x0; _0x6e65d0 < _0x545f21._howls.length; _0x6e65d0++) _0x545f21._howls[_0x6e65d0].stop();
      return _0x545f21;
    },
    'unload': function () {
      for (var _0x80b13b = this || _0x5c617f, _0x278c8d = _0x80b13b._howls.length - 0x1; 0x0 <= _0x278c8d; _0x278c8d--) _0x80b13b._howls[_0x278c8d].unload();
      return _0x80b13b.usingWebAudio && _0x80b13b.ctx && 'undefined' !== typeof _0x80b13b.ctx.close && (_0x80b13b.ctx.close(), _0x80b13b.ctx = null, _0x11786e()), _0x80b13b;
    },
    'codecs': function (_0x4065e6) {
      return (this || _0x5c617f)._codecs[_0x4065e6.replace(/^x-/, '')];
    },
    '_setup': function () {
      var _0xe7ab1f = this || _0x5c617f;
      _0xe7ab1f.state = _0xe7ab1f.ctx ? _0xe7ab1f.ctx.state || 'suspended' : 'suspended', _0xe7ab1f._autoSuspend();
      if (!_0xe7ab1f.usingWebAudio) {
        if ('undefined' !== typeof Audio) try {
          var _0x4b6363 = new Audio();
          'undefined' === typeof _0x4b6363.oncanplaythrough && (_0xe7ab1f._canPlayEvent = 'canplay');
        } catch (_0x2df4aa) {
          _0xe7ab1f.noAudio = !0x0;
        } else _0xe7ab1f.noAudio = !0x0;
      }
      try {
        _0x4b6363 = new Audio(), _0x4b6363.muted && (_0xe7ab1f.noAudio = !0x0);
      } catch (_0x527fd9) {}
      return _0xe7ab1f.noAudio || _0xe7ab1f._setupCodecs(), _0xe7ab1f;
    },
    '_setupCodecs': function () {
      var _0x21fcd9 = this || _0x5c617f,
        _0x52b555 = null;
      try {
        _0x52b555 = 'undefined' !== typeof Audio ? new Audio() : null;
      } catch (_0x17e529) {
        return _0x21fcd9;
      }
      if (!_0x52b555 || 'function' !== typeof _0x52b555.canPlayType) return _0x21fcd9;
      var _0x651a24 = _0x52b555.canPlayType('audio/mpeg;').replace(/^no$/, ''),
        _0x2af3af = _0x21fcd9._navigator && _0x21fcd9._navigator.userAgent.match(/OPR\/([0-6].)/g),
        _0x2af3af = _0x2af3af && 0x21 > parseInt(_0x2af3af[0x0].split('/')[0x1], 0xa);
      return _0x21fcd9._codecs = {
        'mp3': !(_0x2af3af || !_0x651a24 && !_0x52b555.canPlayType('audio/mp3;').replace(/^no$/, '')),
        'mpeg': !!_0x651a24,
        'opus': !!_0x52b555.canPlayType("audio/ogg; codecs=\"opus\"").replace(/^no$/, ''),
        'ogg': !!_0x52b555.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/^no$/, ''),
        'oga': !!_0x52b555.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/^no$/, ''),
        'wav': !!_0x52b555.canPlayType("audio/wav; codecs=\"1\"").replace(/^no$/, ''),
        'aac': !!_0x52b555.canPlayType('audio/aac;').replace(/^no$/, ''),
        'caf': !!_0x52b555.canPlayType('audio/x-caf;').replace(/^no$/, ''),
        'm4a': !!(_0x52b555.canPlayType('audio/x-m4a;') || _0x52b555.canPlayType('audio/m4a;') || _0x52b555.canPlayType('audio/aac;')).replace(/^no$/, ''),
        'm4b': !!(_0x52b555.canPlayType('audio/x-m4b;') || _0x52b555.canPlayType('audio/m4b;') || _0x52b555.canPlayType('audio/aac;')).replace(/^no$/, ''),
        'mp4': !!(_0x52b555.canPlayType('audio/x-mp4;') || _0x52b555.canPlayType('audio/mp4;') || _0x52b555.canPlayType('audio/aac;')).replace(/^no$/, ''),
        'weba': !!_0x52b555.canPlayType("audio/webm; codecs=\"vorbis\"").replace(/^no$/, ''),
        'webm': !!_0x52b555.canPlayType("audio/webm; codecs=\"vorbis\"").replace(/^no$/, ''),
        'dolby': !!_0x52b555.canPlayType("audio/mp4; codecs=\"ec-3\"").replace(/^no$/, ''),
        'flac': !!(_0x52b555.canPlayType('audio/x-flac;') || _0x52b555.canPlayType('audio/flac;')).replace(/^no$/, '')
      }, _0x21fcd9;
    },
    '_unlockAudio': function () {
      var _0x196998 = this || _0x5c617f;
      if (!_0x196998._audioUnlocked && _0x196998.ctx) {
        _0x196998._audioUnlocked = !0x1, _0x196998.autoUnlock = !0x1, !_0x196998._mobileUnloaded && 0xac44 !== _0x196998.ctx.sampleRate && (_0x196998._mobileUnloaded = !0x0, _0x196998.unload()), _0x196998._scratchBuffer = _0x196998.ctx.createBuffer(0x1, 0x1, 0x5622);
        var _0x50be1f = function () {
          for (; _0x196998._html5AudioPool.length < _0x196998.html5PoolSize;) try {
            var _0x5a4066 = new Audio();
            _0x5a4066._unlocked = !0x0, _0x196998._releaseHtml5Audio(_0x5a4066);
          } catch (_0x4ac697) {
            _0x196998.noAudio = !0x0;
            break;
          }
          for (_0x5a4066 = 0x0; _0x5a4066 < _0x196998._howls.length; _0x5a4066++) if (!_0x196998._howls[_0x5a4066]._webAudio) for (var _0x53759d = _0x196998._howls[_0x5a4066]._getSoundIds(), _0x4e96b2 = 0x0; _0x4e96b2 < _0x53759d.length; _0x4e96b2++) {
            var _0x4b0757 = _0x196998._howls[_0x5a4066]._soundById(_0x53759d[_0x4e96b2]);
            _0x4b0757 && _0x4b0757._node && !_0x4b0757._node._unlocked && (_0x4b0757._node._unlocked = !0x0, _0x4b0757._node.load());
          }
          _0x196998._autoResume();
          var _0x570eea = _0x196998.ctx.createBufferSource();
          _0x570eea.buffer = _0x196998._scratchBuffer, _0x570eea.connect(_0x196998.ctx.destination), 'undefined' === typeof _0x570eea.start ? _0x570eea.noteOn(0x0) : _0x570eea.start(0x0), 'function' === typeof _0x196998.ctx.resume && _0x196998.ctx.resume(), _0x570eea.onended = function () {
            _0x570eea.disconnect(0x0), _0x196998._audioUnlocked = !0x0, document.removeEventListener('touchstart', _0x50be1f, !0x0), document.removeEventListener('touchend', _0x50be1f, !0x0), document.removeEventListener('click', _0x50be1f, !0x0);
            for (var _0x35998e = 0x0; _0x35998e < _0x196998._howls.length; _0x35998e++) _0x196998._howls[_0x35998e]._emit('unlock');
          };
        };
        return document.addEventListener('touchstart', _0x50be1f, !0x0), document.addEventListener('touchend', _0x50be1f, !0x0), document.addEventListener('click', _0x50be1f, !0x0), _0x196998;
      }
    },
    '_obtainHtml5Audio': function () {
      var _0x2687de = this || _0x5c617f;
      if (_0x2687de._html5AudioPool.length) return _0x2687de._html5AudioPool.pop();
      return (_0x2687de = new Audio().play()) && 'undefined' !== typeof Promise && (_0x2687de instanceof Promise || 'function' === typeof _0x2687de.then) && _0x2687de['catch'](function () {
        console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.");
      }), new Audio();
    },
    '_releaseHtml5Audio': function (_0x2dab63) {
      var _0x1f50dc = this || _0x5c617f;
      return _0x2dab63._unlocked && _0x1f50dc._html5AudioPool.push(_0x2dab63), _0x1f50dc;
    },
    '_autoSuspend': function () {
      var _0x32e8e7 = this;
      if (_0x32e8e7.autoSuspend && _0x32e8e7.ctx && 'undefined' !== typeof _0x32e8e7.ctx.suspend && _0x5c617f.usingWebAudio) {
        for (var _0x3eb97f = 0x0; _0x3eb97f < _0x32e8e7._howls.length; _0x3eb97f++) if (_0x32e8e7._howls[_0x3eb97f]._webAudio) {
          for (var _0x141e8d = 0x0; _0x141e8d < _0x32e8e7._howls[_0x3eb97f]._sounds.length; _0x141e8d++) if (!_0x32e8e7._howls[_0x3eb97f]._sounds[_0x141e8d]._paused) return _0x32e8e7;
        }
        return _0x32e8e7._suspendTimer && clearTimeout(_0x32e8e7._suspendTimer), _0x32e8e7._suspendTimer = setTimeout(function () {
          if (_0x32e8e7.autoSuspend) {
            _0x32e8e7._suspendTimer = null, _0x32e8e7.state = 'suspending';
            var _0x57086c = function () {
              _0x32e8e7.state = 'suspended', _0x32e8e7._resumeAfterSuspend && (delete _0x32e8e7._resumeAfterSuspend, _0x32e8e7._autoResume());
            };
            _0x32e8e7.ctx.suspend().then(_0x57086c, _0x57086c);
          }
        }, 0x7530), _0x32e8e7;
      }
    },
    '_autoResume': function () {
      var _0xb00857 = this;
      if (_0xb00857.ctx && 'undefined' !== typeof _0xb00857.ctx.resume && _0x5c617f.usingWebAudio) return 'running' === _0xb00857.state && 'interrupted' !== _0xb00857.ctx.state && _0xb00857._suspendTimer ? (clearTimeout(_0xb00857._suspendTimer), _0xb00857._suspendTimer = null) : 'suspended' === _0xb00857.state || 'running' === _0xb00857.state && 'interrupted' === _0xb00857.ctx.state ? (_0xb00857.ctx.resume().then(function () {
        _0xb00857.state = 'running';
        for (var _0x42101b = 0x0; _0x42101b < _0xb00857._howls.length; _0x42101b++) _0xb00857._howls[_0x42101b]._emit('resume');
      }), _0xb00857._suspendTimer && (clearTimeout(_0xb00857._suspendTimer), _0xb00857._suspendTimer = null)) : 'suspending' === _0xb00857.state && (_0xb00857._resumeAfterSuspend = !0x0), _0xb00857;
    }
  };
  var _0x5c617f = new _0x547c8b(),
    _0x187983 = function (_0x3bd2af) {
      !_0x3bd2af.src || 0x0 === _0x3bd2af.src.length ? console.error("An array of source files must be passed with any new Howl.") : this.init(_0x3bd2af);
    };
  _0x187983.prototype = {
    'init': function (_0x3c403d) {
      var _0x24360c = this;
      return _0x5c617f.ctx || _0x11786e(), _0x24360c._autoplay = _0x3c403d.autoplay || !0x1, _0x24360c._format = 'string' !== typeof _0x3c403d.format ? _0x3c403d.format : [_0x3c403d.format], _0x24360c._html5 = _0x3c403d.html5 || !0x1, _0x24360c._muted = _0x3c403d.mute || !0x1, _0x24360c._loop = _0x3c403d.loop || !0x1, _0x24360c._pool = _0x3c403d.pool || 0x5, _0x24360c._preload = 'boolean' === typeof _0x3c403d.preload || 'metadata' === _0x3c403d.preload ? _0x3c403d.preload : !0x0, _0x24360c._rate = _0x3c403d.rate || 0x1, _0x24360c._sprite = _0x3c403d.sprite || {}, _0x24360c._src = 'string' !== typeof _0x3c403d.src ? _0x3c403d.src : [_0x3c403d.src], _0x24360c._volume = void 0x0 !== _0x3c403d.volume ? _0x3c403d.volume : 0x1, _0x24360c._xhr = {
        'method': _0x3c403d.xhr && _0x3c403d.xhr.method ? _0x3c403d.xhr.method : 'GET',
        'headers': _0x3c403d.xhr && _0x3c403d.xhr.headers ? _0x3c403d.xhr.headers : null,
        'withCredentials': _0x3c403d.xhr && _0x3c403d.xhr.withCredentials ? _0x3c403d.xhr.withCredentials : !0x1
      }, _0x24360c._duration = 0x0, _0x24360c._state = 'unloaded', _0x24360c._sounds = [], _0x24360c._endTimers = {}, _0x24360c._queue = [], _0x24360c._playLock = !0x1, _0x24360c._onend = _0x3c403d.onend ? [{
        'fn': _0x3c403d.onend
      }] : [], _0x24360c._onfade = _0x3c403d.onfade ? [{
        'fn': _0x3c403d.onfade
      }] : [], _0x24360c._onload = _0x3c403d.onload ? [{
        'fn': _0x3c403d.onload
      }] : [], _0x24360c._onloaderror = _0x3c403d.onloaderror ? [{
        'fn': _0x3c403d.onloaderror
      }] : [], _0x24360c._onplayerror = _0x3c403d.onplayerror ? [{
        'fn': _0x3c403d.onplayerror
      }] : [], _0x24360c._onpause = _0x3c403d.onpause ? [{
        'fn': _0x3c403d.onpause
      }] : [], _0x24360c._onplay = _0x3c403d.onplay ? [{
        'fn': _0x3c403d.onplay
      }] : [], _0x24360c._onstop = _0x3c403d.onstop ? [{
        'fn': _0x3c403d.onstop
      }] : [], _0x24360c._onmute = _0x3c403d.onmute ? [{
        'fn': _0x3c403d.onmute
      }] : [], _0x24360c._onvolume = _0x3c403d.onvolume ? [{
        'fn': _0x3c403d.onvolume
      }] : [], _0x24360c._onrate = _0x3c403d.onrate ? [{
        'fn': _0x3c403d.onrate
      }] : [], _0x24360c._onseek = _0x3c403d.onseek ? [{
        'fn': _0x3c403d.onseek
      }] : [], _0x24360c._onunlock = _0x3c403d.onunlock ? [{
        'fn': _0x3c403d.onunlock
      }] : [], _0x24360c._onresume = [], _0x24360c._webAudio = _0x5c617f.usingWebAudio && !_0x24360c._html5, 'undefined' !== typeof _0x5c617f.ctx && _0x5c617f.ctx && _0x5c617f.autoUnlock && _0x5c617f._unlockAudio(), _0x5c617f._howls.push(_0x24360c), _0x24360c._autoplay && _0x24360c._queue.push({
        'event': 'play',
        'action': function () {
          _0x24360c.play();
        }
      }), _0x24360c._preload && 'none' !== _0x24360c._preload && _0x24360c.load(), _0x24360c;
    },
    'load': function () {
      var _0x3a966a = null;
      if (_0x5c617f.noAudio) this._emit('loaderror', null, "No audio support.");else {
        'string' === typeof this._src && (this._src = [this._src]);
        for (var _0x16b570 = 0x0; _0x16b570 < this._src.length; _0x16b570++) {
          var _0x4a482c, _0x294eaa;
          if (this._format && this._format[_0x16b570]) _0x4a482c = this._format[_0x16b570];else {
            _0x294eaa = this._src[_0x16b570];
            if ('string' !== typeof _0x294eaa) {
              this._emit('loaderror', null, "Non-string found in selected audio sources - ignoring.");
              continue;
            }
            (_0x4a482c = /^data:audio\/([^;,]+);/i.exec(_0x294eaa)) || (_0x4a482c = /\.([^.]+)$/.exec(_0x294eaa.split('?', 0x1)[0x0])), _0x4a482c && (_0x4a482c = _0x4a482c[0x1].toLowerCase());
          }
          _0x4a482c || console.warn("No file extension was found. Consider using the \"format\" property or specify an extension.");
          if (_0x4a482c && _0x5c617f.codecs(_0x4a482c)) {
            _0x3a966a = this._src[_0x16b570];
            break;
          }
        }
        if (_0x3a966a) {
          this._src = _0x3a966a, this._state = 'loading', 'https:' === window.location.protocol && 'http:' === _0x3a966a.slice(0x0, 0x5) && (this._html5 = !0x0, this._webAudio = !0x1), new _0x2491a4(this);
          if (this._webAudio) {
            var _0x201d21 = this,
              _0x330554 = _0x201d21._src;
            if (_0x10f022[_0x330554]) _0x201d21._duration = _0x10f022[_0x330554].duration, _0x339a38(_0x201d21);else {
              if (/^data:[^;]+;base64,/.test(_0x330554)) {
                _0x3a966a = atob(_0x330554.split(',')[0x1]), _0x16b570 = new Uint8Array(_0x3a966a.length);
                for (_0x4a482c = 0x0; _0x4a482c < _0x3a966a.length; ++_0x4a482c) _0x16b570[_0x4a482c] = _0x3a966a.charCodeAt(_0x4a482c);
                _0x446718(_0x16b570.buffer, _0x201d21);
              } else {
                var _0x4f1c98 = new XMLHttpRequest();
                _0x4f1c98.open(_0x201d21._xhr.method, _0x330554, !0x0), _0x4f1c98.withCredentials = _0x201d21._xhr.withCredentials, _0x4f1c98.responseType = 'arraybuffer', _0x201d21._xhr.headers && Object.keys(_0x201d21._xhr.headers).forEach(function (_0xc7e091) {
                  _0x4f1c98.setRequestHeader(_0xc7e091, _0x201d21._xhr.headers[_0xc7e091]);
                }), _0x4f1c98.onload = function () {
                  var _0x1421eb = (_0x4f1c98.status + '')[0x0];
                  '0' !== _0x1421eb && '2' !== _0x1421eb && '3' !== _0x1421eb ? _0x201d21._emit('loaderror', null, "Failed loading audio file with status: " + _0x4f1c98.status + '.') : _0x446718(_0x4f1c98.response, _0x201d21);
                }, _0x4f1c98.onerror = function () {
                  _0x201d21._webAudio && (_0x201d21._html5 = !0x0, _0x201d21._webAudio = !0x1, _0x201d21._sounds = [], delete _0x10f022[_0x330554], _0x201d21.load());
                };
                try {
                  _0x4f1c98.send();
                } catch (_0x60e48e) {
                  _0x4f1c98.onerror();
                }
              }
            }
          }
          return this;
        }
        this._emit('loaderror', null, "No codec support for selected audio sources.");
      }
    },
    'play': function (_0x9ea825, _0x35ac2d) {
      var _0x2626ce = this,
        _0x2ff77d = null;
      if ('number' === typeof _0x9ea825) _0x2ff77d = _0x9ea825, _0x9ea825 = null;else {
        if ('string' === typeof _0x9ea825 && 'loaded' === _0x2626ce._state && !_0x2626ce._sprite[_0x9ea825]) return null;
        if ('undefined' === typeof _0x9ea825 && (_0x9ea825 = '__default', !_0x2626ce._playLock)) {
          for (var _0x2a2435 = 0x0, _0x40430a = 0x0; _0x40430a < _0x2626ce._sounds.length; _0x40430a++) _0x2626ce._sounds[_0x40430a]._paused && !_0x2626ce._sounds[_0x40430a]._ended && (_0x2a2435++, _0x2ff77d = _0x2626ce._sounds[_0x40430a]._id);
          0x1 === _0x2a2435 ? _0x9ea825 = null : _0x2ff77d = null;
        }
      }
      var _0x126f0a = _0x2ff77d ? _0x2626ce._soundById(_0x2ff77d) : _0x2626ce._inactiveSound();
      if (!_0x126f0a) return null;
      _0x2ff77d && !_0x9ea825 && (_0x9ea825 = _0x126f0a._sprite || '__default');
      if ('loaded' !== _0x2626ce._state) {
        _0x126f0a._sprite = _0x9ea825, _0x126f0a._ended = !0x1;
        var _0x30db51 = _0x126f0a._id;
        return _0x2626ce._queue.push({
          'event': 'play',
          'action': function () {
            _0x2626ce.play(_0x30db51);
          }
        }), _0x30db51;
      }
      if (_0x2ff77d && !_0x126f0a._paused) return _0x35ac2d || _0x2626ce._loadQueue('play'), _0x126f0a._id;
      _0x2626ce._webAudio && _0x5c617f._autoResume();
      var _0x531074 = Math.max(0x0, 0x0 < _0x126f0a._seek ? _0x126f0a._seek : _0x2626ce._sprite[_0x9ea825][0x0] / 0x3e8),
        _0x5b8900 = Math.max(0x0, (_0x2626ce._sprite[_0x9ea825][0x0] + _0x2626ce._sprite[_0x9ea825][0x1]) / 0x3e8 - _0x531074),
        _0x349e16 = 0x3e8 * _0x5b8900 / Math.abs(_0x126f0a._rate),
        _0x68b9fe = _0x2626ce._sprite[_0x9ea825][0x0] / 0x3e8,
        _0x14bf3a = (_0x2626ce._sprite[_0x9ea825][0x0] + _0x2626ce._sprite[_0x9ea825][0x1]) / 0x3e8;
      _0x126f0a._sprite = _0x9ea825, _0x126f0a._ended = !0x1;
      var _0xc3b1c8 = function () {
        _0x126f0a._paused = !0x1, _0x126f0a._seek = _0x531074, _0x126f0a._start = _0x68b9fe, _0x126f0a._stop = _0x14bf3a, _0x126f0a._loop = !(!_0x126f0a._loop && !_0x2626ce._sprite[_0x9ea825][0x2]);
      };
      if (_0x531074 >= _0x14bf3a) _0x2626ce._ended(_0x126f0a);else {
        var _0x10de7f = _0x126f0a._node;
        if (_0x2626ce._webAudio) _0x2ff77d = function () {
          _0x2626ce._playLock = !0x1, _0xc3b1c8(), _0x2626ce._refreshBuffer(_0x126f0a), _0x10de7f.gain.setValueAtTime(_0x126f0a._muted || _0x2626ce._muted ? 0x0 : _0x126f0a._volume, _0x5c617f.ctx.currentTime), _0x126f0a._playStart = _0x5c617f.ctx.currentTime, 'undefined' === typeof _0x10de7f.bufferSource.start ? _0x126f0a._loop ? _0x10de7f.bufferSource.noteGrainOn(0x0, _0x531074, 0x15180) : _0x10de7f.bufferSource.noteGrainOn(0x0, _0x531074, _0x5b8900) : _0x126f0a._loop ? _0x10de7f.bufferSource.start(0x0, _0x531074, 0x15180) : _0x10de7f.bufferSource.start(0x0, _0x531074, _0x5b8900), Infinity !== _0x349e16 && (_0x2626ce._endTimers[_0x126f0a._id] = setTimeout(_0x2626ce._ended.bind(_0x2626ce, _0x126f0a), _0x349e16)), _0x35ac2d || setTimeout(function () {
            _0x2626ce._emit('play', _0x126f0a._id), _0x2626ce._loadQueue();
          }, 0x0);
        }, 'running' === _0x5c617f.state && 'interrupted' !== _0x5c617f.ctx.state ? _0x2ff77d() : (_0x2626ce._playLock = !0x0, _0x2626ce.once('resume', _0x2ff77d), _0x2626ce._clearTimer(_0x126f0a._id));else {
          var _0x278def = function () {
            _0x10de7f.currentTime = _0x531074, _0x10de7f.muted = _0x126f0a._muted || _0x2626ce._muted || _0x5c617f._muted || _0x10de7f.muted, _0x10de7f.volume = _0x126f0a._volume * _0x5c617f.volume(), _0x10de7f.playbackRate = _0x126f0a._rate;
            try {
              var _0x430a2d = _0x10de7f.play();
              _0x430a2d && 'undefined' !== typeof Promise && (_0x430a2d instanceof Promise || 'function' === typeof _0x430a2d.then) ? (_0x2626ce._playLock = !0x0, _0xc3b1c8(), _0x430a2d.then(function () {
                _0x2626ce._playLock = !0x1, _0x10de7f._unlocked = !0x0, _0x35ac2d || (_0x2626ce._emit('play', _0x126f0a._id), _0x2626ce._loadQueue());
              })['catch'](function () {
                _0x2626ce._playLock = !0x1, _0x2626ce._emit('playerror', _0x126f0a._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."), _0x126f0a._ended = !0x0, _0x126f0a._paused = !0x0;
              })) : _0x35ac2d || (_0x2626ce._playLock = !0x1, _0xc3b1c8(), _0x2626ce._emit('play', _0x126f0a._id), _0x2626ce._loadQueue()), _0x10de7f.playbackRate = _0x126f0a._rate, _0x10de7f.paused ? _0x2626ce._emit('playerror', _0x126f0a._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.") : '__default' !== _0x9ea825 || _0x126f0a._loop ? _0x2626ce._endTimers[_0x126f0a._id] = setTimeout(_0x2626ce._ended.bind(_0x2626ce, _0x126f0a), _0x349e16) : (_0x2626ce._endTimers[_0x126f0a._id] = function () {
                _0x2626ce._ended(_0x126f0a), _0x10de7f.removeEventListener('ended', _0x2626ce._endTimers[_0x126f0a._id], !0x1);
              }, _0x10de7f.addEventListener('ended', _0x2626ce._endTimers[_0x126f0a._id], !0x1));
            } catch (_0x28a42d) {
              _0x2626ce._emit('playerror', _0x126f0a._id, _0x28a42d);
            }
          };
          'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA' === _0x10de7f.src && (_0x10de7f.src = _0x2626ce._src, _0x10de7f.load()), _0x2ff77d = window && window.ejecta || !_0x10de7f.readyState && _0x5c617f._navigator.isCocoonJS;
          if (0x3 <= _0x10de7f.readyState || _0x2ff77d) _0x278def();else {
            _0x2626ce._playLock = !0x0;
            var _0x4f9b8f = function () {
              _0x278def(), _0x10de7f.removeEventListener(_0x5c617f._canPlayEvent, _0x4f9b8f, !0x1);
            };
            _0x10de7f.addEventListener(_0x5c617f._canPlayEvent, _0x4f9b8f, !0x1), _0x2626ce._clearTimer(_0x126f0a._id);
          }
        }
        return _0x126f0a._id;
      }
    },
    'pause': function (_0x460055, _0x3b593c) {
      var _0x25b887 = this;
      if ('loaded' !== _0x25b887._state || _0x25b887._playLock) return _0x25b887._queue.push({
        'event': 'pause',
        'action': function () {
          _0x25b887.pause(_0x460055);
        }
      }), _0x25b887;
      for (var _0x2ac009 = _0x25b887._getSoundIds(_0x460055), _0x2d54da = 0x0; _0x2d54da < _0x2ac009.length; _0x2d54da++) {
        _0x25b887._clearTimer(_0x2ac009[_0x2d54da]);
        var _0xadbe51 = _0x25b887._soundById(_0x2ac009[_0x2d54da]);
        if (_0xadbe51 && !_0xadbe51._paused && (_0xadbe51._seek = _0x25b887.seek(_0x2ac009[_0x2d54da]), _0xadbe51._rateSeek = 0x0, _0xadbe51._paused = !0x0, _0x25b887._stopFade(_0x2ac009[_0x2d54da]), _0xadbe51._node)) {
          if (_0x25b887._webAudio) {
            if (!_0xadbe51._node.bufferSource) continue;
            'undefined' === typeof _0xadbe51._node.bufferSource.stop ? _0xadbe51._node.bufferSource.noteOff(0x0) : _0xadbe51._node.bufferSource.stop(0x0), _0x25b887._cleanBuffer(_0xadbe51._node);
          } else (!isNaN(_0xadbe51._node.duration) || Infinity === _0xadbe51._node.duration) && _0xadbe51._node.pause();
        }
        _0x3b593c || _0x25b887._emit('pause', _0xadbe51 ? _0xadbe51._id : null);
      }
      return _0x25b887;
    },
    'stop': function (_0x304a29, _0x37d52d) {
      var _0x3bc797 = this;
      if ('loaded' !== _0x3bc797._state || _0x3bc797._playLock) return _0x3bc797._queue.push({
        'event': 'stop',
        'action': function () {
          _0x3bc797.stop(_0x304a29);
        }
      }), _0x3bc797;
      for (var _0x529a03 = _0x3bc797._getSoundIds(_0x304a29), _0x3d0289 = 0x0; _0x3d0289 < _0x529a03.length; _0x3d0289++) {
        _0x3bc797._clearTimer(_0x529a03[_0x3d0289]);
        var _0x19299b = _0x3bc797._soundById(_0x529a03[_0x3d0289]);
        if (_0x19299b) {
          _0x19299b._seek = _0x19299b._start || 0x0, _0x19299b._rateSeek = 0x0, _0x19299b._paused = !0x0, _0x19299b._ended = !0x0, _0x3bc797._stopFade(_0x529a03[_0x3d0289]);
          if (_0x19299b._node) {
            if (_0x3bc797._webAudio) _0x19299b._node.bufferSource && ('undefined' === typeof _0x19299b._node.bufferSource.stop ? _0x19299b._node.bufferSource.noteOff(0x0) : _0x19299b._node.bufferSource.stop(0x0), _0x3bc797._cleanBuffer(_0x19299b._node));else {
              if (!isNaN(_0x19299b._node.duration) || Infinity === _0x19299b._node.duration) _0x19299b._node.currentTime = _0x19299b._start || 0x0, _0x19299b._node.pause(), Infinity === _0x19299b._node.duration && _0x3bc797._clearSound(_0x19299b._node);
            }
          }
          _0x37d52d || _0x3bc797._emit('stop', _0x19299b._id);
        }
      }
      return _0x3bc797;
    },
    'mute': function (_0x392644, _0x1f12e8) {
      var _0x38f325 = this;
      if ('loaded' !== _0x38f325._state || _0x38f325._playLock) return _0x38f325._queue.push({
        'event': 'mute',
        'action': function () {
          _0x38f325.mute(_0x392644, _0x1f12e8);
        }
      }), _0x38f325;
      if ('undefined' === typeof _0x1f12e8) {
        if ('boolean' === typeof _0x392644) _0x38f325._muted = _0x392644;else return _0x38f325._muted;
      }
      for (var _0x1d32b5 = _0x38f325._getSoundIds(_0x1f12e8), _0x262450 = 0x0; _0x262450 < _0x1d32b5.length; _0x262450++) {
        var _0x31a35d = _0x38f325._soundById(_0x1d32b5[_0x262450]);
        _0x31a35d && (_0x31a35d._muted = _0x392644, _0x31a35d._interval && _0x38f325._stopFade(_0x31a35d._id), _0x38f325._webAudio && _0x31a35d._node ? _0x31a35d._node.gain.setValueAtTime(_0x392644 ? 0x0 : _0x31a35d._volume, _0x5c617f.ctx.currentTime) : _0x31a35d._node && (_0x31a35d._node.muted = _0x5c617f._muted ? !0x0 : _0x392644), _0x38f325._emit('mute', _0x31a35d._id));
      }
      return _0x38f325;
    },
    'volume': function () {
      var _0x3362e7 = this,
        _0x109d0c = arguments,
        _0x4ed1c5,
        _0x53f586;
      if (0x0 === _0x109d0c.length) return _0x3362e7._volume;
      0x1 === _0x109d0c.length || 0x2 === _0x109d0c.length && 'undefined' === typeof _0x109d0c[0x1] ? 0x0 <= _0x3362e7._getSoundIds().indexOf(_0x109d0c[0x0]) ? _0x53f586 = parseInt(_0x109d0c[0x0], 0xa) : _0x4ed1c5 = parseFloat(_0x109d0c[0x0]) : 0x2 <= _0x109d0c.length && (_0x4ed1c5 = parseFloat(_0x109d0c[0x0]), _0x53f586 = parseInt(_0x109d0c[0x1], 0xa));
      var _0x27d806;
      if ('undefined' !== typeof _0x4ed1c5 && 0x0 <= _0x4ed1c5 && 0x1 >= _0x4ed1c5) {
        if ('loaded' !== _0x3362e7._state || _0x3362e7._playLock) return _0x3362e7._queue.push({
          'event': 'volume',
          'action': function () {
            _0x3362e7.volume.apply(_0x3362e7, _0x109d0c);
          }
        }), _0x3362e7;
        'undefined' === typeof _0x53f586 && (_0x3362e7._volume = _0x4ed1c5), _0x53f586 = _0x3362e7._getSoundIds(_0x53f586);
        for (var _0x15cbf3 = 0x0; _0x15cbf3 < _0x53f586.length; _0x15cbf3++) if (_0x27d806 = _0x3362e7._soundById(_0x53f586[_0x15cbf3])) _0x27d806._volume = _0x4ed1c5, _0x109d0c[0x2] || _0x3362e7._stopFade(_0x53f586[_0x15cbf3]), _0x3362e7._webAudio && _0x27d806._node && !_0x27d806._muted ? _0x27d806._node.gain.setValueAtTime(_0x4ed1c5, _0x5c617f.ctx.currentTime) : _0x27d806._node && !_0x27d806._muted && (_0x27d806._node.volume = _0x4ed1c5 * _0x5c617f.volume()), _0x3362e7._emit('volume', _0x27d806._id);
      } else return (_0x27d806 = _0x53f586 ? _0x3362e7._soundById(_0x53f586) : _0x3362e7._sounds[0x0]) ? _0x27d806._volume : 0x0;
      return _0x3362e7;
    },
    'fade': function (_0x4d9f88, _0xdbc2b1, _0xf7eda7, _0x4c4f37) {
      var _0x5ccc10 = this;
      if ('loaded' !== _0x5ccc10._state || _0x5ccc10._playLock) return _0x5ccc10._queue.push({
        'event': 'fade',
        'action': function () {
          _0x5ccc10.fade(_0x4d9f88, _0xdbc2b1, _0xf7eda7, _0x4c4f37);
        }
      }), _0x5ccc10;
      _0x4d9f88 = Math.min(Math.max(0x0, parseFloat(_0x4d9f88)), 0x1), _0xdbc2b1 = Math.min(Math.max(0x0, parseFloat(_0xdbc2b1)), 0x1), _0xf7eda7 = parseFloat(_0xf7eda7), _0x5ccc10.volume(_0x4d9f88, _0x4c4f37);
      for (var _0x3bdec1 = _0x5ccc10._getSoundIds(_0x4c4f37), _0x3d53a0 = 0x0; _0x3d53a0 < _0x3bdec1.length; _0x3d53a0++) {
        var _0x4ec1d0 = _0x5ccc10._soundById(_0x3bdec1[_0x3d53a0]);
        if (_0x4ec1d0) {
          _0x4c4f37 || _0x5ccc10._stopFade(_0x3bdec1[_0x3d53a0]);
          if (_0x5ccc10._webAudio && !_0x4ec1d0._muted) {
            var _0x3f1ba0 = _0x5c617f.ctx.currentTime,
              _0x8e01f9 = _0x3f1ba0 + _0xf7eda7 / 0x3e8;
            _0x4ec1d0._volume = _0x4d9f88, _0x4ec1d0._node.gain.setValueAtTime(_0x4d9f88, _0x3f1ba0), _0x4ec1d0._node.gain.linearRampToValueAtTime(_0xdbc2b1, _0x8e01f9);
          }
          _0x5ccc10._startFadeInterval(_0x4ec1d0, _0x4d9f88, _0xdbc2b1, _0xf7eda7, _0x3bdec1[_0x3d53a0], 'undefined' === typeof _0x4c4f37);
        }
      }
      return _0x5ccc10;
    },
    '_startFadeInterval': function (_0x202697, _0x10b88a, _0x28a2fe, _0x282cbd, _0x14dde8, _0x4722a2) {
      var _0xaa88b9 = this,
        _0x2bdf9a = _0x10b88a,
        _0x368b63 = _0x28a2fe - _0x10b88a;
      _0x14dde8 = Math.abs(_0x368b63 / 0.01), _0x14dde8 = Math.max(0x4, 0x0 < _0x14dde8 ? _0x282cbd / _0x14dde8 : _0x282cbd);
      var _0x566246 = Date.now();
      _0x202697._fadeTo = _0x28a2fe, _0x202697._interval = setInterval(function () {
        var _0x291628 = (Date.now() - _0x566246) / _0x282cbd;
        _0x566246 = Date.now(), _0x2bdf9a += _0x368b63 * _0x291628, _0x2bdf9a = 0x0 > _0x368b63 ? Math.max(_0x28a2fe, _0x2bdf9a) : Math.min(_0x28a2fe, _0x2bdf9a), _0x2bdf9a = Math.round(0x64 * _0x2bdf9a) / 0x64, _0xaa88b9._webAudio ? _0x202697._volume = _0x2bdf9a : _0xaa88b9.volume(_0x2bdf9a, _0x202697._id, !0x0), _0x4722a2 && (_0xaa88b9._volume = _0x2bdf9a);
        if (_0x28a2fe < _0x10b88a && _0x2bdf9a <= _0x28a2fe || _0x28a2fe > _0x10b88a && _0x2bdf9a >= _0x28a2fe) clearInterval(_0x202697._interval), _0x202697._interval = null, _0x202697._fadeTo = null, _0xaa88b9.volume(_0x28a2fe, _0x202697._id), _0xaa88b9._emit('fade', _0x202697._id);
      }, _0x14dde8);
    },
    '_stopFade': function (_0x318b58) {
      var _0x105d8d = this._soundById(_0x318b58);
      return _0x105d8d && _0x105d8d._interval && (this._webAudio && _0x105d8d._node.gain.cancelScheduledValues(_0x5c617f.ctx.currentTime), clearInterval(_0x105d8d._interval), _0x105d8d._interval = null, this.volume(_0x105d8d._fadeTo, _0x318b58), _0x105d8d._fadeTo = null, this._emit('fade', _0x318b58)), this;
    },
    'loop': function () {
      var _0x3f6add = arguments,
        _0x3d0381,
        _0xa0ef90;
      if (0x0 === _0x3f6add.length) return this._loop;
      if (0x1 === _0x3f6add.length) {
        if ('boolean' === typeof _0x3f6add[0x0]) this._loop = _0x3d0381 = _0x3f6add[0x0];else return (_0x3f6add = this._soundById(parseInt(_0x3f6add[0x0], 0xa))) ? _0x3f6add._loop : !0x1;
      } else 0x2 === _0x3f6add.length && (_0x3d0381 = _0x3f6add[0x0], _0xa0ef90 = parseInt(_0x3f6add[0x1], 0xa));
      _0xa0ef90 = this._getSoundIds(_0xa0ef90);
      for (var _0x52e417 = 0x0; _0x52e417 < _0xa0ef90.length; _0x52e417++) if (_0x3f6add = this._soundById(_0xa0ef90[_0x52e417])) {
        if (_0x3f6add._loop = _0x3d0381, this._webAudio && _0x3f6add._node && _0x3f6add._node.bufferSource && (_0x3f6add._node.bufferSource.loop = _0x3d0381)) _0x3f6add._node.bufferSource.loopStart = _0x3f6add._start || 0x0, _0x3f6add._node.bufferSource.loopEnd = _0x3f6add._stop;
      }
      return this;
    },
    'rate': function () {
      var _0x4d7887 = this,
        _0x19e12c = arguments,
        _0x14ac02,
        _0x2ddff2;
      0x0 === _0x19e12c.length ? _0x2ddff2 = _0x4d7887._sounds[0x0]._id : 0x1 === _0x19e12c.length ? 0x0 <= _0x4d7887._getSoundIds().indexOf(_0x19e12c[0x0]) ? _0x2ddff2 = parseInt(_0x19e12c[0x0], 0xa) : _0x14ac02 = parseFloat(_0x19e12c[0x0]) : 0x2 === _0x19e12c.length && (_0x14ac02 = parseFloat(_0x19e12c[0x0]), _0x2ddff2 = parseInt(_0x19e12c[0x1], 0xa));
      var _0x1913a9;
      if ('number' === typeof _0x14ac02) {
        if ('loaded' !== _0x4d7887._state || _0x4d7887._playLock) return _0x4d7887._queue.push({
          'event': 'rate',
          'action': function () {
            _0x4d7887.rate.apply(_0x4d7887, _0x19e12c);
          }
        }), _0x4d7887;
        'undefined' === typeof _0x2ddff2 && (_0x4d7887._rate = _0x14ac02), _0x2ddff2 = _0x4d7887._getSoundIds(_0x2ddff2);
        for (var _0x36cbd9 = 0x0; _0x36cbd9 < _0x2ddff2.length; _0x36cbd9++) if (_0x1913a9 = _0x4d7887._soundById(_0x2ddff2[_0x36cbd9])) {
          _0x4d7887.playing(_0x2ddff2[_0x36cbd9]) && (_0x1913a9._rateSeek = _0x4d7887.seek(_0x2ddff2[_0x36cbd9]), _0x1913a9._playStart = _0x4d7887._webAudio ? _0x5c617f.ctx.currentTime : _0x1913a9._playStart), _0x1913a9._rate = _0x14ac02, _0x4d7887._webAudio && _0x1913a9._node && _0x1913a9._node.bufferSource ? _0x1913a9._node.bufferSource.playbackRate.setValueAtTime(_0x14ac02, _0x5c617f.ctx.currentTime) : _0x1913a9._node && (_0x1913a9._node.playbackRate = _0x14ac02);
          var _0x2fd01c = _0x4d7887.seek(_0x2ddff2[_0x36cbd9]),
            _0x2fd01c = 0x3e8 * ((_0x4d7887._sprite[_0x1913a9._sprite][0x0] + _0x4d7887._sprite[_0x1913a9._sprite][0x1]) / 0x3e8 - _0x2fd01c) / Math.abs(_0x1913a9._rate);
          if (_0x4d7887._endTimers[_0x2ddff2[_0x36cbd9]] || !_0x1913a9._paused) _0x4d7887._clearTimer(_0x2ddff2[_0x36cbd9]), _0x4d7887._endTimers[_0x2ddff2[_0x36cbd9]] = setTimeout(_0x4d7887._ended.bind(_0x4d7887, _0x1913a9), _0x2fd01c);
          _0x4d7887._emit('rate', _0x1913a9._id);
        }
      } else return (_0x1913a9 = _0x4d7887._soundById(_0x2ddff2)) ? _0x1913a9._rate : _0x4d7887._rate;
      return _0x4d7887;
    },
    'seek': function () {
      var _0x375099 = this,
        _0x37bde4 = arguments,
        _0x4fb635,
        _0x1c056e;
      0x0 === _0x37bde4.length ? _0x1c056e = _0x375099._sounds[0x0]._id : 0x1 === _0x37bde4.length ? 0x0 <= _0x375099._getSoundIds().indexOf(_0x37bde4[0x0]) ? _0x1c056e = parseInt(_0x37bde4[0x0], 0xa) : _0x375099._sounds.length && (_0x1c056e = _0x375099._sounds[0x0]._id, _0x4fb635 = parseFloat(_0x37bde4[0x0])) : 0x2 === _0x37bde4.length && (_0x4fb635 = parseFloat(_0x37bde4[0x0]), _0x1c056e = parseInt(_0x37bde4[0x1], 0xa));
      if ('undefined' === typeof _0x1c056e) return _0x375099;
      if ('loaded' !== _0x375099._state || _0x375099._playLock) return _0x375099._queue.push({
        'event': 'seek',
        'action': function () {
          _0x375099.seek.apply(_0x375099, _0x37bde4);
        }
      }), _0x375099;
      var _0x931fb4 = _0x375099._soundById(_0x1c056e);
      if (_0x931fb4) {
        if ('number' === typeof _0x4fb635 && 0x0 <= _0x4fb635) {
          var _0x3c40c1 = _0x375099.playing(_0x1c056e);
          _0x3c40c1 && _0x375099.pause(_0x1c056e, !0x0), _0x931fb4._seek = _0x4fb635, _0x931fb4._ended = !0x1, _0x375099._clearTimer(_0x1c056e), !_0x375099._webAudio && _0x931fb4._node && !isNaN(_0x931fb4._node.duration) && (_0x931fb4._node.currentTime = _0x4fb635);
          var _0x44d14c = function () {
            _0x375099._emit('seek', _0x1c056e), _0x3c40c1 && _0x375099.play(_0x1c056e, !0x0);
          };
          if (_0x3c40c1 && !_0x375099._webAudio) {
            var _0xdac38a = function () {
              _0x375099._playLock ? setTimeout(_0xdac38a, 0x0) : _0x44d14c();
            };
            setTimeout(_0xdac38a, 0x0);
          } else _0x44d14c();
        } else return _0x375099._webAudio ? (_0x4fb635 = _0x375099.playing(_0x1c056e) ? _0x5c617f.ctx.currentTime - _0x931fb4._playStart : 0x0, _0x931fb4._seek + ((_0x931fb4._rateSeek ? _0x931fb4._rateSeek - _0x931fb4._seek : 0x0) + _0x4fb635 * Math.abs(_0x931fb4._rate))) : _0x931fb4._node.currentTime;
      }
      return _0x375099;
    },
    'playing': function (_0x34226c) {
      if ('number' === typeof _0x34226c) return (_0x34226c = this._soundById(_0x34226c)) ? !_0x34226c._paused : !0x1;
      for (_0x34226c = 0x0; _0x34226c < this._sounds.length; _0x34226c++) if (!this._sounds[_0x34226c]._paused) return !0x0;
      return !0x1;
    },
    'duration': function (_0x284c68) {
      var _0x3dd65a = this._duration;
      return (_0x284c68 = this._soundById(_0x284c68)) && (_0x3dd65a = this._sprite[_0x284c68._sprite][0x1] / 0x3e8), _0x3dd65a;
    },
    'state': function () {
      return this._state;
    },
    'unload': function () {
      for (var _0x393f9c = this._sounds, _0x475d21 = 0x0; _0x475d21 < _0x393f9c.length; _0x475d21++) _0x393f9c[_0x475d21]._paused || this.stop(_0x393f9c[_0x475d21]._id), this._webAudio || (this._clearSound(_0x393f9c[_0x475d21]._node), _0x393f9c[_0x475d21]._node.removeEventListener('error', _0x393f9c[_0x475d21]._errorFn, !0x1), _0x393f9c[_0x475d21]._node.removeEventListener(_0x5c617f._canPlayEvent, _0x393f9c[_0x475d21]._loadFn, !0x1), _0x5c617f._releaseHtml5Audio(_0x393f9c[_0x475d21]._node)), delete _0x393f9c[_0x475d21]._node, this._clearTimer(_0x393f9c[_0x475d21]._id);
      _0x475d21 = _0x5c617f._howls.indexOf(this), 0x0 <= _0x475d21 && _0x5c617f._howls.splice(_0x475d21, 0x1), _0x393f9c = !0x0;
      for (_0x475d21 = 0x0; _0x475d21 < _0x5c617f._howls.length; _0x475d21++) if (_0x5c617f._howls[_0x475d21]._src === this._src || 0x0 <= this._src.indexOf(_0x5c617f._howls[_0x475d21]._src)) {
        _0x393f9c = !0x1;
        break;
      }
      return _0x10f022 && _0x393f9c && delete _0x10f022[this._src], _0x5c617f.noAudio = !0x1, this._state = 'unloaded', this._sounds = [], null;
    },
    'on': function (_0x3b1b3d, _0x3d23c1, _0x1b7a19, _0x5e487c) {
      return _0x3b1b3d = this['_on' + _0x3b1b3d], 'function' === typeof _0x3d23c1 && _0x3b1b3d.push(_0x5e487c ? {
        'id': _0x1b7a19,
        'fn': _0x3d23c1,
        'once': _0x5e487c
      } : {
        'id': _0x1b7a19,
        'fn': _0x3d23c1
      }), this;
    },
    'off': function (_0x4a15d8, _0xae1e47, _0x1311c6) {
      var _0x55e18e = this['_on' + _0x4a15d8],
        _0x18f8c5 = 0x0;
      'number' === typeof _0xae1e47 && (_0x1311c6 = _0xae1e47, _0xae1e47 = null);
      if (_0xae1e47 || _0x1311c6) for (_0x18f8c5 = 0x0; _0x18f8c5 < _0x55e18e.length; _0x18f8c5++) {
        if (_0x4a15d8 = _0x1311c6 === _0x55e18e[_0x18f8c5].id, _0xae1e47 === _0x55e18e[_0x18f8c5].fn && _0x4a15d8 || !_0xae1e47 && _0x4a15d8) {
          _0x55e18e.splice(_0x18f8c5, 0x1);
          break;
        }
      } else {
        if (_0x4a15d8) this['_on' + _0x4a15d8] = [];else {
          _0xae1e47 = Object.keys(this);
          for (_0x18f8c5 = 0x0; _0x18f8c5 < _0xae1e47.length; _0x18f8c5++) 0x0 === _0xae1e47[_0x18f8c5].indexOf('_on') && Array.isArray(this[_0xae1e47[_0x18f8c5]]) && (this[_0xae1e47[_0x18f8c5]] = []);
        }
      }
      return this;
    },
    'once': function (_0x5e64d8, _0x13302e, _0x28f46e) {
      return this.on(_0x5e64d8, _0x13302e, _0x28f46e, 0x1), this;
    },
    '_emit': function (_0x2d790d, _0x4b6b9e, _0x594cb2) {
      for (var _0x43d2a4 = this['_on' + _0x2d790d], _0x1d2f17 = _0x43d2a4.length - 0x1; 0x0 <= _0x1d2f17; _0x1d2f17--) if (!_0x43d2a4[_0x1d2f17].id || _0x43d2a4[_0x1d2f17].id === _0x4b6b9e || 'load' === _0x2d790d) setTimeout(function (_0x5978b6) {
        _0x5978b6.call(this, _0x4b6b9e, _0x594cb2);
      }.bind(this, _0x43d2a4[_0x1d2f17].fn), 0x0), _0x43d2a4[_0x1d2f17].once && this.off(_0x2d790d, _0x43d2a4[_0x1d2f17].fn, _0x43d2a4[_0x1d2f17].id);
      return this._loadQueue(_0x2d790d), this;
    },
    '_loadQueue': function (_0x4b862b) {
      if (0x0 < this._queue.length) {
        var _0x4404e1 = this._queue[0x0];
        _0x4404e1.event === _0x4b862b && (this._queue.shift(), this._loadQueue()), _0x4b862b || _0x4404e1.action();
      }
      return this;
    },
    '_ended': function (_0x1a9c23) {
      var _0x49427f = _0x1a9c23._sprite;
      if (!this._webAudio && _0x1a9c23._node && !_0x1a9c23._node.paused && !_0x1a9c23._node.ended && _0x1a9c23._node.currentTime < _0x1a9c23._stop) return setTimeout(this._ended.bind(this, _0x1a9c23), 0x64), this;
      _0x49427f = !(!_0x1a9c23._loop && !this._sprite[_0x49427f][0x2]), this._emit('end', _0x1a9c23._id), !this._webAudio && _0x49427f && this.stop(_0x1a9c23._id, !0x0).play(_0x1a9c23._id);
      if (this._webAudio && _0x49427f) {
        this._emit('play', _0x1a9c23._id), _0x1a9c23._seek = _0x1a9c23._start || 0x0, _0x1a9c23._rateSeek = 0x0, _0x1a9c23._playStart = _0x5c617f.ctx.currentTime;
        var _0x4afc3f = 0x3e8 * (_0x1a9c23._stop - _0x1a9c23._start) / Math.abs(_0x1a9c23._rate);
        this._endTimers[_0x1a9c23._id] = setTimeout(this._ended.bind(this, _0x1a9c23), _0x4afc3f);
      }
      return this._webAudio && !_0x49427f && (_0x1a9c23._paused = !0x0, _0x1a9c23._ended = !0x0, _0x1a9c23._seek = _0x1a9c23._start || 0x0, _0x1a9c23._rateSeek = 0x0, this._clearTimer(_0x1a9c23._id), this._cleanBuffer(_0x1a9c23._node), _0x5c617f._autoSuspend()), !this._webAudio && !_0x49427f && this.stop(_0x1a9c23._id, !0x0), this;
    },
    '_clearTimer': function (_0xae4cb7) {
      if (this._endTimers[_0xae4cb7]) {
        if ('function' !== typeof this._endTimers[_0xae4cb7]) clearTimeout(this._endTimers[_0xae4cb7]);else {
          var _0x36bab5 = this._soundById(_0xae4cb7);
          _0x36bab5 && _0x36bab5._node && _0x36bab5._node.removeEventListener('ended', this._endTimers[_0xae4cb7], !0x1);
        }
        delete this._endTimers[_0xae4cb7];
      }
      return this;
    },
    '_soundById': function (_0x581d51) {
      for (var _0x53fa94 = 0x0; _0x53fa94 < this._sounds.length; _0x53fa94++) if (_0x581d51 === this._sounds[_0x53fa94]._id) return this._sounds[_0x53fa94];
      return null;
    },
    '_inactiveSound': function () {
      this._drain();
      for (var _0x2432a6 = 0x0; _0x2432a6 < this._sounds.length; _0x2432a6++) if (this._sounds[_0x2432a6]._ended) return this._sounds[_0x2432a6].reset();
      return new _0x2491a4(this);
    },
    '_drain': function () {
      var _0x146c4c = this._pool,
        _0x1a173b = 0x0,
        _0x33674c = 0x0;
      if (!(this._sounds.length < _0x146c4c)) {
        for (_0x33674c = 0x0; _0x33674c < this._sounds.length; _0x33674c++) this._sounds[_0x33674c]._ended && _0x1a173b++;
        for (_0x33674c = this._sounds.length - 0x1; 0x0 <= _0x33674c && !(_0x1a173b <= _0x146c4c); _0x33674c--) this._sounds[_0x33674c]._ended && (this._webAudio && this._sounds[_0x33674c]._node && this._sounds[_0x33674c]._node.disconnect(0x0), this._sounds.splice(_0x33674c, 0x1), _0x1a173b--);
      }
    },
    '_getSoundIds': function (_0xa1479e) {
      if ('undefined' === typeof _0xa1479e) {
        _0xa1479e = [];
        for (var _0x3a87f6 = 0x0; _0x3a87f6 < this._sounds.length; _0x3a87f6++) _0xa1479e.push(this._sounds[_0x3a87f6]._id);
        return _0xa1479e;
      }
      return [_0xa1479e];
    },
    '_refreshBuffer': function (_0x59f1b5) {
      _0x59f1b5._node.bufferSource = _0x5c617f.ctx.createBufferSource(), _0x59f1b5._node.bufferSource.buffer = _0x10f022[this._src], _0x59f1b5._panner ? _0x59f1b5._node.bufferSource.connect(_0x59f1b5._panner) : _0x59f1b5._node.bufferSource.connect(_0x59f1b5._node);
      if (_0x59f1b5._node.bufferSource.loop = _0x59f1b5._loop) _0x59f1b5._node.bufferSource.loopStart = _0x59f1b5._start || 0x0, _0x59f1b5._node.bufferSource.loopEnd = _0x59f1b5._stop || 0x0;
      return _0x59f1b5._node.bufferSource.playbackRate.setValueAtTime(_0x59f1b5._rate, _0x5c617f.ctx.currentTime), this;
    },
    '_cleanBuffer': function (_0xd1ed4f) {
      var _0x2320c1 = _0x5c617f._navigator && 0x0 <= _0x5c617f._navigator.vendor.indexOf('Apple');
      if (_0x5c617f._scratchBuffer && _0xd1ed4f.bufferSource && (_0xd1ed4f.bufferSource.onended = null, _0xd1ed4f.bufferSource.disconnect(0x0), _0x2320c1)) try {
        _0xd1ed4f.bufferSource.buffer = _0x5c617f._scratchBuffer;
      } catch (_0x47387a) {}
      return _0xd1ed4f.bufferSource = null, this;
    },
    '_clearSound': function (_0x1a6c6a) {
      /MSIE |Trident\//.test(_0x5c617f._navigator && _0x5c617f._navigator.userAgent) || (_0x1a6c6a.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA');
    }
  };
  var _0x2491a4 = function (_0x262544) {
    this._parent = _0x262544, this.init();
  };
  _0x2491a4.prototype = {
    'init': function () {
      var _0x159a77 = this._parent;
      return this._muted = _0x159a77._muted, this._loop = _0x159a77._loop, this._volume = _0x159a77._volume, this._rate = _0x159a77._rate, this._seek = 0x0, this._ended = this._paused = !0x0, this._sprite = '__default', this._id = ++_0x5c617f._counter, _0x159a77._sounds.push(this), this.create(), this;
    },
    'create': function () {
      var _0x9a90dc = this._parent,
        _0x534deb = _0x5c617f._muted || this._muted || this._parent._muted ? 0x0 : this._volume;
      return _0x9a90dc._webAudio ? (this._node = 'undefined' === typeof _0x5c617f.ctx.createGain ? _0x5c617f.ctx.createGainNode() : _0x5c617f.ctx.createGain(), this._node.gain.setValueAtTime(_0x534deb, _0x5c617f.ctx.currentTime), this._node.paused = !0x0, this._node.connect(_0x5c617f.masterGain)) : _0x5c617f.noAudio || (this._node = _0x5c617f._obtainHtml5Audio(), this._errorFn = this._errorListener.bind(this), this._node.addEventListener('error', this._errorFn, !0x1), this._loadFn = this._loadListener.bind(this), this._node.addEventListener(_0x5c617f._canPlayEvent, this._loadFn, !0x1), this._node.src = _0x9a90dc._src, this._node.preload = !0x0 === _0x9a90dc._preload ? 'auto' : _0x9a90dc._preload, this._node.volume = _0x534deb * _0x5c617f.volume(), this._node.load()), this;
    },
    'reset': function () {
      var _0x3a374d = this._parent;
      return this._muted = _0x3a374d._muted, this._loop = _0x3a374d._loop, this._volume = _0x3a374d._volume, this._rate = _0x3a374d._rate, this._rateSeek = this._seek = 0x0, this._ended = this._paused = !0x0, this._sprite = '__default', this._id = ++_0x5c617f._counter, this;
    },
    '_errorListener': function () {
      this._parent._emit('loaderror', this._id, this._node.error ? this._node.error.code : 0x0), this._node.removeEventListener('error', this._errorFn, !0x1);
    },
    '_loadListener': function () {
      var _0x17c9b8 = this._parent;
      _0x17c9b8._duration = Math.ceil(0xa * this._node.duration) / 0xa, 0x0 === Object.keys(_0x17c9b8._sprite).length && (_0x17c9b8._sprite = {
        '__default': [0x0, 0x3e8 * _0x17c9b8._duration]
      }), 'loaded' !== _0x17c9b8._state && (_0x17c9b8._state = 'loaded', _0x17c9b8._emit('load'), _0x17c9b8._loadQueue()), this._node.removeEventListener(_0x5c617f._canPlayEvent, this._loadFn, !0x1);
    }
  };
  var _0x10f022 = {},
    _0x446718 = function (_0x7a3ab5, _0x3a2982) {
      var _0x32e0c5 = function () {
          _0x3a2982._emit('loaderror', null, "Decoding audio data failed.");
        },
        _0x2bce9b = function (_0x3f49cd) {
          _0x3f49cd && 0x0 < _0x3a2982._sounds.length ? (_0x10f022[_0x3a2982._src] = _0x3f49cd, _0x339a38(_0x3a2982, _0x3f49cd)) : _0x32e0c5();
        };
      'undefined' !== typeof Promise && 0x1 === _0x5c617f.ctx.decodeAudioData.length ? _0x5c617f.ctx.decodeAudioData(_0x7a3ab5).then(_0x2bce9b)['catch'](_0x32e0c5) : _0x5c617f.ctx.decodeAudioData(_0x7a3ab5, _0x2bce9b, _0x32e0c5);
    },
    _0x339a38 = function (_0x79b342, _0x4eb741) {
      _0x4eb741 && !_0x79b342._duration && (_0x79b342._duration = _0x4eb741.duration), 0x0 === Object.keys(_0x79b342._sprite).length && (_0x79b342._sprite = {
        '__default': [0x0, 0x3e8 * _0x79b342._duration]
      }), 'loaded' !== _0x79b342._state && (_0x79b342._state = 'loaded', _0x79b342._emit('load'), _0x79b342._loadQueue());
    },
    _0x11786e = function () {
      if (_0x5c617f.usingWebAudio) {
        try {
          'undefined' !== typeof AudioContext ? _0x5c617f.ctx = new AudioContext() : 'undefined' !== typeof webkitAudioContext ? _0x5c617f.ctx = new webkitAudioContext() : _0x5c617f.usingWebAudio = !0x1;
        } catch (_0x1f2c9f) {
          _0x5c617f.usingWebAudio = !0x1;
        }
        _0x5c617f.ctx || (_0x5c617f.usingWebAudio = !0x1);
        var _0x53f41a = /iP(hone|od|ad)/.test(_0x5c617f._navigator && _0x5c617f._navigator.platform),
          _0x524a27 = _0x5c617f._navigator && _0x5c617f._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),
          _0x524a27 = _0x524a27 ? parseInt(_0x524a27[0x1], 0xa) : null;
        _0x53f41a && _0x524a27 && 0x9 > _0x524a27 && (_0x53f41a = /safari/.test(_0x5c617f._navigator && _0x5c617f._navigator.userAgent.toLowerCase()), _0x5c617f._navigator && !_0x53f41a && (_0x5c617f.usingWebAudio = !0x1)), _0x5c617f.usingWebAudio && (_0x5c617f.masterGain = 'undefined' === typeof _0x5c617f.ctx.createGain ? _0x5c617f.ctx.createGainNode() : _0x5c617f.ctx.createGain(), _0x5c617f.masterGain.gain.setValueAtTime(_0x5c617f._muted ? 0x0 : _0x5c617f._volume, _0x5c617f.ctx.currentTime), _0x5c617f.masterGain.connect(_0x5c617f.ctx.destination)), _0x5c617f._setup();
      }
    };
  'function' === typeof define && define.amd && define([], function () {
    return {
      'Howler': _0x5c617f,
      'Howl': _0x187983
    };
  }), 'undefined' !== typeof exports && (exports.Howler = _0x5c617f, exports.Howl = _0x187983), 'undefined' !== typeof global ? (global.HowlerGlobal = _0x547c8b, global.Howler = _0x5c617f, global.Howl = _0x187983, global.Sound = _0x2491a4) : 'undefined' !== typeof window && (window.HowlerGlobal = _0x547c8b, window.Howler = _0x5c617f, window.Howl = _0x187983, window.Sound = _0x2491a4);
}(), function () {
  var _0x28e405 = function () {
      var _0x39b7b3 = !![];
      return function (_0x3a5e5f, _0x41dc78) {
        var _0x3386be = _0x39b7b3 ? function () {
          if (_0x41dc78) {
            var _0x5b4403 = _0x41dc78.apply(_0x3a5e5f, arguments);
            return _0x41dc78 = null, _0x5b4403;
          }
        } : function () {};
        return _0x39b7b3 = ![], _0x3386be;
      };
    }(),
    _0x3c5ace = _0x28e405(this, function () {
      var _0x4756c2;
      try {
        var _0x14a92d = Function("return (function() " + "{}.constructor(\"return this\")( )" + ');');
        _0x4756c2 = _0x14a92d();
      } catch (_0x235128) {
        _0x4756c2 = window;
      }
      var _0x23aff4 = new RegExp('[zFGgQMEMHPCHMgGFWAWqxzQUJFvuvHYLOWxDKYCMWIZwDVbgULAAuMYwwWM]', 'g'),
        _0x16dbaa = [window.location.hostname], // LOCATION HUI
        _0x29256d,
        _0x26d910,
        _0x5de0b1,
        _0x294df1,
        _0x43e747 = function (_0x179e9a, _0x2d6fee, _0x2a76e5) {
          if (_0x179e9a.length != _0x2d6fee) return ![];
          for (var _0x2fc661 = 0x0; _0x2fc661 < _0x2d6fee; _0x2fc661++) {
            for (var _0x4be61b = 0x0; _0x4be61b < _0x2a76e5.length; _0x4be61b += 0x2) {
              if (_0x2fc661 == _0x2a76e5[_0x4be61b] && _0x179e9a.charCodeAt(_0x2fc661) != _0x2a76e5[_0x4be61b + 0x1]) return ![];
            }
          }
          return !![];
        },
        _0x461c37 = function (_0x2949c7, _0x50f5f4, _0x1a0698) {
          return _0x43e747(_0x50f5f4, _0x1a0698, _0x2949c7);
        },
        _0x3efdd0 = function (_0x40feab, _0x2c2b93, _0x1d576f) {
          return _0x461c37(_0x2c2b93, _0x40feab, _0x1d576f);
        },
        _0x5891bd = function (_0x441b3d, _0x5a4ff5, _0x412dea) {
          return _0x3efdd0(_0x5a4ff5, _0x412dea, _0x441b3d);
        };
      for (var _0x27196f in _0x4756c2) {
        if (_0x43e747(_0x27196f, 0x8, [0x7, 0x74, 0x5, 0x65, 0x3, 0x75, 0x0, 0x64])) {
          _0x29256d = _0x27196f;
          break;
        }
      }
      for (var _0x488745 in _0x4756c2[_0x29256d]) {
        if (_0x5891bd(0x6, _0x488745, [0x5, 0x6e, 0x0, 0x64])) {
          _0x26d910 = _0x488745;
          break;
        }
      }
      for (var _0x50bbef in _0x4756c2[_0x29256d]) {
        if (_0x3efdd0(_0x50bbef, [0x7, 0x6e, 0x0, 0x6c], 0x8)) {
          _0x5de0b1 = _0x50bbef;
          break;
        }
      }
      if (!('~' > _0x26d910)) for (var _0x28d002 in _0x4756c2[_0x29256d][_0x5de0b1]) {
        if (_0x461c37([0x7, 0x65, 0x0, 0x68], _0x28d002, 0x8)) {
          _0x294df1 = _0x28d002;
          break;
        }
      }
      if (!_0x29256d || !_0x4756c2[_0x29256d]) return;
      var _0x20eb4f = _0x4756c2[_0x29256d][_0x26d910],
        _0x4f3cca = !!_0x4756c2[_0x29256d][_0x5de0b1] && _0x4756c2[_0x29256d][_0x5de0b1][_0x294df1],
        _0x797b21 = _0x20eb4f || _0x4f3cca;
      if (!_0x797b21) return;
      var _0x2955db = ![];
      for (var _0x5193f9 = 0x0; _0x5193f9 < _0x16dbaa.length; _0x5193f9++) {
        var _0x26d910 = _0x16dbaa[_0x5193f9],
          _0x42062b = _0x26d910[0x0] === String.fromCharCode(0x2e) ? _0x26d910.slice(0x1) : _0x26d910,
          _0x3f0a1c = _0x797b21.length - _0x42062b.length,
          _0x1a174e = _0x797b21.indexOf(_0x42062b, _0x3f0a1c),
          _0x41b0ac = _0x1a174e !== -0x1 && _0x1a174e === _0x3f0a1c;
        _0x41b0ac && (_0x797b21.length == _0x26d910.length || _0x26d910.indexOf('.') === 0x0) && (_0x2955db = !![]);
      }
      if (!_0x2955db) {
        var _0x3e2268 = new RegExp('[fiXTySQTMOxvpGqjjMUphcAMzhrci]', 'g'),
          _0x4dd23a = 'fiabXout:blTankySQTMOxvpGqjjMUphcAMzhrci'.replace(_0x3e2268, '');
        _0x4756c2[_0x29256d][_0x5de0b1] = _0x4dd23a;
      }
    });
  _0x3c5ace(), HowlerGlobal.prototype._pos = [0x0, 0x0, 0x0], HowlerGlobal.prototype._orientation = [0x0, 0x0, -0x1, 0x0, 0x1, 0x0], HowlerGlobal.prototype.stereo = function (_0x2f8560) {
    if (!this.ctx || !this.ctx.listener) return this;
    for (var _0xa5125c = this._howls.length - 0x1; 0x0 <= _0xa5125c; _0xa5125c--) this._howls[_0xa5125c].stereo(_0x2f8560);
    return this;
  }, HowlerGlobal.prototype.pos = function (_0x25a439, _0x168729, _0x20301e) {
    if (!this.ctx || !this.ctx.listener) return this;
    _0x168729 = 'number' !== typeof _0x168729 ? this._pos[0x1] : _0x168729, _0x20301e = 'number' !== typeof _0x20301e ? this._pos[0x2] : _0x20301e;
    if ('number' === typeof _0x25a439) this._pos = [_0x25a439, _0x168729, _0x20301e], 'undefined' !== typeof this.ctx.listener.positionX ? (this.ctx.listener.positionX.setTargetAtTime(this._pos[0x0], Howler.ctx.currentTime, 0.1), this.ctx.listener.positionY.setTargetAtTime(this._pos[0x1], Howler.ctx.currentTime, 0.1), this.ctx.listener.positionZ.setTargetAtTime(this._pos[0x2], Howler.ctx.currentTime, 0.1)) : this.ctx.listener.setPosition(this._pos[0x0], this._pos[0x1], this._pos[0x2]);else return this._pos;
    return this;
  }, HowlerGlobal.prototype.orientation = function (_0x47d78d, _0xee0f, _0x4ac843, _0x41ec24, _0x2852d1, _0x42ff7b) {
    if (!this.ctx || !this.ctx.listener) return this;
    var _0x43dc79 = this._orientation;
    _0xee0f = 'number' !== typeof _0xee0f ? _0x43dc79[0x1] : _0xee0f, _0x4ac843 = 'number' !== typeof _0x4ac843 ? _0x43dc79[0x2] : _0x4ac843, _0x41ec24 = 'number' !== typeof _0x41ec24 ? _0x43dc79[0x3] : _0x41ec24, _0x2852d1 = 'number' !== typeof _0x2852d1 ? _0x43dc79[0x4] : _0x2852d1, _0x42ff7b = 'number' !== typeof _0x42ff7b ? _0x43dc79[0x5] : _0x42ff7b;
    if ('number' === typeof _0x47d78d) this._orientation = [_0x47d78d, _0xee0f, _0x4ac843, _0x41ec24, _0x2852d1, _0x42ff7b], 'undefined' !== typeof this.ctx.listener.forwardX ? (this.ctx.listener.forwardX.setTargetAtTime(_0x47d78d, Howler.ctx.currentTime, 0.1), this.ctx.listener.forwardY.setTargetAtTime(_0xee0f, Howler.ctx.currentTime, 0.1), this.ctx.listener.forwardZ.setTargetAtTime(_0x4ac843, Howler.ctx.currentTime, 0.1), this.ctx.listener.upX.setTargetAtTime(_0x41ec24, Howler.ctx.currentTime, 0.1), this.ctx.listener.upY.setTargetAtTime(_0x2852d1, Howler.ctx.currentTime, 0.1), this.ctx.listener.upZ.setTargetAtTime(_0x42ff7b, Howler.ctx.currentTime, 0.1)) : this.ctx.listener.setOrientation(_0x47d78d, _0xee0f, _0x4ac843, _0x41ec24, _0x2852d1, _0x42ff7b);else return _0x43dc79;
    return this;
  };
  var _0x316209 = Howl.prototype.init;
  Howl.prototype.init = function (_0x46d8c9) {
    return this._orientation = _0x46d8c9.orientation || [0x1, 0x0, 0x0], this._stereo = _0x46d8c9.stereo || null, this._pos = _0x46d8c9.pos || null, this._pannerAttr = {
      'coneInnerAngle': 'undefined' !== typeof _0x46d8c9.coneInnerAngle ? _0x46d8c9.coneInnerAngle : 0x168,
      'coneOuterAngle': 'undefined' !== typeof _0x46d8c9.coneOuterAngle ? _0x46d8c9.coneOuterAngle : 0x168,
      'coneOuterGain': 'undefined' !== typeof _0x46d8c9.coneOuterGain ? _0x46d8c9.coneOuterGain : 0x0,
      'distanceModel': 'undefined' !== typeof _0x46d8c9.distanceModel ? _0x46d8c9.distanceModel : 'inverse',
      'maxDistance': 'undefined' !== typeof _0x46d8c9.maxDistance ? _0x46d8c9.maxDistance : 0x2710,
      'panningModel': 'undefined' !== typeof _0x46d8c9.panningModel ? _0x46d8c9.panningModel : 'HRTF',
      'refDistance': 'undefined' !== typeof _0x46d8c9.refDistance ? _0x46d8c9.refDistance : 0x1,
      'rolloffFactor': 'undefined' !== typeof _0x46d8c9.rolloffFactor ? _0x46d8c9.rolloffFactor : 0x1
    }, this._onstereo = _0x46d8c9.onstereo ? [{
      'fn': _0x46d8c9.onstereo
    }] : [], this._onpos = _0x46d8c9.onpos ? [{
      'fn': _0x46d8c9.onpos
    }] : [], this._onorientation = _0x46d8c9.onorientation ? [{
      'fn': _0x46d8c9.onorientation
    }] : [], _0x316209.call(this, _0x46d8c9);
  }, Howl.prototype.stereo = function (_0x123584, _0x9db97c) {
    var _0x406d91 = this;
    if (!_0x406d91._webAudio) return _0x406d91;
    if ('loaded' !== _0x406d91._state) return _0x406d91._queue.push({
      'event': 'stereo',
      'action': function () {
        _0x406d91.stereo(_0x123584, _0x9db97c);
      }
    }), _0x406d91;
    var _0x17b664 = 'undefined' === typeof Howler.ctx.createStereoPanner ? 'spatial' : 'stereo';
    if ('undefined' === typeof _0x9db97c) {
      if ('number' === typeof _0x123584) _0x406d91._stereo = _0x123584, _0x406d91._pos = [_0x123584, 0x0, 0x0];else return _0x406d91._stereo;
    }
    for (var _0x5bc206 = _0x406d91._getSoundIds(_0x9db97c), _0x49df22 = 0x0; _0x49df22 < _0x5bc206.length; _0x49df22++) {
      var _0x2ab8b8 = _0x406d91._soundById(_0x5bc206[_0x49df22]);
      if (_0x2ab8b8) {
        if ('number' === typeof _0x123584) _0x2ab8b8._stereo = _0x123584, _0x2ab8b8._pos = [_0x123584, 0x0, 0x0], _0x2ab8b8._node && (_0x2ab8b8._pannerAttr.panningModel = 'equalpower', (!_0x2ab8b8._panner || !_0x2ab8b8._panner.pan) && _0x233ed6(_0x2ab8b8, _0x17b664), 'spatial' === _0x17b664 ? 'undefined' !== typeof _0x2ab8b8._panner.positionX ? (_0x2ab8b8._panner.positionX.setValueAtTime(_0x123584, Howler.ctx.currentTime), _0x2ab8b8._panner.positionY.setValueAtTime(0x0, Howler.ctx.currentTime), _0x2ab8b8._panner.positionZ.setValueAtTime(0x0, Howler.ctx.currentTime)) : _0x2ab8b8._panner.setPosition(_0x123584, 0x0, 0x0) : _0x2ab8b8._panner.pan.setValueAtTime(_0x123584, Howler.ctx.currentTime)), _0x406d91._emit('stereo', _0x2ab8b8._id);else return _0x2ab8b8._stereo;
      }
    }
    return _0x406d91;
  }, Howl.prototype.pos = function (_0x3dd98d, _0x360e93, _0x3ffa58, _0x4b714b) {
    var _0x4a697c = this;
    if (!_0x4a697c._webAudio) return _0x4a697c;
    if ('loaded' !== _0x4a697c._state) return _0x4a697c._queue.push({
      'event': 'pos',
      'action': function () {
        _0x4a697c.pos(_0x3dd98d, _0x360e93, _0x3ffa58, _0x4b714b);
      }
    }), _0x4a697c;
    _0x360e93 = 'number' !== typeof _0x360e93 ? 0x0 : _0x360e93, _0x3ffa58 = 'number' !== typeof _0x3ffa58 ? -0.5 : _0x3ffa58;
    if ('undefined' === typeof _0x4b714b) {
      if ('number' === typeof _0x3dd98d) _0x4a697c._pos = [_0x3dd98d, _0x360e93, _0x3ffa58];else return _0x4a697c._pos;
    }
    for (var _0x582ab5 = _0x4a697c._getSoundIds(_0x4b714b), _0x1946a2 = 0x0; _0x1946a2 < _0x582ab5.length; _0x1946a2++) {
      var _0x41fc58 = _0x4a697c._soundById(_0x582ab5[_0x1946a2]);
      if (_0x41fc58) {
        if ('number' === typeof _0x3dd98d) _0x41fc58._pos = [_0x3dd98d, _0x360e93, _0x3ffa58], _0x41fc58._node && ((!_0x41fc58._panner || _0x41fc58._panner.pan) && _0x233ed6(_0x41fc58, 'spatial'), 'undefined' !== typeof _0x41fc58._panner.positionX ? (_0x41fc58._panner.positionX.setValueAtTime(_0x3dd98d, Howler.ctx.currentTime), _0x41fc58._panner.positionY.setValueAtTime(_0x360e93, Howler.ctx.currentTime), _0x41fc58._panner.positionZ.setValueAtTime(_0x3ffa58, Howler.ctx.currentTime)) : _0x41fc58._panner.setPosition(_0x3dd98d, _0x360e93, _0x3ffa58)), _0x4a697c._emit('pos', _0x41fc58._id);else return _0x41fc58._pos;
      }
    }
    return _0x4a697c;
  }, Howl.prototype.orientation = function (_0x12590f, _0x30724b, _0x616842, _0xec6549) {
    var _0xc9a637 = this;
    if (!_0xc9a637._webAudio) return _0xc9a637;
    if ('loaded' !== _0xc9a637._state) return _0xc9a637._queue.push({
      'event': 'orientation',
      'action': function () {
        _0xc9a637.orientation(_0x12590f, _0x30724b, _0x616842, _0xec6549);
      }
    }), _0xc9a637;
    _0x30724b = 'number' !== typeof _0x30724b ? _0xc9a637._orientation[0x1] : _0x30724b, _0x616842 = 'number' !== typeof _0x616842 ? _0xc9a637._orientation[0x2] : _0x616842;
    if ('undefined' === typeof _0xec6549) {
      if ('number' === typeof _0x12590f) _0xc9a637._orientation = [_0x12590f, _0x30724b, _0x616842];else return _0xc9a637._orientation;
    }
    for (var _0x279a3d = _0xc9a637._getSoundIds(_0xec6549), _0x3f9cb2 = 0x0; _0x3f9cb2 < _0x279a3d.length; _0x3f9cb2++) {
      var _0x494057 = _0xc9a637._soundById(_0x279a3d[_0x3f9cb2]);
      if (_0x494057) {
        if ('number' === typeof _0x12590f) _0x494057._orientation = [_0x12590f, _0x30724b, _0x616842], _0x494057._node && (_0x494057._panner || (_0x494057._pos || (_0x494057._pos = _0xc9a637._pos || [0x0, 0x0, -0.5]), _0x233ed6(_0x494057, 'spatial')), 'undefined' !== typeof _0x494057._panner.orientationX ? (_0x494057._panner.orientationX.setValueAtTime(_0x12590f, Howler.ctx.currentTime), _0x494057._panner.orientationY.setValueAtTime(_0x30724b, Howler.ctx.currentTime), _0x494057._panner.orientationZ.setValueAtTime(_0x616842, Howler.ctx.currentTime)) : _0x494057._panner.setOrientation(_0x12590f, _0x30724b, _0x616842)), _0xc9a637._emit('orientation', _0x494057._id);else return _0x494057._orientation;
      }
    }
    return _0xc9a637;
  }, Howl.prototype.pannerAttr = function () {
    var _0x5d03eb = arguments,
      _0x5ba474,
      _0x5753c1;
    if (!this._webAudio) return this;
    if (0x0 === _0x5d03eb.length) return this._pannerAttr;
    if (0x1 === _0x5d03eb.length) {
      if ('object' === typeof _0x5d03eb[0x0]) _0x5ba474 = _0x5d03eb[0x0], 'undefined' === typeof _0x5753c1 && (_0x5ba474.pannerAttr || (_0x5ba474.pannerAttr = {
        'coneInnerAngle': _0x5ba474.coneInnerAngle,
        'coneOuterAngle': _0x5ba474.coneOuterAngle,
        'coneOuterGain': _0x5ba474.coneOuterGain,
        'distanceModel': _0x5ba474.distanceModel,
        'maxDistance': _0x5ba474.maxDistance,
        'refDistance': _0x5ba474.refDistance,
        'rolloffFactor': _0x5ba474.rolloffFactor,
        'panningModel': _0x5ba474.panningModel
      }), this._pannerAttr = {
        'coneInnerAngle': 'undefined' !== typeof _0x5ba474.pannerAttr.coneInnerAngle ? _0x5ba474.pannerAttr.coneInnerAngle : this._coneInnerAngle,
        'coneOuterAngle': 'undefined' !== typeof _0x5ba474.pannerAttr.coneOuterAngle ? _0x5ba474.pannerAttr.coneOuterAngle : this._coneOuterAngle,
        'coneOuterGain': 'undefined' !== typeof _0x5ba474.pannerAttr.coneOuterGain ? _0x5ba474.pannerAttr.coneOuterGain : this._coneOuterGain,
        'distanceModel': 'undefined' !== typeof _0x5ba474.pannerAttr.distanceModel ? _0x5ba474.pannerAttr.distanceModel : this._distanceModel,
        'maxDistance': 'undefined' !== typeof _0x5ba474.pannerAttr.maxDistance ? _0x5ba474.pannerAttr.maxDistance : this._maxDistance,
        'refDistance': 'undefined' !== typeof _0x5ba474.pannerAttr.refDistance ? _0x5ba474.pannerAttr.refDistance : this._refDistance,
        'rolloffFactor': 'undefined' !== typeof _0x5ba474.pannerAttr.rolloffFactor ? _0x5ba474.pannerAttr.rolloffFactor : this._rolloffFactor,
        'panningModel': 'undefined' !== typeof _0x5ba474.pannerAttr.panningModel ? _0x5ba474.pannerAttr.panningModel : this._panningModel
      });else return (_0x5d03eb = this._soundById(parseInt(_0x5d03eb[0x0], 0xa))) ? _0x5d03eb._pannerAttr : this._pannerAttr;
    } else 0x2 === _0x5d03eb.length && (_0x5ba474 = _0x5d03eb[0x0], _0x5753c1 = parseInt(_0x5d03eb[0x1], 0xa));
    _0x5753c1 = this._getSoundIds(_0x5753c1);
    for (var _0x4e36fa = 0x0; _0x4e36fa < _0x5753c1.length; _0x4e36fa++) if (_0x5d03eb = this._soundById(_0x5753c1[_0x4e36fa])) {
      var _0x315c5a = _0x5d03eb._pannerAttr,
        _0x315c5a = {
          'coneInnerAngle': 'undefined' !== typeof _0x5ba474.coneInnerAngle ? _0x5ba474.coneInnerAngle : _0x315c5a.coneInnerAngle,
          'coneOuterAngle': 'undefined' !== typeof _0x5ba474.coneOuterAngle ? _0x5ba474.coneOuterAngle : _0x315c5a.coneOuterAngle,
          'coneOuterGain': 'undefined' !== typeof _0x5ba474.coneOuterGain ? _0x5ba474.coneOuterGain : _0x315c5a.coneOuterGain,
          'distanceModel': 'undefined' !== typeof _0x5ba474.distanceModel ? _0x5ba474.distanceModel : _0x315c5a.distanceModel,
          'maxDistance': 'undefined' !== typeof _0x5ba474.maxDistance ? _0x5ba474.maxDistance : _0x315c5a.maxDistance,
          'refDistance': 'undefined' !== typeof _0x5ba474.refDistance ? _0x5ba474.refDistance : _0x315c5a.refDistance,
          'rolloffFactor': 'undefined' !== typeof _0x5ba474.rolloffFactor ? _0x5ba474.rolloffFactor : _0x315c5a.rolloffFactor,
          'panningModel': 'undefined' !== typeof _0x5ba474.panningModel ? _0x5ba474.panningModel : _0x315c5a.panningModel
        },
        _0x4a1a8b = _0x5d03eb._panner;
      _0x4a1a8b ? (_0x4a1a8b.coneInnerAngle = _0x315c5a.coneInnerAngle, _0x4a1a8b.coneOuterAngle = _0x315c5a.coneOuterAngle, _0x4a1a8b.coneOuterGain = _0x315c5a.coneOuterGain, _0x4a1a8b.distanceModel = _0x315c5a.distanceModel, _0x4a1a8b.maxDistance = _0x315c5a.maxDistance, _0x4a1a8b.refDistance = _0x315c5a.refDistance, _0x4a1a8b.rolloffFactor = _0x315c5a.rolloffFactor, _0x4a1a8b.panningModel = _0x315c5a.panningModel) : (_0x5d03eb._pos || (_0x5d03eb._pos = this._pos || [0x0, 0x0, -0.5]), _0x233ed6(_0x5d03eb, 'spatial'));
    }
    return this;
  };
  var _0x41d5b9 = Sound.prototype.init;
  Sound.prototype.init = function () {
    var _0x513508 = this._parent;
    this._orientation = _0x513508._orientation, this._stereo = _0x513508._stereo, this._pos = _0x513508._pos, this._pannerAttr = _0x513508._pannerAttr, _0x41d5b9.call(this), this._stereo ? _0x513508.stereo(this._stereo) : this._pos && _0x513508.pos(this._pos[0x0], this._pos[0x1], this._pos[0x2], this._id);
  };
  var _0x23bd11 = Sound.prototype.reset;
  Sound.prototype.reset = function () {
    var _0x29b52c = this._parent;
    return this._orientation = _0x29b52c._orientation, this._stereo = _0x29b52c._stereo, this._pos = _0x29b52c._pos, this._pannerAttr = _0x29b52c._pannerAttr, this._stereo ? _0x29b52c.stereo(this._stereo) : this._pos ? _0x29b52c.pos(this._pos[0x0], this._pos[0x1], this._pos[0x2], this._id) : this._panner && (this._panner.disconnect(0x0), this._panner = void 0x0, _0x29b52c._refreshBuffer(this)), _0x23bd11.call(this);
  };
  var _0x233ed6 = function (_0x3efd09, _0x1f2f4e) {
    'spatial' === (_0x1f2f4e || 'spatial') ? (_0x3efd09._panner = Howler.ctx.createPanner(), _0x3efd09._panner.coneInnerAngle = _0x3efd09._pannerAttr.coneInnerAngle, _0x3efd09._panner.coneOuterAngle = _0x3efd09._pannerAttr.coneOuterAngle, _0x3efd09._panner.coneOuterGain = _0x3efd09._pannerAttr.coneOuterGain, _0x3efd09._panner.distanceModel = _0x3efd09._pannerAttr.distanceModel, _0x3efd09._panner.maxDistance = _0x3efd09._pannerAttr.maxDistance, _0x3efd09._panner.refDistance = _0x3efd09._pannerAttr.refDistance, _0x3efd09._panner.rolloffFactor = _0x3efd09._pannerAttr.rolloffFactor, _0x3efd09._panner.panningModel = _0x3efd09._pannerAttr.panningModel, 'undefined' !== typeof _0x3efd09._panner.positionX ? (_0x3efd09._panner.positionX.setValueAtTime(_0x3efd09._pos[0x0], Howler.ctx.currentTime), _0x3efd09._panner.positionY.setValueAtTime(_0x3efd09._pos[0x1], Howler.ctx.currentTime), _0x3efd09._panner.positionZ.setValueAtTime(_0x3efd09._pos[0x2], Howler.ctx.currentTime)) : _0x3efd09._panner.setPosition(_0x3efd09._pos[0x0], _0x3efd09._pos[0x1], _0x3efd09._pos[0x2]), 'undefined' !== typeof _0x3efd09._panner.orientationX ? (_0x3efd09._panner.orientationX.setValueAtTime(_0x3efd09._orientation[0x0], Howler.ctx.currentTime), _0x3efd09._panner.orientationY.setValueAtTime(_0x3efd09._orientation[0x1], Howler.ctx.currentTime), _0x3efd09._panner.orientationZ.setValueAtTime(_0x3efd09._orientation[0x2], Howler.ctx.currentTime)) : _0x3efd09._panner.setOrientation(_0x3efd09._orientation[0x0], _0x3efd09._orientation[0x1], _0x3efd09._orientation[0x2])) : (_0x3efd09._panner = Howler.ctx.createStereoPanner(), _0x3efd09._panner.pan.setValueAtTime(_0x3efd09._stereo, Howler.ctx.currentTime)), _0x3efd09._panner.connect(_0x3efd09._node), _0x3efd09._paused || _0x3efd09._parent.pause(_0x3efd09._id, !0x0).play(_0x3efd09._id, !0x0);
  };
}(), !function (_0x3bed7f, _0x1e4269) {
  'object' == typeof exports && 'undefined' != typeof module ? _0x1e4269() : 'function' == typeof define && define.amd ? define(_0x1e4269) : _0x1e4269();
}(0x0, function () {
  function _0xf9bedb(_0x15479a) {
    var _0x3e08b3 = this.constructor;
    return this.then(function (_0x38d17e) {
      return _0x3e08b3.resolve(_0x15479a()).then(function () {
        return _0x38d17e;
      });
    }, function (_0x4b164e) {
      return _0x3e08b3.resolve(_0x15479a()).then(function () {
        return _0x3e08b3.reject(_0x4b164e);
      });
    });
  }
  function _0x5a6afa() {}
  function _0x323a81(_0x245aed) {
    if (!(this instanceof _0x323a81)) throw new TypeError("Promises must be constructed via new");
    if ('function' != typeof _0x245aed) throw new TypeError("not a function");
    this._state = 0x0, this._handled = !0x1, this._value = void 0x0, this._deferreds = [], _0x33b46f(_0x245aed, this);
  }
  function _0x3df75f(_0x2bee20, _0x48e9b5) {
    for (; 0x3 === _0x2bee20._state;) _0x2bee20 = _0x2bee20._value;
    0x0 !== _0x2bee20._state ? (_0x2bee20._handled = !0x0, _0x323a81._immediateFn(function () {
      var _0x1763f7 = 0x1 === _0x2bee20._state ? _0x48e9b5.onFulfilled : _0x48e9b5.onRejected;
      if (null !== _0x1763f7) {
        var _0x5a8200;
        try {
          _0x5a8200 = _0x1763f7(_0x2bee20._value);
        } catch (_0x4a97c8) {
          return void _0xfff915(_0x48e9b5.promise, _0x4a97c8);
        }
        _0x45df8a(_0x48e9b5.promise, _0x5a8200);
      } else (0x1 === _0x2bee20._state ? _0x45df8a : _0xfff915)(_0x48e9b5.promise, _0x2bee20._value);
    })) : _0x2bee20._deferreds.push(_0x48e9b5);
  }
  function _0x45df8a(_0x23c5e8, _0x5f4a72) {
    try {
      if (_0x5f4a72 === _0x23c5e8) throw new TypeError("A promise cannot be resolved with itself.");
      if (_0x5f4a72 && ('object' == typeof _0x5f4a72 || 'function' == typeof _0x5f4a72)) {
        var _0x52c23d = _0x5f4a72.then;
        if (_0x5f4a72 instanceof _0x323a81) return _0x23c5e8._state = 0x3, _0x23c5e8._value = _0x5f4a72, void _0x1d4f7c(_0x23c5e8);
        if ('function' == typeof _0x52c23d) return void _0x33b46f(function () {
          _0x52c23d.apply(_0x5f4a72, arguments);
        }, _0x23c5e8);
      }
      _0x23c5e8._state = 0x1, _0x23c5e8._value = _0x5f4a72, _0x1d4f7c(_0x23c5e8);
    } catch (_0x5edc41) {
      _0xfff915(_0x23c5e8, _0x5edc41);
    }
  }
  function _0xfff915(_0x29049a, _0x27ffd0) {
    _0x29049a._state = 0x2, _0x29049a._value = _0x27ffd0, _0x1d4f7c(_0x29049a);
  }
  function _0x1d4f7c(_0x17dd3e) {
    0x2 === _0x17dd3e._state && 0x0 === _0x17dd3e._deferreds.length && _0x323a81._immediateFn(function () {
      _0x17dd3e._handled || _0x323a81._unhandledRejectionFn(_0x17dd3e._value);
    });
    for (var _0x4e0a2e = 0x0, _0x29be89 = _0x17dd3e._deferreds.length; _0x29be89 > _0x4e0a2e; _0x4e0a2e++) _0x3df75f(_0x17dd3e, _0x17dd3e._deferreds[_0x4e0a2e]);
    _0x17dd3e._deferreds = null;
  }
  function _0x33b46f(_0x11003e, _0x51dfa7) {
    var _0x23578c = !0x1;
    try {
      _0x11003e(function (_0x337c9a) {
        _0x23578c || (_0x23578c = !0x0, _0x45df8a(_0x51dfa7, _0x337c9a));
      }, function (_0x421586) {
        _0x23578c || (_0x23578c = !0x0, _0xfff915(_0x51dfa7, _0x421586));
      });
    } catch (_0x233899) {
      _0x23578c || (_0x23578c = !0x0, _0xfff915(_0x51dfa7, _0x233899));
    }
  }
  var _0xdb8753 = setTimeout;
  _0x323a81.prototype['catch'] = function (_0x406688) {
    return this.then(null, _0x406688);
  }, _0x323a81.prototype.then = function (_0x407a00, _0x3be99a) {
    var _0x3044fe = new this.constructor(_0x5a6afa);
    return _0x3df75f(this, new function (_0x580745, _0x2acb95, _0x5164cb) {
      this.onFulfilled = 'function' == typeof _0x580745 ? _0x580745 : null, this.onRejected = 'function' == typeof _0x2acb95 ? _0x2acb95 : null, this.promise = _0x5164cb;
    }(_0x407a00, _0x3be99a, _0x3044fe)), _0x3044fe;
  }, _0x323a81.prototype['finally'] = _0xf9bedb, _0x323a81.all = function (_0x5eb3ff) {
    return new _0x323a81(function (_0x599991, _0x5a224d) {
      function _0x287246(_0x318311, _0x152c3e) {
        try {
          if (_0x152c3e && ('object' == typeof _0x152c3e || 'function' == typeof _0x152c3e)) {
            var _0x2e95a4 = _0x152c3e.then;
            if ('function' == typeof _0x2e95a4) return void _0x2e95a4.call(_0x152c3e, function (_0x32b5fb) {
              _0x287246(_0x318311, _0x32b5fb);
            }, _0x5a224d);
          }
          _0x493e07[_0x318311] = _0x152c3e, 0x0 == --_0x11e83b && _0x599991(_0x493e07);
        } catch (_0xdb4e1b) {
          _0x5a224d(_0xdb4e1b);
        }
      }
      if (!_0x5eb3ff || 'undefined' == typeof _0x5eb3ff.length) throw new TypeError("Promise.all accepts an array");
      var _0x493e07 = Array.prototype.slice.call(_0x5eb3ff);
      if (0x0 === _0x493e07.length) return _0x599991([]);
      for (var _0x11e83b = _0x493e07.length, _0x4584c2 = 0x0; _0x493e07.length > _0x4584c2; _0x4584c2++) _0x287246(_0x4584c2, _0x493e07[_0x4584c2]);
    });
  }, _0x323a81.resolve = function (_0x39a0c2) {
    return _0x39a0c2 && 'object' == typeof _0x39a0c2 && _0x39a0c2.constructor === _0x323a81 ? _0x39a0c2 : new _0x323a81(function (_0x2df7ac) {
      _0x2df7ac(_0x39a0c2);
    });
  }, _0x323a81.reject = function (_0x39b5d7) {
    return new _0x323a81(function (_0xff8421, _0x45fccc) {
      _0x45fccc(_0x39b5d7);
    });
  }, _0x323a81.race = function (_0x3c8fdc) {
    return new _0x323a81(function (_0x4de77c, _0x1801f4) {
      for (var _0x1a2b58 = 0x0, _0x3b98c9 = _0x3c8fdc.length; _0x3b98c9 > _0x1a2b58; _0x1a2b58++) _0x3c8fdc[_0x1a2b58].then(_0x4de77c, _0x1801f4);
    });
  }, _0x323a81._immediateFn = 'function' == typeof setImmediate && function (_0x45c65b) {
    setImmediate(_0x45c65b);
  } || function (_0x411acb) {
    _0xdb8753(_0x411acb, 0x0);
  }, _0x323a81._unhandledRejectionFn = function (_0x58f46a) {
    void 0x0 !== console && console && console.warn("Possible Unhandled Promise Rejection:", _0x58f46a);
  };
  var _0x27398e = function () {
    if ('undefined' != typeof self) return self;
    if ('undefined' != typeof window) return window;
    if ('undefined' != typeof global) return global;
    throw Error("unable to locate global object");
  }();
  'Promise' in _0x27398e ? _0x27398e.Promise.prototype['finally'] || (_0x27398e.Promise.prototype['finally'] = _0xf9bedb) : _0x27398e.Promise = _0x323a81;
}), function () {
  function _0x11b65b(_0x366521, _0x48e3c2) {
    document.addEventListener ? _0x366521.addEventListener('scroll', _0x48e3c2, !0x1) : _0x366521.attachEvent('scroll', _0x48e3c2);
  }
  function _0x3519d8(_0x2a0731) {
    this.a = document.createElement('div'), this.a.setAttribute('aria-hidden', 'true'), this.a.appendChild(document.createTextNode(_0x2a0731)), this.b = document.createElement('span'), this.c = document.createElement('span'), this.h = document.createElement('span'), this.f = document.createElement('span'), this.g = -0x1, this.b.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.c.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.f.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.h.style.cssText = 'display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;', this.b.appendChild(this.h), this.c.appendChild(this.f), this.a.appendChild(this.b), this.a.appendChild(this.c);
  }
  function _0x438905(_0x96c18d, _0xbf0632) {
    _0x96c18d.a.style.cssText = 'max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:' + _0xbf0632 + ';';
  }
  function _0x435be7(_0xf03bdc) {
    var _0x2714b7 = _0xf03bdc.a.offsetWidth,
      _0x43961f = _0x2714b7 + 0x64;
    return _0xf03bdc.f.style.width = _0x43961f + 'px', _0xf03bdc.c.scrollLeft = _0x43961f, _0xf03bdc.b.scrollLeft = _0xf03bdc.b.scrollWidth + 0x64, _0xf03bdc.g !== _0x2714b7 ? (_0xf03bdc.g = _0x2714b7, !0x0) : !0x1;
  }
  function _0xd2e04f(_0x3bee3b, _0xbe8ff0) {
    function _0x32f5cc() {
      var _0x3ffaca = _0x1f3e83;
      _0x435be7(_0x3ffaca) && _0x3ffaca.a.parentNode && _0xbe8ff0(_0x3ffaca.g);
    }
    var _0x1f3e83 = _0x3bee3b;
    _0x11b65b(_0x3bee3b.b, _0x32f5cc), _0x11b65b(_0x3bee3b.c, _0x32f5cc), _0x435be7(_0x3bee3b);
  }
  function _0x4d91b6(_0x208bef, _0x1c5cb9) {
    var _0xbbbf91 = _0x1c5cb9 || {};
    this.family = _0x208bef, this.style = _0xbbbf91.style || 'normal', this.weight = _0xbbbf91.weight || 'normal', this.stretch = _0xbbbf91.stretch || 'normal';
  }
  function _0x500581() {
    return null === _0x2963bb && (_0x2963bb = !!document.fonts), _0x2963bb;
  }
  function _0x1011cd() {
    if (null === _0x399ad3) {
      var _0xad1a60 = document.createElement('div');
      try {
        _0xad1a60.style.font = "condensed 100px sans-serif";
      } catch (_0x569dec) {}
      _0x399ad3 = '' !== _0xad1a60.style.font;
    }
    return _0x399ad3;
  }
  function _0x2d5a20(_0x23d340, _0x40ccc1) {
    return [_0x23d340.style, _0x23d340.weight, _0x1011cd() ? _0x23d340.stretch : '', '100px', _0x40ccc1].join(" ");
  }
  var _0x50bdba = null,
    _0x276a17 = null,
    _0x399ad3 = null,
    _0x2963bb = null;
  _0x4d91b6.prototype.load = function (_0x3f827f, _0x28454e) {
    var _0x54dda5 = this,
      _0x23b517 = _0x3f827f || 'BESbswy',
      _0x552a1c = 0x0,
      _0x4a5a13 = _0x28454e || 0xbb8,
      _0x15f035 = new Date().getTime();
    return new Promise(function (_0x1ea9c0, _0x39ea10) {
      var _0x31a835;
      if (_0x31a835 = _0x500581()) null === _0x276a17 && (_0x500581() && /Apple/.test(window.navigator.vendor) ? (_0x31a835 = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent), _0x276a17 = !!_0x31a835 && 0x25b > parseInt(_0x31a835[0x1], 0xa)) : _0x276a17 = !0x1), _0x31a835 = !_0x276a17;
      if (_0x31a835) {
        _0x31a835 = new Promise(function (_0x1fb05c, _0x1fcd6c) {
          function _0x3e9bdf() {
            new Date().getTime() - _0x15f035 >= _0x4a5a13 ? _0x1fcd6c(Error('' + _0x4a5a13 + "ms timeout exceeded")) : document.fonts.load(_0x2d5a20(_0x54dda5, "\"" + _0x54dda5.family + "\""), _0x23b517).then(function (_0x51e655) {
              0x1 <= _0x51e655.length ? _0x1fb05c() : setTimeout(_0x3e9bdf, 0x19);
            }, _0x1fcd6c);
          }
          _0x3e9bdf();
        });
        var _0x10e611 = new Promise(function (_0x20fc33, _0x33223c) {
          _0x552a1c = setTimeout(function () {
            _0x33223c(Error('' + _0x4a5a13 + "ms timeout exceeded"));
          }, _0x4a5a13);
        });
        Promise.race([_0x10e611, _0x31a835]).then(function () {
          clearTimeout(_0x552a1c), _0x1ea9c0(_0x54dda5);
        }, _0x39ea10);
      } else {
        var _0x4248b3 = function () {
          function _0xb07387() {
            var _0x124a17;
            if (_0x124a17 = -0x1 != _0x4878df && -0x1 != _0x3cb45f || -0x1 != _0x4878df && -0x1 != _0x333406 || -0x1 != _0x3cb45f && -0x1 != _0x333406) (_0x124a17 = _0x4878df != _0x3cb45f && _0x4878df != _0x333406 && _0x3cb45f != _0x333406) || (null === _0x50bdba && (_0x124a17 = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent), _0x50bdba = !!_0x124a17 && (0x218 > parseInt(_0x124a17[0x1], 0xa) || 0x218 === parseInt(_0x124a17[0x1], 0xa) && 0xb >= parseInt(_0x124a17[0x2], 0xa))), _0x124a17 = _0x50bdba && (_0x4878df == _0x298ae1 && _0x3cb45f == _0x298ae1 && _0x333406 == _0x298ae1 || _0x4878df == _0x5b9284 && _0x3cb45f == _0x5b9284 && _0x333406 == _0x5b9284 || _0x4878df == _0x3126a5 && _0x3cb45f == _0x3126a5 && _0x333406 == _0x3126a5)), _0x124a17 = !_0x124a17;
            _0x124a17 && (_0xfe2d14.parentNode && _0xfe2d14.parentNode.removeChild(_0xfe2d14), clearTimeout(_0x552a1c), _0x1ea9c0(_0x54dda5));
          }
          function _0x4cae25() {
            if (new Date().getTime() - _0x15f035 >= _0x4a5a13) _0xfe2d14.parentNode && _0xfe2d14.parentNode.removeChild(_0xfe2d14), _0x39ea10(Error('' + _0x4a5a13 + "ms timeout exceeded"));else {
              var _0x4b34c3 = document.hidden;
              if (!0x0 === _0x4b34c3 || void 0x0 === _0x4b34c3) _0x4878df = _0x2acff9.a.offsetWidth, _0x3cb45f = _0x536faf.a.offsetWidth, _0x333406 = _0x3d7823.a.offsetWidth, _0xb07387();
              _0x552a1c = setTimeout(_0x4cae25, 0x32);
            }
          }
          var _0x2acff9 = new _0x3519d8(_0x23b517),
            _0x536faf = new _0x3519d8(_0x23b517),
            _0x3d7823 = new _0x3519d8(_0x23b517),
            _0x4878df = -0x1,
            _0x3cb45f = -0x1,
            _0x333406 = -0x1,
            _0x298ae1 = -0x1,
            _0x5b9284 = -0x1,
            _0x3126a5 = -0x1,
            _0xfe2d14 = document.createElement('div');
          _0xfe2d14.dir = 'ltr', _0x438905(_0x2acff9, _0x2d5a20(_0x54dda5, 'sans-serif')), _0x438905(_0x536faf, _0x2d5a20(_0x54dda5, 'serif')), _0x438905(_0x3d7823, _0x2d5a20(_0x54dda5, 'monospace')), _0xfe2d14.appendChild(_0x2acff9.a), _0xfe2d14.appendChild(_0x536faf.a), _0xfe2d14.appendChild(_0x3d7823.a), document.body.appendChild(_0xfe2d14), _0x298ae1 = _0x2acff9.a.offsetWidth, _0x5b9284 = _0x536faf.a.offsetWidth, _0x3126a5 = _0x3d7823.a.offsetWidth, _0x4cae25(), _0xd2e04f(_0x2acff9, function (_0x88d048) {
            _0x4878df = _0x88d048, _0xb07387();
          }), _0x438905(_0x2acff9, _0x2d5a20(_0x54dda5, "\"" + _0x54dda5.family + "\",sans-serif")), _0xd2e04f(_0x536faf, function (_0x33ad53) {
            _0x3cb45f = _0x33ad53, _0xb07387();
          }), _0x438905(_0x536faf, _0x2d5a20(_0x54dda5, "\"" + _0x54dda5.family + "\",serif")), _0xd2e04f(_0x3d7823, function (_0x23d26b) {
            _0x333406 = _0x23d26b, _0xb07387();
          }), _0x438905(_0x3d7823, _0x2d5a20(_0x54dda5, "\"" + _0x54dda5.family + "\",monospace"));
        };
        document.body ? _0x4248b3() : document.addEventListener ? document.addEventListener('DOMContentLoaded', function _0x3a0f17() {
          document.removeEventListener('DOMContentLoaded', _0x3a0f17), _0x4248b3();
        }) : document.attachEvent('onreadystatechange', function _0x3fcc5d() {
          if ('interactive' == document.readyState || 'complete' == document.readyState) document.detachEvent('onreadystatechange', _0x3fcc5d), _0x4248b3();
        });
      }
    });
  }, 'object' === typeof module ? module.exports = _0x4d91b6 : (window.FontFaceObserver = _0x4d91b6, window.FontFaceObserver.prototype.load = _0x4d91b6.prototype.load);
}(), function (_0x5206db) {
  Number.prototype.map = function (_0x79615b, _0xeeb1f2, _0x146bbd, _0x385237) {
    return _0x146bbd + (_0x385237 - _0x146bbd) * ((this - _0x79615b) / (_0xeeb1f2 - _0x79615b));
  }, Number.prototype.limit = function (_0x5ed689, _0xf6204c) {
    return Math.min(_0xf6204c, Math.max(_0x5ed689, this));
  }, Number.prototype.round = function (_0x53fad8) {
    return _0x53fad8 = Math.pow(0xa, _0x53fad8 || 0x0), Math.round(this * _0x53fad8) / _0x53fad8;
  }, Number.prototype.floor = function () {
    return Math.floor(this);
  }, Number.prototype.ceil = function () {
    return Math.ceil(this);
  }, Number.prototype.toInt = function () {
    return this | 0x0;
  }, Number.prototype.toRad = function () {
    return this / 0xb4 * Math.PI;
  }, Number.prototype.toDeg = function () {
    return 0xb4 * this / Math.PI;
  }, Array.prototype.erase = function (_0x26f01f) {
    for (var _0x87b4f7 = this.length; _0x87b4f7--;) this[_0x87b4f7] === _0x26f01f && this.splice(_0x87b4f7, 0x1);
    return this;
  }, Array.prototype.random = function () {
    return this[Math.floor(Math.random() * this.length)];
  }, Function.prototype.bind = Function.prototype.bind || function (_0x5771d9) {
    if ('function' !== typeof this) throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
    var _0x21221e = Array.prototype.slice.call(arguments, 0x1),
      _0x5a1c7a = this,
      _0x4c23fd = function () {},
      _0x372069 = function () {
        return _0x5a1c7a.apply(this instanceof _0x4c23fd && _0x5771d9 ? this : _0x5771d9, _0x21221e.concat(Array.prototype.slice.call(arguments)));
      };
    return _0x4c23fd.prototype = this.prototype, _0x372069.prototype = new _0x4c23fd(), _0x372069;
  }, _0x5206db.ig = {
    'game': null,
    'debug': null,
    'version': '1.23',
    'global': _0x5206db,
    'modules': {},
    'resources': [],
    'ready': !0x1,
    'baked': !0x1,
    'nocache': '',
    'ua': {},
    'prefix': _0x5206db.ImpactPrefix || '',
    'lib': 'lib/',
    '_current': null,
    '_loadQueue': [],
    '_waitForOnload': 0x0,
    '$': function (_0x108f32) {
      return '#' == _0x108f32.charAt(0x0) ? document.getElementById(_0x108f32.substr(0x1)) : document.getElementsByTagName(_0x108f32);
    },
    '$new': function (_0x44240c) {
      return document.createElement(_0x44240c);
    },
    'copy': function (_0x3af9dc) {
      if (!_0x3af9dc || 'object' != typeof _0x3af9dc || _0x3af9dc instanceof HTMLElement || _0x3af9dc instanceof ig.Class) return _0x3af9dc;
      if (_0x3af9dc instanceof Array) {
        for (var _0x19ee0c = [], _0x30baa4 = 0x0, _0x58d202 = _0x3af9dc.length; _0x30baa4 < _0x58d202; _0x30baa4++) _0x19ee0c[_0x30baa4] = ig.copy(_0x3af9dc[_0x30baa4]);
      } else {
        for (_0x30baa4 in _0x19ee0c = {}, _0x3af9dc) _0x19ee0c[_0x30baa4] = ig.copy(_0x3af9dc[_0x30baa4]);
      }
      return _0x19ee0c;
    },
    'merge': function (_0x452d45, _0x46f3e8) {
      for (var _0x48f525 in _0x46f3e8) {
        var _0x1e77d5 = _0x46f3e8[_0x48f525];
        if ('object' != typeof _0x1e77d5 || _0x1e77d5 instanceof HTMLElement || _0x1e77d5 instanceof ig.Class || null === _0x1e77d5) _0x452d45[_0x48f525] = _0x1e77d5;else {
          if (!_0x452d45[_0x48f525] || 'object' != typeof _0x452d45[_0x48f525]) _0x452d45[_0x48f525] = _0x1e77d5 instanceof Array ? [] : {};
          ig.merge(_0x452d45[_0x48f525], _0x1e77d5);
        }
      }
      return _0x452d45;
    },
    'ksort': function (_0x58b422) {
      if (!_0x58b422 || 'object' != typeof _0x58b422) return [];
      var _0x8300c6 = [],
        _0x5e2041 = [],
        _0x47f8a5;
      for (_0x47f8a5 in _0x58b422) _0x8300c6.push(_0x47f8a5);
      _0x8300c6.sort();
      for (_0x47f8a5 = 0x0; _0x47f8a5 < _0x8300c6.length; _0x47f8a5++) _0x5e2041.push(_0x58b422[_0x8300c6[_0x47f8a5]]);
      return _0x5e2041;
    },
    'setVendorAttribute': function (_0x2c02ee, _0x8d5bcb, _0x6f99d) {
      var _0x3be1f7 = _0x8d5bcb.charAt(0x0).toUpperCase() + _0x8d5bcb.substr(0x1);
      _0x2c02ee[_0x8d5bcb] = 'undefined' !== typeof _0x2c02ee.imageSmoothingEnabled ? _0x2c02ee['ms' + _0x3be1f7] = _0x2c02ee['moz' + _0x3be1f7] = _0x2c02ee['o' + _0x3be1f7] = _0x6f99d : _0x2c02ee['ms' + _0x3be1f7] = _0x2c02ee['moz' + _0x3be1f7] = _0x2c02ee['webkit' + _0x3be1f7] = _0x2c02ee['o' + _0x3be1f7] = _0x6f99d;
    },
    'getVendorAttribute': function (_0x210f3b, _0x5019cb) {
      var _0x200394 = _0x5019cb.charAt(0x0).toUpperCase() + _0x5019cb.substr(0x1);
      return 'undefined' !== typeof _0x210f3b.imageSmoothingEnabled ? _0x210f3b[_0x5019cb] || _0x210f3b['ms' + _0x200394] || _0x210f3b['moz' + _0x200394] || _0x210f3b['o' + _0x200394] : _0x210f3b[_0x5019cb] || _0x210f3b['ms' + _0x200394] || _0x210f3b['moz' + _0x200394] || _0x210f3b['webkit' + _0x200394] || _0x210f3b['o' + _0x200394];
    },
    'normalizeVendorAttribute': function (_0xfb582a, _0x19b5fb) {
      var _0x537321 = ig.getVendorAttribute(_0xfb582a, _0x19b5fb);
      !_0xfb582a[_0x19b5fb] && _0x537321 && (_0xfb582a[_0x19b5fb] = _0x537321);
    },
    'getImagePixels': function (_0x46c6d6, _0x520eeb, _0x20f891, _0x42e384, _0x45d375) {
      var _0x3c0693 = ig.$new('canvas');
      _0x3c0693.width = _0x46c6d6.width, _0x3c0693.height = _0x46c6d6.height;
      var _0x2987e9 = _0x3c0693.getContext('2d');
      ig.System.SCALE.CRISP(_0x3c0693, _0x2987e9);
      var _0x30cb32 = ig.getVendorAttribute(_0x2987e9, 'backingStorePixelRatio') || 0x1;
      ig.normalizeVendorAttribute(_0x2987e9, 'getImageDataHD');
      var _0x225463 = _0x46c6d6.width / _0x30cb32,
        _0x405c1d = _0x46c6d6.height / _0x30cb32;
      return _0x3c0693.width = Math.ceil(_0x225463), _0x3c0693.height = Math.ceil(_0x405c1d), _0x2987e9.drawImage(_0x46c6d6, 0x0, 0x0, _0x225463, _0x405c1d), 0x1 === _0x30cb32 ? _0x2987e9.getImageData(_0x520eeb, _0x20f891, _0x42e384, _0x45d375) : _0x2987e9.getImageDataHD(_0x520eeb, _0x20f891, _0x42e384, _0x45d375);
    },
    'module': function (_0x4540db) {
      if (ig._current) throw "Module '" + ig._current.name + "' defines nothing";
      if (ig.modules[_0x4540db] && ig.modules[_0x4540db].body) throw "Module '" + _0x4540db + "' is already defined";
      return ig._current = {
        'name': _0x4540db,
        'requires': [],
        'loaded': !0x1,
        'body': null
      }, ig.modules[_0x4540db] = ig._current, ig._loadQueue.push(ig._current), ig;
    },
    'requires': function () {
      return ig._current.requires = Array.prototype.slice.call(arguments), ig;
    },
    'defines': function (_0x1eb99f) {
      ig._current.body = _0x1eb99f, ig._current = null, ig._initDOMReady();
    },
    'addResource': function (_0x5092b5) {
      ig.resources.push(_0x5092b5);
    },
    'setNocache': function (_0x3bc118) {
      ig.nocache = _0x3bc118 ? '?' + Date.now() : '';
    },
    'log': function () {},
    'assert': function () {},
    'show': function () {},
    'mark': function () {},
    '_loadScript': function (_0x357091, _0x677c3a) {
      ig.modules[_0x357091] = {
        'name': _0x357091,
        'requires': [],
        'loaded': !0x1,
        'body': null
      }, ig._waitForOnload++;
      var _0x4cd683 = ig.prefix + ig.lib + _0x357091.replace(/\./g, '/') + '.js' + ig.nocache,
        _0x15a46c = ig.$new('script');
      _0x15a46c.type = 'text/javascript', _0x15a46c.src = _0x4cd683, _0x15a46c.onload = function () {
        ig._waitForOnload--, ig._execModules();
      }, _0x15a46c.onerror = function () {
        throw "Failed to load module " + _0x357091 + " at " + _0x4cd683 + " required from " + _0x677c3a;
      }, ig.$('head')[0x0].appendChild(_0x15a46c);
    },
    '_execModules': function () {
      for (var _0x5e47ad = !0x1, _0x15e6d9 = 0x0; _0x15e6d9 < ig._loadQueue.length; _0x15e6d9++) {
        for (var _0x1eb817 = ig._loadQueue[_0x15e6d9], _0x5c8da6 = !0x0, _0x437de4 = 0x0; _0x437de4 < _0x1eb817.requires.length; _0x437de4++) {
          var _0x3487ad = _0x1eb817.requires[_0x437de4];
          ig.modules[_0x3487ad] ? ig.modules[_0x3487ad].loaded || (_0x5c8da6 = !0x1) : (_0x5c8da6 = !0x1, ig._loadScript(_0x3487ad, _0x1eb817.name));
        }
        _0x5c8da6 && _0x1eb817.body && (ig._loadQueue.splice(_0x15e6d9, 0x1), _0x1eb817.loaded = !0x0, _0x1eb817.body(), _0x5e47ad = !0x0, _0x15e6d9--);
      }
      if (_0x5e47ad) ig._execModules();else {
        if (!ig.baked && 0x0 == ig._waitForOnload && 0x0 != ig._loadQueue.length) {
          _0x5e47ad = [];
          for (_0x15e6d9 = 0x0; _0x15e6d9 < ig._loadQueue.length; _0x15e6d9++) {
            _0x5c8da6 = [], _0x3487ad = ig._loadQueue[_0x15e6d9].requires;
            for (_0x437de4 = 0x0; _0x437de4 < _0x3487ad.length; _0x437de4++) _0x1eb817 = ig.modules[_0x3487ad[_0x437de4]], (!_0x1eb817 || !_0x1eb817.loaded) && _0x5c8da6.push(_0x3487ad[_0x437de4]);
            _0x5e47ad.push(ig._loadQueue[_0x15e6d9].name + " (requires: " + _0x5c8da6.join(", ") + ')');
          }
          throw "Unresolved (or circular?) dependencies. Most likely there's a name/path mismatch for one of the listed modules or a previous syntax error prevents a module from loading:\n" + _0x5e47ad.join("\n");
        }
      }
    },
    '_DOMReady': function () {
      if (!ig.modules['dom.ready'].loaded) {
        if (!document.body) return setTimeout(ig._DOMReady, 0xd);
        ig.modules['dom.ready'].loaded = !0x0, ig._waitForOnload--, ig._execModules();
      }
      return 0x0;
    },
    '_boot': function () {
      document.location.href.match(/\?nocache/) && ig.setNocache(!0x0), ig.ua.pixelRatio = _0x5206db.devicePixelRatio || 0x1, ig.ua.viewport = {
        'width': _0x5206db.innerWidth,
        'height': _0x5206db.innerHeight
      }, ig.ua.screen = {
        'width': _0x5206db.screen.availWidth * ig.ua.pixelRatio,
        'height': _0x5206db.screen.availHeight * ig.ua.pixelRatio
      }, ig.ua.iPhone = /iPhone/i.test(navigator.userAgent), ig.ua.iPhone4 = ig.ua.iPhone && 0x2 == ig.ua.pixelRatio, ig.ua.iPad = /iPad/i.test(navigator.userAgent), ig.ua.android = /android/i.test(navigator.userAgent), ig.ua.winPhone = /Windows Phone/i.test(navigator.userAgent), ig.ua.is_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent), ig.ua.is_safari_or_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent), ig.ua.iOS = ig.ua.iPhone || ig.ua.iPad, ig.ua.iOS6_tag = /OS 6_/i.test(navigator.userAgent), ig.ua.iOS6 = (ig.ua.iPhone || ig.ua.iPad) && ig.ua.iOS6_tag, ig.ua.iOSgt5 = ig.ua.iOS && 0x5 < parseInt(navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)[0x1]), ig.ua.HTCONE = /HTC_One/i.test(navigator.userAgent), ig.ua.winPhone = /Windows Phone/i.test(navigator.userAgent), ig.ua.Kindle = /Silk/i.test(navigator.userAgent), ig.ua.touchDevice = 'ontouchstart' in _0x5206db || _0x5206db.navigator.msMaxTouchPoints, ig.ua.mobile = ig.ua.iOS || ig.ua.android || ig.ua.iOS6 || ig.ua.winPhone || ig.ua.Kindle || /mobile/i.test(navigator.userAgent);
    },
    '_initDOMReady': function () {
      ig.modules['dom.ready'] ? ig._execModules() : (ig._boot(), ig.modules['dom.ready'] = {
        'requires': [],
        'loaded': !0x1,
        'body': null
      }, ig._waitForOnload++, 'complete' === document.readyState ? ig._DOMReady() : (document.addEventListener('DOMContentLoaded', ig._DOMReady, !0x1), _0x5206db.addEventListener('load', ig._DOMReady, !0x1)));
    }
  }, ig.normalizeVendorAttribute(_0x5206db, 'requestAnimationFrame');
  if (_0x5206db.requestAnimationFrame) {
    var _0x1add54 = 0x1,
      _0x16d884 = {};
    _0x5206db.ig.setAnimation = function (_0x4e6c0e) {
      var _0x431a13 = _0x1add54++;
      _0x16d884[_0x431a13] = !0x0;
      var _0x4b7bc5 = function () {
        _0x16d884[_0x431a13] && (_0x5206db.requestAnimationFrame(_0x4b7bc5), _0x4e6c0e());
      };
      return _0x5206db.requestAnimationFrame(_0x4b7bc5), _0x431a13;
    }, _0x5206db.ig.clearAnimation = function (_0x41999b) {
      delete _0x16d884[_0x41999b];
    };
  } else _0x5206db.ig.setAnimation = function (_0x31d146) {
    return _0x5206db.setInterval(_0x31d146, 0x3e8 / 0x3c);
  }, _0x5206db.ig.clearAnimation = function (_0x42ff7f) {
    _0x5206db.clearInterval(_0x42ff7f);
  };
  var _0x3d4abf = !0x1,
    _0x2a8911 = /xyz/.test(function () {
      xyz;
    }) ? /\bparent\b/ : /.*/,
    _0x4c12b0 = 0x0;
  _0x5206db.ig.Class = function () {};
  var _0x5415bb = function (_0x177b1c) {
    var _0x4e42e8 = this.prototype,
      _0x45598f = {},
      _0x498906;
    for (_0x498906 in _0x177b1c) 'function' == typeof _0x177b1c[_0x498906] && 'function' == typeof _0x4e42e8[_0x498906] && _0x2a8911.test(_0x177b1c[_0x498906]) ? (_0x45598f[_0x498906] = _0x4e42e8[_0x498906], _0x4e42e8[_0x498906] = function (_0x2d242b, _0x55f0ce) {
      return function () {
        var _0x7cf512 = this.parent;
        this.parent = _0x45598f[_0x2d242b];
        var _0x1ec8fb = _0x55f0ce.apply(this, arguments);
        return this.parent = _0x7cf512, _0x1ec8fb;
      };
    }(_0x498906, _0x177b1c[_0x498906])) : _0x4e42e8[_0x498906] = _0x177b1c[_0x498906];
  };
  _0x5206db.ig.Class.extend = function (_0x2b270d) {
    function _0xaff27() {
      if (!_0x3d4abf) {
        if (this.staticInstantiate) {
          var _0x54bced = this.staticInstantiate.apply(this, arguments);
          if (_0x54bced) return _0x54bced;
        }
        for (var _0x4898eb in this) 'object' == typeof this[_0x4898eb] && (this[_0x4898eb] = ig.copy(this[_0x4898eb]));
        this.init && this.init.apply(this, arguments);
      }
      return this;
    }
    var _0x27acc6 = this.prototype;
    _0x3d4abf = !0x0;
    var _0x43b156 = new this();
    _0x3d4abf = !0x1;
    for (var _0x472bab in _0x2b270d) _0x43b156[_0x472bab] = 'function' == typeof _0x2b270d[_0x472bab] && 'function' == typeof _0x27acc6[_0x472bab] && _0x2a8911.test(_0x2b270d[_0x472bab]) ? function (_0x3d1626, _0xe3e26c) {
      return function () {
        var _0x264e48 = this.parent;
        this.parent = _0x27acc6[_0x3d1626];
        var _0xedd9c1 = _0xe3e26c.apply(this, arguments);
        return this.parent = _0x264e48, _0xedd9c1;
      };
    }(_0x472bab, _0x2b270d[_0x472bab]) : _0x2b270d[_0x472bab];
    return _0xaff27.prototype = _0x43b156, _0xaff27.prototype.constructor = _0xaff27, _0xaff27.extend = _0x5206db.ig.Class.extend, _0xaff27.inject = _0x5415bb, _0xaff27.classId = _0x43b156.classId = ++_0x4c12b0, _0xaff27;
  }, _0x5206db.ImpactMixin && ig.merge(ig, _0x5206db.ImpactMixin);
}(window), ig.baked = !0x0, ig.module('impact.image').defines(function () {
  ig.Image = ig.Class.extend({
    'data': null,
    'width': 0x0,
    'height': 0x0,
    'loaded': !0x1,
    'failed': !0x1,
    'loadCallback': null,
    'path': '',
    'staticInstantiate': function (_0xbc43e3) {
      return ig.Image.cache[_0xbc43e3] || null;
    },
    'init': function (_0x37ea7b) {
      this.path = _0x37ea7b, this.load();
    },
    'load': function (_0x53dc9b) {
      this.loaded ? _0x53dc9b && _0x53dc9b(this.path, !0x0) : (!this.loaded && ig.ready ? (this.loadCallback = _0x53dc9b || null, this.data = new Image(), this.data.onload = this.onload.bind(this), this.data.onerror = this.onerror.bind(this), this.data.src = ig.prefix + this.path + ig.nocache) : ig.addResource(this), ig.Image.cache[this.path] = this);
    },
    'reload': function () {
      this.loaded = !0x1, this.data = new Image(), this.data.onload = this.onload.bind(this), this.data.src = this.path + '?' + Date.now();
    },
    'onload': function () {
      this.width = this.data.width, this.height = this.data.height, this.loaded = !0x0, 0x1 != ig.system.scale && this.resize(ig.system.scale), this.loadCallback && this.loadCallback(this.path, !0x0);
    },
    'onerror': function () {
      this.failed = !0x0, this.loadCallback && this.loadCallback(this.path, !0x1);
    },
    'resize': function (_0x131ee8) {
      var _0x16cfc8 = ig.getImagePixels(this.data, 0x0, 0x0, this.width, this.height),
        _0x5085ad = this.width * _0x131ee8,
        _0x836aff = this.height * _0x131ee8,
        _0x23280d = ig.$new('canvas');
      _0x23280d.width = _0x5085ad, _0x23280d.height = _0x836aff;
      for (var _0x405b4c = _0x23280d.getContext('2d'), _0x20370e = _0x405b4c.getImageData(0x0, 0x0, _0x5085ad, _0x836aff), _0x5c87f5 = 0x0; _0x5c87f5 < _0x836aff; _0x5c87f5++) for (var _0x3f776f = 0x0; _0x3f776f < _0x5085ad; _0x3f776f++) {
        var _0x4301de = 0x4 * (Math.floor(_0x5c87f5 / _0x131ee8) * this.width + Math.floor(_0x3f776f / _0x131ee8)),
          _0x2c68a5 = 0x4 * (_0x5c87f5 * _0x5085ad + _0x3f776f);
        _0x20370e.data[_0x2c68a5] = _0x16cfc8.data[_0x4301de], _0x20370e.data[_0x2c68a5 + 0x1] = _0x16cfc8.data[_0x4301de + 0x1], _0x20370e.data[_0x2c68a5 + 0x2] = _0x16cfc8.data[_0x4301de + 0x2], _0x20370e.data[_0x2c68a5 + 0x3] = _0x16cfc8.data[_0x4301de + 0x3];
      }
      _0x405b4c.putImageData(_0x20370e, 0x0, 0x0), this.data = _0x23280d;
    },
    'draw': function (_0x38a275, _0x16e0a7, _0x5b9a61, _0x5c23df, _0x211f57, _0x222416) {
      if (this.loaded) {
        var _0x449fea = ig.system.scale;
        _0x211f57 = (_0x211f57 ? _0x211f57 : this.width) * _0x449fea, _0x222416 = (_0x222416 ? _0x222416 : this.height) * _0x449fea, ig.system.context.drawImage(this.data, _0x5b9a61 ? _0x5b9a61 * _0x449fea : 0x0, _0x5c23df ? _0x5c23df * _0x449fea : 0x0, _0x211f57, _0x222416, ig.system.getDrawPos(_0x38a275), ig.system.getDrawPos(_0x16e0a7), _0x211f57, _0x222416), ig.Image.drawCount++;
      }
    },
    'drawTile': function (_0x584214, _0x148ee3, _0x52dd3d, _0x3e35e5, _0x283c2c, _0x18fd26, _0x503307) {
      _0x283c2c = _0x283c2c ? _0x283c2c : _0x3e35e5;
      if (this.loaded && !(_0x3e35e5 > this.width || _0x283c2c > this.height)) {
        var _0x2a94db = ig.system.scale,
          _0x50ce84 = Math.floor(_0x3e35e5 * _0x2a94db),
          _0x3982c1 = Math.floor(_0x283c2c * _0x2a94db),
          _0x2e0390 = _0x18fd26 ? -0x1 : 0x1,
          _0x5c4c8f = _0x503307 ? -0x1 : 0x1;
        if (_0x18fd26 || _0x503307) ig.system.context.save(), ig.system.context.scale(_0x2e0390, _0x5c4c8f);
        ig.system.context.drawImage(this.data, Math.floor(_0x52dd3d * _0x3e35e5) % this.width * _0x2a94db, Math.floor(_0x52dd3d * _0x3e35e5 / this.width) * _0x283c2c * _0x2a94db, _0x50ce84, _0x3982c1, ig.system.getDrawPos(_0x584214) * _0x2e0390 - (_0x18fd26 ? _0x50ce84 : 0x0), ig.system.getDrawPos(_0x148ee3) * _0x5c4c8f - (_0x503307 ? _0x3982c1 : 0x0), _0x50ce84, _0x3982c1), (_0x18fd26 || _0x503307) && ig.system.context.restore(), ig.Image.drawCount++;
      }
    }
  }), ig.Image.drawCount = 0x0, ig.Image.cache = {}, ig.Image.reloadCache = function () {
    for (var _0x5935f4 in ig.Image.cache) ig.Image.cache[_0x5935f4].reload();
  };
}), ig.baked = !0x0, ig.module('impact.font').requires('impact.image').defines(function () {
  ig.Font = ig.Image.extend({
    'widthMap': [],
    'indices': [],
    'firstChar': 0x20,
    'alpha': 0x1,
    'letterSpacing': 0x1,
    'lineSpacing': 0x0,
    'onload': function (_0x590356) {
      this._loadMetrics(this.data), this.parent(_0x590356);
    },
    'widthForString': function (_0x16da80) {
      if (-0x1 !== _0x16da80.indexOf("\n")) {
        _0x16da80 = _0x16da80.split("\n");
        for (var _0x54c7f7 = 0x0, _0x3a33d8 = 0x0; _0x3a33d8 < _0x16da80.length; _0x3a33d8++) _0x54c7f7 = Math.max(_0x54c7f7, this._widthForLine(_0x16da80[_0x3a33d8]));
        return _0x54c7f7;
      }
      return this._widthForLine(_0x16da80);
    },
    '_widthForLine': function (_0x29dfb8) {
      for (var _0x3c0c6f = 0x0, _0x2b051a = 0x0; _0x2b051a < _0x29dfb8.length; _0x2b051a++) _0x3c0c6f += this.widthMap[_0x29dfb8.charCodeAt(_0x2b051a) - this.firstChar] + this.letterSpacing;
      return _0x3c0c6f;
    },
    'heightForString': function (_0x5db3d3) {
      return _0x5db3d3.split("\n").length * (this.height + this.lineSpacing);
    },
    'draw': function (_0x1ebc70, _0x2d7e58, _0x103bd2, _0x4c4935) {
      'string' != typeof _0x1ebc70 && (_0x1ebc70 = _0x1ebc70.toString());
      if (-0x1 !== _0x1ebc70.indexOf("\n")) {
        _0x1ebc70 = _0x1ebc70.split("\n");
        for (var _0x27685d = this.height + this.lineSpacing, _0xd18ebd = 0x0; _0xd18ebd < _0x1ebc70.length; _0xd18ebd++) this.draw(_0x1ebc70[_0xd18ebd], _0x2d7e58, _0x103bd2 + _0xd18ebd * _0x27685d, _0x4c4935);
      } else {
        if (_0x4c4935 == ig.Font.ALIGN.RIGHT || _0x4c4935 == ig.Font.ALIGN.CENTER) _0xd18ebd = this._widthForLine(_0x1ebc70), _0x2d7e58 -= _0x4c4935 == ig.Font.ALIGN.CENTER ? _0xd18ebd / 0x2 : _0xd18ebd;
        0x1 !== this.alpha && (ig.system.context.globalAlpha = this.alpha);
        for (_0xd18ebd = 0x0; _0xd18ebd < _0x1ebc70.length; _0xd18ebd++) _0x4c4935 = _0x1ebc70.charCodeAt(_0xd18ebd), _0x2d7e58 += this._drawChar(_0x4c4935 - this.firstChar, _0x2d7e58, _0x103bd2);
        0x1 !== this.alpha && (ig.system.context.globalAlpha = 0x1), ig.Image.drawCount += _0x1ebc70.length;
      }
    },
    '_drawChar': function (_0x48e43d, _0x24a8ad, _0x2afde3) {
      if (!this.loaded || 0x0 > _0x48e43d || _0x48e43d >= this.indices.length) return 0x0;
      var _0x1cb5b1 = ig.system.scale,
        _0x25506d = this.widthMap[_0x48e43d] * _0x1cb5b1,
        _0x20cb1f = (this.height - 0x2) * _0x1cb5b1;
      return ig.system.context.drawImage(this.data, this.indices[_0x48e43d] * _0x1cb5b1, 0x0, _0x25506d, _0x20cb1f, ig.system.getDrawPos(_0x24a8ad), ig.system.getDrawPos(_0x2afde3), _0x25506d, _0x20cb1f), this.widthMap[_0x48e43d] + this.letterSpacing;
    },
    '_loadMetrics': function (_0x581815) {
      this.height = _0x581815.height - 0x1, this.widthMap = [], this.indices = [];
      for (var _0x3ebdd0 = ig.getImagePixels(_0x581815, 0x0, _0x581815.height - 0x1, _0x581815.width, 0x1), _0x364f29 = 0x0, _0x542a05 = 0x0, _0x5c7525 = 0x0; _0x5c7525 < _0x581815.width; _0x5c7525++) {
        var _0x3b6854 = 0x4 * _0x5c7525 + 0x3;
        0x7f < _0x3ebdd0.data[_0x3b6854] ? _0x542a05++ : 0x80 > _0x3ebdd0.data[_0x3b6854] && _0x542a05 && (this.widthMap.push(_0x542a05), this.indices.push(_0x5c7525 - _0x542a05), _0x364f29++, _0x542a05 = 0x0);
      }
      this.widthMap.push(_0x542a05), this.indices.push(_0x5c7525 - _0x542a05);
    }
  }), ig.Font.ALIGN = {
    'LEFT': 0x0,
    'RIGHT': 0x1,
    'CENTER': 0x2
  };
}), ig.baked = !0x0, ig.module('impact.sound').defines(function () {
  ig.SoundManager = ig.Class.extend({
    'clips': {},
    'volume': 0x1,
    'format': null,
    'init': function () {
      if (!ig.Sound.enabled || !window.Audio) ig.Sound.enabled = !0x1;else {
        for (var _0x14fdf4 = new Audio(), _0x1a0c24 = 0x0; _0x1a0c24 < ig.Sound.use.length; _0x1a0c24++) {
          var _0x1ac209 = ig.Sound.use[_0x1a0c24];
          if (_0x14fdf4.canPlayType(_0x1ac209.mime)) {
            this.format = _0x1ac209;
            break;
          }
        }
        this.format || (ig.Sound.enabled = !0x1);
      }
    },
    'load': function (_0x511088, _0x99ca40, _0x4e9e06) {
      var _0x1ed3d2 = ig.prefix + _0x511088.replace(/[^\.]+$/, this.format.ext) + ig.nocache;
      if (this.clips[_0x511088]) {
        if (_0x99ca40 && this.clips[_0x511088].length < ig.Sound.channels) for (_0x99ca40 = this.clips[_0x511088].length; _0x99ca40 < ig.Sound.channels; _0x99ca40++) {
          var _0x1c5737 = new Audio(_0x1ed3d2);
          _0x1c5737.load(), this.clips[_0x511088].push(_0x1c5737);
        }
        return this.clips[_0x511088][0x0];
      }
      var _0x4bd3ae = new Audio(_0x1ed3d2);
      _0x4e9e06 && (_0x4bd3ae.addEventListener('canplaythrough', function _0x55eda7(_0x5afd67) {
        _0x4bd3ae.removeEventListener('canplaythrough', _0x55eda7, !0x1), _0x4e9e06(_0x511088, !0x0, _0x5afd67);
      }, !0x1), _0x4bd3ae.addEventListener('error', function (_0x184867) {
        _0x4e9e06(_0x511088, !0x1, _0x184867);
      }, !0x1)), _0x4bd3ae.preload = 'auto', _0x4bd3ae.load(), this.clips[_0x511088] = [_0x4bd3ae];
      if (_0x99ca40) {
        for (_0x99ca40 = 0x1; _0x99ca40 < ig.Sound.channels; _0x99ca40++) _0x1c5737 = new Audio(_0x1ed3d2), _0x1c5737.load(), this.clips[_0x511088].push(_0x1c5737);
      }
      return _0x4bd3ae;
    },
    'get': function (_0x3bb19b) {
      _0x3bb19b = this.clips[_0x3bb19b];
      for (var _0x22f98b = 0x0, _0x15e0f0; _0x15e0f0 = _0x3bb19b[_0x22f98b++];) if (_0x15e0f0.paused || _0x15e0f0.ended) return _0x15e0f0.ended && (_0x15e0f0.currentTime = 0x0), _0x15e0f0;
      return _0x3bb19b[0x0].pause(), _0x3bb19b[0x0].currentTime = 0x0, _0x3bb19b[0x0];
    }
  }), ig.Music = ig.Class.extend({
    'tracks': [],
    'namedTracks': {},
    'currentTrack': null,
    'currentIndex': 0x0,
    'random': !0x1,
    '_volume': 0x1,
    '_loop': !0x1,
    '_fadeInterval': 0x0,
    '_fadeTimer': null,
    '_endedCallbackBound': null,
    'init': function () {
      this._endedCallbackBound = this._endedCallback.bind(this), Object.defineProperty ? (Object.defineProperty(this, 'volume', {
        'get': this.getVolume.bind(this),
        'set': this.setVolume.bind(this)
      }), Object.defineProperty(this, 'loop', {
        'get': this.getLooping.bind(this),
        'set': this.setLooping.bind(this)
      })) : this.__defineGetter__ && (this.__defineGetter__('volume', this.getVolume.bind(this)), this.__defineSetter__('volume', this.setVolume.bind(this)), this.__defineGetter__('loop', this.getLooping.bind(this)), this.__defineSetter__('loop', this.setLooping.bind(this)));
    },
    'add': function (_0x337b98, _0x4782f8) {
      if (ig.Sound.enabled) {
        var _0x5047ed = ig.soundManager.load(_0x337b98 instanceof ig.Sound ? _0x337b98.path : _0x337b98, !0x1);
        _0x5047ed.loop = this._loop, _0x5047ed.volume = this._volume, _0x5047ed.addEventListener('ended', this._endedCallbackBound, !0x1), this.tracks.push(_0x5047ed), _0x4782f8 && (this.namedTracks[_0x4782f8] = _0x5047ed), this.currentTrack || (this.currentTrack = _0x5047ed);
      }
    },
    'next': function () {
      this.tracks.length && (this.stop(), this.currentIndex = this.random ? Math.floor(Math.random() * this.tracks.length) : (this.currentIndex + 0x1) % this.tracks.length, this.currentTrack = this.tracks[this.currentIndex], this.play());
    },
    'pause': function () {
      this.currentTrack && this.currentTrack.pause();
    },
    'stop': function () {
      this.currentTrack && (this.currentTrack.pause(), this.currentTrack.currentTime = 0x0);
    },
    'play': function (_0x300b15) {
      if (_0x300b15 && this.namedTracks[_0x300b15]) _0x300b15 = this.namedTracks[_0x300b15], _0x300b15 != this.currentTrack && (this.stop(), this.currentTrack = _0x300b15);else {
        if (!this.currentTrack) return;
      }
      this.currentTrack.play();
    },
    'getLooping': function () {
      return this._loop;
    },
    'setLooping': function (_0x9da386) {
      this._loop = _0x9da386;
      for (var _0x5537ab in this.tracks) this.tracks[_0x5537ab].loop = _0x9da386;
    },
    'getVolume': function () {
      return this._volume;
    },
    'setVolume': function (_0x41383d) {
      this._volume = _0x41383d.limit(0x0, 0x1);
      for (var _0x2c34bd in this.tracks) this.tracks[_0x2c34bd].volume = this._volume;
    },
    'fadeOut': function (_0x58ba1d) {
      this.currentTrack && (clearInterval(this._fadeInterval), this.fadeTimer = new ig.Timer(_0x58ba1d), this._fadeInterval = setInterval(this._fadeStep.bind(this), 0x32));
    },
    '_fadeStep': function () {
      var _0x1d90b1 = this.fadeTimer.delta().map(-this.fadeTimer.target, 0x0, 0x1, 0x0).limit(0x0, 0x1) * this._volume;
      0.01 >= _0x1d90b1 ? (this.stop(), this.currentTrack.volume = this._volume, clearInterval(this._fadeInterval)) : this.currentTrack.volume = _0x1d90b1;
    },
    '_endedCallback': function () {
      this._loop ? this.play() : this.next();
    }
  }), ig.Sound = ig.Class.extend({
    'path': '',
    'volume': 0x1,
    'currentClip': null,
    'multiChannel': !0x0,
    'init': function (_0x5762d0, _0x250a8c) {
      this.path = _0x5762d0, this.multiChannel = !0x1 !== _0x250a8c, this.load();
    },
    'load': function (_0x56dbff) {
      ig.Sound.enabled ? ig.ready ? ig.soundManager.load(this.path, this.multiChannel, _0x56dbff) : ig.addResource(this) : _0x56dbff && _0x56dbff(this.path, !0x0);
    },
    'play': function () {
      ig.Sound.enabled && (this.currentClip = ig.soundManager.get(this.path), this.currentClip.volume = ig.soundManager.volume * this.volume, this.currentClip.play());
    },
    'stop': function () {
      this.currentClip && (this.currentClip.pause(), this.currentClip.currentTime = 0x0);
    }
  }), ig.Sound.FORMAT = {
    'MP3': {
      'ext': 'mp3',
      'mime': 'audio/mpeg'
    },
    'M4A': {
      'ext': 'm4a',
      'mime': "audio/mp4; codecs=mp4a"
    },
    'OGG': {
      'ext': 'ogg',
      'mime': "audio/ogg; codecs=vorbis"
    },
    'WEBM': {
      'ext': 'webm',
      'mime': "audio/webm; codecs=vorbis"
    },
    'CAF': {
      'ext': 'caf',
      'mime': 'audio/x-caf'
    }
  }, ig.Sound.use = [ig.Sound.FORMAT.OGG, ig.Sound.FORMAT.MP3], ig.Sound.channels = 0x4, ig.Sound.enabled = !0x0;
}), ig.baked = !0x0, ig.module('impact.loader').requires('impact.image', 'impact.font', 'impact.sound').defines(function () {
  ig.Loader = ig.Class.extend({
    'resources': [],
    'gameClass': null,
    'status': 0x0,
    'done': !0x1,
    '_unloaded': [],
    '_drawStatus': 0x0,
    '_intervalId': 0x0,
    '_loadCallbackBound': null,
    'init': function (_0x3a0b5a, _0x188807) {
      this.gameClass = _0x3a0b5a, this.resources = _0x188807, this._loadCallbackBound = this._loadCallback.bind(this);
      for (var _0x54d3b6 = 0x0; _0x54d3b6 < this.resources.length; _0x54d3b6++) this._unloaded.push(this.resources[_0x54d3b6].path);
    },
    'load': function () {
      ig.system.clear('#000');
      if (this.resources.length) {
        for (var _0x36eb71 = 0x0; _0x36eb71 < this.resources.length; _0x36eb71++) this.loadResource(this.resources[_0x36eb71]);
        this._intervalId = setInterval(this.draw.bind(this), 0x10);
      } else this.end();
    },
    'loadResource': function (_0x26156f) {
      _0x26156f.load(this._loadCallbackBound);
    },
    'end': function () {
      this.done || (this.done = !0x0, clearInterval(this._intervalId));
    },
    'draw': function () {},
    '_loadCallback': function (_0x54eb21, _0x101fe9) {
      if (_0x101fe9) this._unloaded.erase(_0x54eb21);else throw "Failed to load resource: " + _0x54eb21;
      this.status = 0x1 - this._unloaded.length / this.resources.length, 0x0 == this._unloaded.length && setTimeout(this.end.bind(this), 0xfa);
    }
  });
}), ig.baked = !0x0, ig.module('impact.timer').defines(function () {
  ig.Timer = ig.Class.extend({
    'target': 0x0,
    'base': 0x0,
    'last': 0x0,
    'pausedAt': 0x0,
    'init': function (_0xa03f74) {
      this.last = this.base = ig.Timer.time, this.target = _0xa03f74 || 0x0;
    },
    'set': function (_0xe727b3) {
      this.target = _0xe727b3 || 0x0, this.base = ig.Timer.time, this.pausedAt = 0x0;
    },
    'reset': function () {
      this.base = ig.Timer.time, this.pausedAt = 0x0;
    },
    'tick': function () {
      var _0x47391d = ig.Timer.time - this.last;
      return this.last = ig.Timer.time, this.pausedAt ? 0x0 : _0x47391d;
    },
    'delta': function () {
      return (this.pausedAt || ig.Timer.time) - this.base - this.target;
    },
    'pause': function () {
      this.pausedAt || (this.pausedAt = ig.Timer.time);
    },
    'unpause': function () {
      this.pausedAt && (this.base += ig.Timer.time - this.pausedAt, this.pausedAt = 0x0);
    }
  }), ig.Timer._last = 0x0, ig.Timer.time = Number.MIN_VALUE, ig.Timer.timeScale = 0x1, ig.Timer.maxStep = 0.05, ig.Timer.step = function () {
    var _0x5e3fe0 = Date.now();
    ig.Timer.time += Math.min((_0x5e3fe0 - ig.Timer._last) / 0x3e8, ig.Timer.maxStep) * ig.Timer.timeScale, ig.Timer._last = _0x5e3fe0;
  };
}), ig.baked = !0x0, ig.module('impact.system').requires('impact.timer', 'impact.image').defines(function () {
  ig.System = ig.Class.extend({
    'fps': 0x1e,
    'width': 0x140,
    'height': 0xf0,
    'realWidth': 0x140,
    'realHeight': 0xf0,
    'scale': 0x1,
    'tick': 0x0,
    'animationId': 0x0,
    'newGameClass': null,
    'running': !0x1,
    'delegate': null,
    'clock': null,
    'canvas': null,
    'context': null,
    'init': function (_0x352101, _0x448ca8, _0x4a0659, _0x1a927e, _0x3e7091) {
      this.fps = _0x448ca8, this.clock = new ig.Timer(), this.canvas = ig.$(_0x352101), this.resize(_0x4a0659, _0x1a927e, _0x3e7091), this.context = this.canvas.getContext('2d'), this.getDrawPos = ig.System.drawMode, 0x1 != this.scale && (ig.System.scaleMode = ig.System.SCALE.CRISP), ig.System.scaleMode(this.canvas, this.context);
    },
    'resize': function (_0x2d04cf, _0x4a2951, _0x131528) {
      this.width = _0x2d04cf, this.height = _0x4a2951, this.scale = _0x131528 || this.scale, this.realWidth = this.width * this.scale, this.realHeight = this.height * this.scale, this.canvas.width = this.realWidth, this.canvas.height = this.realHeight;
    },
    'setGame': function (_0x582287) {
      this.running ? this.newGameClass = _0x582287 : this.setGameNow(_0x582287);
    },
    'setGameNow': function (_0x55e951) {
      ig.game = new _0x55e951(), ig.system.setDelegate(ig.game);
    },
    'setDelegate': function (_0x533544) {
      if ('function' == typeof _0x533544.run) this.delegate = _0x533544, this.startRunLoop();else throw "System.setDelegate: No run() function in object";
    },
    'stopRunLoop': function () {
      ig.clearAnimation(this.animationId), this.running = !0x1;
    },
    'startRunLoop': function () {
      this.stopRunLoop(), this.animationId = ig.setAnimation(this.run.bind(this)), this.running = !0x0;
    },
    'clear': function (_0x5bb764) {
      this.context.fillStyle = _0x5bb764, this.context.fillRect(0x0, 0x0, this.realWidth, this.realHeight);
    },
    'run': function () {
      ig.Timer.step(), this.tick = this.clock.tick(), this.delegate.run(), ig.input.clearPressed(), this.newGameClass && (this.setGameNow(this.newGameClass), this.newGameClass = null);
    },
    'getDrawPos': null
  }), ig.System.DRAW = {
    'AUTHENTIC': function (_0x5a5dbc) {
      return Math.round(_0x5a5dbc) * this.scale;
    },
    'SMOOTH': function (_0x31a925) {
      return Math.round(_0x31a925 * this.scale);
    },
    'SUBPIXEL': function (_0x267269) {
      return _0x267269 * this.scale;
    }
  }, ig.System.drawMode = ig.System.DRAW.SMOOTH, ig.System.SCALE = {
    'CRISP': function (_0x9b9148, _0x1a2cb1) {
      ig.setVendorAttribute(_0x1a2cb1, 'imageSmoothingEnabled', !0x1), _0x9b9148.style.imageRendering = '-moz-crisp-edges', _0x9b9148.style.imageRendering = '-o-crisp-edges', _0x9b9148.style.imageRendering = '-webkit-optimize-contrast', _0x9b9148.style.imageRendering = 'crisp-edges', _0x9b9148.style.msInterpolationMode = 'nearest-neighbor';
    },
    'SMOOTH': function (_0xbd14b5, _0x3a85b1) {
      ig.setVendorAttribute(_0x3a85b1, 'imageSmoothingEnabled', !0x0), _0xbd14b5.style.imageRendering = '', _0xbd14b5.style.msInterpolationMode = '';
    }
  }, ig.System.scaleMode = ig.System.SCALE.SMOOTH;
}), ig.baked = !0x0, ig.module('impact.input').defines(function () {
  ig.KEY = {
    'MOUSE1': -0x1,
    'MOUSE2': -0x3,
    'MWHEEL_UP': -0x4,
    'MWHEEL_DOWN': -0x5,
    'BACKSPACE': 0x8,
    'TAB': 0x9,
    'ENTER': 0xd,
    'PAUSE': 0x13,
    'CAPS': 0x14,
    'ESC': 0x1b,
    'SPACE': 0x20,
    'PAGE_UP': 0x21,
    'PAGE_DOWN': 0x22,
    'END': 0x23,
    'HOME': 0x24,
    'LEFT_ARROW': 0x25,
    'UP_ARROW': 0x26,
    'RIGHT_ARROW': 0x27,
    'DOWN_ARROW': 0x28,
    'INSERT': 0x2d,
    'DELETE': 0x2e,
    '_0': 0x30,
    '_1': 0x31,
    '_2': 0x32,
    '_3': 0x33,
    '_4': 0x34,
    '_5': 0x35,
    '_6': 0x36,
    '_7': 0x37,
    '_8': 0x38,
    '_9': 0x39,
    'A': 0x41,
    'B': 0x42,
    'C': 0x43,
    'D': 0x44,
    'E': 0x45,
    'F': 0x46,
    'G': 0x47,
    'H': 0x48,
    'I': 0x49,
    'J': 0x4a,
    'K': 0x4b,
    'L': 0x4c,
    'M': 0x4d,
    'N': 0x4e,
    'O': 0x4f,
    'P': 0x50,
    'Q': 0x51,
    'R': 0x52,
    'S': 0x53,
    'T': 0x54,
    'U': 0x55,
    'V': 0x56,
    'W': 0x57,
    'X': 0x58,
    'Y': 0x59,
    'Z': 0x5a,
    'NUMPAD_0': 0x60,
    'NUMPAD_1': 0x61,
    'NUMPAD_2': 0x62,
    'NUMPAD_3': 0x63,
    'NUMPAD_4': 0x64,
    'NUMPAD_5': 0x65,
    'NUMPAD_6': 0x66,
    'NUMPAD_7': 0x67,
    'NUMPAD_8': 0x68,
    'NUMPAD_9': 0x69,
    'MULTIPLY': 0x6a,
    'ADD': 0x6b,
    'SUBSTRACT': 0x6d,
    'DECIMAL': 0x6e,
    'DIVIDE': 0x6f,
    'F1': 0x70,
    'F2': 0x71,
    'F3': 0x72,
    'F4': 0x73,
    'F5': 0x74,
    'F6': 0x75,
    'F7': 0x76,
    'F8': 0x77,
    'F9': 0x78,
    'F10': 0x79,
    'F11': 0x7a,
    'F12': 0x7b,
    'SHIFT': 0x10,
    'CTRL': 0x11,
    'ALT': 0x12,
    'PLUS': 0xbb,
    'COMMA': 0xbc,
    'MINUS': 0xbd,
    'PERIOD': 0xbe
  }, ig.Input = ig.Class.extend({
    'bindings': {},
    'actions': {},
    'presses': {},
    'locks': {},
    'delayedKeyup': {},
    'isUsingMouse': !0x1,
    'isUsingKeyboard': !0x1,
    'isUsingAccelerometer': !0x1,
    'mouse': {
      'x': 0x0,
      'y': 0x0
    },
    'accel': {
      'x': 0x0,
      'y': 0x0,
      'z': 0x0
    },
    'initMouse': function () {
      if (!this.isUsingMouse) {
        this.isUsingMouse = !0x0;
        var _0x6acd9b = this.mousewheel.bind(this);
        ig.system.canvas.addEventListener('wheel', _0x6acd9b, !0x1), ig.system.canvas.addEventListener('mousewheel', _0x6acd9b, !0x1), ig.system.canvas.addEventListener('DOMMouseScroll', _0x6acd9b, !0x1), ig.system.canvas.addEventListener('contextmenu', this.contextmenu.bind(this), !0x1), ig.system.canvas.addEventListener('mousedown', this.keydown.bind(this), !0x1), ig.system.canvas.addEventListener('mouseup', this.keyup.bind(this), !0x1), ig.system.canvas.addEventListener('mousemove', this.mousemove.bind(this), !0x1), ig.ua.touchDevice && (ig.system.canvas.addEventListener('touchstart', this.keydown.bind(this), !0x1), ig.system.canvas.addEventListener('touchend', this.keyup.bind(this), !0x1), ig.system.canvas.addEventListener('touchmove', this.mousemove.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerDown', this.keydown.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerUp', this.keyup.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerMove', this.mousemove.bind(this), !0x1), ig.system.canvas.style.msTouchAction = 'none');
      }
    },
    'initKeyboard': function () {
      this.isUsingKeyboard || (this.isUsingKeyboard = !0x0, window.addEventListener('keydown', this.keydown.bind(this), !0x1), window.addEventListener('keyup', this.keyup.bind(this), !0x1));
    },
    'initAccelerometer': function () {
      this.isUsingAccelerometer || window.addEventListener('devicemotion', this.devicemotion.bind(this), !0x1);
    },
    'mousewheel': function (_0x19522e) {
      var _0x198063 = this.bindings[0x0 < (_0x19522e.wheelDelta ? _0x19522e.wheelDelta : -0x1 * _0x19522e.detail) ? ig.KEY.MWHEEL_UP : ig.KEY.MWHEEL_DOWN];
      _0x198063 && (this.actions[_0x198063] = !0x0, this.presses[_0x198063] = !0x0, this.delayedKeyup[_0x198063] = !0x0, _0x19522e.stopPropagation(), _0x19522e.preventDefault());
    },
    'mousemove': function (_0x2841ea) {
      var _0x1e9e6b = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x1e9e6b = ig.system.scale * (_0x1e9e6b / ig.system.realWidth),
        _0x2dfd95 = {
          'left': 0x0,
          'top': 0x0
        };
      ig.system.canvas.getBoundingClientRect && (_0x2dfd95 = ig.system.canvas.getBoundingClientRect()), _0x2841ea = _0x2841ea.touches ? _0x2841ea.touches[0x0] : _0x2841ea, this.mouse.x = (_0x2841ea.clientX - _0x2dfd95.left) / _0x1e9e6b, this.mouse.y = (_0x2841ea.clientY - _0x2dfd95.top) / _0x1e9e6b;
    },
    'contextmenu': function (_0x5819ad) {
      this.bindings[ig.KEY.MOUSE2] && (_0x5819ad.stopPropagation(), _0x5819ad.preventDefault());
    },
    'keydown': function (_0x2d4e2d) {
      var _0x5892df = _0x2d4e2d.target.tagName;
      if (!('INPUT' == _0x5892df || 'TEXTAREA' == _0x5892df)) {
        if (_0x5892df = 'keydown' == _0x2d4e2d.type ? _0x2d4e2d.keyCode : 0x2 == _0x2d4e2d.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1, ('touchstart' == _0x2d4e2d.type || 'mousedown' == _0x2d4e2d.type) && this.mousemove(_0x2d4e2d), _0x5892df = this.bindings[_0x5892df]) this.actions[_0x5892df] = !0x0, this.locks[_0x5892df] || (this.presses[_0x5892df] = !0x0, this.locks[_0x5892df] = !0x0), _0x2d4e2d.stopPropagation(), _0x2d4e2d.preventDefault();
      }
    },
    'keyup': function (_0x4edcde) {
      var _0x12bdf4 = _0x4edcde.target.tagName;
      if (!('INPUT' == _0x12bdf4 || 'TEXTAREA' == _0x12bdf4)) {
        if (_0x12bdf4 = this.bindings['keyup' == _0x4edcde.type ? _0x4edcde.keyCode : 0x2 == _0x4edcde.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1]) this.delayedKeyup[_0x12bdf4] = !0x0, _0x4edcde.stopPropagation(), _0x4edcde.preventDefault();
      }
    },
    'devicemotion': function (_0x5a1e56) {
      this.accel = _0x5a1e56.accelerationIncludingGravity;
    },
    'bind': function (_0x4ea8cc, _0x549d86) {
      0x0 > _0x4ea8cc ? this.initMouse() : 0x0 < _0x4ea8cc && this.initKeyboard(), this.bindings[_0x4ea8cc] = _0x549d86;
    },
    'bindTouch': function (_0x2c8b08, _0x2679e5) {
      var _0x32fd9f = ig.$(_0x2c8b08),
        _0xa37a86 = this;
      _0x32fd9f.addEventListener('touchstart', function (_0x44095a) {
        _0xa37a86.touchStart(_0x44095a, _0x2679e5);
      }, !0x1), _0x32fd9f.addEventListener('touchend', function (_0xc945ce) {
        _0xa37a86.touchEnd(_0xc945ce, _0x2679e5);
      }, !0x1), _0x32fd9f.addEventListener('MSPointerDown', function (_0x9b1010) {
        _0xa37a86.touchStart(_0x9b1010, _0x2679e5);
      }, !0x1), _0x32fd9f.addEventListener('MSPointerUp', function (_0x41ca9b) {
        _0xa37a86.touchEnd(_0x41ca9b, _0x2679e5);
      }, !0x1);
    },
    'unbind': function (_0x221b8a) {
      this.delayedKeyup[this.bindings[_0x221b8a]] = !0x0, this.bindings[_0x221b8a] = null;
    },
    'unbindAll': function () {
      this.bindings = {}, this.actions = {}, this.presses = {}, this.locks = {}, this.delayedKeyup = {};
    },
    'state': function (_0x4262d8) {
      return this.actions[_0x4262d8];
    },
    'pressed': function (_0x157b72) {
      return this.presses[_0x157b72];
    },
    'released': function (_0x51bbb4) {
      return !!this.delayedKeyup[_0x51bbb4];
    },
    'clearPressed': function () {
      for (var _0x23aabc in this.delayedKeyup) this.actions[_0x23aabc] = !0x1, this.locks[_0x23aabc] = !0x1;
      this.delayedKeyup = {}, this.presses = {};
    },
    'touchStart': function (_0x39a0f5, _0x33f281) {
      return this.actions[_0x33f281] = !0x0, this.presses[_0x33f281] = !0x0, _0x39a0f5.stopPropagation(), _0x39a0f5.preventDefault(), !0x1;
    },
    'touchEnd': function (_0x158f21, _0x1dabdb) {
      return this.delayedKeyup[_0x1dabdb] = !0x0, _0x158f21.stopPropagation(), _0x158f21.preventDefault(), !0x1;
    }
  });
}), ig.baked = !0x0, ig.module('impact.impact').requires('dom.ready', 'impact.loader', 'impact.system', 'impact.input', 'impact.sound').defines(function () {
  ig.main = function (_0x247bf4, _0x57d83a, _0xcfb9fb, _0x204c8b, _0x18a6c2, _0x49291d, _0x328cfb) {
    ig.system = new ig.System(_0x247bf4, _0xcfb9fb, _0x204c8b, _0x18a6c2, _0x49291d || 0x1), ig.input = new ig.Input(), ig.soundManager = new ig.SoundManager(), ig.music = new ig.Music(), ig.ready = !0x0, new (_0x328cfb || ig.Loader)(_0x57d83a, ig.resources).load();
  };
}), ig.baked = !0x0, ig.module('impact.animation').requires('impact.timer', 'impact.image').defines(function () {
  ig.AnimationSheet = ig.Class.extend({
    'width': 0x8,
    'height': 0x8,
    'image': null,
    'init': function (_0x423fd2, _0x3e9ed9, _0x21a2e4) {
      this.width = _0x3e9ed9, this.height = _0x21a2e4, this.image = new ig.Image(_0x423fd2);
    }
  }), ig.Animation = ig.Class.extend({
    'sheet': null,
    'timer': null,
    'sequence': [],
    'flip': {
      'x': !0x1,
      'y': !0x1
    },
    'pivot': {
      'x': 0x0,
      'y': 0x0
    },
    'frame': 0x0,
    'tile': 0x0,
    'loopCount': 0x0,
    'alpha': 0x1,
    'angle': 0x0,
    'init': function (_0x15a3de, _0x187d63, _0xf7521c, _0x1df543) {
      this.sheet = _0x15a3de, this.pivot = {
        'x': _0x15a3de.width / 0x2,
        'y': _0x15a3de.height / 0x2
      }, this.timer = new ig.Timer(), this.frameTime = _0x187d63, this.sequence = _0xf7521c, this.stop = !!_0x1df543, this.tile = this.sequence[0x0];
    },
    'rewind': function () {
      return this.timer.set(), this.frame = this.loopCount = 0x0, this.tile = this.sequence[0x0], this;
    },
    'gotoFrame': function (_0xda0836) {
      this.timer.set(this.frameTime * -_0xda0836 - 0.0001), this.update();
    },
    'gotoRandomFrame': function () {
      this.gotoFrame(Math.floor(Math.random() * this.sequence.length));
    },
    'update': function () {
      var _0x37a6db = Math.floor(this.timer.delta() / this.frameTime);
      this.loopCount = Math.floor(_0x37a6db / this.sequence.length), this.frame = this.stop && 0x0 < this.loopCount ? this.sequence.length - 0x1 : _0x37a6db % this.sequence.length, this.tile = this.sequence[this.frame];
    },
    'draw': function (_0x49c1d8, _0x328da2) {
      var _0x1b6c48 = Math.max(this.sheet.width, this.sheet.height);
      _0x49c1d8 > ig.system.width || _0x328da2 > ig.system.height || 0x0 > _0x49c1d8 + _0x1b6c48 || 0x0 > _0x328da2 + _0x1b6c48 || (0x1 != this.alpha && (ig.system.context.globalAlpha = this.alpha), 0x0 == this.angle ? this.sheet.image.drawTile(_0x49c1d8, _0x328da2, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y) : (ig.system.context.save(), ig.system.context.translate(ig.system.getDrawPos(_0x49c1d8 + this.pivot.x), ig.system.getDrawPos(_0x328da2 + this.pivot.y)), ig.system.context.rotate(this.angle), this.sheet.image.drawTile(-this.pivot.x, -this.pivot.y, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y), ig.system.context.restore()), 0x1 != this.alpha && (ig.system.context.globalAlpha = 0x1));
    }
  });
}), ig.baked = !0x0, ig.module('impact.entity').requires('impact.animation', 'impact.impact').defines(function () {
  ig.Entity = ig.Class.extend({
    'id': 0x0,
    'settings': {},
    'size': {
      'x': 0x10,
      'y': 0x10
    },
    'offset': {
      'x': 0x0,
      'y': 0x0
    },
    'pos': {
      'x': 0x0,
      'y': 0x0
    },
    'last': {
      'x': 0x0,
      'y': 0x0
    },
    'vel': {
      'x': 0x0,
      'y': 0x0
    },
    'accel': {
      'x': 0x0,
      'y': 0x0
    },
    'friction': {
      'x': 0x0,
      'y': 0x0
    },
    'maxVel': {
      'x': 0x64,
      'y': 0x64
    },
    'zIndex': 0x0,
    'gravityFactor': 0x1,
    'standing': !0x1,
    'bounciness': 0x0,
    'minBounceVelocity': 0x28,
    'anims': {},
    'animSheet': null,
    'currentAnim': null,
    'health': 0xa,
    'type': 0x0,
    'checkAgainst': 0x0,
    'collides': 0x0,
    '_killed': !0x1,
    'slopeStanding': {
      'min': 0x2c.toRad(),
      'max': 0x88.toRad()
    },
    'init': function (_0x4ea22d, _0x5f3c75, _0x537268) {
      this.id = ++ig.Entity._lastId, this.pos.x = this.last.x = _0x4ea22d, this.pos.y = this.last.y = _0x5f3c75, ig.merge(this, _0x537268);
    },
    'reset': function (_0x84445b, _0x2bc158, _0x2aae38) {
      var _0x13e1fb = this.constructor.prototype;
      this.pos.x = _0x84445b, this.pos.y = _0x2bc158, this.last.x = _0x84445b, this.last.y = _0x2bc158, this.vel.x = _0x13e1fb.vel.x, this.vel.y = _0x13e1fb.vel.y, this.accel.x = _0x13e1fb.accel.x, this.accel.y = _0x13e1fb.accel.y, this.health = _0x13e1fb.health, this._killed = _0x13e1fb._killed, this.standing = _0x13e1fb.standing, this.type = _0x13e1fb.type, this.checkAgainst = _0x13e1fb.checkAgainst, this.collides = _0x13e1fb.collides, ig.merge(this, _0x2aae38);
    },
    'addAnim': function (_0x3fd720, _0x100f76, _0x5ac9e1, _0x464cfb) {
      if (!this.animSheet) throw "No animSheet to add the animation " + _0x3fd720 + " to.";
      return _0x100f76 = new ig.Animation(this.animSheet, _0x100f76, _0x5ac9e1, _0x464cfb), this.anims[_0x3fd720] = _0x100f76, this.currentAnim || (this.currentAnim = _0x100f76), _0x100f76;
    },
    'update': function () {
      this.last.x = this.pos.x, this.last.y = this.pos.y, this.vel.y += ig.game.gravity * ig.system.tick * this.gravityFactor, this.vel.x = this.getNewVelocity(this.vel.x, this.accel.x, this.friction.x, this.maxVel.x), this.vel.y = this.getNewVelocity(this.vel.y, this.accel.y, this.friction.y, this.maxVel.y);
      var _0x4d0a7c = ig.game.collisionMap.trace(this.pos.x, this.pos.y, this.vel.x * ig.system.tick, this.vel.y * ig.system.tick, this.size.x, this.size.y);
      this.handleMovementTrace(_0x4d0a7c), this.currentAnim && this.currentAnim.update();
    },
    'getNewVelocity': function (_0x290418, _0x27835d, _0x151500, _0x13864f) {
      return _0x27835d ? (_0x290418 + _0x27835d * ig.system.tick).limit(-_0x13864f, _0x13864f) : _0x151500 ? (_0x27835d = _0x151500 * ig.system.tick, 0x0 < _0x290418 - _0x27835d ? _0x290418 - _0x27835d : 0x0 > _0x290418 + _0x27835d ? _0x290418 + _0x27835d : 0x0) : _0x290418.limit(-_0x13864f, _0x13864f);
    },
    'handleMovementTrace': function (_0x182256) {
      this.standing = !0x1, _0x182256.collision.y && (0x0 < this.bounciness && Math.abs(this.vel.y) > this.minBounceVelocity ? this.vel.y *= -this.bounciness : (0x0 < this.vel.y && (this.standing = !0x0), this.vel.y = 0x0)), _0x182256.collision.x && (this.vel.x = 0x0 < this.bounciness && Math.abs(this.vel.x) > this.minBounceVelocity ? this.vel.x * -this.bounciness : 0x0);
      if (_0x182256.collision.slope) {
        var _0x59192a = _0x182256.collision.slope;
        if (0x0 < this.bounciness) {
          var _0x482968 = this.vel.x * _0x59192a.nx + this.vel.y * _0x59192a.ny;
          this.vel.x = (this.vel.x - 0x2 * _0x59192a.nx * _0x482968) * this.bounciness, this.vel.y = (this.vel.y - 0x2 * _0x59192a.ny * _0x482968) * this.bounciness;
        } else _0x482968 = (this.vel.x * _0x59192a.x + this.vel.y * _0x59192a.y) / (_0x59192a.x * _0x59192a.x + _0x59192a.y * _0x59192a.y), this.vel.x = _0x59192a.x * _0x482968, this.vel.y = _0x59192a.y * _0x482968, _0x59192a = Math.atan2(_0x59192a.x, _0x59192a.y), _0x59192a > this.slopeStanding.min && _0x59192a < this.slopeStanding.max && (this.standing = !0x0);
      }
      this.pos = _0x182256.pos;
    },
    'draw': function () {
      this.currentAnim && this.currentAnim.draw(this.pos.x - this.offset.x - ig.game._rscreen.x, this.pos.y - this.offset.y - ig.game._rscreen.y);
    },
    'kill': function () {
      ig.game.removeEntity(this);
    },
    'receiveDamage': function (_0x573f18) {
      this.health -= _0x573f18, 0x0 >= this.health && this.kill();
    },
    'touches': function (_0x2c5eee) {
      return !(this.pos.x >= _0x2c5eee.pos.x + _0x2c5eee.size.x || this.pos.x + this.size.x <= _0x2c5eee.pos.x || this.pos.y >= _0x2c5eee.pos.y + _0x2c5eee.size.y || this.pos.y + this.size.y <= _0x2c5eee.pos.y);
    },
    'distanceTo': function (_0x2c1f5a) {
      var _0x4b3217 = this.pos.x + this.size.x / 0x2 - (_0x2c1f5a.pos.x + _0x2c1f5a.size.x / 0x2);
      return _0x2c1f5a = this.pos.y + this.size.y / 0x2 - (_0x2c1f5a.pos.y + _0x2c1f5a.size.y / 0x2), Math.sqrt(_0x4b3217 * _0x4b3217 + _0x2c1f5a * _0x2c1f5a);
    },
    'angleTo': function (_0x37c96b) {
      return Math.atan2(_0x37c96b.pos.y + _0x37c96b.size.y / 0x2 - (this.pos.y + this.size.y / 0x2), _0x37c96b.pos.x + _0x37c96b.size.x / 0x2 - (this.pos.x + this.size.x / 0x2));
    },
    'check': function () {},
    'collideWith': function () {},
    'ready': function () {},
    'erase': function () {}
  }), ig.Entity._lastId = 0x0, ig.Entity.COLLIDES = {
    'NEVER': 0x0,
    'LITE': 0x1,
    'PASSIVE': 0x2,
    'ACTIVE': 0x4,
    'FIXED': 0x8
  }, ig.Entity.TYPE = {
    'NONE': 0x0,
    'A': 0x1,
    'B': 0x2,
    'BOTH': 0x3
  }, ig.Entity.checkPair = function (_0x1568f3, _0x3ab277) {
    _0x1568f3.checkAgainst & _0x3ab277.type && _0x1568f3.check(_0x3ab277), _0x3ab277.checkAgainst & _0x1568f3.type && _0x3ab277.check(_0x1568f3), _0x1568f3.collides && _0x3ab277.collides && _0x1568f3.collides + _0x3ab277.collides > ig.Entity.COLLIDES.ACTIVE && ig.Entity.solveCollision(_0x1568f3, _0x3ab277);
  }, ig.Entity.solveCollision = function (_0x208b8a, _0x459a47) {
    var _0x59d584 = null;
    if (_0x208b8a.collides == ig.Entity.COLLIDES.LITE || _0x459a47.collides == ig.Entity.COLLIDES.FIXED) _0x59d584 = _0x208b8a;else {
      if (_0x459a47.collides == ig.Entity.COLLIDES.LITE || _0x208b8a.collides == ig.Entity.COLLIDES.FIXED) _0x59d584 = _0x459a47;
    }
    _0x208b8a.last.x + _0x208b8a.size.x > _0x459a47.last.x && _0x208b8a.last.x < _0x459a47.last.x + _0x459a47.size.x ? (_0x208b8a.last.y < _0x459a47.last.y ? ig.Entity.seperateOnYAxis(_0x208b8a, _0x459a47, _0x59d584) : ig.Entity.seperateOnYAxis(_0x459a47, _0x208b8a, _0x59d584), _0x208b8a.collideWith(_0x459a47, 'y'), _0x459a47.collideWith(_0x208b8a, 'y')) : _0x208b8a.last.y + _0x208b8a.size.y > _0x459a47.last.y && _0x208b8a.last.y < _0x459a47.last.y + _0x459a47.size.y && (_0x208b8a.last.x < _0x459a47.last.x ? ig.Entity.seperateOnXAxis(_0x208b8a, _0x459a47, _0x59d584) : ig.Entity.seperateOnXAxis(_0x459a47, _0x208b8a, _0x59d584), _0x208b8a.collideWith(_0x459a47, 'x'), _0x459a47.collideWith(_0x208b8a, 'x'));
  }, ig.Entity.seperateOnXAxis = function (_0x139aeb, _0x2dbc1b, _0x9760c3) {
    var _0x3fe1b2 = _0x139aeb.pos.x + _0x139aeb.size.x - _0x2dbc1b.pos.x;
    _0x9760c3 ? (_0x9760c3.vel.x = -_0x9760c3.vel.x * _0x9760c3.bounciness + (_0x139aeb === _0x9760c3 ? _0x2dbc1b : _0x139aeb).vel.x, _0x2dbc1b = ig.game.collisionMap.trace(_0x9760c3.pos.x, _0x9760c3.pos.y, _0x9760c3 == _0x139aeb ? -_0x3fe1b2 : _0x3fe1b2, 0x0, _0x9760c3.size.x, _0x9760c3.size.y), _0x9760c3.pos.x = _0x2dbc1b.pos.x) : (_0x9760c3 = (_0x139aeb.vel.x - _0x2dbc1b.vel.x) / 0x2, _0x139aeb.vel.x = -_0x9760c3, _0x2dbc1b.vel.x = _0x9760c3, _0x9760c3 = ig.game.collisionMap.trace(_0x139aeb.pos.x, _0x139aeb.pos.y, -_0x3fe1b2 / 0x2, 0x0, _0x139aeb.size.x, _0x139aeb.size.y), _0x139aeb.pos.x = Math.floor(_0x9760c3.pos.x), _0x139aeb = ig.game.collisionMap.trace(_0x2dbc1b.pos.x, _0x2dbc1b.pos.y, _0x3fe1b2 / 0x2, 0x0, _0x2dbc1b.size.x, _0x2dbc1b.size.y), _0x2dbc1b.pos.x = Math.ceil(_0x139aeb.pos.x));
  }, ig.Entity.seperateOnYAxis = function (_0x36eab6, _0x1c9aab, _0x1b06e7) {
    var _0x2b5eba = _0x36eab6.pos.y + _0x36eab6.size.y - _0x1c9aab.pos.y;
    if (_0x1b06e7) {
      _0x1c9aab = _0x36eab6 === _0x1b06e7 ? _0x1c9aab : _0x36eab6, _0x1b06e7.vel.y = -_0x1b06e7.vel.y * _0x1b06e7.bounciness + _0x1c9aab.vel.y;
      var _0x50b92a = 0x0;
      _0x1b06e7 == _0x36eab6 && Math.abs(_0x1b06e7.vel.y - _0x1c9aab.vel.y) < _0x1b06e7.minBounceVelocity && (_0x1b06e7.standing = !0x0, _0x50b92a = _0x1c9aab.vel.x * ig.system.tick), _0x36eab6 = ig.game.collisionMap.trace(_0x1b06e7.pos.x, _0x1b06e7.pos.y, _0x50b92a, _0x1b06e7 == _0x36eab6 ? -_0x2b5eba : _0x2b5eba, _0x1b06e7.size.x, _0x1b06e7.size.y), _0x1b06e7.pos.y = _0x36eab6.pos.y, _0x1b06e7.pos.x = _0x36eab6.pos.x;
    } else ig.game.gravity && (_0x1c9aab.standing || 0x0 < _0x36eab6.vel.y) ? (_0x1b06e7 = ig.game.collisionMap.trace(_0x36eab6.pos.x, _0x36eab6.pos.y, 0x0, -(_0x36eab6.pos.y + _0x36eab6.size.y - _0x1c9aab.pos.y), _0x36eab6.size.x, _0x36eab6.size.y), _0x36eab6.pos.y = _0x1b06e7.pos.y, 0x0 < _0x36eab6.bounciness && _0x36eab6.vel.y > _0x36eab6.minBounceVelocity ? _0x36eab6.vel.y *= -_0x36eab6.bounciness : (_0x36eab6.standing = !0x0, _0x36eab6.vel.y = 0x0)) : (_0x1b06e7 = (_0x36eab6.vel.y - _0x1c9aab.vel.y) / 0x2, _0x36eab6.vel.y = -_0x1b06e7, _0x1c9aab.vel.y = _0x1b06e7, _0x50b92a = _0x1c9aab.vel.x * ig.system.tick, _0x1b06e7 = ig.game.collisionMap.trace(_0x36eab6.pos.x, _0x36eab6.pos.y, _0x50b92a, -_0x2b5eba / 0x2, _0x36eab6.size.x, _0x36eab6.size.y), _0x36eab6.pos.y = _0x1b06e7.pos.y, _0x36eab6 = ig.game.collisionMap.trace(_0x1c9aab.pos.x, _0x1c9aab.pos.y, 0x0, _0x2b5eba / 0x2, _0x1c9aab.size.x, _0x1c9aab.size.y), _0x1c9aab.pos.y = _0x36eab6.pos.y);
  };
}), ig.baked = !0x0, ig.module('impact.map').defines(function () {
  ig.Map = ig.Class.extend({
    'tilesize': 0x8,
    'width': 0x1,
    'height': 0x1,
    'data': [[]],
    'name': null,
    'init': function (_0x3e188d, _0x2c535f) {
      this.tilesize = _0x3e188d, this.data = _0x2c535f, this.height = _0x2c535f.length, this.width = _0x2c535f[0x0].length, this.pxWidth = this.width * this.tilesize, this.pxHeight = this.height * this.tilesize;
    },
    'getTile': function (_0x2bfe74, _0x3f16ec) {
      var _0x3595c2 = Math.floor(_0x2bfe74 / this.tilesize),
        _0x124c3c = Math.floor(_0x3f16ec / this.tilesize);
      return 0x0 <= _0x3595c2 && _0x3595c2 < this.width && 0x0 <= _0x124c3c && _0x124c3c < this.height ? this.data[_0x124c3c][_0x3595c2] : 0x0;
    },
    'setTile': function (_0x2dfe7f, _0x1b4471, _0x372103) {
      _0x2dfe7f = Math.floor(_0x2dfe7f / this.tilesize), _0x1b4471 = Math.floor(_0x1b4471 / this.tilesize), 0x0 <= _0x2dfe7f && _0x2dfe7f < this.width && 0x0 <= _0x1b4471 && _0x1b4471 < this.height && (this.data[_0x1b4471][_0x2dfe7f] = _0x372103);
    }
  });
}), ig.baked = !0x0, ig.module('impact.collision-map').requires('impact.map').defines(function () {
  ig.CollisionMap = ig.Map.extend({
    'lastSlope': 0x1,
    'tiledef': null,
    'init': function (_0x30c03b, _0xc37f8, _0xea1447) {
      this.parent(_0x30c03b, _0xc37f8), this.tiledef = _0xea1447 || ig.CollisionMap.defaultTileDef;
      for (var _0x194b22 in this.tiledef) _0x194b22 | 0x0 > this.lastSlope && (this.lastSlope = _0x194b22 | 0x0);
    },
    'trace': function (_0x539d8c, _0x223a07, _0x22c897, _0x4ae4bf, _0x1e4055, _0x544e22) {
      var _0x53ffcc = {
          'collision': {
            'x': !0x1,
            'y': !0x1,
            'slope': !0x1
          },
          'pos': {
            'x': _0x539d8c,
            'y': _0x223a07
          },
          'tile': {
            'x': 0x0,
            'y': 0x0
          }
        },
        _0x4b2b57 = Math.ceil(Math.max(Math.abs(_0x22c897), Math.abs(_0x4ae4bf)) / this.tilesize);
      if (0x1 < _0x4b2b57) {
        for (var _0x3f269f = _0x22c897 / _0x4b2b57, _0x1715e5 = _0x4ae4bf / _0x4b2b57, _0x43da72 = 0x0; _0x43da72 < _0x4b2b57 && (_0x3f269f || _0x1715e5) && !(this._traceStep(_0x53ffcc, _0x539d8c, _0x223a07, _0x3f269f, _0x1715e5, _0x1e4055, _0x544e22, _0x22c897, _0x4ae4bf, _0x43da72), _0x539d8c = _0x53ffcc.pos.x, _0x223a07 = _0x53ffcc.pos.y, _0x53ffcc.collision.x && (_0x22c897 = _0x3f269f = 0x0), _0x53ffcc.collision.y && (_0x4ae4bf = _0x1715e5 = 0x0), _0x53ffcc.collision.slope); _0x43da72++);
      } else this._traceStep(_0x53ffcc, _0x539d8c, _0x223a07, _0x22c897, _0x4ae4bf, _0x1e4055, _0x544e22, _0x22c897, _0x4ae4bf, 0x0);
      return _0x53ffcc;
    },
    '_traceStep': function (_0x45c4be, _0xe04c0, _0x5041a5, _0x3b1429, _0x41d355, _0x265a32, _0x2cc566, _0x4d76a0, _0x35e199, _0x1293e0) {
      _0x45c4be.pos.x += _0x3b1429, _0x45c4be.pos.y += _0x41d355;
      var _0x5919c9 = 0x0;
      if (_0x3b1429) {
        var _0x386c84 = 0x0 < _0x3b1429 ? _0x265a32 : 0x0,
          _0x3f26cb = 0x0 > _0x3b1429 ? this.tilesize : 0x0,
          _0x5919c9 = Math.max(Math.floor(_0x5041a5 / this.tilesize), 0x0),
          _0x4a607c = Math.min(Math.ceil((_0x5041a5 + _0x2cc566) / this.tilesize), this.height);
        _0x3b1429 = Math.floor((_0x45c4be.pos.x + _0x386c84) / this.tilesize);
        var _0x54e9b7 = Math.floor((_0xe04c0 + _0x386c84) / this.tilesize);
        if (0x0 < _0x1293e0 || _0x3b1429 == _0x54e9b7 || 0x0 > _0x54e9b7 || _0x54e9b7 >= this.width) _0x54e9b7 = -0x1;
        if (0x0 <= _0x3b1429 && _0x3b1429 < this.width) {
          for (var _0x506d13 = _0x5919c9; _0x506d13 < _0x4a607c && !(-0x1 != _0x54e9b7 && (_0x5919c9 = this.data[_0x506d13][_0x54e9b7], 0x1 < _0x5919c9 && _0x5919c9 <= this.lastSlope && this._checkTileDef(_0x45c4be, _0x5919c9, _0xe04c0, _0x5041a5, _0x4d76a0, _0x35e199, _0x265a32, _0x2cc566, _0x54e9b7, _0x506d13))); _0x506d13++) if (_0x5919c9 = this.data[_0x506d13][_0x3b1429], 0x1 == _0x5919c9 || _0x5919c9 > this.lastSlope || 0x1 < _0x5919c9 && this._checkTileDef(_0x45c4be, _0x5919c9, _0xe04c0, _0x5041a5, _0x4d76a0, _0x35e199, _0x265a32, _0x2cc566, _0x3b1429, _0x506d13)) {
            if (0x1 < _0x5919c9 && _0x5919c9 <= this.lastSlope && _0x45c4be.collision.slope) break;
            _0x45c4be.collision.x = !0x0, _0x45c4be.tile.x = _0x5919c9, _0xe04c0 = _0x45c4be.pos.x = _0x3b1429 * this.tilesize - _0x386c84 + _0x3f26cb, _0x4d76a0 = 0x0;
            break;
          }
        }
      }
      if (_0x41d355) {
        _0x386c84 = 0x0 < _0x41d355 ? _0x2cc566 : 0x0, _0x41d355 = 0x0 > _0x41d355 ? this.tilesize : 0x0, _0x5919c9 = Math.max(Math.floor(_0x45c4be.pos.x / this.tilesize), 0x0), _0x3f26cb = Math.min(Math.ceil((_0x45c4be.pos.x + _0x265a32) / this.tilesize), this.width), _0x506d13 = Math.floor((_0x45c4be.pos.y + _0x386c84) / this.tilesize), _0x4a607c = Math.floor((_0x5041a5 + _0x386c84) / this.tilesize);
        if (0x0 < _0x1293e0 || _0x506d13 == _0x4a607c || 0x0 > _0x4a607c || _0x4a607c >= this.height) _0x4a607c = -0x1;
        if (0x0 <= _0x506d13 && _0x506d13 < this.height) {
          for (_0x3b1429 = _0x5919c9; _0x3b1429 < _0x3f26cb && !(-0x1 != _0x4a607c && (_0x5919c9 = this.data[_0x4a607c][_0x3b1429], 0x1 < _0x5919c9 && _0x5919c9 <= this.lastSlope && this._checkTileDef(_0x45c4be, _0x5919c9, _0xe04c0, _0x5041a5, _0x4d76a0, _0x35e199, _0x265a32, _0x2cc566, _0x3b1429, _0x4a607c))); _0x3b1429++) if (_0x5919c9 = this.data[_0x506d13][_0x3b1429], 0x1 == _0x5919c9 || _0x5919c9 > this.lastSlope || 0x1 < _0x5919c9 && this._checkTileDef(_0x45c4be, _0x5919c9, _0xe04c0, _0x5041a5, _0x4d76a0, _0x35e199, _0x265a32, _0x2cc566, _0x3b1429, _0x506d13)) {
            if (0x1 < _0x5919c9 && _0x5919c9 <= this.lastSlope && _0x45c4be.collision.slope) break;
            _0x45c4be.collision.y = !0x0, _0x45c4be.tile.y = _0x5919c9, _0x45c4be.pos.y = _0x506d13 * this.tilesize - _0x386c84 + _0x41d355;
            break;
          }
        }
      }
    },
    '_checkTileDef': function (_0x52e9c5, _0x3d139e, _0x3a5af9, _0x29e733, _0x112d10, _0xca8ec5, _0x5b3faa, _0x333e4c, _0xbafce6, _0x538e43) {
      var _0x3da4ed = this.tiledef[_0x3d139e];
      if (!_0x3da4ed) return !0x1;
      _0x3d139e = (_0x3da4ed[0x2] - _0x3da4ed[0x0]) * this.tilesize;
      var _0x3b47ee = (_0x3da4ed[0x3] - _0x3da4ed[0x1]) * this.tilesize,
        _0x1678ad = _0x3da4ed[0x4];
      _0x5b3faa = _0x3a5af9 + _0x112d10 + (0x0 > _0x3b47ee ? _0x5b3faa : 0x0) - (_0xbafce6 + _0x3da4ed[0x0]) * this.tilesize, _0x333e4c = _0x29e733 + _0xca8ec5 + (0x0 < _0x3d139e ? _0x333e4c : 0x0) - (_0x538e43 + _0x3da4ed[0x1]) * this.tilesize;
      if (0x0 < _0x3d139e * _0x333e4c - _0x3b47ee * _0x5b3faa) {
        if (0x0 > _0x112d10 * -_0x3b47ee + _0xca8ec5 * _0x3d139e) return _0x1678ad;
        _0xbafce6 = Math.sqrt(_0x3d139e * _0x3d139e + _0x3b47ee * _0x3b47ee), _0x538e43 = _0x3b47ee / _0xbafce6, _0xbafce6 = -_0x3d139e / _0xbafce6;
        var _0x3836b2 = _0x5b3faa * _0x538e43 + _0x333e4c * _0xbafce6,
          _0x3da4ed = _0x538e43 * _0x3836b2,
          _0x3836b2 = _0xbafce6 * _0x3836b2;
        if (_0x3da4ed * _0x3da4ed + _0x3836b2 * _0x3836b2 >= _0x112d10 * _0x112d10 + _0xca8ec5 * _0xca8ec5) return _0x1678ad || 0.5 > _0x3d139e * (_0x333e4c - _0xca8ec5) - _0x3b47ee * (_0x5b3faa - _0x112d10);
        return _0x52e9c5.pos.x = _0x3a5af9 + _0x112d10 - _0x3da4ed, _0x52e9c5.pos.y = _0x29e733 + _0xca8ec5 - _0x3836b2, _0x52e9c5.collision.slope = {
          'x': _0x3d139e,
          'y': _0x3b47ee,
          'nx': _0x538e43,
          'ny': _0xbafce6
        }, !0x0;
      }
      return !0x1;
    }
  });
  var _0x361545 = 0x1 / 0x3,
    _0x1eaaa9 = 0x2 / 0x3;
  ig.CollisionMap.defaultTileDef = {
    0x5: [0x0, 0x1, 0x1, _0x1eaaa9, !0x0],
    0x6: [0x0, _0x1eaaa9, 0x1, _0x361545, !0x0],
    0x7: [0x0, _0x361545, 0x1, 0x0, !0x0],
    0x3: [0x0, 0x1, 0x1, 0.5, !0x0],
    0x4: [0x0, 0.5, 0x1, 0x0, !0x0],
    0x2: [0x0, 0x1, 0x1, 0x0, !0x0],
    0xa: [0.5, 0x1, 0x1, 0x0, !0x0],
    0x15: [0x0, 0x1, 0.5, 0x0, !0x0],
    0x20: [_0x1eaaa9, 0x1, 0x1, 0x0, !0x0],
    0x2b: [_0x361545, 0x1, _0x1eaaa9, 0x0, !0x0],
    0x36: [0x0, 0x1, _0x361545, 0x0, !0x0],
    0x1b: [0x0, 0x0, 0x1, _0x361545, !0x0],
    0x1c: [0x0, _0x361545, 0x1, _0x1eaaa9, !0x0],
    0x1d: [0x0, _0x1eaaa9, 0x1, 0x1, !0x0],
    0x19: [0x0, 0x0, 0x1, 0.5, !0x0],
    0x1a: [0x0, 0.5, 0x1, 0x1, !0x0],
    0x18: [0x0, 0x0, 0x1, 0x1, !0x0],
    0xb: [0x0, 0x0, 0.5, 0x1, !0x0],
    0x16: [0.5, 0x0, 0x1, 0x1, !0x0],
    0x21: [0x0, 0x0, _0x361545, 0x1, !0x0],
    0x2c: [_0x361545, 0x0, _0x1eaaa9, 0x1, !0x0],
    0x37: [_0x1eaaa9, 0x0, 0x1, 0x1, !0x0],
    0x10: [0x1, _0x361545, 0x0, 0x0, !0x0],
    0x11: [0x1, _0x1eaaa9, 0x0, _0x361545, !0x0],
    0x12: [0x1, 0x1, 0x0, _0x1eaaa9, !0x0],
    0xe: [0x1, 0.5, 0x0, 0x0, !0x0],
    0xf: [0x1, 0x1, 0x0, 0.5, !0x0],
    0xd: [0x1, 0x1, 0x0, 0x0, !0x0],
    0x8: [0.5, 0x1, 0x0, 0x0, !0x0],
    0x13: [0x1, 0x1, 0.5, 0x0, !0x0],
    0x1e: [_0x361545, 0x1, 0x0, 0x0, !0x0],
    0x29: [_0x1eaaa9, 0x1, _0x361545, 0x0, !0x0],
    0x34: [0x1, 0x1, _0x1eaaa9, 0x0, !0x0],
    0x26: [0x1, _0x1eaaa9, 0x0, 0x1, !0x0],
    0x27: [0x1, _0x361545, 0x0, _0x1eaaa9, !0x0],
    0x28: [0x1, 0x0, 0x0, _0x361545, !0x0],
    0x24: [0x1, 0.5, 0x0, 0x1, !0x0],
    0x25: [0x1, 0x0, 0x0, 0.5, !0x0],
    0x23: [0x1, 0x0, 0x0, 0x1, !0x0],
    0x9: [0x1, 0x0, 0.5, 0x1, !0x0],
    0x14: [0.5, 0x0, 0x0, 0x1, !0x0],
    0x1f: [0x1, 0x0, _0x1eaaa9, 0x1, !0x0],
    0x2a: [_0x1eaaa9, 0x0, _0x361545, 0x1, !0x0],
    0x35: [_0x361545, 0x0, 0x0, 0x1, !0x0],
    0xc: [0x0, 0x0, 0x1, 0x0, !0x1],
    0x17: [0x1, 0x1, 0x0, 0x1, !0x1],
    0x22: [0x1, 0x0, 0x1, 0x1, !0x1],
    0x2d: [0x0, 0x1, 0x0, 0x0, !0x1]
  }, ig.CollisionMap.staticNoCollision = {
    'trace': function (_0x5bf082, _0x3d3f03, _0x261846, _0x367c32) {
      return {
        'collision': {
          'x': !0x1,
          'y': !0x1,
          'slope': !0x1
        },
        'pos': {
          'x': _0x5bf082 + _0x261846,
          'y': _0x3d3f03 + _0x367c32
        },
        'tile': {
          'x': 0x0,
          'y': 0x0
        }
      };
    }
  };
}), ig.baked = !0x0, ig.module('impact.background-map').requires('impact.map', 'impact.image').defines(function () {
  ig.BackgroundMap = ig.Map.extend({
    'tiles': null,
    'scroll': {
      'x': 0x0,
      'y': 0x0
    },
    'distance': 0x1,
    'repeat': !0x1,
    'tilesetName': '',
    'foreground': !0x1,
    'enabled': !0x0,
    'preRender': !0x1,
    'preRenderedChunks': null,
    'chunkSize': 0x200,
    'debugChunks': !0x1,
    'anims': {},
    'init': function (_0x1b8d14, _0x190cbe, _0x4f0fbc) {
      this.parent(_0x1b8d14, _0x190cbe), this.setTileset(_0x4f0fbc);
    },
    'setTileset': function (_0xaae153) {
      this.tilesetName = _0xaae153 instanceof ig.Image ? _0xaae153.path : _0xaae153, this.tiles = new ig.Image(this.tilesetName), this.preRenderedChunks = null;
    },
    'setScreenPos': function (_0x4c408, _0x184a20) {
      this.scroll.x = _0x4c408 / this.distance, this.scroll.y = _0x184a20 / this.distance;
    },
    'preRenderMapToChunks': function () {
      var _0xc727d8 = this.width * this.tilesize * ig.system.scale,
        _0x5817d1 = this.height * this.tilesize * ig.system.scale;
      this.chunkSize = Math.min(Math.max(_0xc727d8, _0x5817d1), this.chunkSize);
      var _0x169168 = Math.ceil(_0xc727d8 / this.chunkSize),
        _0x51123a = Math.ceil(_0x5817d1 / this.chunkSize);
      this.preRenderedChunks = [];
      for (var _0x32fff9 = 0x0; _0x32fff9 < _0x51123a; _0x32fff9++) {
        this.preRenderedChunks[_0x32fff9] = [];
        for (var _0x279ce7 = 0x0; _0x279ce7 < _0x169168; _0x279ce7++) this.preRenderedChunks[_0x32fff9][_0x279ce7] = this.preRenderChunk(_0x279ce7, _0x32fff9, _0x279ce7 == _0x169168 - 0x1 ? _0xc727d8 - _0x279ce7 * this.chunkSize : this.chunkSize, _0x32fff9 == _0x51123a - 0x1 ? _0x5817d1 - _0x32fff9 * this.chunkSize : this.chunkSize);
      }
    },
    'preRenderChunk': function (_0x9fd053, _0x5cf0d1, _0x45951c, _0x530a41) {
      var _0x3b2a84 = _0x45951c / this.tilesize / ig.system.scale + 0x1,
        _0x5556d0 = _0x530a41 / this.tilesize / ig.system.scale + 0x1,
        _0x1d9512 = _0x9fd053 * this.chunkSize / ig.system.scale % this.tilesize,
        _0x5a41c7 = _0x5cf0d1 * this.chunkSize / ig.system.scale % this.tilesize;
      _0x9fd053 = Math.floor(_0x9fd053 * this.chunkSize / this.tilesize / ig.system.scale), _0x5cf0d1 = Math.floor(_0x5cf0d1 * this.chunkSize / this.tilesize / ig.system.scale);
      var _0x1accad = ig.$new('canvas');
      _0x1accad.width = _0x45951c, _0x1accad.height = _0x530a41, _0x1accad.retinaResolutionEnabled = !0x1, _0x530a41 = _0x1accad.getContext('2d'), ig.System.scaleMode(_0x1accad, _0x530a41), _0x45951c = ig.system.context, ig.system.context = _0x530a41;
      for (_0x530a41 = 0x0; _0x530a41 < _0x3b2a84; _0x530a41++) for (var _0x13fdae = 0x0; _0x13fdae < _0x5556d0; _0x13fdae++) if (_0x530a41 + _0x9fd053 < this.width && _0x13fdae + _0x5cf0d1 < this.height) {
        var _0x30638c = this.data[_0x13fdae + _0x5cf0d1][_0x530a41 + _0x9fd053];
        _0x30638c && this.tiles.drawTile(_0x530a41 * this.tilesize - _0x1d9512, _0x13fdae * this.tilesize - _0x5a41c7, _0x30638c - 0x1, this.tilesize);
      }
      return ig.system.context = _0x45951c, _0x1accad;
    },
    'draw': function () {
      this.tiles.loaded && this.enabled && (this.preRender ? this.drawPreRendered() : this.drawTiled());
    },
    'drawPreRendered': function () {
      this.preRenderedChunks || this.preRenderMapToChunks();
      var _0x262a29 = ig.system.getDrawPos(this.scroll.x),
        _0x13b95e = ig.system.getDrawPos(this.scroll.y);
      if (this.repeat) var _0x19ae92 = this.width * this.tilesize * ig.system.scale,
        _0x262a29 = (_0x262a29 % _0x19ae92 + _0x19ae92) % _0x19ae92,
        _0x19ae92 = this.height * this.tilesize * ig.system.scale,
        _0x13b95e = (_0x13b95e % _0x19ae92 + _0x19ae92) % _0x19ae92;
      var _0x19ae92 = Math.max(Math.floor(_0x262a29 / this.chunkSize), 0x0),
        _0x136d45 = Math.max(Math.floor(_0x13b95e / this.chunkSize), 0x0),
        _0x5ee9e3 = Math.ceil((_0x262a29 + ig.system.realWidth) / this.chunkSize),
        _0x5c5e63 = Math.ceil((_0x13b95e + ig.system.realHeight) / this.chunkSize),
        _0xa05096 = this.preRenderedChunks[0x0].length,
        _0x3147c6 = this.preRenderedChunks.length;
      this.repeat || (_0x5ee9e3 = Math.min(_0x5ee9e3, _0xa05096), _0x5c5e63 = Math.min(_0x5c5e63, _0x3147c6));
      for (var _0xb39bf8 = 0x0; _0x136d45 < _0x5c5e63; _0x136d45++) {
        for (var _0x28ec77 = 0x0, _0xa73d2c = _0x19ae92; _0xa73d2c < _0x5ee9e3; _0xa73d2c++) {
          var _0x3e5cb3 = this.preRenderedChunks[_0x136d45 % _0x3147c6][_0xa73d2c % _0xa05096],
            _0x1d72b1 = -_0x262a29 + _0xa73d2c * this.chunkSize - _0x28ec77,
            _0x2035ea = -_0x13b95e + _0x136d45 * this.chunkSize - _0xb39bf8;
          ig.system.context.drawImage(_0x3e5cb3, _0x1d72b1, _0x2035ea), ig.Image.drawCount++, this.debugChunks && (ig.system.context.strokeStyle = '#f0f', ig.system.context.strokeRect(_0x1d72b1, _0x2035ea, this.chunkSize, this.chunkSize)), this.repeat && _0x3e5cb3.width < this.chunkSize && _0x1d72b1 + _0x3e5cb3.width < ig.system.realWidth && (_0x28ec77 += this.chunkSize - _0x3e5cb3.width, _0x5ee9e3++);
        }
        this.repeat && _0x3e5cb3.height < this.chunkSize && _0x2035ea + _0x3e5cb3.height < ig.system.realHeight && (_0xb39bf8 += this.chunkSize - _0x3e5cb3.height, _0x5c5e63++);
      }
    },
    'drawTiled': function () {
      for (var _0x4b324f = 0x0, _0x2d7dd1 = null, _0x180cf7 = (this.scroll.x / this.tilesize).toInt(), _0x229d74 = (this.scroll.y / this.tilesize).toInt(), _0x7b11c = this.scroll.x % this.tilesize, _0x4d68f7 = this.scroll.y % this.tilesize, _0xd407af = -_0x7b11c - this.tilesize, _0x7b11c = ig.system.width + this.tilesize - _0x7b11c, _0xa209ec = ig.system.height + this.tilesize - _0x4d68f7, _0x41c8d1 = -0x1, _0x4d68f7 = -_0x4d68f7 - this.tilesize; _0x4d68f7 < _0xa209ec; _0x41c8d1++, _0x4d68f7 += this.tilesize) {
        var _0x424b82 = _0x41c8d1 + _0x229d74;
        if (_0x424b82 >= this.height || 0x0 > _0x424b82) {
          if (!this.repeat) continue;
          _0x424b82 = (_0x424b82 % this.height + this.height) % this.height;
        }
        for (var _0x10e772 = -0x1, _0xeceac2 = _0xd407af; _0xeceac2 < _0x7b11c; _0x10e772++, _0xeceac2 += this.tilesize) {
          _0x4b324f = _0x10e772 + _0x180cf7;
          if (_0x4b324f >= this.width || 0x0 > _0x4b324f) {
            if (!this.repeat) continue;
            _0x4b324f = (_0x4b324f % this.width + this.width) % this.width;
          }
          if (_0x4b324f = this.data[_0x424b82][_0x4b324f]) (_0x2d7dd1 = this.anims[_0x4b324f - 0x1]) ? _0x2d7dd1.draw(_0xeceac2, _0x4d68f7) : this.tiles.drawTile(_0xeceac2, _0x4d68f7, _0x4b324f - 0x1, this.tilesize);
        }
      }
    }
  });
}), ig.baked = !0x0, ig.module('impact.game').requires('impact.impact', 'impact.entity', 'impact.collision-map', 'impact.background-map').defines(function () {
  ig.Game = ig.Class.extend({
    'clearColor': '#000000',
    'gravity': 0x0,
    'screen': {
      'x': 0x0,
      'y': 0x0
    },
    '_rscreen': {
      'x': 0x0,
      'y': 0x0
    },
    'entities': [],
    'namedEntities': {},
    'collisionMap': ig.CollisionMap.staticNoCollision,
    'backgroundMaps': [],
    'backgroundAnims': {},
    'autoSort': !0x1,
    'sortBy': null,
    'cellSize': 0x40,
    '_deferredKill': [],
    '_levelToLoad': null,
    '_doSortEntities': !0x1,
    'staticInstantiate': function () {
      return this.sortBy = this.sortBy || ig.Game.SORT.Z_INDEX, ig.game = this, null;
    },
    'loadLevel': function (_0x111bac) {
      this.screen = {
        'x': 0x0,
        'y': 0x0
      }, this.entities = [], this.namedEntities = {};
      for (var _0xdaf7ae = 0x0; _0xdaf7ae < _0x111bac.entities.length; _0xdaf7ae++) {
        var _0x537789 = _0x111bac.entities[_0xdaf7ae];
        this.spawnEntity(_0x537789.type, _0x537789.x, _0x537789.y, _0x537789.settings);
      }
      this.sortEntities(), this.collisionMap = ig.CollisionMap.staticNoCollision, this.backgroundMaps = [];
      for (_0xdaf7ae = 0x0; _0xdaf7ae < _0x111bac.layer.length; _0xdaf7ae++) if (_0x537789 = _0x111bac.layer[_0xdaf7ae], 'collision' == _0x537789.name) this.collisionMap = new ig.CollisionMap(_0x537789.tilesize, _0x537789.data);else {
        var _0x39eb27 = new ig.BackgroundMap(_0x537789.tilesize, _0x537789.data, _0x537789.tilesetName);
        _0x39eb27.anims = this.backgroundAnims[_0x537789.tilesetName] || {}, _0x39eb27.repeat = _0x537789.repeat, _0x39eb27.distance = _0x537789.distance, _0x39eb27.foreground = !!_0x537789.foreground, _0x39eb27.preRender = !!_0x537789.preRender, _0x39eb27.name = _0x537789.name, this.backgroundMaps.push(_0x39eb27);
      }
      for (_0xdaf7ae = 0x0; _0xdaf7ae < this.entities.length; _0xdaf7ae++) this.entities[_0xdaf7ae].ready();
    },
    'loadLevelDeferred': function (_0x40cfd8) {
      this._levelToLoad = _0x40cfd8;
    },
    'getMapByName': function (_0x5b0fde) {
      if ('collision' == _0x5b0fde) return this.collisionMap;
      for (var _0x304fb9 = 0x0; _0x304fb9 < this.backgroundMaps.length; _0x304fb9++) if (this.backgroundMaps[_0x304fb9].name == _0x5b0fde) return this.backgroundMaps[_0x304fb9];
      return null;
    },
    'getEntityByName': function (_0x3fdda0) {
      return this.namedEntities[_0x3fdda0];
    },
    'getEntitiesByType': function (_0xd2a1b4) {
      _0xd2a1b4 = 'string' === typeof _0xd2a1b4 ? ig.global[_0xd2a1b4] : _0xd2a1b4;
      for (var _0xe3a33a = [], _0x429613 = 0x0; _0x429613 < this.entities.length; _0x429613++) {
        var _0x4d68de = this.entities[_0x429613];
        _0x4d68de instanceof _0xd2a1b4 && !_0x4d68de._killed && _0xe3a33a.push(_0x4d68de);
      }
      return _0xe3a33a;
    },
    'spawnEntity': function (_0x24df45, _0x9e2314, _0x520d78, _0x5c8059) {
      var _0x35f12d = 'string' === typeof _0x24df45 ? ig.global[_0x24df45] : _0x24df45;
      if (!_0x35f12d) throw "Can't spawn entity of type " + _0x24df45;
      return _0x24df45 = new _0x35f12d(_0x9e2314, _0x520d78, _0x5c8059 || {}), this.entities.push(_0x24df45), _0x24df45.name && (this.namedEntities[_0x24df45.name] = _0x24df45), _0x24df45;
    },
    'sortEntities': function () {
      this.entities.sort(this.sortBy);
    },
    'sortEntitiesDeferred': function () {
      this._doSortEntities = !0x0;
    },
    'removeEntity': function (_0x1a3b06) {
      _0x1a3b06.name && delete this.namedEntities[_0x1a3b06.name], _0x1a3b06._killed = !0x0, _0x1a3b06.type = ig.Entity.TYPE.NONE, _0x1a3b06.checkAgainst = ig.Entity.TYPE.NONE, _0x1a3b06.collides = ig.Entity.COLLIDES.NEVER, this._deferredKill.push(_0x1a3b06);
    },
    'run': function () {
      this.update(), this.draw();
    },
    'update': function () {
      this._levelToLoad && (this.loadLevel(this._levelToLoad), this._levelToLoad = null), this.updateEntities(), this.checkEntities();
      for (var _0x455a54 = 0x0; _0x455a54 < this._deferredKill.length; _0x455a54++) this._deferredKill[_0x455a54].erase(), this.entities.erase(this._deferredKill[_0x455a54]);
      this._deferredKill = [];
      if (this._doSortEntities || this.autoSort) this.sortEntities(), this._doSortEntities = !0x1;
      for (var _0x223fbc in this.backgroundAnims) {
        var _0x455a54 = this.backgroundAnims[_0x223fbc],
          _0xed559f;
        for (_0xed559f in _0x455a54) _0x455a54[_0xed559f].update();
      }
    },
    'updateEntities': function () {
      for (var _0x32cc70 = 0x0; _0x32cc70 < this.entities.length; _0x32cc70++) {
        var _0x1cc074 = this.entities[_0x32cc70];
        _0x1cc074._killed || _0x1cc074.update();
      }
    },
    'draw': function () {
      this.clearColor && ig.system.clear(this.clearColor), this._rscreen.x = ig.system.getDrawPos(this.screen.x) / ig.system.scale, this._rscreen.y = ig.system.getDrawPos(this.screen.y) / ig.system.scale;
      var _0x2e7bf3;
      for (_0x2e7bf3 = 0x0; _0x2e7bf3 < this.backgroundMaps.length; _0x2e7bf3++) {
        var _0x36daa6 = this.backgroundMaps[_0x2e7bf3];
        if (_0x36daa6.foreground) break;
        _0x36daa6.setScreenPos(this.screen.x, this.screen.y), _0x36daa6.draw();
      }
      this.drawEntities();
      for (_0x2e7bf3; _0x2e7bf3 < this.backgroundMaps.length; _0x2e7bf3++) _0x36daa6 = this.backgroundMaps[_0x2e7bf3], _0x36daa6.setScreenPos(this.screen.x, this.screen.y), _0x36daa6.draw();
    },
    'drawEntities': function () {
      for (var _0x235082 = 0x0; _0x235082 < this.entities.length; _0x235082++) this.entities[_0x235082].draw();
    },
    'checkEntities': function () {
      for (var _0x9f356e = {}, _0x46f67a = 0x0; _0x46f67a < this.entities.length; _0x46f67a++) {
        var _0x1f3bdd = this.entities[_0x46f67a];
        if (!(_0x1f3bdd.type == ig.Entity.TYPE.NONE && _0x1f3bdd.checkAgainst == ig.Entity.TYPE.NONE && _0x1f3bdd.collides == ig.Entity.COLLIDES.NEVER)) {
          for (var _0x4a110f = {}, _0x1e2b02 = Math.floor(_0x1f3bdd.pos.y / this.cellSize), _0x51d5ae = Math.floor((_0x1f3bdd.pos.x + _0x1f3bdd.size.x) / this.cellSize) + 0x1, _0x21aca4 = Math.floor((_0x1f3bdd.pos.y + _0x1f3bdd.size.y) / this.cellSize) + 0x1, _0x4efbbf = Math.floor(_0x1f3bdd.pos.x / this.cellSize); _0x4efbbf < _0x51d5ae; _0x4efbbf++) for (var _0x1b7f42 = _0x1e2b02; _0x1b7f42 < _0x21aca4; _0x1b7f42++) if (_0x9f356e[_0x4efbbf]) {
            if (_0x9f356e[_0x4efbbf][_0x1b7f42]) {
              for (var _0xda695b = _0x9f356e[_0x4efbbf][_0x1b7f42], _0x1d4f10 = 0x0; _0x1d4f10 < _0xda695b.length; _0x1d4f10++) _0x1f3bdd.touches(_0xda695b[_0x1d4f10]) && !_0x4a110f[_0xda695b[_0x1d4f10].id] && (_0x4a110f[_0xda695b[_0x1d4f10].id] = !0x0, ig.Entity.checkPair(_0x1f3bdd, _0xda695b[_0x1d4f10]));
              _0xda695b.push(_0x1f3bdd);
            } else _0x9f356e[_0x4efbbf][_0x1b7f42] = [_0x1f3bdd];
          } else _0x9f356e[_0x4efbbf] = {}, _0x9f356e[_0x4efbbf][_0x1b7f42] = [_0x1f3bdd];
        }
      }
    }
  }), ig.Game.SORT = {
    'Z_INDEX': function (_0x24f39a, _0xc10bc6) {
      return _0x24f39a.zIndex - _0xc10bc6.zIndex;
    },
    'POS_X': function (_0x17f07e, _0x28c5fa) {
      return _0x17f07e.pos.x + _0x17f07e.size.x - (_0x28c5fa.pos.x + _0x28c5fa.size.x);
    },
    'POS_Y': function (_0x568334, _0x1c3126) {
      return _0x568334.pos.y + _0x568334.size.y - (_0x1c3126.pos.y + _0x1c3126.size.y);
    }
  };
}), ig.baked = !0x0, ig.module('plugins.patches.fps-limit-patch').requires('impact.impact').defines(function () {
  ig.normalizeVendorAttribute(window, 'requestAnimationFrame');
  if (window.requestAnimationFrame) {
    var _0x29a011 = 0x1,
      _0x42fa21 = {};
    window.ig.setAnimation = function (_0x198255) {
      var _0x1435cc = _0x29a011++;
      _0x42fa21[_0x1435cc] = !0x0;
      var _0x5f510a = ig.system.fps || 0x3c;
      performance.now();
      var _0x4e88b2 = function (_0x1addfe) {
        if (_0x42fa21[_0x1435cc]) {
          window.requestAnimationFrame(_0x4e88b2);
          for (_0x198255(); performance.now() - _0x1addfe < 0x3e8 / _0x5f510a;);
        }
      };
      return window.requestAnimationFrame(_0x4e88b2), _0x1435cc;
    }, window.ig.clearAnimation = function (_0x8e5365) {
      delete _0x42fa21[_0x8e5365];
    };
  }
}), ig.baked = !0x0, ig.module('plugins.patches.timer-patch').requires('impact.timer').defines(function () {
  ig.Timer.step = function () {
    var _0x1f6c2f = Date.now(),
      _0x5c974d = (_0x1f6c2f - ig.Timer._last) / 0x3e8;
    0x0 > _0x5c974d && (_0x5c974d = 0x0), ig.Timer.time += Math.min(_0x5c974d, ig.Timer.maxStep) * ig.Timer.timeScale, ig.Timer._last = _0x1f6c2f;
  };
}), ig.baked = !0x0, ig.module('plugins.patches.user-agent-patch').defines(function () {
  ig.ua.touchDevice = 'ontouchstart' in window || window.navigator.msMaxTouchPoints || window.navigator.maxTouchPoints, ig.ua.is_mac = 'MacIntel' === navigator.platform, ig.ua.iOS = ig.ua.touchDevice && ig.ua.is_mac || ig.ua.iOS, ig.ua.mobile = ig.ua.iOS || ig.ua.mobile;
}), ig.baked = !0x0, ig.module('plugins.patches.webkit-image-smoothing-patch').defines(function () {
  ig.System && (ig.System.SCALE = {
    'CRISP': function (_0x1621e6, _0x32acef) {
      _0x32acef.imageSmoothingEnabled = _0x32acef.msImageSmoothingEnabled = _0x32acef.mozImageSmoothingEnabled = _0x32acef.oImageSmoothingEnabled = !0x1, _0x1621e6.style.imageRendering = '-moz-crisp-edges', _0x1621e6.style.imageRendering = '-o-crisp-edges', _0x1621e6.style.imageRendering = '-webkit-optimize-contrast', _0x1621e6.style.imageRendering = 'crisp-edges', _0x1621e6.style.msInterpolationMode = 'nearest-neighbor';
    },
    'SMOOTH': function (_0x2bc7a8, _0x2e5831) {
      _0x2e5831.imageSmoothingEnabled = _0x2e5831.msImageSmoothingEnabled = _0x2e5831.mozImageSmoothingEnabled = _0x2e5831.oImageSmoothingEnabled = !0x0, _0x2bc7a8.style.imageRendering = '', _0x2bc7a8.style.msInterpolationMode = '';
    }
  }, ig.System.scaleMode = ig.System.SCALE.SMOOTH);
}), ig.baked = !0x0, ig.module('plugins.patches.windowfocus-onMouseDown-patch').requires('impact.input').defines(function () {
  var _0x232655 = !0x1;
  try {
    _0x232655 = window.self !== window.top, !0x1 === _0x232655 && (_0x232655 = 0x0 < window.frames.length);
  } catch (_0x394105) {
    _0x232655 = !0x0;
  }
  ig.Input.inject({
    'keydown': function (_0x754027) {
      var _0x3ab1a6 = _0x754027.target.tagName;
      if (!('INPUT' == _0x3ab1a6 || 'TEXTAREA' == _0x3ab1a6)) {
        if (_0x3ab1a6 = 'keydown' == _0x754027.type ? _0x754027.keyCode : 0x2 == _0x754027.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1, _0x232655 && 0x0 > _0x3ab1a6 && window.focus(), ('touchstart' == _0x754027.type || 'mousedown' == _0x754027.type) && this.mousemove(_0x754027), _0x3ab1a6 = this.bindings[_0x3ab1a6]) this.actions[_0x3ab1a6] = !0x0, this.locks[_0x3ab1a6] || (this.presses[_0x3ab1a6] = !0x0, this.locks[_0x3ab1a6] = !0x0), _0x754027.stopPropagation(), _0x754027.preventDefault();
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.patches.input-patch').requires('impact.input').defines(function () {
  ig.Input.inject({
    'mousemove': function (_0x1b093f) {
      var _0x4742e8 = ig.system.scale * (ig.system.realWidth / ig.system.realWidth),
        _0x55f192 = {
          'left': 0x0,
          'top': 0x0
        };
      ig.system.canvas.getBoundingClientRect && (_0x55f192 = ig.system.canvas.getBoundingClientRect()), _0x1b093f = _0x1b093f.touches ? _0x1b093f.touches[0x0] : _0x1b093f, this.mouse.x = (_0x1b093f.clientX - _0x55f192.left) / _0x4742e8, this.mouse.y = (_0x1b093f.clientY - _0x55f192.top) / _0x4742e8;
      try {
        ig.soundHandler.unlockWebAudio();
      } catch (_0x745c8a) {}
    },
    'keyup': function (_0x2f8d67) {
      var _0x168950 = _0x2f8d67.target.tagName;
      if (!('INPUT' == _0x168950 || 'TEXTAREA' == _0x168950)) {
        if (_0x168950 = this.bindings['keyup' == _0x2f8d67.type ? _0x2f8d67.keyCode : 0x2 == _0x2f8d67.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1]) {
          this.delayedKeyup[_0x168950] = !0x0, _0x2f8d67.stopPropagation(), _0x2f8d67.preventDefault();
          if (ig.visibilityHandler) ig.visibilityHandler.onChange('focus');
          try {
            ig.soundHandler.unlockWebAudio();
          } catch (_0x5f3310) {}
        }
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.steering-wheel').defines(function () {
  ig.WHEELKEY = {
    'AXIS0': 0x0,
    'AXIS1': 0x1,
    'AXIS2': 0x2,
    'AXIS3': 0x3,
    'AXIS4': 0x4,
    'AXIS5': 0x5,
    'AXIS6': 0x6,
    'AXIS7': 0x7,
    'AXIS8': 0x8,
    'AXIS9': 0x9,
    'B0': 0x0,
    'B1': 0x1,
    'B2': 0x2,
    'B3': 0x3,
    'B4': 0x4,
    'B5': 0x5,
    'B6': 0x6,
    'B7': 0x7,
    'B8': 0x8,
    'B9': 0x9,
    'B10': 0xa,
    'B11': 0xb,
    'B12': 0xc
  }, ig.SteeringWheelInput = ig.Class.extend({
    'isInit': !0x1,
    'isSupported': !0x1,
    'list': [],
    'bindings': {},
    'states': {},
    'presses': {},
    'releases': {},
    'downLocks': {},
    'upLocks': {},
    'steering': 0x0,
    'brake': 0x1,
    'accelerator': 0x1,
    'steeringIndex': -0x1,
    'start': function () {
      this.isInit || (this.isInit = !0x0, this.gamePadConnected = this.gamePadConnected.bind(this), this.gamePadDisconnected = this.gamePadDisconnected.bind(this), window.addEventListener('gamepadconnected', this.gamePadConnected), window.addEventListener('gamepaddisconnected', this.gamePadDisconnected));
    },
    'gamePadConnected': function () {
      console.log("A gamepad connected:");
      var _0x3a21bc = navigator.getGamepads || navigator.webkitGetGamepads;
      _0x3a21bc && (!navigator.getGamepads && navigator.webkitGetGamepads && (navigator.getGamepads = navigator.webkitGetGamepads), this.list = navigator.getGamepads());
      var _0x142b91 = this.findSteeringWheelIndex(this.list);
      this.isSupported = _0x3a21bc && 0x0 <= _0x142b91;
    },
    'gamePadDisconnected': function () {
      console.log("A gamepad disconnected:"), this.isSupported = !0x1;
    },
    'isAvailable': function () {
      return this.isInit && this.isSupported;
    },
    'buttonPressed': function (_0x188fe3) {
      return 'object' == typeof _0x188fe3 ? _0x188fe3.pressed : 0x1 == _0x188fe3;
    },
    'buttonDown': function (_0x172a50) {
      console.log(_0x172a50);
      if (_0x172a50 = this.bindings[_0x172a50]) this.states[_0x172a50] = !0x0, this.downLocks[_0x172a50] || (this.presses[_0x172a50] = !0x0, this.downLocks[_0x172a50] = !0x0);
    },
    'buttonUp': function (_0x298051) {
      if ((_0x298051 = this.bindings[_0x298051]) && this.downLocks[_0x298051] && !this.upLocks[_0x298051]) this.states[_0x298051] = !0x1, this.releases[_0x298051] = !0x0, this.upLocks[_0x298051] = !0x0;
    },
    'clearPressed': function () {
      for (var _0x18fd14 in this.releases) this.states[_0x18fd14] = !0x1, this.downLocks[_0x18fd14] = !0x1;
      this.releases = {}, this.presses = {}, this.upLocks = {};
    },
    'bind': function (_0x5f0d2f, _0x3e9b1e) {
      this.bindings[_0x5f0d2f] = _0x3e9b1e;
    },
    'unbind': function (_0xa49149) {
      this.releases[this.bindings[_0xa49149]] = !0x0, this.bindings[_0xa49149] = null;
    },
    'unbindAll': function () {
      this.bindings = {}, this.states = {}, this.presses = {}, this.releases = {}, this.downLocks = {}, this.upLocks = {};
    },
    'state': function (_0x145168) {
      return this.states[_0x145168];
    },
    'pressed': function (_0x4836ff) {
      return this.presses[_0x4836ff];
    },
    'released': function (_0xc57d56) {
      return this.releases[_0xc57d56];
    },
    'clamp': function (_0x1d968a, _0x333cad, _0x2f6974) {
      return _0x1d968a < _0x333cad ? _0x333cad : _0x1d968a > _0x2f6974 ? _0x2f6974 : _0x1d968a;
    },
    'findSteeringWheelIndex': function (_0x5de83e) {
      for (var _0x42d719 = -0x1, _0x4e6543 = 0x0; _0x4e6543 < _0x5de83e.length; _0x4e6543++) if (_0x5de83e[_0x4e6543] && 'standard' !== _0x5de83e[_0x4e6543].mapping) {
        _0x42d719 = _0x4e6543;
        break;
      }
      return _0x42d719;
    },
    'poll': function () {
      if (this.isSupported && (this.accelerator = this.steering = this.brake = 0x0, this.list = navigator.getGamepads(), !(0x0 > this.steeringIndex && (this.steeringIndex = this.findSteeringWheelIndex(this.list), 0x0 > this.steeringIndex)))) {
        for (var _0x58a305 in this.bindings) {
          var _0x4a6a47 = this.list[this.steeringIndex];
          _0x4a6a47 && _0x4a6a47.buttons && (this.buttonPressed(_0x4a6a47.buttons[_0x58a305]) ? this.buttonDown(_0x58a305) : this.buttonUp(_0x58a305));
        }
        _0x4a6a47 = this.list[this.steeringIndex], _0x58a305 = _0x4a6a47.axes[ig.WHEELKEY.AXIS0];
        var _0x255cbc = _0x4a6a47.axes[ig.WHEELKEY.AXIS1];
        this.accelerator = _0x4a6a47.axes[ig.WHEELKEY.AXIS5], this.steering = _0x58a305, this.brake = _0x255cbc, this.accelerator = this.clamp(this.accelerator, -0x1, 0x1), this.steering = this.clamp(this.steering, -0x1, 0x1), this.brake = this.clamp(this.brake, -0x1, 0x1);
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.data.vector').defines(function () {
  Vector2 = function (_0x2c4b44, _0x10ff3c) {
    this.x = _0x2c4b44 || 0x0, this.y = _0x10ff3c || 0x0;
  }, Vector2.prototype = {
    'valType': 'number',
    'neg': function () {
      return this.x = -this.x, this.y = -this.y, this;
    },
    'row': function (_0xca12cd) {
      return typeof _0xca12cd === this.valType && (this.y = _0xca12cd), this.y;
    },
    'col': function (_0x55d185) {
      return typeof _0x55d185 === this.valType && (this.x = _0x55d185), this.x;
    },
    'add': function (_0x3d5655) {
      return _0x3d5655 instanceof Vector2 ? (this.x += _0x3d5655.x, this.y += _0x3d5655.y) : (this.x += _0x3d5655, this.y += _0x3d5655), this;
    },
    'sub': function (_0x532bd1) {
      return _0x532bd1 instanceof Vector2 ? (this.x -= _0x532bd1.x, this.y -= _0x532bd1.y) : (this.x -= _0x532bd1, this.y -= _0x532bd1), this;
    },
    'mul': function (_0x31167d) {
      return _0x31167d instanceof Vector2 ? (this.x *= _0x31167d.x, this.y *= _0x31167d.y) : (this.x *= _0x31167d, this.y *= _0x31167d), this;
    },
    'div': function (_0x42f374) {
      return _0x42f374 instanceof Vector2 ? (0x0 != _0x42f374.x && (this.x /= _0x42f374.x), 0x0 != _0x42f374.y && (this.y /= _0x42f374.y)) : 0x0 != _0x42f374 && (this.x /= _0x42f374, this.y /= _0x42f374), this;
    },
    'equals': function (_0x18ae99) {
      return this.x == _0x18ae99.x && this.y == _0x18ae99.y;
    },
    'dot': function (_0xe1e860) {
      return this.x * _0xe1e860.x + this.y * _0xe1e860.y;
    },
    'cross': function (_0x50d7f0) {
      return this.x * _0x50d7f0.y - this.y * _0x50d7f0.x;
    },
    'length': function () {
      return Math.sqrt(this.dot(this));
    },
    'norm': function () {
      return this.divide(this.length());
    },
    'min': function () {
      return Math.min(this.x, this.y);
    },
    'max': function () {
      return Math.max(this.x, this.y);
    },
    'toAngles': function () {
      return -Math.atan2(-this.y, this.x);
    },
    'angleTo': function (_0x402151) {
      return Math.acos(this.dot(_0x402151) / (this.length() * _0x402151.length()));
    },
    'toArray': function (_0x171019) {
      return [this.x, this.y].slice(0x0, _0x171019 || 0x2);
    },
    'clone': function () {
      return new Vector2(this.x, this.y);
    },
    'set': function (_0x4b6ff7, _0x5e5184) {
      return this.x = _0x4b6ff7, this.y = _0x5e5184, this;
    },
    'unit': function () {
      var _0x537f63 = this.length();
      if (0x0 < _0x537f63) return new Vector2(this.x / _0x537f63, this.y / _0x537f63);
      throw "Divide by 0 error in unitVector function of vector:" + this;
    },
    'turnRight': function () {
      var _0x4b1f02 = this.x;
      return this.x = -this.y, this.y = _0x4b1f02, this;
    },
    'turnLeft': function () {
      var _0x203e18 = this.x;
      return this.x = this.y, this.y = -_0x203e18, this;
    },
    'rotate': function (_0x556920) {
      var _0x254121 = this.clone();
      return this.x = _0x254121.x * Math.cos(_0x556920) - _0x254121.y * Math.sin(_0x556920), this.y = _0x254121.x * Math.sin(_0x556920) + _0x254121.y * Math.cos(_0x556920), this;
    }
  }, Vector2.negative = function (_0x2d88c6) {
    return new Vector2(-_0x2d88c6.x, -_0x2d88c6.y);
  }, Vector2.add = function (_0xd04f85, _0x248fc7) {
    return _0x248fc7 instanceof Vector2 ? new Vector2(_0xd04f85.x + _0x248fc7.x, _0xd04f85.y + _0x248fc7.y) : new Vector2(_0xd04f85.x + v, _0xd04f85.y + v);
  }, Vector2.subtract = function (_0x1c6401, _0x560f38) {
    return _0x560f38 instanceof Vector2 ? new Vector2(_0x1c6401.x - _0x560f38.x, _0x1c6401.y - _0x560f38.y) : new Vector2(_0x1c6401.x - v, _0x1c6401.y - v);
  }, Vector2.multiply = function (_0x3ef66e, _0x59de93) {
    return _0x59de93 instanceof Vector2 ? new Vector2(_0x3ef66e.x * _0x59de93.x, _0x3ef66e.y * _0x59de93.y) : new Vector2(_0x3ef66e.x * v, _0x3ef66e.y * v);
  }, Vector2.divide = function (_0x25ed92, _0xa1edae) {
    return _0xa1edae instanceof Vector2 ? new Vector2(_0x25ed92.x / _0xa1edae.x, _0x25ed92.y / _0xa1edae.y) : new Vector2(_0x25ed92.x / v, _0x25ed92.y / v);
  }, Vector2.equals = function (_0x3a27a1, _0x4ee85a) {
    return _0x3a27a1.x == _0x4ee85a.x && _0x3a27a1.y == _0x4ee85a.y;
  }, Vector2.dot = function (_0x3a7d98, _0x2e80a8) {
    return _0x3a7d98.x * _0x2e80a8.x + _0x3a7d98.y * _0x2e80a8.y;
  }, Vector2.cross = function (_0xcd9525, _0x49a5d9) {
    return _0xcd9525.x * _0x49a5d9.y - _0xcd9525.y * _0x49a5d9.x;
  };
}), ig.baked = !0x0, ig.module('plugins.data.color-rgb').defines(function () {
  ColorRGB = function (_0x5bc1ea, _0x420969, _0x24e751, _0x5a6b50) {
    this.r = _0x5bc1ea || 0x0, this.g = _0x420969 || 0x0, this.b = _0x24e751 || 0x0, this.a = _0x5a6b50 || 0x0;
  }, ColorRGB.prototype = {
    'setRandomColor': function () {
      this.r = Math.round(0xff * Math.random()), this.g = Math.round(0xff * Math.random()), this.b = Math.round(0xff * Math.random());
    },
    'getStyle': function () {
      return 'rgba(' + this.r + ',' + this.g + ',' + this.b + ',' + this.a + ')';
    },
    'getHex': function () {
      for (var _0x3b7697 = this.r.toString(0x10), _0x59bcd8 = this.g.toString(0x10), _0x5977e0 = this.b.toString(0x10); 0x2 > _0x3b7697.length;) _0x3b7697 = '0' + _0x3b7697;
      for (; 0x2 > _0x59bcd8.length;) _0x59bcd8 = '0' + _0x59bcd8;
      for (; 0x2 > _0x5977e0.length;) _0x5977e0 = '0' + _0x5977e0;
      return '#' + _0x3b7697 + _0x59bcd8 + _0x5977e0;
    },
    'getInvertedColor': function () {
      return new ColorRGB(0xff - this.r, 0xff - this.g, 0xff - this.b, 0xff - this.a);
    },
    'clone': function () {
      return new ColorRGB(this.r, this.g, this.b, this.a);
    }
  };
}), ig.baked = !0x0, ig.module('plugins.io.fake-storage').requires('impact.game').defines(function () {
  ig.FakeStorage = ig.Class.extend({
    'tempData': {},
    'init': function () {
      ig.FakeStorage.instance = this;
    },
    'initUnset': function (_0x420cca, _0x57e6b5) {
      null === this.get(_0x420cca) && this.set(_0x420cca, _0x57e6b5);
    },
    'set': function (_0x3b5b01, _0x52454b) {
      this.tempData[_0x3b5b01] = JSON.stringify(_0x52454b);
    },
    'setItem': function (_0x20f92c, _0x26d390) {
      this.tempData[_0x20f92c] = JSON.stringify(_0x26d390);
    },
    'setHighest': function (_0x3a3113, _0x23b014) {
      _0x23b014 > this.getFloat(_0x3a3113) && this.set(_0x3a3113, _0x23b014);
    },
    'get': function (_0x20af97) {
      return 'undefined' == typeof this.tempData[_0x20af97] ? null : JSON.parse(this.tempData[_0x20af97]);
    },
    'getItem': function (_0x36b359) {
      return 'undefined' == typeof this.tempData[_0x36b359] ? null : JSON.parse(this.tempData[_0x36b359]);
    },
    'getInt': function (_0x3c5011) {
      return ~~this.get(_0x3c5011);
    },
    'getFloat': function (_0x1806f1) {
      return parseFloat(this.get(_0x1806f1));
    },
    'getBool': function (_0x4bc6bf) {
      return !!this.get(_0x4bc6bf);
    },
    'isSet': function (_0x489481) {
      return null !== this.get(_0x489481);
    },
    'remove': function (_0x208a96) {
      delete this.tempData[_0x208a96];
    },
    'removeItem': function (_0x2d6ffa) {
      delete this.tempData[_0x2d6ffa];
    },
    'clear': function () {
      this.tempData = {};
    }
  });
}), ig.baked = !0x0, ig.module('plugins.secure-ls').requires('plugins.io.fake-storage').defines(function () {
  (function () {
    var _0x4b5c1b = function () {
      var _0x3db1a4 = [function (_0x359000, _0x2ef7af, _0x408756) {
          function _0x1bbd5e(_0x4ae289) {
            return _0x4ae289 && _0x4ae289.__esModule ? _0x4ae289 : {
              'default': _0x4ae289
            };
          }
          Object.defineProperty(_0x2ef7af, '__esModule', {
            'value': !0x0
          });
          var _0x21e03a = _0x408756(0x1),
            _0x788829 = _0x1bbd5e(_0x21e03a),
            _0x21e03a = _0x408756(0x2),
            _0x48e7a1 = _0x1bbd5e(_0x21e03a),
            _0x21e03a = _0x408756(0x8),
            _0x21d8bb = _0x1bbd5e(_0x21e03a),
            _0x21e03a = _0x408756(0x9),
            _0x2942ce = _0x1bbd5e(_0x21e03a),
            _0x21e03a = _0x408756(0xa),
            _0x110c8 = _0x1bbd5e(_0x21e03a),
            _0x21e03a = _0x408756(0xb),
            _0x58f298 = _0x1bbd5e(_0x21e03a),
            _0x21e03a = _0x408756(0x10),
            _0x8fd35e = _0x1bbd5e(_0x21e03a),
            _0x21e03a = _0x408756(0x11),
            _0x138d3a = _0x1bbd5e(_0x21e03a);
          _0x408756 = _0x408756(0x12);
          var _0x167bb5 = _0x1bbd5e(_0x408756),
            _0x59005b = function (_0x2c3bfb) {
              if (!(this instanceof _0x59005b)) throw new TypeError("Cannot call a class as a function");
              _0x2c3bfb = _0x2c3bfb || {}, this._name = 'secure-ls', this.utils = _0x788829['default'], this.constants = _0x48e7a1['default'], this.Base64 = _0x2942ce['default'], this.LZString = _0x110c8['default'], this.AES = _0x58f298['default'], this.DES = _0x8fd35e['default'], this.RABBIT = _0x138d3a['default'], this.RC4 = _0x167bb5['default'], this.enc = _0x21d8bb['default'], this.config = {
                'isCompression': !0x0,
                'encodingType': _0x48e7a1['default'].EncrytionTypes.BASE64,
                'encryptionSecret': _0x2c3bfb.encryptionSecret,
                'encryptionNamespace': _0x2c3bfb.encryptionNamespace
              }, this.config.isCompression = 'undefined' == typeof _0x2c3bfb.isCompression || _0x2c3bfb.isCompression, this.config.encodingType = 'undefined' != typeof _0x2c3bfb.encodingType || '' === _0x2c3bfb.encodingType ? _0x2c3bfb.encodingType.toLowerCase() : _0x48e7a1['default'].EncrytionTypes.BASE64;
              try {
                window.localStorage.setItem('test', 'test'), window.localStorage.removeItem('test'), this.ls = localStorage;
              } catch (_0x3def7e) {
                this.ls = new ig.FakeStorage();
              }
              this.init();
            };
          _0x408756 = [{
            'key': 'init',
            'value': function () {
              var _0x289f59 = this.getMetaData();
              this.WarningEnum = this.constants.WarningEnum, this.WarningTypes = this.constants.WarningTypes, this.EncrytionTypes = this.constants.EncrytionTypes, this._isBase64 = this._isBase64EncryptionType(), this._isAES = this._isAESEncryptionType(), this._isDES = this._isDESEncryptionType(), this._isRabbit = this._isRabbitEncryptionType(), this._isRC4 = this._isRC4EncryptionType(), this._isCompression = this._isDataCompressionEnabled(), this.utils.allKeys = _0x289f59.keys || this.resetAllKeys();
            }
          }, {
            'key': '_isBase64EncryptionType',
            'value': function () {
              return _0x2942ce['default'] && ('undefined' == typeof this.config.encodingType || this.config.encodingType === this.constants.EncrytionTypes.BASE64);
            }
          }, {
            'key': '_isAESEncryptionType',
            'value': function () {
              return _0x58f298['default'] && this.config.encodingType === this.constants.EncrytionTypes.AES;
            }
          }, {
            'key': '_isDESEncryptionType',
            'value': function () {
              return _0x8fd35e['default'] && this.config.encodingType === this.constants.EncrytionTypes.DES;
            }
          }, {
            'key': '_isRabbitEncryptionType',
            'value': function () {
              return _0x138d3a['default'] && this.config.encodingType === this.constants.EncrytionTypes.RABBIT;
            }
          }, {
            'key': '_isRC4EncryptionType',
            'value': function () {
              return _0x167bb5['default'] && this.config.encodingType === this.constants.EncrytionTypes.RC4;
            }
          }, {
            'key': '_isDataCompressionEnabled',
            'value': function () {
              return this.config.isCompression;
            }
          }, {
            'key': 'getEncryptionSecret',
            'value': function (_0x50fc62) {
              var _0x462e3c = this.getMetaData();
              (_0x50fc62 = this.utils.getObjectFromKey(_0x462e3c.keys, _0x50fc62)) && (this._isAES || this._isDES || this._isRabbit || this._isRC4) && ('undefined' == typeof this.config.encryptionSecret ? (this.utils.encryptionSecret = _0x50fc62.s, this.utils.encryptionSecret || (this.utils.encryptionSecret = this.utils.generateSecretKey(), this.setMetaData())) : this.utils.encryptionSecret = this.config.encryptionSecret || _0x50fc62.s || '');
            }
          }, {
            'key': 'get',
            'value': function (_0x3c01ed, _0x437149) {
              var _0x1be930 = '',
                _0x19fa5a = '',
                _0x4a3a0f = void 0x0,
                _0x3b7ca1 = void 0x0,
                _0x1be930 = void 0x0;
              if (!this.utils.is(_0x3c01ed)) return this.utils.warn(this.WarningEnum.KEY_NOT_PROVIDED), _0x19fa5a;
              if (_0x1be930 = this.getDataFromLocalStorage(_0x3c01ed), !_0x1be930) return _0x19fa5a;
              _0x4a3a0f = _0x1be930, (this._isCompression || _0x437149) && (_0x4a3a0f = _0x110c8['default'].decompressFromUTF16(_0x1be930)), _0x1be930 = _0x4a3a0f, this._isBase64 || _0x437149 ? _0x1be930 = _0x2942ce['default'].decode(_0x4a3a0f) : (this.getEncryptionSecret(_0x3c01ed), this._isAES ? _0x3b7ca1 = _0x58f298['default'].decrypt(_0x4a3a0f.toString(), this.utils.encryptionSecret) : this._isDES ? _0x3b7ca1 = _0x8fd35e['default'].decrypt(_0x4a3a0f.toString(), this.utils.encryptionSecret) : this._isRabbit ? _0x3b7ca1 = _0x138d3a['default'].decrypt(_0x4a3a0f.toString(), this.utils.encryptionSecret) : this._isRC4 && (_0x3b7ca1 = _0x167bb5['default'].decrypt(_0x4a3a0f.toString(), this.utils.encryptionSecret)), _0x3b7ca1 && (_0x1be930 = _0x3b7ca1.toString(_0x21d8bb['default']._Utf8)));
              try {
                _0x19fa5a = JSON.parse(_0x1be930);
              } catch (_0x17f8bd) {
                throw Error("Could not parse JSON");
              }
              return _0x19fa5a;
            }
          }, {
            'key': 'getDataFromLocalStorage',
            'value': function (_0x55f6b6) {
              return this.ls.getItem(_0x55f6b6, !0x0);
            }
          }, {
            'key': 'getAllKeys',
            'value': function () {
              var _0xa82bea = this.getMetaData();
              return this.utils.extractKeyNames(_0xa82bea) || [];
            }
          }, {
            'key': 'set',
            'value': function (_0x3ec00c, _0x3424fc) {
              var _0x4af226 = '';
              return this.utils.is(_0x3ec00c) ? (this.getEncryptionSecret(_0x3ec00c), String(_0x3ec00c) !== String(this.utils.metaKey) && (this.utils.isKeyPresent(_0x3ec00c) || (this.utils.addToKeysList(_0x3ec00c), this.setMetaData())), _0x4af226 = this.processData(_0x3424fc), void this.setDataToLocalStorage(_0x3ec00c, _0x4af226)) : void this.utils.warn(this.WarningEnum.KEY_NOT_PROVIDED);
            }
          }, {
            'key': 'setDataToLocalStorage',
            'value': function (_0x569c51, _0x2c8ec3) {
              this.ls.setItem(_0x569c51, _0x2c8ec3);
            }
          }, {
            'key': 'remove',
            'value': function (_0x199a4f) {
              return this.utils.is(_0x199a4f) ? _0x199a4f === this.utils.metaKey && this.getAllKeys().length ? void this.utils.warn(this.WarningEnum.META_KEY_REMOVE) : (this.utils.isKeyPresent(_0x199a4f) && (this.utils.removeFromKeysList(_0x199a4f), this.setMetaData()), void this.ls.removeItem(_0x199a4f)) : void this.utils.warn(this.WarningEnum.KEY_NOT_PROVIDED);
            }
          }, {
            'key': 'removeAll',
            'value': function () {
              for (var _0x1c091d = void 0x0, _0x56e720 = void 0x0, _0x1c091d = this.getAllKeys(), _0x56e720 = 0x0; _0x56e720 < _0x1c091d.length; _0x56e720++) this.ls.removeItem(_0x1c091d[_0x56e720]);
              this.ls.removeItem(this.utils.metaKey), this.resetAllKeys();
            }
          }, {
            'key': 'clear',
            'value': function () {
              this.ls.clear(), this.resetAllKeys();
            }
          }, {
            'key': 'resetAllKeys',
            'value': function () {
              return this.utils.allKeys = [], [];
            }
          }, {
            'key': 'processData',
            'value': function (_0x12b8f5, _0x2a7352) {
              if (null === _0x12b8f5 || void 0x0 === _0x12b8f5 || '' === _0x12b8f5) return '';
              var _0x5ad7a8 = void 0x0,
                _0x50a0d8 = void 0x0,
                _0x522763 = void 0x0;
              try {
                _0x5ad7a8 = JSON.stringify(_0x12b8f5);
              } catch (_0x5ed55d) {
                throw Error("Could not stringify data.");
              }
              return _0x50a0d8 = _0x5ad7a8, this._isBase64 || _0x2a7352 ? _0x50a0d8 = _0x2942ce['default'].encode(_0x5ad7a8) : (this._isAES ? _0x50a0d8 = _0x58f298['default'].encrypt(_0x5ad7a8, this.utils.encryptionSecret) : this._isDES ? _0x50a0d8 = _0x8fd35e['default'].encrypt(_0x5ad7a8, this.utils.encryptionSecret) : this._isRabbit ? _0x50a0d8 = _0x138d3a['default'].encrypt(_0x5ad7a8, this.utils.encryptionSecret) : this._isRC4 && (_0x50a0d8 = _0x167bb5['default'].encrypt(_0x5ad7a8, this.utils.encryptionSecret)), _0x50a0d8 = _0x50a0d8 && _0x50a0d8.toString()), _0x522763 = _0x50a0d8, (this._isCompression || _0x2a7352) && (_0x522763 = _0x110c8['default'].compressToUTF16(_0x50a0d8)), _0x522763;
            }
          }, {
            'key': 'setMetaData',
            'value': function () {
              var _0x465dbc = this.processData({
                'keys': this.utils.allKeys
              }, !0x0);
              this.setDataToLocalStorage(this.getMetaKey(), _0x465dbc);
            }
          }, {
            'key': 'getMetaData',
            'value': function () {
              return this.get(this.getMetaKey(), !0x0) || {};
            }
          }, {
            'key': 'getMetaKey',
            'value': function () {
              return this.utils.metaKey + (this.config.encryptionNamespace ? '__' + this.config.encryptionNamespace : '');
            }
          }];
          for (var _0x21e03a = _0x59005b.prototype, _0x159af8 = 0x0; _0x159af8 < _0x408756.length; _0x159af8++) {
            var _0x1f8307 = _0x408756[_0x159af8];
            _0x1f8307.enumerable = _0x1f8307.enumerable || !0x1, _0x1f8307.configurable = !0x0, 'value' in _0x1f8307 && (_0x1f8307.writable = !0x0), Object.defineProperty(_0x21e03a, _0x1f8307.key, _0x1f8307);
          }
          _0x2ef7af['default'] = _0x59005b, _0x359000.exports = _0x2ef7af['default'];
        }, function (_0x7b2b41, _0x4d2bf1, _0x578ecc) {
          function _0x3b97f2(_0x772615) {
            return _0x772615 && _0x772615.__esModule ? _0x772615 : {
              'default': _0x772615
            };
          }
          _0x4d2bf1 = _0x578ecc(0x2);
          var _0x2da1bb = _0x3b97f2(_0x4d2bf1);
          _0x4d2bf1 = _0x578ecc(0x3);
          var _0x4df2f3 = _0x3b97f2(_0x4d2bf1);
          _0x578ecc = _0x578ecc(0x4);
          var _0x1cc472 = _0x3b97f2(_0x578ecc);
          _0x7b2b41.exports = {
            'metaKey': '_secure__ls__metadata',
            'encryptionSecret': '',
            'secretPhrase': 's3cr3t$#@135^&*246',
            'allKeys': [],
            'is': function (_0x1bb22e) {
              return !!_0x1bb22e;
            },
            'warn': function (_0x41afea) {
              _0x41afea = _0x41afea ? _0x41afea : _0x2da1bb['default'].WarningEnum.DEFAULT_TEXT, console.warn(_0x2da1bb['default'].WarningTypes[_0x41afea]);
            },
            'generateSecretKey': function () {
              var _0x2e5d94 = _0x4df2f3['default'].random(0x10);
              return (_0x2e5d94 = (0x0, _0x1cc472['default'])(this.secretPhrase, _0x2e5d94, {
                'keySize': 0x4
              })) && _0x2e5d94.toString();
            },
            'getObjectFromKey': function (_0x1974f1, _0x24abbb) {
              if (!_0x1974f1 || !_0x1974f1.length) return {};
              for (var _0x4ff89a = void 0x0, _0x5757ae = {}, _0x4ff89a = 0x0; _0x4ff89a < _0x1974f1.length; _0x4ff89a++) if (_0x1974f1[_0x4ff89a].k === _0x24abbb) {
                _0x5757ae = _0x1974f1[_0x4ff89a];
                break;
              }
              return _0x5757ae;
            },
            'extractKeyNames': function (_0x4400ee) {
              return _0x4400ee && _0x4400ee.keys && _0x4400ee.keys.length ? _0x4400ee.keys.map(function (_0x49bf4e) {
                return _0x49bf4e.k;
              }) : [];
            },
            'getAllKeys': function () {
              return this.allKeys;
            },
            'isKeyPresent': function (_0x35f434) {
              for (var _0x5ebe0b = !0x1, _0x5a1964 = 0x0; _0x5a1964 < this.allKeys.length; _0x5a1964++) if (String(this.allKeys[_0x5a1964].k) === String(_0x35f434)) {
                _0x5ebe0b = !0x0;
                break;
              }
              return _0x5ebe0b;
            },
            'addToKeysList': function (_0xb3f019) {
              this.allKeys.push({
                'k': _0xb3f019,
                's': this.encryptionSecret
              });
            },
            'removeFromKeysList': function (_0x1f03d6) {
              for (var _0x3a9ac8 = void 0x0, _0x3f3ca4 = -0x1, _0x3a9ac8 = 0x0; _0x3a9ac8 < this.allKeys.length; _0x3a9ac8++) if (this.allKeys[_0x3a9ac8].k === _0x1f03d6) {
                _0x3f3ca4 = _0x3a9ac8;
                break;
              }
              return -0x1 !== _0x3f3ca4 && this.allKeys.splice(_0x3f3ca4, 0x1), _0x3f3ca4;
            }
          };
        }, function (_0x49167b) {
          var _0x3a2cd3 = {
              'KEY_NOT_PROVIDED': 'keyNotProvided',
              'META_KEY_REMOVE': 'metaKeyRemove',
              'DEFAULT_TEXT': 'defaultText'
            },
            _0x3fd259 = {};
          _0x3fd259[_0x3a2cd3.KEY_NOT_PROVIDED] = "Secure LS: Key not provided. Aborting operation!", _0x3fd259[_0x3a2cd3.META_KEY_REMOVE] = "Secure LS: Meta key can not be removed\nunless all keys created by Secure LS are removed!", _0x3fd259[_0x3a2cd3.DEFAULT_TEXT] = "Unexpected output", _0x49167b.exports = {
            'WarningEnum': _0x3a2cd3,
            'WarningTypes': _0x3fd259,
            'EncrytionTypes': {
              'BASE64': 'base64',
              'AES': 'aes',
              'DES': 'des',
              'RABBIT': 'rabbit',
              'RC4': 'rc4'
            }
          };
        }, function (_0x2ddb64) {
          _0x2ddb64.exports = {
            'random': function (_0x1aa835) {
              for (var _0x55980f, _0x33050b = [], _0x5975b6 = function (_0x1af6c3) {
                  var _0x12a87c = 0x3ade68b1;
                  return function () {
                    _0x12a87c = 0x9069 * (0xffff & _0x12a87c) + (_0x12a87c >> 0x10) & 0xffffffff, _0x1af6c3 = 0x4650 * (0xffff & _0x1af6c3) + (_0x1af6c3 >> 0x10) & 0xffffffff;
                    var _0x12fe70 = (_0x12a87c << 0x10) + _0x1af6c3 & 0xffffffff;
                    return _0x12fe70 /= 0x100000000, _0x12fe70 += 0.5, _0x12fe70 * (0.5 < Math.random() ? 0x1 : -0x1);
                  };
                }, _0x4eb29e = 0x0; _0x4eb29e < _0x1aa835; _0x4eb29e += 0x4) {
                var _0x230a02 = _0x5975b6(0x100000000 * (_0x55980f || Math.random()));
                _0x55980f = 0x3ade67b7 * _0x230a02(), _0x33050b.push(0x100000000 * _0x230a02() | 0x0);
              }
              return new this.Set(_0x33050b, _0x1aa835);
            },
            'Set': function (_0x50e6cd, _0x323077) {
              _0x50e6cd = this.words = _0x50e6cd || [], void 0x0 !== _0x323077 ? this.sigBytes = _0x323077 : this.sigBytes = 0x8 * _0x50e6cd.length;
            }
          };
        }, function (_0x4f2a06, _0x36f2e5, _0x4cf789) {
          _0x36f2e5 = _0x4cf789(0x5), _0x4cf789(0x6), _0x4cf789(0x7);
          var _0x3fd3c3 = _0x36f2e5.lib;
          _0x4cf789 = _0x3fd3c3.Base;
          var _0x501f4e = _0x3fd3c3.WordArray,
            _0x3fd3c3 = _0x36f2e5.algo,
            _0x2d2062 = _0x3fd3c3.HMAC,
            _0x3bab5d = _0x3fd3c3.PBKDF2 = _0x4cf789.extend({
              'cfg': _0x4cf789.extend({
                'keySize': 0x4,
                'hasher': _0x3fd3c3.SHA1,
                'iterations': 0x1
              }),
              'init': function (_0x3e997c) {
                this.cfg = this.cfg.extend(_0x3e997c);
              },
              'compute': function (_0x58d147, _0xda10cb) {
                for (var _0x409830 = this.cfg, _0xb2cb56 = _0x2d2062.create(_0x409830.hasher, _0x58d147), _0x3c7956 = _0x501f4e.create(), _0x74d6dd = _0x501f4e.create([0x1]), _0x2c3b63 = _0x3c7956.words, _0x324d4e = _0x74d6dd.words, _0x2aa720 = _0x409830.keySize, _0x409830 = _0x409830.iterations; _0x2c3b63.length < _0x2aa720;) {
                  var _0x11a1b2 = _0xb2cb56.update(_0xda10cb).finalize(_0x74d6dd);
                  _0xb2cb56.reset();
                  for (var _0x25b7ab = _0x11a1b2.words, _0xebeae0 = _0x25b7ab.length, _0x460929 = _0x11a1b2, _0x86c21 = 0x1; _0x86c21 < _0x409830; _0x86c21++) {
                    _0x460929 = _0xb2cb56.finalize(_0x460929), _0xb2cb56.reset();
                    for (var _0x2f8b9c = _0x460929.words, _0x21c4d9 = 0x0; _0x21c4d9 < _0xebeae0; _0x21c4d9++) _0x25b7ab[_0x21c4d9] ^= _0x2f8b9c[_0x21c4d9];
                  }
                  _0x3c7956.concat(_0x11a1b2), _0x324d4e[0x0]++;
                }
                return _0x3c7956.sigBytes = 0x4 * _0x2aa720, _0x3c7956;
              }
            });
          _0x36f2e5.PBKDF2 = function (_0x1d4a70, _0x64f327, _0x33c0c1) {
            return _0x3bab5d.create(_0x33c0c1).compute(_0x1d4a70, _0x64f327);
          }, _0x4f2a06.exports = _0x36f2e5.PBKDF2, !0x0;
        }, function (_0x3890f1) {
          var _0x41c58b;
          if (!_0x41c58b) {
            var _0x44cbce = Math;
            if (!(_0x41c58b = Object.create)) {
              var _0x1b74c5 = function () {};
              _0x41c58b = function (_0x3fe5e6) {
                var _0x693e11;
                return _0x1b74c5.prototype = _0x3fe5e6, _0x693e11 = new _0x1b74c5(), _0x1b74c5.prototype = null, _0x693e11;
              };
            }
            var _0x38dc89 = _0x41c58b;
            _0x41c58b = {};
            var _0x2fd635 = _0x41c58b.lib = {},
              _0x94b638 = _0x2fd635.Base = {
                'extend': function (_0x31c19c) {
                  var _0x512c90 = _0x38dc89(this);
                  return _0x31c19c && _0x512c90.mixIn(_0x31c19c), _0x512c90.hasOwnProperty('init') && this.init !== _0x512c90.init || (_0x512c90.init = function () {
                    _0x512c90.$super.init.apply(this, arguments);
                  }), _0x512c90.init.prototype = _0x512c90, _0x512c90.$super = this, _0x512c90;
                },
                'create': function () {
                  var _0x11859d = this.extend();
                  return _0x11859d.init.apply(_0x11859d, arguments), _0x11859d;
                },
                'init': function () {},
                'mixIn': function (_0x15d932) {
                  for (var _0x61725f in _0x15d932) _0x15d932.hasOwnProperty(_0x61725f) && (this[_0x61725f] = _0x15d932[_0x61725f]);
                  _0x15d932.hasOwnProperty('toString') && (this.toString = _0x15d932.toString);
                },
                'clone': function () {
                  return this.init.prototype.extend(this);
                }
              },
              _0x17b5ac = _0x2fd635.WordArray = _0x94b638.extend({
                'init': function (_0x2a8973, _0x3df3b4) {
                  _0x2a8973 = this.words = _0x2a8973 || [], void 0x0 != _0x3df3b4 ? this.sigBytes = _0x3df3b4 : this.sigBytes = 0x4 * _0x2a8973.length;
                },
                'toString': function (_0x5f4b90) {
                  return (_0x5f4b90 || _0x17f582).stringify(this);
                },
                'concat': function (_0x435218) {
                  var _0x4fd227 = this.words,
                    _0x105ffd = _0x435218.words,
                    _0x1bf076 = this.sigBytes;
                  _0x435218 = _0x435218.sigBytes;
                  if (this.clamp(), _0x1bf076 % 0x4) {
                    for (var _0x51cc0c = 0x0; _0x51cc0c < _0x435218; _0x51cc0c++) _0x4fd227[_0x1bf076 + _0x51cc0c >>> 0x2] |= (_0x105ffd[_0x51cc0c >>> 0x2] >>> 0x18 - 0x8 * (_0x51cc0c % 0x4) & 0xff) << 0x18 - 0x8 * ((_0x1bf076 + _0x51cc0c) % 0x4);
                  } else {
                    for (_0x51cc0c = 0x0; _0x51cc0c < _0x435218; _0x51cc0c += 0x4) _0x4fd227[_0x1bf076 + _0x51cc0c >>> 0x2] = _0x105ffd[_0x51cc0c >>> 0x2];
                  }
                  return this.sigBytes += _0x435218, this;
                },
                'clamp': function () {
                  var _0x57003e = this.words,
                    _0x4eee08 = this.sigBytes;
                  _0x57003e[_0x4eee08 >>> 0x2] &= 0xffffffff << 0x20 - 0x8 * (_0x4eee08 % 0x4), _0x57003e.length = _0x44cbce.ceil(_0x4eee08 / 0x4);
                },
                'clone': function () {
                  var _0x45e7c7 = _0x94b638.clone.call(this);
                  return _0x45e7c7.words = this.words.slice(0x0), _0x45e7c7;
                },
                'random': function (_0x5bf5e0) {
                  for (var _0x51028d, _0x1c219b = [], _0x5245eb = function (_0x5b9c8d) {
                      var _0x13676c = 0x3ade68b1;
                      return function () {
                        _0x13676c = 0x9069 * (0xffff & _0x13676c) + (_0x13676c >> 0x10) & 0xffffffff, _0x5b9c8d = 0x4650 * (0xffff & _0x5b9c8d) + (_0x5b9c8d >> 0x10) & 0xffffffff;
                        var _0x3e8a9a = (_0x13676c << 0x10) + _0x5b9c8d & 0xffffffff;
                        return _0x3e8a9a /= 0x100000000, _0x3e8a9a += 0.5, _0x3e8a9a * (0.5 < _0x44cbce.random() ? 0x1 : -0x1);
                      };
                    }, _0x2022e5 = 0x0; _0x2022e5 < _0x5bf5e0; _0x2022e5 += 0x4) {
                    var _0x16ed53 = _0x5245eb(0x100000000 * (_0x51028d || _0x44cbce.random()));
                    _0x51028d = 0x3ade67b7 * _0x16ed53(), _0x1c219b.push(0x100000000 * _0x16ed53() | 0x0);
                  }
                  return new _0x17b5ac.init(_0x1c219b, _0x5bf5e0);
                }
              }),
              _0xd6574 = _0x41c58b.enc = {},
              _0x17f582 = _0xd6574.Hex = {
                'stringify': function (_0x554eee) {
                  var _0x38f727 = _0x554eee.words;
                  _0x554eee = _0x554eee.sigBytes;
                  for (var _0x3ab4fe = [], _0xb6a352 = 0x0; _0xb6a352 < _0x554eee; _0xb6a352++) {
                    var _0x54dbdf = _0x38f727[_0xb6a352 >>> 0x2] >>> 0x18 - 0x8 * (_0xb6a352 % 0x4) & 0xff;
                    _0x3ab4fe.push((_0x54dbdf >>> 0x4).toString(0x10)), _0x3ab4fe.push((0xf & _0x54dbdf).toString(0x10));
                  }
                  return _0x3ab4fe.join('');
                },
                'parse': function (_0x3ef9fd) {
                  for (var _0x3c5475 = _0x3ef9fd.length, _0x325a13 = [], _0x3d0191 = 0x0; _0x3d0191 < _0x3c5475; _0x3d0191 += 0x2) _0x325a13[_0x3d0191 >>> 0x3] |= parseInt(_0x3ef9fd.substr(_0x3d0191, 0x2), 0x10) << 0x18 - 0x4 * (_0x3d0191 % 0x8);
                  return new _0x17b5ac.init(_0x325a13, _0x3c5475 / 0x2);
                }
              },
              _0x3604df = _0xd6574.Latin1 = {
                'stringify': function (_0x3bac79) {
                  var _0x2ef983 = _0x3bac79.words;
                  _0x3bac79 = _0x3bac79.sigBytes;
                  for (var _0x2e073e = [], _0x203c1a = 0x0; _0x203c1a < _0x3bac79; _0x203c1a++) _0x2e073e.push(String.fromCharCode(_0x2ef983[_0x203c1a >>> 0x2] >>> 0x18 - 0x8 * (_0x203c1a % 0x4) & 0xff));
                  return _0x2e073e.join('');
                },
                'parse': function (_0x4f747e) {
                  for (var _0x3911f6 = _0x4f747e.length, _0x3314c6 = [], _0x47f862 = 0x0; _0x47f862 < _0x3911f6; _0x47f862++) _0x3314c6[_0x47f862 >>> 0x2] |= (0xff & _0x4f747e.charCodeAt(_0x47f862)) << 0x18 - 0x8 * (_0x47f862 % 0x4);
                  return new _0x17b5ac.init(_0x3314c6, _0x3911f6);
                }
              },
              _0x6f9fd4 = _0xd6574.Utf8 = {
                'stringify': function (_0x29b5a5) {
                  try {
                    return decodeURIComponent(escape(_0x3604df.stringify(_0x29b5a5)));
                  } catch (_0x2217e4) {
                    throw Error("Malformed UTF-8 data");
                  }
                },
                'parse': function (_0x50bc7d) {
                  return _0x3604df.parse(unescape(encodeURIComponent(_0x50bc7d)));
                }
              },
              _0x575b29 = _0x2fd635.BufferedBlockAlgorithm = _0x94b638.extend({
                'reset': function () {
                  this._data = new _0x17b5ac.init(), this._nDataBytes = 0x0;
                },
                '_append': function (_0x21b1ea) {
                  'string' == typeof _0x21b1ea && (_0x21b1ea = _0x6f9fd4.parse(_0x21b1ea)), this._data.concat(_0x21b1ea), this._nDataBytes += _0x21b1ea.sigBytes;
                },
                '_process': function (_0x29b8b9) {
                  var _0x7870f3 = this._data,
                    _0x30721a = _0x7870f3.words,
                    _0x447084 = _0x7870f3.sigBytes,
                    _0x37a5b2 = this.blockSize,
                    _0xf296e2 = _0x447084 / (0x4 * _0x37a5b2),
                    _0xf296e2 = _0x29b8b9 ? _0x44cbce.ceil(_0xf296e2) : _0x44cbce.max((0x0 | _0xf296e2) - this._minBufferSize, 0x0);
                  _0x29b8b9 = _0xf296e2 * _0x37a5b2, _0x447084 = _0x44cbce.min(0x4 * _0x29b8b9, _0x447084);
                  if (_0x29b8b9) {
                    for (var _0x342eca = 0x0; _0x342eca < _0x29b8b9; _0x342eca += _0x37a5b2) this._doProcessBlock(_0x30721a, _0x342eca);
                    _0x342eca = _0x30721a.splice(0x0, _0x29b8b9), _0x7870f3.sigBytes -= _0x447084;
                  }
                  return new _0x17b5ac.init(_0x342eca, _0x447084);
                },
                'clone': function () {
                  var _0x53e463 = _0x94b638.clone.call(this);
                  return _0x53e463._data = this._data.clone(), _0x53e463;
                },
                '_minBufferSize': 0x0
              }),
              _0x6bc693 = (_0x2fd635.Hasher = _0x575b29.extend({
                'cfg': _0x94b638.extend(),
                'init': function (_0x15816e) {
                  this.cfg = this.cfg.extend(_0x15816e), this.reset();
                },
                'reset': function () {
                  _0x575b29.reset.call(this), this._doReset();
                },
                'update': function (_0x45ea4b) {
                  return this._append(_0x45ea4b), this._process(), this;
                },
                'finalize': function (_0x5d511a) {
                  return _0x5d511a && this._append(_0x5d511a), this._doFinalize();
                },
                'blockSize': 0x10,
                '_createHelper': function (_0x2ceb14) {
                  return function (_0x167b00, _0x39bef7) {
                    return new _0x2ceb14.init(_0x39bef7).finalize(_0x167b00);
                  };
                },
                '_createHmacHelper': function (_0x1ce8ce) {
                  return function (_0x26126f, _0x1f6421) {
                    return new _0x6bc693.HMAC.init(_0x1ce8ce, _0x1f6421).finalize(_0x26126f);
                  };
                }
              }), _0x41c58b.algo = {});
          }
          _0x3890f1.exports = _0x41c58b, !0x0;
        }, function (_0x4a1cda, _0x313f99, _0x406ff5) {
          _0x313f99 = _0x406ff5(0x5), _0x406ff5 = _0x313f99.lib;
          var _0x377318 = _0x406ff5.WordArray,
            _0x5b4e39 = _0x406ff5.Hasher,
            _0x49084e = [];
          _0x406ff5 = _0x313f99.algo.SHA1 = _0x5b4e39.extend({
            '_doReset': function () {
              this._hash = new _0x377318.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
            },
            '_doProcessBlock': function (_0x4e7997, _0x207bfc) {
              for (var _0x24f275 = this._hash.words, _0x18bcba = _0x24f275[0x0], _0x55f25e = _0x24f275[0x1], _0x44ee0c = _0x24f275[0x2], _0x56a526 = _0x24f275[0x3], _0x562fab = _0x24f275[0x4], _0x237321 = 0x0; 0x50 > _0x237321; _0x237321++) {
                if (0x10 > _0x237321) _0x49084e[_0x237321] = 0x0 | _0x4e7997[_0x207bfc + _0x237321];else {
                  var _0xd32492 = _0x49084e[_0x237321 - 0x3] ^ _0x49084e[_0x237321 - 0x8] ^ _0x49084e[_0x237321 - 0xe] ^ _0x49084e[_0x237321 - 0x10];
                  _0x49084e[_0x237321] = _0xd32492 << 0x1 | _0xd32492 >>> 0x1f;
                }
                _0xd32492 = (_0x18bcba << 0x5 | _0x18bcba >>> 0x1b) + _0x562fab + _0x49084e[_0x237321], _0xd32492 += 0x14 > _0x237321 ? (_0x55f25e & _0x44ee0c | ~_0x55f25e & _0x56a526) + 0x5a827999 : 0x28 > _0x237321 ? (_0x55f25e ^ _0x44ee0c ^ _0x56a526) + 0x6ed9eba1 : 0x3c > _0x237321 ? (_0x55f25e & _0x44ee0c | _0x55f25e & _0x56a526 | _0x44ee0c & _0x56a526) - 0x70e44324 : (_0x55f25e ^ _0x44ee0c ^ _0x56a526) - 0x359d3e2a, _0x562fab = _0x56a526, _0x56a526 = _0x44ee0c, _0x44ee0c = _0x55f25e << 0x1e | _0x55f25e >>> 0x2, _0x55f25e = _0x18bcba, _0x18bcba = _0xd32492;
              }
              _0x24f275[0x0] = _0x24f275[0x0] + _0x18bcba | 0x0, _0x24f275[0x1] = _0x24f275[0x1] + _0x55f25e | 0x0, _0x24f275[0x2] = _0x24f275[0x2] + _0x44ee0c | 0x0, _0x24f275[0x3] = _0x24f275[0x3] + _0x56a526 | 0x0, _0x24f275[0x4] = _0x24f275[0x4] + _0x562fab | 0x0;
            },
            '_doFinalize': function () {
              var _0x2a266b = this._data,
                _0x1757e7 = _0x2a266b.words,
                _0x353542 = 0x8 * this._nDataBytes,
                _0x4a3eab = 0x8 * _0x2a266b.sigBytes;
              return _0x1757e7[_0x4a3eab >>> 0x5] |= 0x80 << 0x18 - _0x4a3eab % 0x20, _0x1757e7[(_0x4a3eab + 0x40 >>> 0x9 << 0x4) + 0xe] = Math.floor(_0x353542 / 0x100000000), _0x1757e7[(_0x4a3eab + 0x40 >>> 0x9 << 0x4) + 0xf] = _0x353542, _0x2a266b.sigBytes = 0x4 * _0x1757e7.length, this._process(), this._hash;
            },
            'clone': function () {
              var _0x4e5700 = _0x5b4e39.clone.call(this);
              return _0x4e5700._hash = this._hash.clone(), _0x4e5700;
            }
          }), _0x313f99.SHA1 = _0x5b4e39._createHelper(_0x406ff5), _0x313f99.HmacSHA1 = _0x5b4e39._createHmacHelper(_0x406ff5), _0x4a1cda.exports = _0x313f99.SHA1, !0x0;
        }, function (_0x5ccedf, _0x2000af, _0x1f3691) {
          _0x2000af = _0x1f3691(0x5);
          var _0xc34793 = _0x2000af.enc.Utf8;
          _0x2000af.algo.HMAC = _0x2000af.lib.Base.extend({
            'init': function (_0x173f06, _0x6ba6bd) {
              _0x173f06 = this._hasher = new _0x173f06.init(), 'string' == typeof _0x6ba6bd && (_0x6ba6bd = _0xc34793.parse(_0x6ba6bd));
              var _0x294bda = _0x173f06.blockSize,
                _0xd5505c = 0x4 * _0x294bda;
              _0x6ba6bd.sigBytes > _0xd5505c && (_0x6ba6bd = _0x173f06.finalize(_0x6ba6bd)), _0x6ba6bd.clamp();
              for (var _0x32558b = this._oKey = _0x6ba6bd.clone(), _0x36d58e = this._iKey = _0x6ba6bd.clone(), _0x549ae7 = _0x32558b.words, _0x2f65dc = _0x36d58e.words, _0xa8e897 = 0x0; _0xa8e897 < _0x294bda; _0xa8e897++) _0x549ae7[_0xa8e897] ^= 0x5c5c5c5c, _0x2f65dc[_0xa8e897] ^= 0x36363636;
              _0x32558b.sigBytes = _0x36d58e.sigBytes = _0xd5505c, this.reset();
            },
            'reset': function () {
              var _0x4b9c55 = this._hasher;
              _0x4b9c55.reset(), _0x4b9c55.update(this._iKey);
            },
            'update': function (_0xfeccc8) {
              return this._hasher.update(_0xfeccc8), this;
            },
            'finalize': function (_0x1770db) {
              var _0xde1e6f = this._hasher;
              return _0x1770db = _0xde1e6f.finalize(_0x1770db), _0xde1e6f.reset(), _0xde1e6f.finalize(this._oKey.clone().concat(_0x1770db));
            }
          }), !0x0, _0x5ccedf.exports = void 0x0, !0x0;
        }, function (_0x4b4aa0) {
          var _0x2a3ecc = {
            'Latin1': {
              'stringify': function (_0x2e6ad5) {
                var _0x5ab10a = _0x2e6ad5.words;
                _0x2e6ad5 = _0x2e6ad5.sigBytes;
                for (var _0x1cd6e9 = [], _0x20d82d = void 0x0, _0x825a3 = void 0x0, _0x20d82d = 0x0; _0x20d82d < _0x2e6ad5; _0x20d82d++) _0x825a3 = _0x5ab10a[_0x20d82d >>> 0x2] >>> 0x18 - 0x8 * (_0x20d82d % 0x4) & 0xff, _0x1cd6e9.push(String.fromCharCode(_0x825a3));
                return _0x1cd6e9.join('');
              }
            },
            '_Utf8': {
              'stringify': function (_0xf34390) {
                try {
                  return decodeURIComponent(escape(_0x2a3ecc.Latin1.stringify(_0xf34390)));
                } catch (_0x3088dc) {
                  throw Error("Malformed UTF-8 data");
                }
              }
            }
          };
          _0x4b4aa0.exports = _0x2a3ecc;
        }, function (_0x40fce2) {
          var _0x282fe2 = {
            '_keyStr': 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
            'encode': function (_0x1f1770) {
              var _0x14eef1 = '',
                _0x521a09 = void 0x0,
                _0x2b3ae9 = void 0x0,
                _0x2df7dc = void 0x0,
                _0x369d66 = void 0x0,
                _0x269ccd = void 0x0,
                _0x4d8a1e = void 0x0,
                _0x505a6f = 0x0;
              for (_0x1f1770 = _0x282fe2._utf8Encode(_0x1f1770); _0x505a6f < _0x1f1770.length;) _0x521a09 = _0x1f1770.charCodeAt(_0x505a6f++), _0x2b3ae9 = _0x1f1770.charCodeAt(_0x505a6f++), _0x2df7dc = _0x1f1770.charCodeAt(_0x505a6f++), _0x369d66 = _0x521a09 >> 0x2, _0x521a09 = (0x3 & _0x521a09) << 0x4 | _0x2b3ae9 >> 0x4, _0x269ccd = (0xf & _0x2b3ae9) << 0x2 | _0x2df7dc >> 0x6, _0x4d8a1e = 0x3f & _0x2df7dc, isNaN(_0x2b3ae9) ? _0x269ccd = _0x4d8a1e = 0x40 : isNaN(_0x2df7dc) && (_0x4d8a1e = 0x40), _0x14eef1 = _0x14eef1 + this._keyStr.charAt(_0x369d66) + this._keyStr.charAt(_0x521a09) + this._keyStr.charAt(_0x269ccd) + this._keyStr.charAt(_0x4d8a1e);
              return _0x14eef1;
            },
            'decode': function (_0x23c2c5) {
              var _0x2f367a = '',
                _0x29bc75 = void 0x0,
                _0xf02b6 = void 0x0,
                _0x462823 = void 0x0,
                _0x33c616 = void 0x0,
                _0x4ccf8c = void 0x0,
                _0x4c7d9a = 0x0;
              for (_0x23c2c5 = _0x23c2c5.replace(/[^A-Za-z0-9\+\/\=]/g, ''); _0x4c7d9a < _0x23c2c5.length;) _0x29bc75 = this._keyStr.indexOf(_0x23c2c5.charAt(_0x4c7d9a++)), _0xf02b6 = this._keyStr.indexOf(_0x23c2c5.charAt(_0x4c7d9a++)), _0x33c616 = this._keyStr.indexOf(_0x23c2c5.charAt(_0x4c7d9a++)), _0x4ccf8c = this._keyStr.indexOf(_0x23c2c5.charAt(_0x4c7d9a++)), _0x29bc75 = _0x29bc75 << 0x2 | _0xf02b6 >> 0x4, _0xf02b6 = (0xf & _0xf02b6) << 0x4 | _0x33c616 >> 0x2, _0x462823 = (0x3 & _0x33c616) << 0x6 | _0x4ccf8c, _0x2f367a += String.fromCharCode(_0x29bc75), 0x40 !== _0x33c616 && (_0x2f367a += String.fromCharCode(_0xf02b6)), 0x40 !== _0x4ccf8c && (_0x2f367a += String.fromCharCode(_0x462823));
              return _0x282fe2._utf8Decode(_0x2f367a);
            },
            '_utf8Encode': function (_0x16516e) {
              _0x16516e = _0x16516e.replace(/\r\n/g, "\n");
              for (var _0x3cb62a = '', _0x368e3e = 0x0; _0x368e3e < _0x16516e.length; _0x368e3e++) {
                var _0x54365a = _0x16516e.charCodeAt(_0x368e3e);
                0x80 > _0x54365a ? _0x3cb62a += String.fromCharCode(_0x54365a) : 0x7f < _0x54365a && 0x800 > _0x54365a ? (_0x3cb62a += String.fromCharCode(_0x54365a >> 0x6 | 0xc0), _0x3cb62a += String.fromCharCode(0x3f & _0x54365a | 0x80)) : (_0x3cb62a += String.fromCharCode(_0x54365a >> 0xc | 0xe0), _0x3cb62a += String.fromCharCode(_0x54365a >> 0x6 & 0x3f | 0x80), _0x3cb62a += String.fromCharCode(0x3f & _0x54365a | 0x80));
              }
              return _0x3cb62a;
            },
            '_utf8Decode': function (_0x433c45) {
              for (var _0x5dcd8b = '', _0x388159 = 0x0, _0x2a2806 = void 0x0, _0x3e7f13 = void 0x0, _0x1e2b0a = void 0x0, _0x3e7f13 = 0x0; _0x388159 < _0x433c45.length;) _0x2a2806 = _0x433c45.charCodeAt(_0x388159), 0x80 > _0x2a2806 ? (_0x5dcd8b += String.fromCharCode(_0x2a2806), _0x388159++) : 0xbf < _0x2a2806 && 0xe0 > _0x2a2806 ? (_0x3e7f13 = _0x433c45.charCodeAt(_0x388159 + 0x1), _0x5dcd8b += String.fromCharCode((0x1f & _0x2a2806) << 0x6 | 0x3f & _0x3e7f13), _0x388159 += 0x2) : (_0x3e7f13 = _0x433c45.charCodeAt(_0x388159 + 0x1), _0x1e2b0a = _0x433c45.charCodeAt(_0x388159 + 0x2), _0x5dcd8b += String.fromCharCode((0xf & _0x2a2806) << 0xc | (0x3f & _0x3e7f13) << 0x6 | 0x3f & _0x1e2b0a), _0x388159 += 0x3);
              return _0x5dcd8b;
            }
          };
          _0x40fce2.exports = _0x282fe2;
        }, function (_0xef698a, _0x54206c, _0x341ad2) {
          var _0x1c3656,
            _0xe83c91 = function (_0x25799b, _0x58997d) {
              if (!_0x2c9626[_0x25799b]) {
                _0x2c9626[_0x25799b] = {};
                for (var _0x226a77 = 0x0; _0x226a77 < _0x25799b.length; _0x226a77++) _0x2c9626[_0x25799b][_0x25799b.charAt(_0x226a77)] = _0x226a77;
              }
              return _0x2c9626[_0x25799b][_0x58997d];
            },
            _0x2b500f = String.fromCharCode,
            _0x2c9626 = {},
            _0x1b73b4 = {
              'compressToBase64': function (_0x5f3db2) {
                if (null == _0x5f3db2) return '';
                _0x5f3db2 = _0x1b73b4._compress(_0x5f3db2, 0x6, function (_0x49d260) {
                  return 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.charAt(_0x49d260);
                });
                switch (_0x5f3db2.length % 0x4) {
                  default:
                  case 0x0:
                    return _0x5f3db2;
                  case 0x1:
                    return _0x5f3db2 + '===';
                  case 0x2:
                    return _0x5f3db2 + '==';
                  case 0x3:
                    return _0x5f3db2 + '=';
                }
              },
              'decompressFromBase64': function (_0x4c31bb) {
                return null == _0x4c31bb ? '' : '' == _0x4c31bb ? null : _0x1b73b4._decompress(_0x4c31bb.length, 0x20, function (_0x2326c0) {
                  return _0xe83c91('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', _0x4c31bb.charAt(_0x2326c0));
                });
              },
              'compressToUTF16': function (_0x1ec78b) {
                return null == _0x1ec78b ? '' : _0x1b73b4._compress(_0x1ec78b, 0xf, function (_0x236e6b) {
                  return _0x2b500f(_0x236e6b + 0x20);
                }) + " ";
              },
              'decompressFromUTF16': function (_0x2d2a01) {
                return null == _0x2d2a01 ? '' : '' == _0x2d2a01 ? null : _0x1b73b4._decompress(_0x2d2a01.length, 0x4000, function (_0x584dbc) {
                  return _0x2d2a01.charCodeAt(_0x584dbc) - 0x20;
                });
              },
              'compressToUint8Array': function (_0x2fb117) {
                _0x2fb117 = _0x1b73b4.compress(_0x2fb117);
                for (var _0x321b4e = new Uint8Array(0x2 * _0x2fb117.length), _0x323267 = 0x0, _0x35392e = _0x2fb117.length; _0x323267 < _0x35392e; _0x323267++) {
                  var _0x1bc344 = _0x2fb117.charCodeAt(_0x323267);
                  _0x321b4e[0x2 * _0x323267] = _0x1bc344 >>> 0x8, _0x321b4e[0x2 * _0x323267 + 0x1] = _0x1bc344 % 0x100;
                }
                return _0x321b4e;
              },
              'decompressFromUint8Array': function (_0x1256fe) {
                if (null === _0x1256fe || void 0x0 === _0x1256fe) return _0x1b73b4.decompress(_0x1256fe);
                for (var _0x102677 = Array(_0x1256fe.length / 0x2), _0x52b5cf = 0x0, _0x5c1837 = _0x102677.length; _0x52b5cf < _0x5c1837; _0x52b5cf++) _0x102677[_0x52b5cf] = 0x100 * _0x1256fe[0x2 * _0x52b5cf] + _0x1256fe[0x2 * _0x52b5cf + 0x1];
                var _0x1ff125 = [];
                return _0x102677.forEach(function (_0x49537b) {
                  _0x1ff125.push(_0x2b500f(_0x49537b));
                }), _0x1b73b4.decompress(_0x1ff125.join(''));
              },
              'compressToEncodedURIComponent': function (_0x4375f8) {
                return null == _0x4375f8 ? '' : _0x1b73b4._compress(_0x4375f8, 0x6, function (_0x1a8a17) {
                  return 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$'.charAt(_0x1a8a17);
                });
              },
              'decompressFromEncodedURIComponent': function (_0x1b378b) {
                return null == _0x1b378b ? '' : '' == _0x1b378b ? null : (_0x1b378b = _0x1b378b.replace(/ /g, '+'), _0x1b73b4._decompress(_0x1b378b.length, 0x20, function (_0x419ca4) {
                  return _0xe83c91('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$', _0x1b378b.charAt(_0x419ca4));
                }));
              },
              'compress': function (_0x39a5dc) {
                return _0x1b73b4._compress(_0x39a5dc, 0x10, function (_0x3375f6) {
                  return _0x2b500f(_0x3375f6);
                });
              },
              '_compress': function (_0x11b8dc, _0x18ec65, _0x5780ba) {
                if (null == _0x11b8dc) return '';
                var _0x5a299a,
                  _0x377bd4,
                  _0xb0d49a,
                  _0x1199c4 = {},
                  _0x29084d = {},
                  _0xb1f985 = '',
                  _0x1cb99b = '',
                  _0x443786 = '',
                  _0x3d475f = 0x2,
                  _0x555e19 = 0x3,
                  _0x2fae99 = 0x2,
                  _0x4efc0a = [],
                  _0x39d7cc = 0x0,
                  _0x1ccfb3 = 0x0;
                for (_0xb0d49a = 0x0; _0xb0d49a < _0x11b8dc.length; _0xb0d49a += 0x1) if (_0xb1f985 = _0x11b8dc.charAt(_0xb0d49a), Object.prototype.hasOwnProperty.call(_0x1199c4, _0xb1f985) || (_0x1199c4[_0xb1f985] = _0x555e19++, _0x29084d[_0xb1f985] = !0x0), _0x1cb99b = _0x443786 + _0xb1f985, Object.prototype.hasOwnProperty.call(_0x1199c4, _0x1cb99b)) _0x443786 = _0x1cb99b;else {
                  if (Object.prototype.hasOwnProperty.call(_0x29084d, _0x443786)) {
                    if (0x100 > _0x443786.charCodeAt(0x0)) {
                      for (_0x5a299a = 0x0; _0x5a299a < _0x2fae99; _0x5a299a++) _0x39d7cc <<= 0x1, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++;
                      _0x377bd4 = _0x443786.charCodeAt(0x0);
                      for (_0x5a299a = 0x0; 0x8 > _0x5a299a; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | 0x1 & _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 >>= 0x1;
                    } else {
                      _0x377bd4 = 0x1;
                      for (_0x5a299a = 0x0; _0x5a299a < _0x2fae99; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 = 0x0;
                      _0x377bd4 = _0x443786.charCodeAt(0x0);
                      for (_0x5a299a = 0x0; 0x10 > _0x5a299a; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | 0x1 & _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 >>= 0x1;
                    }
                    _0x3d475f--, 0x0 == _0x3d475f && (_0x3d475f = Math.pow(0x2, _0x2fae99), _0x2fae99++), delete _0x29084d[_0x443786];
                  } else {
                    _0x377bd4 = _0x1199c4[_0x443786];
                    for (_0x5a299a = 0x0; _0x5a299a < _0x2fae99; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | 0x1 & _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 >>= 0x1;
                  }
                  _0x3d475f--, 0x0 == _0x3d475f && (_0x3d475f = Math.pow(0x2, _0x2fae99), _0x2fae99++), _0x1199c4[_0x1cb99b] = _0x555e19++, _0x443786 = String(_0xb1f985);
                }
                if ('' !== _0x443786) {
                  if (Object.prototype.hasOwnProperty.call(_0x29084d, _0x443786)) {
                    if (0x100 > _0x443786.charCodeAt(0x0)) {
                      for (_0x5a299a = 0x0; _0x5a299a < _0x2fae99; _0x5a299a++) _0x39d7cc <<= 0x1, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++;
                      _0x377bd4 = _0x443786.charCodeAt(0x0);
                      for (_0x5a299a = 0x0; 0x8 > _0x5a299a; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | 0x1 & _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 >>= 0x1;
                    } else {
                      _0x377bd4 = 0x1;
                      for (_0x5a299a = 0x0; _0x5a299a < _0x2fae99; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 = 0x0;
                      _0x377bd4 = _0x443786.charCodeAt(0x0);
                      for (_0x5a299a = 0x0; 0x10 > _0x5a299a; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | 0x1 & _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 >>= 0x1;
                    }
                    _0x3d475f--, 0x0 == _0x3d475f && (_0x3d475f = Math.pow(0x2, _0x2fae99), _0x2fae99++), delete _0x29084d[_0x443786];
                  } else {
                    _0x377bd4 = _0x1199c4[_0x443786];
                    for (_0x5a299a = 0x0; _0x5a299a < _0x2fae99; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | 0x1 & _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 >>= 0x1;
                  }
                  _0x3d475f--, 0x0 == _0x3d475f && (Math.pow(0x2, _0x2fae99), _0x2fae99++);
                }
                _0x377bd4 = 0x2;
                for (_0x5a299a = 0x0; _0x5a299a < _0x2fae99; _0x5a299a++) _0x39d7cc = _0x39d7cc << 0x1 | 0x1 & _0x377bd4, _0x1ccfb3 == _0x18ec65 - 0x1 ? (_0x1ccfb3 = 0x0, _0x4efc0a.push(_0x5780ba(_0x39d7cc)), _0x39d7cc = 0x0) : _0x1ccfb3++, _0x377bd4 >>= 0x1;
                for (;;) {
                  if (_0x39d7cc <<= 0x1, _0x1ccfb3 == _0x18ec65 - 0x1) {
                    _0x4efc0a.push(_0x5780ba(_0x39d7cc));
                    break;
                  }
                  _0x1ccfb3++;
                }
                return _0x4efc0a.join('');
              },
              'decompress': function (_0x512a53) {
                return null == _0x512a53 ? '' : '' == _0x512a53 ? null : _0x1b73b4._decompress(_0x512a53.length, 0x8000, function (_0x52ecb9) {
                  return _0x512a53.charCodeAt(_0x52ecb9);
                });
              },
              '_decompress': function (_0x4e158f, _0x257651, _0x3f1e1e) {
                var _0x3a4c54,
                  _0x1446e9,
                  _0x4c0fd2,
                  _0x9a05b8,
                  _0x2bb9f1,
                  _0x18fd68,
                  _0x16a3cc = [],
                  _0x5e7774 = 0x4,
                  _0x29172b = 0x4,
                  _0xaf86f9 = 0x3,
                  _0x5fb3be = [],
                  _0x487f50 = _0x3f1e1e(0x0),
                  _0x4d2de2 = _0x257651,
                  _0x57c406 = 0x1;
                for (_0x3a4c54 = 0x0; 0x3 > _0x3a4c54; _0x3a4c54 += 0x1) _0x16a3cc[_0x3a4c54] = _0x3a4c54;
                _0x1446e9 = 0x0, _0x9a05b8 = Math.pow(0x2, 0x2);
                for (_0x2bb9f1 = 0x1; _0x2bb9f1 != _0x9a05b8;) _0x4c0fd2 = _0x487f50 & _0x4d2de2, _0x4d2de2 >>= 0x1, 0x0 == _0x4d2de2 && (_0x4d2de2 = _0x257651, _0x487f50 = _0x3f1e1e(_0x57c406++)), _0x1446e9 |= (0x0 < _0x4c0fd2 ? 0x1 : 0x0) * _0x2bb9f1, _0x2bb9f1 <<= 0x1;
                switch (_0x1446e9) {
                  case 0x0:
                    _0x1446e9 = 0x0, _0x9a05b8 = Math.pow(0x2, 0x8);
                    for (_0x2bb9f1 = 0x1; _0x2bb9f1 != _0x9a05b8;) _0x4c0fd2 = _0x487f50 & _0x4d2de2, _0x4d2de2 >>= 0x1, 0x0 == _0x4d2de2 && (_0x4d2de2 = _0x257651, _0x487f50 = _0x3f1e1e(_0x57c406++)), _0x1446e9 |= (0x0 < _0x4c0fd2 ? 0x1 : 0x0) * _0x2bb9f1, _0x2bb9f1 <<= 0x1;
                    _0x18fd68 = _0x2b500f(_0x1446e9);
                    break;
                  case 0x1:
                    _0x1446e9 = 0x0, _0x9a05b8 = Math.pow(0x2, 0x10);
                    for (_0x2bb9f1 = 0x1; _0x2bb9f1 != _0x9a05b8;) _0x4c0fd2 = _0x487f50 & _0x4d2de2, _0x4d2de2 >>= 0x1, 0x0 == _0x4d2de2 && (_0x4d2de2 = _0x257651, _0x487f50 = _0x3f1e1e(_0x57c406++)), _0x1446e9 |= (0x0 < _0x4c0fd2 ? 0x1 : 0x0) * _0x2bb9f1, _0x2bb9f1 <<= 0x1;
                    _0x18fd68 = _0x2b500f(_0x1446e9);
                    break;
                  case 0x2:
                    return '';
                }
                _0x3a4c54 = _0x16a3cc[0x3] = _0x18fd68;
                for (_0x5fb3be.push(_0x18fd68);;) {
                  if (_0x57c406 > _0x4e158f) return '';
                  _0x1446e9 = 0x0, _0x9a05b8 = Math.pow(0x2, _0xaf86f9);
                  for (_0x2bb9f1 = 0x1; _0x2bb9f1 != _0x9a05b8;) _0x4c0fd2 = _0x487f50 & _0x4d2de2, _0x4d2de2 >>= 0x1, 0x0 == _0x4d2de2 && (_0x4d2de2 = _0x257651, _0x487f50 = _0x3f1e1e(_0x57c406++)), _0x1446e9 |= (0x0 < _0x4c0fd2 ? 0x1 : 0x0) * _0x2bb9f1, _0x2bb9f1 <<= 0x1;
                  switch (_0x18fd68 = _0x1446e9) {
                    case 0x0:
                      _0x1446e9 = 0x0, _0x9a05b8 = Math.pow(0x2, 0x8);
                      for (_0x2bb9f1 = 0x1; _0x2bb9f1 != _0x9a05b8;) _0x4c0fd2 = _0x487f50 & _0x4d2de2, _0x4d2de2 >>= 0x1, 0x0 == _0x4d2de2 && (_0x4d2de2 = _0x257651, _0x487f50 = _0x3f1e1e(_0x57c406++)), _0x1446e9 |= (0x0 < _0x4c0fd2 ? 0x1 : 0x0) * _0x2bb9f1, _0x2bb9f1 <<= 0x1;
                      _0x16a3cc[_0x29172b++] = _0x2b500f(_0x1446e9), _0x18fd68 = _0x29172b - 0x1, _0x5e7774--;
                      break;
                    case 0x1:
                      _0x1446e9 = 0x0, _0x9a05b8 = Math.pow(0x2, 0x10);
                      for (_0x2bb9f1 = 0x1; _0x2bb9f1 != _0x9a05b8;) _0x4c0fd2 = _0x487f50 & _0x4d2de2, _0x4d2de2 >>= 0x1, 0x0 == _0x4d2de2 && (_0x4d2de2 = _0x257651, _0x487f50 = _0x3f1e1e(_0x57c406++)), _0x1446e9 |= (0x0 < _0x4c0fd2 ? 0x1 : 0x0) * _0x2bb9f1, _0x2bb9f1 <<= 0x1;
                      _0x16a3cc[_0x29172b++] = _0x2b500f(_0x1446e9), _0x18fd68 = _0x29172b - 0x1, _0x5e7774--;
                      break;
                    case 0x2:
                      return _0x5fb3be.join('');
                  }
                  if (0x0 == _0x5e7774 && (_0x5e7774 = Math.pow(0x2, _0xaf86f9), _0xaf86f9++), _0x16a3cc[_0x18fd68]) _0x1446e9 = _0x16a3cc[_0x18fd68];else {
                    if (_0x18fd68 !== _0x29172b) return null;
                    _0x1446e9 = _0x3a4c54 + _0x3a4c54.charAt(0x0);
                  }
                  _0x5fb3be.push(_0x1446e9), _0x16a3cc[_0x29172b++] = _0x3a4c54 + _0x1446e9.charAt(0x0), _0x5e7774--, _0x3a4c54 = _0x1446e9, 0x0 == _0x5e7774 && (_0x5e7774 = Math.pow(0x2, _0xaf86f9), _0xaf86f9++);
                }
              }
            };
          _0x1c3656 = _0x1b73b4, _0x54206c = function () {
            return _0x1c3656;
          }.call(_0x54206c, _0x341ad2, _0x54206c, _0xef698a), !(void 0x0 !== _0x54206c && (_0xef698a.exports = _0x54206c));
        }, function (_0x4df70c, _0x4bc622, _0x26f8d6) {
          _0x4bc622 = _0x26f8d6(0x5), _0x26f8d6(0xc), _0x26f8d6(0xd), _0x26f8d6(0xe), _0x26f8d6(0xf), _0x26f8d6 = _0x4bc622.lib.BlockCipher;
          for (var _0x4f7c59 = _0x4bc622.algo, _0x74964 = [], _0x7c191b = [], _0x1de4c6 = [], _0x5419be = [], _0xe5b022 = [], _0x24c2ab = [], _0x3bd9d7 = [], _0x1cfc3d = [], _0x54f00a = [], _0x519d19 = [], _0x494a68 = [], _0x52b580 = 0x0; 0x100 > _0x52b580; _0x52b580++) 0x80 > _0x52b580 ? _0x494a68[_0x52b580] = _0x52b580 << 0x1 : _0x494a68[_0x52b580] = _0x52b580 << 0x1 ^ 0x11b;
          for (var _0x44bf30 = 0x0, _0x581fc1 = 0x0, _0x52b580 = 0x0; 0x100 > _0x52b580; _0x52b580++) {
            var _0x336aaa = _0x581fc1 ^ _0x581fc1 << 0x1 ^ _0x581fc1 << 0x2 ^ _0x581fc1 << 0x3 ^ _0x581fc1 << 0x4,
              _0x336aaa = _0x336aaa >>> 0x8 ^ 0xff & _0x336aaa ^ 0x63;
            _0x74964[_0x44bf30] = _0x336aaa, _0x7c191b[_0x336aaa] = _0x44bf30;
            var _0x1a2565 = _0x494a68[_0x44bf30],
              _0x585ab6 = _0x494a68[_0x1a2565],
              _0xb140ff = _0x494a68[_0x585ab6],
              _0x1ea217 = 0x101 * _0x494a68[_0x336aaa] ^ 0x1010100 * _0x336aaa;
            _0x1de4c6[_0x44bf30] = _0x1ea217 << 0x18 | _0x1ea217 >>> 0x8, _0x5419be[_0x44bf30] = _0x1ea217 << 0x10 | _0x1ea217 >>> 0x10, _0xe5b022[_0x44bf30] = _0x1ea217 << 0x8 | _0x1ea217 >>> 0x18, _0x24c2ab[_0x44bf30] = _0x1ea217, _0x1ea217 = 0x1010101 * _0xb140ff ^ 0x10001 * _0x585ab6 ^ 0x101 * _0x1a2565 ^ 0x1010100 * _0x44bf30, _0x3bd9d7[_0x336aaa] = _0x1ea217 << 0x18 | _0x1ea217 >>> 0x8, _0x1cfc3d[_0x336aaa] = _0x1ea217 << 0x10 | _0x1ea217 >>> 0x10, _0x54f00a[_0x336aaa] = _0x1ea217 << 0x8 | _0x1ea217 >>> 0x18, _0x519d19[_0x336aaa] = _0x1ea217, _0x44bf30 ? (_0x44bf30 = _0x1a2565 ^ _0x494a68[_0x494a68[_0x494a68[_0xb140ff ^ _0x1a2565]]], _0x581fc1 ^= _0x494a68[_0x494a68[_0x581fc1]]) : _0x44bf30 = _0x581fc1 = 0x1;
          }
          !0x0;
          var _0x1d1385 = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36],
            _0x4f7c59 = _0x4f7c59.AES = _0x26f8d6.extend({
              '_doReset': function () {
                if (!this._nRounds || this._keyPriorReset !== this._key) {
                  for (var _0x1a2fd5 = this._keyPriorReset = this._key, _0x30edd9 = _0x1a2fd5.words, _0x2fa54f = _0x1a2fd5.sigBytes / 0x4, _0x1a2fd5 = 0x4 * ((this._nRounds = _0x2fa54f + 0x6) + 0x1), _0x9054c2 = this._keySchedule = [], _0x51e129 = 0x0; _0x51e129 < _0x1a2fd5; _0x51e129++) if (_0x51e129 < _0x2fa54f) _0x9054c2[_0x51e129] = _0x30edd9[_0x51e129];else {
                    var _0x2811bd = _0x9054c2[_0x51e129 - 0x1];
                    _0x51e129 % _0x2fa54f ? 0x6 < _0x2fa54f && 0x4 == _0x51e129 % _0x2fa54f && (_0x2811bd = _0x74964[_0x2811bd >>> 0x18] << 0x18 | _0x74964[_0x2811bd >>> 0x10 & 0xff] << 0x10 | _0x74964[_0x2811bd >>> 0x8 & 0xff] << 0x8 | _0x74964[0xff & _0x2811bd]) : (_0x2811bd = _0x2811bd << 0x8 | _0x2811bd >>> 0x18, _0x2811bd = _0x74964[_0x2811bd >>> 0x18] << 0x18 | _0x74964[_0x2811bd >>> 0x10 & 0xff] << 0x10 | _0x74964[_0x2811bd >>> 0x8 & 0xff] << 0x8 | _0x74964[0xff & _0x2811bd], _0x2811bd ^= _0x1d1385[_0x51e129 / _0x2fa54f | 0x0] << 0x18), _0x9054c2[_0x51e129] = _0x9054c2[_0x51e129 - _0x2fa54f] ^ _0x2811bd;
                  }
                  _0x30edd9 = this._invKeySchedule = [];
                  for (_0x2fa54f = 0x0; _0x2fa54f < _0x1a2fd5; _0x2fa54f++) _0x51e129 = _0x1a2fd5 - _0x2fa54f, _0x2811bd = _0x2fa54f % 0x4 ? _0x9054c2[_0x51e129] : _0x9054c2[_0x51e129 - 0x4], 0x4 > _0x2fa54f || 0x4 >= _0x51e129 ? _0x30edd9[_0x2fa54f] = _0x2811bd : _0x30edd9[_0x2fa54f] = _0x3bd9d7[_0x74964[_0x2811bd >>> 0x18]] ^ _0x1cfc3d[_0x74964[_0x2811bd >>> 0x10 & 0xff]] ^ _0x54f00a[_0x74964[_0x2811bd >>> 0x8 & 0xff]] ^ _0x519d19[_0x74964[0xff & _0x2811bd]];
                }
              },
              'encryptBlock': function (_0x5b77d7, _0x200d2d) {
                this._doCryptBlock(_0x5b77d7, _0x200d2d, this._keySchedule, _0x1de4c6, _0x5419be, _0xe5b022, _0x24c2ab, _0x74964);
              },
              'decryptBlock': function (_0x58ea5b, _0x8d2d72) {
                var _0x246a52 = _0x58ea5b[_0x8d2d72 + 0x1];
                _0x58ea5b[_0x8d2d72 + 0x1] = _0x58ea5b[_0x8d2d72 + 0x3], _0x58ea5b[_0x8d2d72 + 0x3] = _0x246a52, this._doCryptBlock(_0x58ea5b, _0x8d2d72, this._invKeySchedule, _0x3bd9d7, _0x1cfc3d, _0x54f00a, _0x519d19, _0x7c191b), _0x246a52 = _0x58ea5b[_0x8d2d72 + 0x1], _0x58ea5b[_0x8d2d72 + 0x1] = _0x58ea5b[_0x8d2d72 + 0x3], _0x58ea5b[_0x8d2d72 + 0x3] = _0x246a52;
              },
              '_doCryptBlock': function (_0x3ec85b, _0x23e4fc, _0x5b9a85, _0x34eaa5, _0x140aaf, _0x4e3de3, _0x51502e, _0x44c19d) {
                for (var _0x3fad33 = this._nRounds, _0x25b69e = _0x3ec85b[_0x23e4fc] ^ _0x5b9a85[0x0], _0x300b04 = _0x3ec85b[_0x23e4fc + 0x1] ^ _0x5b9a85[0x1], _0x4a9c76 = _0x3ec85b[_0x23e4fc + 0x2] ^ _0x5b9a85[0x2], _0x14962f = _0x3ec85b[_0x23e4fc + 0x3] ^ _0x5b9a85[0x3], _0x3d81b8 = 0x4, _0x245af = 0x1; _0x245af < _0x3fad33; _0x245af++) var _0x345c2b = _0x34eaa5[_0x25b69e >>> 0x18] ^ _0x140aaf[_0x300b04 >>> 0x10 & 0xff] ^ _0x4e3de3[_0x4a9c76 >>> 0x8 & 0xff] ^ _0x51502e[0xff & _0x14962f] ^ _0x5b9a85[_0x3d81b8++], _0x417ceb = _0x34eaa5[_0x300b04 >>> 0x18] ^ _0x140aaf[_0x4a9c76 >>> 0x10 & 0xff] ^ _0x4e3de3[_0x14962f >>> 0x8 & 0xff] ^ _0x51502e[0xff & _0x25b69e] ^ _0x5b9a85[_0x3d81b8++], _0x451a76 = _0x34eaa5[_0x4a9c76 >>> 0x18] ^ _0x140aaf[_0x14962f >>> 0x10 & 0xff] ^ _0x4e3de3[_0x25b69e >>> 0x8 & 0xff] ^ _0x51502e[0xff & _0x300b04] ^ _0x5b9a85[_0x3d81b8++], _0x14962f = _0x34eaa5[_0x14962f >>> 0x18] ^ _0x140aaf[_0x25b69e >>> 0x10 & 0xff] ^ _0x4e3de3[_0x300b04 >>> 0x8 & 0xff] ^ _0x51502e[0xff & _0x4a9c76] ^ _0x5b9a85[_0x3d81b8++], _0x25b69e = _0x345c2b, _0x300b04 = _0x417ceb, _0x4a9c76 = _0x451a76;
                _0x345c2b = (_0x44c19d[_0x25b69e >>> 0x18] << 0x18 | _0x44c19d[_0x300b04 >>> 0x10 & 0xff] << 0x10 | _0x44c19d[_0x4a9c76 >>> 0x8 & 0xff] << 0x8 | _0x44c19d[0xff & _0x14962f]) ^ _0x5b9a85[_0x3d81b8++], _0x417ceb = (_0x44c19d[_0x300b04 >>> 0x18] << 0x18 | _0x44c19d[_0x4a9c76 >>> 0x10 & 0xff] << 0x10 | _0x44c19d[_0x14962f >>> 0x8 & 0xff] << 0x8 | _0x44c19d[0xff & _0x25b69e]) ^ _0x5b9a85[_0x3d81b8++], _0x451a76 = (_0x44c19d[_0x4a9c76 >>> 0x18] << 0x18 | _0x44c19d[_0x14962f >>> 0x10 & 0xff] << 0x10 | _0x44c19d[_0x25b69e >>> 0x8 & 0xff] << 0x8 | _0x44c19d[0xff & _0x300b04]) ^ _0x5b9a85[_0x3d81b8++], _0x14962f = (_0x44c19d[_0x14962f >>> 0x18] << 0x18 | _0x44c19d[_0x25b69e >>> 0x10 & 0xff] << 0x10 | _0x44c19d[_0x300b04 >>> 0x8 & 0xff] << 0x8 | _0x44c19d[0xff & _0x4a9c76]) ^ _0x5b9a85[_0x3d81b8++], _0x3ec85b[_0x23e4fc] = _0x345c2b, _0x3ec85b[_0x23e4fc + 0x1] = _0x417ceb, _0x3ec85b[_0x23e4fc + 0x2] = _0x451a76, _0x3ec85b[_0x23e4fc + 0x3] = _0x14962f;
              },
              'keySize': 0x8
            });
          _0x4bc622.AES = _0x26f8d6._createHelper(_0x4f7c59), _0x4df70c.exports = _0x4bc622.AES, !0x0;
        }, function (_0x1075b6, _0x32fb29, _0x3c8aef) {
          _0x32fb29 = _0x3c8aef(0x5);
          var _0x16e9e3 = _0x32fb29.lib.WordArray;
          _0x32fb29.enc.Base64 = {
            'stringify': function (_0x27d0c8) {
              var _0x5bd7cd = _0x27d0c8.words,
                _0x74c374 = _0x27d0c8.sigBytes,
                _0x1f5913 = this._map;
              _0x27d0c8.clamp(), _0x27d0c8 = [];
              for (var _0x7144df = 0x0; _0x7144df < _0x74c374; _0x7144df += 0x3) for (var _0x5330f7 = (_0x5bd7cd[_0x7144df >>> 0x2] >>> 0x18 - 0x8 * (_0x7144df % 0x4) & 0xff) << 0x10 | (_0x5bd7cd[_0x7144df + 0x1 >>> 0x2] >>> 0x18 - 0x8 * ((_0x7144df + 0x1) % 0x4) & 0xff) << 0x8 | _0x5bd7cd[_0x7144df + 0x2 >>> 0x2] >>> 0x18 - 0x8 * ((_0x7144df + 0x2) % 0x4) & 0xff, _0x5a829c = 0x0; 0x4 > _0x5a829c && _0x7144df + 0.75 * _0x5a829c < _0x74c374; _0x5a829c++) _0x27d0c8.push(_0x1f5913.charAt(_0x5330f7 >>> 0x6 * (0x3 - _0x5a829c) & 0x3f));
              if (_0x5bd7cd = _0x1f5913.charAt(0x40)) {
                for (; _0x27d0c8.length % 0x4;) _0x27d0c8.push(_0x5bd7cd);
              }
              return _0x27d0c8.join('');
            },
            'parse': function (_0x2bd7dd) {
              var _0xc8b16 = _0x2bd7dd.length,
                _0x3ed495 = this._map,
                _0x25c60e = this._reverseMap;
              if (!_0x25c60e) {
                for (var _0x25c60e = this._reverseMap = [], _0x1ec1bf = 0x0; _0x1ec1bf < _0x3ed495.length; _0x1ec1bf++) _0x25c60e[_0x3ed495.charCodeAt(_0x1ec1bf)] = _0x1ec1bf;
              }
              if (_0x3ed495 = _0x3ed495.charAt(0x40)) _0x3ed495 = _0x2bd7dd.indexOf(_0x3ed495), -0x1 !== _0x3ed495 && (_0xc8b16 = _0x3ed495);
              for (var _0x3ed495 = [], _0x2f034a = _0x1ec1bf = 0x0; _0x2f034a < _0xc8b16; _0x2f034a++) if (_0x2f034a % 0x4) {
                var _0x17547e = _0x25c60e[_0x2bd7dd.charCodeAt(_0x2f034a - 0x1)] << 0x2 * (_0x2f034a % 0x4),
                  _0x5958d3 = _0x25c60e[_0x2bd7dd.charCodeAt(_0x2f034a)] >>> 0x6 - 0x2 * (_0x2f034a % 0x4);
                _0x3ed495[_0x1ec1bf >>> 0x2] |= (_0x17547e | _0x5958d3) << 0x18 - 0x8 * (_0x1ec1bf % 0x4), _0x1ec1bf++;
              }
              return _0x16e9e3.create(_0x3ed495, _0x1ec1bf);
            },
            '_map': 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
          }, _0x1075b6.exports = _0x32fb29.enc.Base64, !0x0;
        }, function (_0xa63c70, _0x25aac7, _0x11e3dc) {
          _0x25aac7 = _0x11e3dc(0x5);
          var _0x3f6b37 = Math,
            _0x4f741e = function (_0x2047a4, _0x2d5181, _0x8b3c9c, _0x500ad3, _0x414288, _0xdb301f, _0x274c3b) {
              return _0x2047a4 = _0x2047a4 + (_0x2d5181 & _0x8b3c9c | ~_0x2d5181 & _0x500ad3) + _0x414288 + _0x274c3b, (_0x2047a4 << _0xdb301f | _0x2047a4 >>> 0x20 - _0xdb301f) + _0x2d5181;
            },
            _0x3bfcf1 = function (_0x2c1c8b, _0x57f807, _0x481312, _0x3aa759, _0x5081e9, _0x3ec1c7, _0x525fc3) {
              return _0x2c1c8b = _0x2c1c8b + (_0x57f807 & _0x3aa759 | _0x481312 & ~_0x3aa759) + _0x5081e9 + _0x525fc3, (_0x2c1c8b << _0x3ec1c7 | _0x2c1c8b >>> 0x20 - _0x3ec1c7) + _0x57f807;
            },
            _0x1b7ec7 = function (_0x8ec926, _0x1be2b6, _0x38951a, _0x63568f, _0x397da1, _0x3b0ce0, _0x17ea42) {
              return _0x8ec926 = _0x8ec926 + (_0x1be2b6 ^ _0x38951a ^ _0x63568f) + _0x397da1 + _0x17ea42, (_0x8ec926 << _0x3b0ce0 | _0x8ec926 >>> 0x20 - _0x3b0ce0) + _0x1be2b6;
            },
            _0x5f3b27 = function (_0x500d8e, _0x1b96e7, _0x29509e, _0x354cb5, _0x3333ab, _0x23818b, _0x49e826) {
              return _0x500d8e = _0x500d8e + (_0x29509e ^ (_0x1b96e7 | ~_0x354cb5)) + _0x3333ab + _0x49e826, (_0x500d8e << _0x23818b | _0x500d8e >>> 0x20 - _0x23818b) + _0x1b96e7;
            };
          _0x11e3dc = _0x25aac7.lib;
          var _0x2fbf76 = _0x11e3dc.WordArray,
            _0x5cf51d = _0x11e3dc.Hasher;
          _0x11e3dc = _0x25aac7.algo;
          for (var _0x3d47b9 = [], _0x2f4eba = 0x0; 0x40 > _0x2f4eba; _0x2f4eba++) _0x3d47b9[_0x2f4eba] = 0x100000000 * _0x3f6b37.abs(_0x3f6b37.sin(_0x2f4eba + 0x1)) | 0x0;
          !0x0, _0x11e3dc = _0x11e3dc.MD5 = _0x5cf51d.extend({
            '_doReset': function () {
              this._hash = new _0x2fbf76.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);
            },
            '_doProcessBlock': function (_0x529995, _0xce782a) {
              for (var _0x2cb958 = 0x0; 0x10 > _0x2cb958; _0x2cb958++) {
                var _0x496850 = _0xce782a + _0x2cb958,
                  _0x2a9c90 = _0x529995[_0x496850];
                _0x529995[_0x496850] = 0xff00ff & (_0x2a9c90 << 0x8 | _0x2a9c90 >>> 0x18) | 0xff00ff00 & (_0x2a9c90 << 0x18 | _0x2a9c90 >>> 0x8);
              }
              var _0x2cb958 = this._hash.words,
                _0x496850 = _0x529995[_0xce782a + 0x0],
                _0x2a9c90 = _0x529995[_0xce782a + 0x1],
                _0x5809cb = _0x529995[_0xce782a + 0x2],
                _0x4e64ef = _0x529995[_0xce782a + 0x3],
                _0x564c47 = _0x529995[_0xce782a + 0x4],
                _0x98c110 = _0x529995[_0xce782a + 0x5],
                _0x3b9b27 = _0x529995[_0xce782a + 0x6],
                _0x4edc87 = _0x529995[_0xce782a + 0x7],
                _0x325ebd = _0x529995[_0xce782a + 0x8],
                _0x333d8 = _0x529995[_0xce782a + 0x9],
                _0x5dbd06 = _0x529995[_0xce782a + 0xa],
                _0x2fd5c1 = _0x529995[_0xce782a + 0xb],
                _0x395f9f = _0x529995[_0xce782a + 0xc],
                _0x3d6f3c = _0x529995[_0xce782a + 0xd],
                _0x34a17d = _0x529995[_0xce782a + 0xe],
                _0xe36604 = _0x529995[_0xce782a + 0xf],
                _0xc7442a = _0x2cb958[0x0],
                _0x298ff4 = _0x2cb958[0x1],
                _0x47ca88 = _0x2cb958[0x2],
                _0x40f4df = _0x2cb958[0x3],
                _0xc7442a = _0x4f741e(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x496850, 0x7, _0x3d47b9[0x0]),
                _0x40f4df = _0x4f741e(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x2a9c90, 0xc, _0x3d47b9[0x1]),
                _0x47ca88 = _0x4f741e(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x5809cb, 0x11, _0x3d47b9[0x2]),
                _0x298ff4 = _0x4f741e(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x4e64ef, 0x16, _0x3d47b9[0x3]),
                _0xc7442a = _0x4f741e(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x564c47, 0x7, _0x3d47b9[0x4]),
                _0x40f4df = _0x4f741e(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x98c110, 0xc, _0x3d47b9[0x5]),
                _0x47ca88 = _0x4f741e(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x3b9b27, 0x11, _0x3d47b9[0x6]),
                _0x298ff4 = _0x4f741e(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x4edc87, 0x16, _0x3d47b9[0x7]),
                _0xc7442a = _0x4f741e(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x325ebd, 0x7, _0x3d47b9[0x8]),
                _0x40f4df = _0x4f741e(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x333d8, 0xc, _0x3d47b9[0x9]),
                _0x47ca88 = _0x4f741e(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x5dbd06, 0x11, _0x3d47b9[0xa]),
                _0x298ff4 = _0x4f741e(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x2fd5c1, 0x16, _0x3d47b9[0xb]),
                _0xc7442a = _0x4f741e(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x395f9f, 0x7, _0x3d47b9[0xc]),
                _0x40f4df = _0x4f741e(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x3d6f3c, 0xc, _0x3d47b9[0xd]),
                _0x47ca88 = _0x4f741e(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x34a17d, 0x11, _0x3d47b9[0xe]),
                _0x298ff4 = _0x4f741e(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0xe36604, 0x16, _0x3d47b9[0xf]),
                _0xc7442a = _0x3bfcf1(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x2a9c90, 0x5, _0x3d47b9[0x10]),
                _0x40f4df = _0x3bfcf1(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x3b9b27, 0x9, _0x3d47b9[0x11]),
                _0x47ca88 = _0x3bfcf1(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x2fd5c1, 0xe, _0x3d47b9[0x12]),
                _0x298ff4 = _0x3bfcf1(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x496850, 0x14, _0x3d47b9[0x13]),
                _0xc7442a = _0x3bfcf1(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x98c110, 0x5, _0x3d47b9[0x14]),
                _0x40f4df = _0x3bfcf1(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x5dbd06, 0x9, _0x3d47b9[0x15]),
                _0x47ca88 = _0x3bfcf1(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0xe36604, 0xe, _0x3d47b9[0x16]),
                _0x298ff4 = _0x3bfcf1(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x564c47, 0x14, _0x3d47b9[0x17]),
                _0xc7442a = _0x3bfcf1(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x333d8, 0x5, _0x3d47b9[0x18]),
                _0x40f4df = _0x3bfcf1(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x34a17d, 0x9, _0x3d47b9[0x19]),
                _0x47ca88 = _0x3bfcf1(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x4e64ef, 0xe, _0x3d47b9[0x1a]),
                _0x298ff4 = _0x3bfcf1(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x325ebd, 0x14, _0x3d47b9[0x1b]),
                _0xc7442a = _0x3bfcf1(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x3d6f3c, 0x5, _0x3d47b9[0x1c]),
                _0x40f4df = _0x3bfcf1(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x5809cb, 0x9, _0x3d47b9[0x1d]),
                _0x47ca88 = _0x3bfcf1(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x4edc87, 0xe, _0x3d47b9[0x1e]),
                _0x298ff4 = _0x3bfcf1(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x395f9f, 0x14, _0x3d47b9[0x1f]),
                _0xc7442a = _0x1b7ec7(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x98c110, 0x4, _0x3d47b9[0x20]),
                _0x40f4df = _0x1b7ec7(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x325ebd, 0xb, _0x3d47b9[0x21]),
                _0x47ca88 = _0x1b7ec7(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x2fd5c1, 0x10, _0x3d47b9[0x22]),
                _0x298ff4 = _0x1b7ec7(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x34a17d, 0x17, _0x3d47b9[0x23]),
                _0xc7442a = _0x1b7ec7(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x2a9c90, 0x4, _0x3d47b9[0x24]),
                _0x40f4df = _0x1b7ec7(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x564c47, 0xb, _0x3d47b9[0x25]),
                _0x47ca88 = _0x1b7ec7(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x4edc87, 0x10, _0x3d47b9[0x26]),
                _0x298ff4 = _0x1b7ec7(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x5dbd06, 0x17, _0x3d47b9[0x27]),
                _0xc7442a = _0x1b7ec7(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x3d6f3c, 0x4, _0x3d47b9[0x28]),
                _0x40f4df = _0x1b7ec7(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x496850, 0xb, _0x3d47b9[0x29]),
                _0x47ca88 = _0x1b7ec7(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x4e64ef, 0x10, _0x3d47b9[0x2a]),
                _0x298ff4 = _0x1b7ec7(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x3b9b27, 0x17, _0x3d47b9[0x2b]),
                _0xc7442a = _0x1b7ec7(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x333d8, 0x4, _0x3d47b9[0x2c]),
                _0x40f4df = _0x1b7ec7(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x395f9f, 0xb, _0x3d47b9[0x2d]),
                _0x47ca88 = _0x1b7ec7(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0xe36604, 0x10, _0x3d47b9[0x2e]),
                _0x298ff4 = _0x1b7ec7(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x5809cb, 0x17, _0x3d47b9[0x2f]),
                _0xc7442a = _0x5f3b27(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x496850, 0x6, _0x3d47b9[0x30]),
                _0x40f4df = _0x5f3b27(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x4edc87, 0xa, _0x3d47b9[0x31]),
                _0x47ca88 = _0x5f3b27(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x34a17d, 0xf, _0x3d47b9[0x32]),
                _0x298ff4 = _0x5f3b27(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x98c110, 0x15, _0x3d47b9[0x33]),
                _0xc7442a = _0x5f3b27(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x395f9f, 0x6, _0x3d47b9[0x34]),
                _0x40f4df = _0x5f3b27(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x4e64ef, 0xa, _0x3d47b9[0x35]),
                _0x47ca88 = _0x5f3b27(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x5dbd06, 0xf, _0x3d47b9[0x36]),
                _0x298ff4 = _0x5f3b27(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x2a9c90, 0x15, _0x3d47b9[0x37]),
                _0xc7442a = _0x5f3b27(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x325ebd, 0x6, _0x3d47b9[0x38]),
                _0x40f4df = _0x5f3b27(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0xe36604, 0xa, _0x3d47b9[0x39]),
                _0x47ca88 = _0x5f3b27(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x3b9b27, 0xf, _0x3d47b9[0x3a]),
                _0x298ff4 = _0x5f3b27(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x3d6f3c, 0x15, _0x3d47b9[0x3b]),
                _0xc7442a = _0x5f3b27(_0xc7442a, _0x298ff4, _0x47ca88, _0x40f4df, _0x564c47, 0x6, _0x3d47b9[0x3c]),
                _0x40f4df = _0x5f3b27(_0x40f4df, _0xc7442a, _0x298ff4, _0x47ca88, _0x2fd5c1, 0xa, _0x3d47b9[0x3d]),
                _0x47ca88 = _0x5f3b27(_0x47ca88, _0x40f4df, _0xc7442a, _0x298ff4, _0x5809cb, 0xf, _0x3d47b9[0x3e]),
                _0x298ff4 = _0x5f3b27(_0x298ff4, _0x47ca88, _0x40f4df, _0xc7442a, _0x333d8, 0x15, _0x3d47b9[0x3f]);
              _0x2cb958[0x0] = _0x2cb958[0x0] + _0xc7442a | 0x0, _0x2cb958[0x1] = _0x2cb958[0x1] + _0x298ff4 | 0x0, _0x2cb958[0x2] = _0x2cb958[0x2] + _0x47ca88 | 0x0, _0x2cb958[0x3] = _0x2cb958[0x3] + _0x40f4df | 0x0;
            },
            '_doFinalize': function () {
              var _0x3c59bc = this._data,
                _0x4016fd = _0x3c59bc.words,
                _0x5f23ce = 0x8 * this._nDataBytes,
                _0x511eed = 0x8 * _0x3c59bc.sigBytes;
              _0x4016fd[_0x511eed >>> 0x5] |= 0x80 << 0x18 - _0x511eed % 0x20;
              var _0x2f8c22 = _0x3f6b37.floor(_0x5f23ce / 0x100000000);
              _0x4016fd[(_0x511eed + 0x40 >>> 0x9 << 0x4) + 0xf] = 0xff00ff & (_0x2f8c22 << 0x8 | _0x2f8c22 >>> 0x18) | 0xff00ff00 & (_0x2f8c22 << 0x18 | _0x2f8c22 >>> 0x8), _0x4016fd[(_0x511eed + 0x40 >>> 0x9 << 0x4) + 0xe] = 0xff00ff & (_0x5f23ce << 0x8 | _0x5f23ce >>> 0x18) | 0xff00ff00 & (_0x5f23ce << 0x18 | _0x5f23ce >>> 0x8), _0x3c59bc.sigBytes = 0x4 * (_0x4016fd.length + 0x1), this._process(), _0x3c59bc = this._hash, _0x4016fd = _0x3c59bc.words;
              for (_0x5f23ce = 0x0; 0x4 > _0x5f23ce; _0x5f23ce++) _0x511eed = _0x4016fd[_0x5f23ce], _0x4016fd[_0x5f23ce] = 0xff00ff & (_0x511eed << 0x8 | _0x511eed >>> 0x18) | 0xff00ff00 & (_0x511eed << 0x18 | _0x511eed >>> 0x8);
              return _0x3c59bc;
            },
            'clone': function () {
              var _0x577eed = _0x5cf51d.clone.call(this);
              return _0x577eed._hash = this._hash.clone(), _0x577eed;
            }
          }), _0x25aac7.MD5 = _0x5cf51d._createHelper(_0x11e3dc), _0x25aac7.HmacMD5 = _0x5cf51d._createHmacHelper(_0x11e3dc), _0xa63c70.exports = _0x25aac7.MD5, !0x0;
        }, function (_0x597476, _0x2d19fc, _0x20dd01) {
          _0x2d19fc = _0x20dd01(0x5), _0x20dd01(0x6), _0x20dd01(0x7);
          var _0x14f304 = _0x2d19fc.lib;
          _0x20dd01 = _0x14f304.Base;
          var _0x2f415e = _0x14f304.WordArray,
            _0x14f304 = _0x2d19fc.algo,
            _0x326dd3 = _0x14f304.EvpKDF = _0x20dd01.extend({
              'cfg': _0x20dd01.extend({
                'keySize': 0x4,
                'hasher': _0x14f304.MD5,
                'iterations': 0x1
              }),
              'init': function (_0x2009a7) {
                this.cfg = this.cfg.extend(_0x2009a7);
              },
              'compute': function (_0x20588d, _0x3eb3fa) {
                for (var _0xbe7931 = this.cfg, _0x23af8a = _0xbe7931.hasher.create(), _0x2ae42d = _0x2f415e.create(), _0x3deaa2 = _0x2ae42d.words, _0x17e3de = _0xbe7931.keySize, _0xbe7931 = _0xbe7931.iterations; _0x3deaa2.length < _0x17e3de;) {
                  _0x3f2150 && _0x23af8a.update(_0x3f2150);
                  var _0x3f2150 = _0x23af8a.update(_0x20588d).finalize(_0x3eb3fa);
                  _0x23af8a.reset();
                  for (var _0x109dd5 = 0x1; _0x109dd5 < _0xbe7931; _0x109dd5++) _0x3f2150 = _0x23af8a.finalize(_0x3f2150), _0x23af8a.reset();
                  _0x2ae42d.concat(_0x3f2150);
                }
                return _0x2ae42d.sigBytes = 0x4 * _0x17e3de, _0x2ae42d;
              }
            });
          _0x2d19fc.EvpKDF = function (_0x5e216a, _0x25f683, _0x5d771f) {
            return _0x326dd3.create(_0x5d771f).compute(_0x5e216a, _0x25f683);
          }, _0x597476.exports = _0x2d19fc.EvpKDF, !0x0;
        }, function (_0x3650da, _0x3f32a9, _0x3d305b) {
          _0x3d305b = _0x3d305b(0x5);
          if (!_0x3d305b.lib.Cipher) {
            _0x3f32a9 = _0x3d305b.lib;
            var _0x465c38 = _0x3f32a9.Base,
              _0x110694 = _0x3f32a9.WordArray,
              _0x46ffe1 = _0x3f32a9.BufferedBlockAlgorithm,
              _0x1eae42 = _0x3d305b.enc,
              _0x410d6b = (_0x1eae42.Utf8, _0x1eae42.Base64),
              _0x496b0a = _0x3d305b.algo.EvpKDF,
              _0x31db26 = _0x3f32a9.Cipher = _0x46ffe1.extend({
                'cfg': _0x465c38.extend(),
                'createEncryptor': function (_0x5efd6b, _0x7ba4e9) {
                  return this.create(this._ENC_XFORM_MODE, _0x5efd6b, _0x7ba4e9);
                },
                'createDecryptor': function (_0x38e66a, _0x3c1ff7) {
                  return this.create(this._DEC_XFORM_MODE, _0x38e66a, _0x3c1ff7);
                },
                'init': function (_0x55d47d, _0x480cec, _0x4494bf) {
                  this.cfg = this.cfg.extend(_0x4494bf), this._xformMode = _0x55d47d, this._key = _0x480cec, this.reset();
                },
                'reset': function () {
                  _0x46ffe1.reset.call(this), this._doReset();
                },
                'process': function (_0x37af5e) {
                  return this._append(_0x37af5e), this._process();
                },
                'finalize': function (_0x430c63) {
                  return _0x430c63 && this._append(_0x430c63), this._doFinalize();
                },
                'keySize': 0x4,
                'ivSize': 0x4,
                '_ENC_XFORM_MODE': 0x1,
                '_DEC_XFORM_MODE': 0x2,
                '_createHelper': function (_0x559902) {
                  return {
                    'encrypt': function (_0x36f00a, _0x1a7e97, _0x24cac4) {
                      return ('string' == typeof _0x1a7e97 ? _0x1d37d0 : _0x12067d).encrypt(_0x559902, _0x36f00a, _0x1a7e97, _0x24cac4);
                    },
                    'decrypt': function (_0x2a38ed, _0xfb7d3c, _0x34fa15) {
                      return ('string' == typeof _0xfb7d3c ? _0x1d37d0 : _0x12067d).decrypt(_0x559902, _0x2a38ed, _0xfb7d3c, _0x34fa15);
                    }
                  };
                }
              }),
              _0x1eae42 = (_0x3f32a9.StreamCipher = _0x31db26.extend({
                '_doFinalize': function () {
                  return this._process(!0x0);
                },
                'blockSize': 0x1
              }), _0x3d305b.mode = {}),
              _0xec89cc,
              _0x1bf305 = function (_0x148f76, _0x2180b2, _0x28a609) {
                var _0x4041d2 = this._iv;
                _0x4041d2 ? this._iv = void 0x0 : _0x4041d2 = this._prevBlock;
                for (var _0x41c8a8 = 0x0; _0x41c8a8 < _0x28a609; _0x41c8a8++) _0x148f76[_0x2180b2 + _0x41c8a8] ^= _0x4041d2[_0x41c8a8];
              };
            _0xec89cc = (_0x3f32a9.BlockCipherMode = _0x465c38.extend({
              'createEncryptor': function (_0xf4a05f, _0x5bf992) {
                return this.Encryptor.create(_0xf4a05f, _0x5bf992);
              },
              'createDecryptor': function (_0x3792d0, _0x19df24) {
                return this.Decryptor.create(_0x3792d0, _0x19df24);
              },
              'init': function (_0x519c05, _0x33e8f7) {
                this._cipher = _0x519c05, this._iv = _0x33e8f7;
              }
            })).extend(), _0xec89cc = (_0xec89cc.Encryptor = _0xec89cc.extend({
              'processBlock': function (_0x2c56ef, _0x38c3ae) {
                var _0x449400 = this._cipher,
                  _0x345be0 = _0x449400.blockSize;
                _0x1bf305.call(this, _0x2c56ef, _0x38c3ae, _0x345be0), _0x449400.encryptBlock(_0x2c56ef, _0x38c3ae), this._prevBlock = _0x2c56ef.slice(_0x38c3ae, _0x38c3ae + _0x345be0);
              }
            }), _0xec89cc.Decryptor = _0xec89cc.extend({
              'processBlock': function (_0x118031, _0x57c587) {
                var _0x5291c2 = this._cipher,
                  _0x32f18f = _0x5291c2.blockSize,
                  _0x43c46f = _0x118031.slice(_0x57c587, _0x57c587 + _0x32f18f);
                _0x5291c2.decryptBlock(_0x118031, _0x57c587), _0x1bf305.call(this, _0x118031, _0x57c587, _0x32f18f), this._prevBlock = _0x43c46f;
              }
            }), _0xec89cc), _0x1eae42 = _0x1eae42.CBC = _0xec89cc, _0xec89cc = (_0x3d305b.pad = {}).Pkcs7 = {
              'pad': function (_0x4092f8, _0x157826) {
                for (var _0x57f3bb = 0x4 * _0x157826, _0x57f3bb = _0x57f3bb - _0x4092f8.sigBytes % _0x57f3bb, _0x520736 = _0x57f3bb << 0x18 | _0x57f3bb << 0x10 | _0x57f3bb << 0x8 | _0x57f3bb, _0x42513c = [], _0x552bfd = 0x0; _0x552bfd < _0x57f3bb; _0x552bfd += 0x4) _0x42513c.push(_0x520736);
                _0x57f3bb = _0x110694.create(_0x42513c, _0x57f3bb), _0x4092f8.concat(_0x57f3bb);
              },
              'unpad': function (_0x5b819c) {
                _0x5b819c.sigBytes -= 0xff & _0x5b819c.words[_0x5b819c.sigBytes - 0x1 >>> 0x2];
              }
            };
            var _0x12b0cf = (_0x3f32a9.BlockCipher = _0x31db26.extend({
                'cfg': _0x31db26.cfg.extend({
                  'mode': _0x1eae42,
                  'padding': _0xec89cc
                }),
                'reset': function () {
                  _0x31db26.reset.call(this);
                  var _0x1eb6e4 = this.cfg,
                    _0x1c4691 = _0x1eb6e4.iv,
                    _0x1eb6e4 = _0x1eb6e4.mode;
                  if (this._xformMode == this._ENC_XFORM_MODE) var _0x32feec = _0x1eb6e4.createEncryptor;else _0x32feec = _0x1eb6e4.createDecryptor, this._minBufferSize = 0x1;
                  this._mode = _0x32feec.call(_0x1eb6e4, this, _0x1c4691 && _0x1c4691.words);
                },
                '_doProcessBlock': function (_0x5b00d, _0x4832cb) {
                  this._mode.processBlock(_0x5b00d, _0x4832cb);
                },
                '_doFinalize': function () {
                  var _0x3912e3 = this.cfg.padding;
                  if (this._xformMode == this._ENC_XFORM_MODE) {
                    _0x3912e3.pad(this._data, this.blockSize);
                    var _0x5e1d8c = this._process(!0x0);
                  } else _0x5e1d8c = this._process(!0x0), _0x3912e3.unpad(_0x5e1d8c);
                  return _0x5e1d8c;
                },
                'blockSize': 0x4
              }), _0x3f32a9.CipherParams = _0x465c38.extend({
                'init': function (_0x30bab9) {
                  this.mixIn(_0x30bab9);
                },
                'toString': function (_0x110751) {
                  return (_0x110751 || this.formatter).stringify(this);
                }
              })),
              _0x1eae42 = (_0x3d305b.format = {}).OpenSSL = {
                'stringify': function (_0x18cc84) {
                  var _0x24cf0c = _0x18cc84.ciphertext;
                  return _0x18cc84 = _0x18cc84.salt, (_0x18cc84 ? _0x110694.create([0x53616c74, 0x65645f5f]).concat(_0x18cc84).concat(_0x24cf0c) : _0x24cf0c).toString(_0x410d6b);
                },
                'parse': function (_0x503cc6) {
                  _0x503cc6 = _0x410d6b.parse(_0x503cc6);
                  var _0x326f92 = _0x503cc6.words;
                  if (0x53616c74 == _0x326f92[0x0] && 0x65645f5f == _0x326f92[0x1]) {
                    var _0x3fc595 = _0x110694.create(_0x326f92.slice(0x2, 0x4));
                    _0x326f92.splice(0x0, 0x4), _0x503cc6.sigBytes -= 0x10;
                  }
                  return _0x12b0cf.create({
                    'ciphertext': _0x503cc6,
                    'salt': _0x3fc595
                  });
                }
              },
              _0x12067d = _0x3f32a9.SerializableCipher = _0x465c38.extend({
                'cfg': _0x465c38.extend({
                  'format': _0x1eae42
                }),
                'encrypt': function (_0x541535, _0xf47219, _0x4f7f3a, _0x37958d) {
                  _0x37958d = this.cfg.extend(_0x37958d);
                  var _0x26aba9 = _0x541535.createEncryptor(_0x4f7f3a, _0x37958d);
                  return _0xf47219 = _0x26aba9.finalize(_0xf47219), _0x26aba9 = _0x26aba9.cfg, _0x12b0cf.create({
                    'ciphertext': _0xf47219,
                    'key': _0x4f7f3a,
                    'iv': _0x26aba9.iv,
                    'algorithm': _0x541535,
                    'mode': _0x26aba9.mode,
                    'padding': _0x26aba9.padding,
                    'blockSize': _0x541535.blockSize,
                    'formatter': _0x37958d.format
                  });
                },
                'decrypt': function (_0x54ab8e, _0x4fe28b, _0x34859e, _0x52bb45) {
                  return _0x52bb45 = this.cfg.extend(_0x52bb45), _0x4fe28b = this._parse(_0x4fe28b, _0x52bb45.format), _0x54ab8e.createDecryptor(_0x34859e, _0x52bb45).finalize(_0x4fe28b.ciphertext);
                },
                '_parse': function (_0xce675a, _0x2038a2) {
                  return 'string' == typeof _0xce675a ? _0x2038a2.parse(_0xce675a, this) : _0xce675a;
                }
              });
            _0x3d305b = (_0x3d305b.kdf = {}).OpenSSL = {
              'execute': function (_0x48f184, _0x4aec18, _0x5a8810, _0x51e713) {
                return _0x51e713 || (_0x51e713 = _0x110694.random(0x8)), _0x48f184 = _0x496b0a.create({
                  'keySize': _0x4aec18 + _0x5a8810
                }).compute(_0x48f184, _0x51e713), _0x5a8810 = _0x110694.create(_0x48f184.words.slice(_0x4aec18), 0x4 * _0x5a8810), _0x48f184.sigBytes = 0x4 * _0x4aec18, _0x12b0cf.create({
                  'key': _0x48f184,
                  'iv': _0x5a8810,
                  'salt': _0x51e713
                });
              }
            };
            var _0x1d37d0 = _0x3f32a9.PasswordBasedCipher = _0x12067d.extend({
              'cfg': _0x12067d.cfg.extend({
                'kdf': _0x3d305b
              }),
              'encrypt': function (_0x355161, _0x1974f9, _0x407fb1, _0x14cfa4) {
                return _0x14cfa4 = this.cfg.extend(_0x14cfa4), _0x407fb1 = _0x14cfa4.kdf.execute(_0x407fb1, _0x355161.keySize, _0x355161.ivSize), _0x14cfa4.iv = _0x407fb1.iv, _0x355161 = _0x12067d.encrypt.call(this, _0x355161, _0x1974f9, _0x407fb1.key, _0x14cfa4), _0x355161.mixIn(_0x407fb1), _0x355161;
              },
              'decrypt': function (_0x7bff51, _0x368579, _0xa4a02b, _0x7f2d93) {
                return _0x7f2d93 = this.cfg.extend(_0x7f2d93), _0x368579 = this._parse(_0x368579, _0x7f2d93.format), _0xa4a02b = _0x7f2d93.kdf.execute(_0xa4a02b, _0x7bff51.keySize, _0x7bff51.ivSize, _0x368579.salt), _0x7f2d93.iv = _0xa4a02b.iv, _0x12067d.decrypt.call(this, _0x7bff51, _0x368579, _0xa4a02b.key, _0x7f2d93);
              }
            });
          }
          _0x3650da.exports = void 0x0, !0x0;
        }, function (_0x41457d, _0x159b4d, _0x22eb67) {
          _0x159b4d = _0x22eb67(0x5), _0x22eb67(0xc), _0x22eb67(0xd), _0x22eb67(0xe), _0x22eb67(0xf);
          var _0xb84e90 = function (_0x6116cc, _0xdd3ff5) {
              var _0xd63cac = (this._lBlock >>> _0x6116cc ^ this._rBlock) & _0xdd3ff5;
              this._rBlock ^= _0xd63cac, this._lBlock ^= _0xd63cac << _0x6116cc;
            },
            _0x33418e = function (_0x33a445, _0x5cbe05) {
              var _0x4bfc74 = (this._rBlock >>> _0x33a445 ^ this._lBlock) & _0x5cbe05;
              this._lBlock ^= _0x4bfc74, this._rBlock ^= _0x4bfc74 << _0x33a445;
            };
          _0x22eb67 = _0x159b4d.lib;
          var _0x5010bb = _0x22eb67.WordArray;
          _0x22eb67 = _0x22eb67.BlockCipher;
          var _0x5a4fcc = _0x159b4d.algo,
            _0x1b46e7 = [0x39, 0x31, 0x29, 0x21, 0x19, 0x11, 0x9, 0x1, 0x3a, 0x32, 0x2a, 0x22, 0x1a, 0x12, 0xa, 0x2, 0x3b, 0x33, 0x2b, 0x23, 0x1b, 0x13, 0xb, 0x3, 0x3c, 0x34, 0x2c, 0x24, 0x3f, 0x37, 0x2f, 0x27, 0x1f, 0x17, 0xf, 0x7, 0x3e, 0x36, 0x2e, 0x26, 0x1e, 0x16, 0xe, 0x6, 0x3d, 0x35, 0x2d, 0x25, 0x1d, 0x15, 0xd, 0x5, 0x1c, 0x14, 0xc, 0x4],
            _0x280286 = [0xe, 0x11, 0xb, 0x18, 0x1, 0x5, 0x3, 0x1c, 0xf, 0x6, 0x15, 0xa, 0x17, 0x13, 0xc, 0x4, 0x1a, 0x8, 0x10, 0x7, 0x1b, 0x14, 0xd, 0x2, 0x29, 0x34, 0x1f, 0x25, 0x2f, 0x37, 0x1e, 0x28, 0x33, 0x2d, 0x21, 0x30, 0x2c, 0x31, 0x27, 0x38, 0x22, 0x35, 0x2e, 0x2a, 0x32, 0x24, 0x1d, 0x20],
            _0x345453 = [0x1, 0x2, 0x4, 0x6, 0x8, 0xa, 0xc, 0xe, 0xf, 0x11, 0x13, 0x15, 0x17, 0x19, 0x1b, 0x1c],
            _0x5c08cb = [{
              '0': 0x808200,
              0x10000000: 0x8000,
              0x20000000: 0x808002,
              0x30000000: 0x2,
              0x40000000: 0x200,
              0x50000000: 0x808202,
              0x60000000: 0x800202,
              0x70000000: 0x800000,
              0x80000000: 0x202,
              0x90000000: 0x800200,
              0xa0000000: 0x8200,
              0xb0000000: 0x808000,
              0xc0000000: 0x8002,
              0xd0000000: 0x800002,
              0xe0000000: 0x0,
              0xf0000000: 0x8202,
              0x8000000: 0x0,
              0x18000000: 0x808202,
              0x28000000: 0x8202,
              0x38000000: 0x8000,
              0x48000000: 0x808200,
              0x58000000: 0x200,
              0x68000000: 0x808002,
              0x78000000: 0x2,
              0x88000000: 0x800200,
              0x98000000: 0x8200,
              0xa8000000: 0x808000,
              0xb8000000: 0x800202,
              0xc8000000: 0x800002,
              0xd8000000: 0x8002,
              0xe8000000: 0x202,
              0xf8000000: 0x800000,
              0x1: 0x8000,
              0x10000001: 0x2,
              0x20000001: 0x808200,
              0x30000001: 0x800000,
              0x40000001: 0x808002,
              0x50000001: 0x8200,
              0x60000001: 0x200,
              0x70000001: 0x800202,
              0x80000001: 0x808202,
              0x90000001: 0x808000,
              0xa0000001: 0x800002,
              0xb0000001: 0x8202,
              0xc0000001: 0x202,
              0xd0000001: 0x800200,
              0xe0000001: 0x8002,
              0xf0000001: 0x0,
              0x8000001: 0x808202,
              0x18000001: 0x808000,
              0x28000001: 0x800000,
              0x38000001: 0x200,
              0x48000001: 0x8000,
              0x58000001: 0x800002,
              0x68000001: 0x2,
              0x78000001: 0x8202,
              0x88000001: 0x8002,
              0x98000001: 0x800202,
              0xa8000001: 0x202,
              0xb8000001: 0x808200,
              0xc8000001: 0x800200,
              0xd8000001: 0x0,
              0xe8000001: 0x8200,
              0xf8000001: 0x808002
            }, {
              '0': 0x40084010,
              0x1000000: 0x4000,
              0x2000000: 0x80000,
              0x3000000: 0x40080010,
              0x4000000: 0x40000010,
              0x5000000: 0x40084000,
              0x6000000: 0x40004000,
              0x7000000: 0x10,
              0x8000000: 0x84000,
              0x9000000: 0x40004010,
              0xa000000: 0x40000000,
              0xb000000: 0x84010,
              0xc000000: 0x80010,
              0xd000000: 0x0,
              0xe000000: 0x4010,
              0xf000000: 0x40080000,
              0x800000: 0x40004000,
              0x1800000: 0x84010,
              0x2800000: 0x10,
              0x3800000: 0x40004010,
              0x4800000: 0x40084010,
              0x5800000: 0x40000000,
              0x6800000: 0x80000,
              0x7800000: 0x40080010,
              0x8800000: 0x80010,
              0x9800000: 0x0,
              0xa800000: 0x4000,
              0xb800000: 0x40080000,
              0xc800000: 0x40000010,
              0xd800000: 0x84000,
              0xe800000: 0x40084000,
              0xf800000: 0x4010,
              0x10000000: 0x0,
              0x11000000: 0x40080010,
              0x12000000: 0x40004010,
              0x13000000: 0x40084000,
              0x14000000: 0x40080000,
              0x15000000: 0x10,
              0x16000000: 0x84010,
              0x17000000: 0x4000,
              0x18000000: 0x4010,
              0x19000000: 0x80000,
              0x1a000000: 0x80010,
              0x1b000000: 0x40000010,
              0x1c000000: 0x84000,
              0x1d000000: 0x40004000,
              0x1e000000: 0x40000000,
              0x1f000000: 0x40084010,
              0x10800000: 0x84010,
              0x11800000: 0x80000,
              0x12800000: 0x40080000,
              0x13800000: 0x4000,
              0x14800000: 0x40004000,
              0x15800000: 0x40084010,
              0x16800000: 0x10,
              0x17800000: 0x40000000,
              0x18800000: 0x40084000,
              0x19800000: 0x40000010,
              0x1a800000: 0x40004010,
              0x1b800000: 0x80010,
              0x1c800000: 0x0,
              0x1d800000: 0x4010,
              0x1e800000: 0x40080010,
              0x1f800000: 0x84000
            }, {
              '0': 0x104,
              0x100000: 0x0,
              0x200000: 0x4000100,
              0x300000: 0x10104,
              0x400000: 0x10004,
              0x500000: 0x4000004,
              0x600000: 0x4010104,
              0x700000: 0x4010000,
              0x800000: 0x4000000,
              0x900000: 0x4010100,
              0xa00000: 0x10100,
              0xb00000: 0x4010004,
              0xc00000: 0x4000104,
              0xd00000: 0x10000,
              0xe00000: 0x4,
              0xf00000: 0x100,
              0x80000: 0x4010100,
              0x180000: 0x4010004,
              0x280000: 0x0,
              0x380000: 0x4000100,
              0x480000: 0x4000004,
              0x580000: 0x10000,
              0x680000: 0x10004,
              0x780000: 0x104,
              0x880000: 0x4,
              0x980000: 0x100,
              0xa80000: 0x4010000,
              0xb80000: 0x10104,
              0xc80000: 0x10100,
              0xd80000: 0x4000104,
              0xe80000: 0x4010104,
              0xf80000: 0x4000000,
              0x1000000: 0x4010100,
              0x1100000: 0x10004,
              0x1200000: 0x10000,
              0x1300000: 0x4000100,
              0x1400000: 0x100,
              0x1500000: 0x4010104,
              0x1600000: 0x4000004,
              0x1700000: 0x0,
              0x1800000: 0x4000104,
              0x1900000: 0x4000000,
              0x1a00000: 0x4,
              0x1b00000: 0x10100,
              0x1c00000: 0x4010000,
              0x1d00000: 0x104,
              0x1e00000: 0x10104,
              0x1f00000: 0x4010004,
              0x1080000: 0x4000000,
              0x1180000: 0x104,
              0x1280000: 0x4010100,
              0x1380000: 0x0,
              0x1480000: 0x10004,
              0x1580000: 0x4000100,
              0x1680000: 0x100,
              0x1780000: 0x4010004,
              0x1880000: 0x10000,
              0x1980000: 0x4010104,
              0x1a80000: 0x10104,
              0x1b80000: 0x4000004,
              0x1c80000: 0x4000104,
              0x1d80000: 0x4010000,
              0x1e80000: 0x4,
              0x1f80000: 0x10100
            }, {
              '0': 0x80401000,
              0x10000: 0x80001040,
              0x20000: 0x401040,
              0x30000: 0x80400000,
              0x40000: 0x0,
              0x50000: 0x401000,
              0x60000: 0x80000040,
              0x70000: 0x400040,
              0x80000: 0x80000000,
              0x90000: 0x400000,
              0xa0000: 0x40,
              0xb0000: 0x80001000,
              0xc0000: 0x80400040,
              0xd0000: 0x1040,
              0xe0000: 0x1000,
              0xf0000: 0x80401040,
              0x8000: 0x80001040,
              0x18000: 0x40,
              0x28000: 0x80400040,
              0x38000: 0x80001000,
              0x48000: 0x401000,
              0x58000: 0x80401040,
              0x68000: 0x0,
              0x78000: 0x80400000,
              0x88000: 0x1000,
              0x98000: 0x80401000,
              0xa8000: 0x400000,
              0xb8000: 0x1040,
              0xc8000: 0x80000000,
              0xd8000: 0x400040,
              0xe8000: 0x401040,
              0xf8000: 0x80000040,
              0x100000: 0x400040,
              0x110000: 0x401000,
              0x120000: 0x80000040,
              0x130000: 0x0,
              0x140000: 0x1040,
              0x150000: 0x80400040,
              0x160000: 0x80401000,
              0x170000: 0x80001040,
              0x180000: 0x80401040,
              0x190000: 0x80000000,
              0x1a0000: 0x80400000,
              0x1b0000: 0x401040,
              0x1c0000: 0x80001000,
              0x1d0000: 0x400000,
              0x1e0000: 0x40,
              0x1f0000: 0x1000,
              0x108000: 0x80400000,
              0x118000: 0x80401040,
              0x128000: 0x0,
              0x138000: 0x401000,
              0x148000: 0x400040,
              0x158000: 0x80000000,
              0x168000: 0x80001040,
              0x178000: 0x40,
              0x188000: 0x80000040,
              0x198000: 0x1000,
              0x1a8000: 0x80001000,
              0x1b8000: 0x80400040,
              0x1c8000: 0x1040,
              0x1d8000: 0x80401000,
              0x1e8000: 0x400000,
              0x1f8000: 0x401040
            }, {
              '0': 0x80,
              0x1000: 0x1040000,
              0x2000: 0x40000,
              0x3000: 0x20000000,
              0x4000: 0x20040080,
              0x5000: 0x1000080,
              0x6000: 0x21000080,
              0x7000: 0x40080,
              0x8000: 0x1000000,
              0x9000: 0x20040000,
              0xa000: 0x20000080,
              0xb000: 0x21040080,
              0xc000: 0x21040000,
              0xd000: 0x0,
              0xe000: 0x1040080,
              0xf000: 0x21000000,
              0x800: 0x1040080,
              0x1800: 0x21000080,
              0x2800: 0x80,
              0x3800: 0x1040000,
              0x4800: 0x40000,
              0x5800: 0x20040080,
              0x6800: 0x21040000,
              0x7800: 0x20000000,
              0x8800: 0x20040000,
              0x9800: 0x0,
              0xa800: 0x21040080,
              0xb800: 0x1000080,
              0xc800: 0x20000080,
              0xd800: 0x21000000,
              0xe800: 0x1000000,
              0xf800: 0x40080,
              0x10000: 0x40000,
              0x11000: 0x80,
              0x12000: 0x20000000,
              0x13000: 0x21000080,
              0x14000: 0x1000080,
              0x15000: 0x21040000,
              0x16000: 0x20040080,
              0x17000: 0x1000000,
              0x18000: 0x21040080,
              0x19000: 0x21000000,
              0x1a000: 0x1040000,
              0x1b000: 0x20040000,
              0x1c000: 0x40080,
              0x1d000: 0x20000080,
              0x1e000: 0x0,
              0x1f000: 0x1040080,
              0x10800: 0x21000080,
              0x11800: 0x1000000,
              0x12800: 0x1040000,
              0x13800: 0x20040080,
              0x14800: 0x20000000,
              0x15800: 0x1040080,
              0x16800: 0x80,
              0x17800: 0x21040000,
              0x18800: 0x40080,
              0x19800: 0x21040080,
              0x1a800: 0x0,
              0x1b800: 0x21000000,
              0x1c800: 0x1000080,
              0x1d800: 0x40000,
              0x1e800: 0x20040000,
              0x1f800: 0x20000080
            }, {
              '0': 0x10000008,
              0x100: 0x2000,
              0x200: 0x10200000,
              0x300: 0x10202008,
              0x400: 0x10002000,
              0x500: 0x200000,
              0x600: 0x200008,
              0x700: 0x10000000,
              0x800: 0x0,
              0x900: 0x10002008,
              0xa00: 0x202000,
              0xb00: 0x8,
              0xc00: 0x10200008,
              0xd00: 0x202008,
              0xe00: 0x2008,
              0xf00: 0x10202000,
              0x80: 0x10200000,
              0x180: 0x10202008,
              0x280: 0x8,
              0x380: 0x200000,
              0x480: 0x202008,
              0x580: 0x10000008,
              0x680: 0x10002000,
              0x780: 0x2008,
              0x880: 0x200008,
              0x980: 0x2000,
              0xa80: 0x10002008,
              0xb80: 0x10200008,
              0xc80: 0x0,
              0xd80: 0x10202000,
              0xe80: 0x202000,
              0xf80: 0x10000000,
              0x1000: 0x10002000,
              0x1100: 0x10200008,
              0x1200: 0x10202008,
              0x1300: 0x2008,
              0x1400: 0x200000,
              0x1500: 0x10000000,
              0x1600: 0x10000008,
              0x1700: 0x202000,
              0x1800: 0x202008,
              0x1900: 0x0,
              0x1a00: 0x8,
              0x1b00: 0x10200000,
              0x1c00: 0x2000,
              0x1d00: 0x10002008,
              0x1e00: 0x10202000,
              0x1f00: 0x200008,
              0x1080: 0x8,
              0x1180: 0x202000,
              0x1280: 0x200000,
              0x1380: 0x10000008,
              0x1480: 0x10002000,
              0x1580: 0x2008,
              0x1680: 0x10202008,
              0x1780: 0x10200000,
              0x1880: 0x10202000,
              0x1980: 0x10200008,
              0x1a80: 0x2000,
              0x1b80: 0x202008,
              0x1c80: 0x200008,
              0x1d80: 0x0,
              0x1e80: 0x10000000,
              0x1f80: 0x10002008
            }, {
              '0': 0x100000,
              0x10: 0x2000401,
              0x20: 0x400,
              0x30: 0x100401,
              0x40: 0x2100401,
              0x50: 0x0,
              0x60: 0x1,
              0x70: 0x2100001,
              0x80: 0x2000400,
              0x90: 0x100001,
              0xa0: 0x2000001,
              0xb0: 0x2100400,
              0xc0: 0x2100000,
              0xd0: 0x401,
              0xe0: 0x100400,
              0xf0: 0x2000000,
              0x8: 0x2100001,
              0x18: 0x0,
              0x28: 0x2000401,
              0x38: 0x2100400,
              0x48: 0x100000,
              0x58: 0x2000001,
              0x68: 0x2000000,
              0x78: 0x401,
              0x88: 0x100401,
              0x98: 0x2000400,
              0xa8: 0x2100000,
              0xb8: 0x100001,
              0xc8: 0x400,
              0xd8: 0x2100401,
              0xe8: 0x1,
              0xf8: 0x100400,
              0x100: 0x2000000,
              0x110: 0x100000,
              0x120: 0x2000401,
              0x130: 0x2100001,
              0x140: 0x100001,
              0x150: 0x2000400,
              0x160: 0x2100400,
              0x170: 0x100401,
              0x180: 0x401,
              0x190: 0x2100401,
              0x1a0: 0x100400,
              0x1b0: 0x1,
              0x1c0: 0x0,
              0x1d0: 0x2100000,
              0x1e0: 0x2000001,
              0x1f0: 0x400,
              0x108: 0x100400,
              0x118: 0x2000401,
              0x128: 0x2100001,
              0x138: 0x1,
              0x148: 0x2000000,
              0x158: 0x100000,
              0x168: 0x401,
              0x178: 0x2100400,
              0x188: 0x2000001,
              0x198: 0x2100000,
              0x1a8: 0x0,
              0x1b8: 0x2100401,
              0x1c8: 0x100401,
              0x1d8: 0x400,
              0x1e8: 0x2000400,
              0x1f8: 0x100001
            }, {
              '0': 0x8000820,
              0x1: 0x20000,
              0x2: 0x8000000,
              0x3: 0x20,
              0x4: 0x20020,
              0x5: 0x8020820,
              0x6: 0x8020800,
              0x7: 0x800,
              0x8: 0x8020000,
              0x9: 0x8000800,
              0xa: 0x20800,
              0xb: 0x8020020,
              0xc: 0x820,
              0xd: 0x0,
              0xe: 0x8000020,
              0xf: 0x20820,
              0x80000000: 0x800,
              0x80000001: 0x8020820,
              0x80000002: 0x8000820,
              0x80000003: 0x8000000,
              0x80000004: 0x8020000,
              0x80000005: 0x20800,
              0x80000006: 0x20820,
              0x80000007: 0x20,
              0x80000008: 0x8000020,
              0x80000009: 0x820,
              0x8000000a: 0x20020,
              0x8000000b: 0x8020800,
              0x8000000c: 0x0,
              0x8000000d: 0x8020020,
              0x8000000e: 0x8000800,
              0x8000000f: 0x20000,
              0x10: 0x20820,
              0x11: 0x8020800,
              0x12: 0x20,
              0x13: 0x800,
              0x14: 0x8000800,
              0x15: 0x8000020,
              0x16: 0x8020020,
              0x17: 0x20000,
              0x18: 0x0,
              0x19: 0x20020,
              0x1a: 0x8020000,
              0x1b: 0x8000820,
              0x1c: 0x8020820,
              0x1d: 0x20800,
              0x1e: 0x820,
              0x1f: 0x8000000,
              0x80000010: 0x20000,
              0x80000011: 0x800,
              0x80000012: 0x8020020,
              0x80000013: 0x20820,
              0x80000014: 0x20,
              0x80000015: 0x8020000,
              0x80000016: 0x8000000,
              0x80000017: 0x8000820,
              0x80000018: 0x8020820,
              0x80000019: 0x8000020,
              0x8000001a: 0x8000800,
              0x8000001b: 0x0,
              0x8000001c: 0x20800,
              0x8000001d: 0x820,
              0x8000001e: 0x20020,
              0x8000001f: 0x8020800
            }],
            _0x57ba35 = [0xf8000001, 0x1f800000, 0x1f80000, 0x1f8000, 0x1f800, 0x1f80, 0x1f8, 0x8000001f],
            _0x5111a6 = _0x5a4fcc.DES = _0x22eb67.extend({
              '_doReset': function () {
                for (var _0x49cddb = this._key.words, _0x279bf2 = [], _0xd59a74 = 0x0; 0x38 > _0xd59a74; _0xd59a74++) {
                  var _0x219cce = _0x1b46e7[_0xd59a74] - 0x1;
                  _0x279bf2[_0xd59a74] = _0x49cddb[_0x219cce >>> 0x5] >>> 0x1f - _0x219cce % 0x20 & 0x1;
                }
                _0x49cddb = this._subKeys = [];
                for (_0x219cce = 0x0; 0x10 > _0x219cce; _0x219cce++) {
                  for (var _0x1e508c = _0x49cddb[_0x219cce] = [], _0x28819 = _0x345453[_0x219cce], _0xd59a74 = 0x0; 0x18 > _0xd59a74; _0xd59a74++) _0x1e508c[_0xd59a74 / 0x6 | 0x0] |= _0x279bf2[(_0x280286[_0xd59a74] - 0x1 + _0x28819) % 0x1c] << 0x1f - _0xd59a74 % 0x6, _0x1e508c[0x4 + (_0xd59a74 / 0x6 | 0x0)] |= _0x279bf2[0x1c + (_0x280286[_0xd59a74 + 0x18] - 0x1 + _0x28819) % 0x1c] << 0x1f - _0xd59a74 % 0x6;
                  _0x1e508c[0x0] = _0x1e508c[0x0] << 0x1 | _0x1e508c[0x0] >>> 0x1f;
                  for (_0xd59a74 = 0x1; 0x7 > _0xd59a74; _0xd59a74++) _0x1e508c[_0xd59a74] >>>= 0x4 * (_0xd59a74 - 0x1) + 0x3;
                  _0x1e508c[0x7] = _0x1e508c[0x7] << 0x5 | _0x1e508c[0x7] >>> 0x1b;
                }
                _0x279bf2 = this._invSubKeys = [];
                for (_0xd59a74 = 0x0; 0x10 > _0xd59a74; _0xd59a74++) _0x279bf2[_0xd59a74] = _0x49cddb[0xf - _0xd59a74];
              },
              'encryptBlock': function (_0x42057f, _0x57f1c8) {
                this._doCryptBlock(_0x42057f, _0x57f1c8, this._subKeys);
              },
              'decryptBlock': function (_0x19ca88, _0x50cca9) {
                this._doCryptBlock(_0x19ca88, _0x50cca9, this._invSubKeys);
              },
              '_doCryptBlock': function (_0x1d5c11, _0x4df49b, _0x1cb268) {
                this._lBlock = _0x1d5c11[_0x4df49b], this._rBlock = _0x1d5c11[_0x4df49b + 0x1], _0xb84e90.call(this, 0x4, 0xf0f0f0f), _0xb84e90.call(this, 0x10, 0xffff), _0x33418e.call(this, 0x2, 0x33333333), _0x33418e.call(this, 0x8, 0xff00ff), _0xb84e90.call(this, 0x1, 0x55555555);
                for (var _0x40858e = 0x0; 0x10 > _0x40858e; _0x40858e++) {
                  for (var _0x2d440b = _0x1cb268[_0x40858e], _0x1213d2 = this._lBlock, _0x53af15 = this._rBlock, _0x5bf599 = 0x0, _0x258cb2 = 0x0; 0x8 > _0x258cb2; _0x258cb2++) _0x5bf599 |= _0x5c08cb[_0x258cb2][((_0x53af15 ^ _0x2d440b[_0x258cb2]) & _0x57ba35[_0x258cb2]) >>> 0x0];
                  this._lBlock = _0x53af15, this._rBlock = _0x1213d2 ^ _0x5bf599;
                }
                _0x1cb268 = this._lBlock, this._lBlock = this._rBlock, this._rBlock = _0x1cb268, _0xb84e90.call(this, 0x1, 0x55555555), _0x33418e.call(this, 0x8, 0xff00ff), _0x33418e.call(this, 0x2, 0x33333333), _0xb84e90.call(this, 0x10, 0xffff), _0xb84e90.call(this, 0x4, 0xf0f0f0f), _0x1d5c11[_0x4df49b] = this._lBlock, _0x1d5c11[_0x4df49b + 0x1] = this._rBlock;
              },
              'keySize': 0x2,
              'ivSize': 0x2,
              'blockSize': 0x2
            });
          _0x159b4d.DES = _0x22eb67._createHelper(_0x5111a6), _0x5a4fcc = _0x5a4fcc.TripleDES = _0x22eb67.extend({
            '_doReset': function () {
              var _0x31a937 = this._key.words;
              this._des1 = _0x5111a6.createEncryptor(_0x5010bb.create(_0x31a937.slice(0x0, 0x2))), this._des2 = _0x5111a6.createEncryptor(_0x5010bb.create(_0x31a937.slice(0x2, 0x4))), this._des3 = _0x5111a6.createEncryptor(_0x5010bb.create(_0x31a937.slice(0x4, 0x6)));
            },
            'encryptBlock': function (_0x460570, _0x58355a) {
              this._des1.encryptBlock(_0x460570, _0x58355a), this._des2.decryptBlock(_0x460570, _0x58355a), this._des3.encryptBlock(_0x460570, _0x58355a);
            },
            'decryptBlock': function (_0x8df3a4, _0x17b677) {
              this._des3.decryptBlock(_0x8df3a4, _0x17b677), this._des2.encryptBlock(_0x8df3a4, _0x17b677), this._des1.decryptBlock(_0x8df3a4, _0x17b677);
            },
            'keySize': 0x6,
            'ivSize': 0x2,
            'blockSize': 0x2
          }), _0x159b4d.TripleDES = _0x22eb67._createHelper(_0x5a4fcc), _0x41457d.exports = _0x159b4d.TripleDES, !0x0;
        }, function (_0x32ac1d, _0x37b696, _0x43b60e) {
          _0x37b696 = _0x43b60e(0x5), _0x43b60e(0xc), _0x43b60e(0xd), _0x43b60e(0xe), _0x43b60e(0xf);
          var _0xf572bf = function () {
            for (var _0x51332b = this._X, _0x42cb82 = this._C, _0x5a4e2e = 0x0; 0x8 > _0x5a4e2e; _0x5a4e2e++) _0x3db7a2[_0x5a4e2e] = _0x42cb82[_0x5a4e2e];
            _0x42cb82[0x0] = _0x42cb82[0x0] + 0x4d34d34d + this._b | 0x0, _0x42cb82[0x1] = _0x42cb82[0x1] + 0xd34d34d3 + (_0x42cb82[0x0] >>> 0x0 < _0x3db7a2[0x0] >>> 0x0 ? 0x1 : 0x0) | 0x0, _0x42cb82[0x2] = _0x42cb82[0x2] + 0x34d34d34 + (_0x42cb82[0x1] >>> 0x0 < _0x3db7a2[0x1] >>> 0x0 ? 0x1 : 0x0) | 0x0, _0x42cb82[0x3] = _0x42cb82[0x3] + 0x4d34d34d + (_0x42cb82[0x2] >>> 0x0 < _0x3db7a2[0x2] >>> 0x0 ? 0x1 : 0x0) | 0x0, _0x42cb82[0x4] = _0x42cb82[0x4] + 0xd34d34d3 + (_0x42cb82[0x3] >>> 0x0 < _0x3db7a2[0x3] >>> 0x0 ? 0x1 : 0x0) | 0x0, _0x42cb82[0x5] = _0x42cb82[0x5] + 0x34d34d34 + (_0x42cb82[0x4] >>> 0x0 < _0x3db7a2[0x4] >>> 0x0 ? 0x1 : 0x0) | 0x0, _0x42cb82[0x6] = _0x42cb82[0x6] + 0x4d34d34d + (_0x42cb82[0x5] >>> 0x0 < _0x3db7a2[0x5] >>> 0x0 ? 0x1 : 0x0) | 0x0, _0x42cb82[0x7] = _0x42cb82[0x7] + 0xd34d34d3 + (_0x42cb82[0x6] >>> 0x0 < _0x3db7a2[0x6] >>> 0x0 ? 0x1 : 0x0) | 0x0, this._b = _0x42cb82[0x7] >>> 0x0 < _0x3db7a2[0x7] >>> 0x0 ? 0x1 : 0x0;
            for (_0x5a4e2e = 0x0; 0x8 > _0x5a4e2e; _0x5a4e2e++) {
              var _0x8e7829 = _0x51332b[_0x5a4e2e] + _0x42cb82[_0x5a4e2e],
                _0xe648e5 = 0xffff & _0x8e7829,
                _0x35b0eb = _0x8e7829 >>> 0x10;
              _0x44099a[_0x5a4e2e] = ((_0xe648e5 * _0xe648e5 >>> 0x11) + _0xe648e5 * _0x35b0eb >>> 0xf) + _0x35b0eb * _0x35b0eb ^ ((0xffff0000 & _0x8e7829) * _0x8e7829 | 0x0) + ((0xffff & _0x8e7829) * _0x8e7829 | 0x0);
            }
            _0x51332b[0x0] = _0x44099a[0x0] + (_0x44099a[0x7] << 0x10 | _0x44099a[0x7] >>> 0x10) + (_0x44099a[0x6] << 0x10 | _0x44099a[0x6] >>> 0x10) | 0x0, _0x51332b[0x1] = _0x44099a[0x1] + (_0x44099a[0x0] << 0x8 | _0x44099a[0x0] >>> 0x18) + _0x44099a[0x7] | 0x0, _0x51332b[0x2] = _0x44099a[0x2] + (_0x44099a[0x1] << 0x10 | _0x44099a[0x1] >>> 0x10) + (_0x44099a[0x0] << 0x10 | _0x44099a[0x0] >>> 0x10) | 0x0, _0x51332b[0x3] = _0x44099a[0x3] + (_0x44099a[0x2] << 0x8 | _0x44099a[0x2] >>> 0x18) + _0x44099a[0x1] | 0x0, _0x51332b[0x4] = _0x44099a[0x4] + (_0x44099a[0x3] << 0x10 | _0x44099a[0x3] >>> 0x10) + (_0x44099a[0x2] << 0x10 | _0x44099a[0x2] >>> 0x10) | 0x0, _0x51332b[0x5] = _0x44099a[0x5] + (_0x44099a[0x4] << 0x8 | _0x44099a[0x4] >>> 0x18) + _0x44099a[0x3] | 0x0, _0x51332b[0x6] = _0x44099a[0x6] + (_0x44099a[0x5] << 0x10 | _0x44099a[0x5] >>> 0x10) + (_0x44099a[0x4] << 0x10 | _0x44099a[0x4] >>> 0x10) | 0x0, _0x51332b[0x7] = _0x44099a[0x7] + (_0x44099a[0x6] << 0x8 | _0x44099a[0x6] >>> 0x18) + _0x44099a[0x5] | 0x0;
          };
          _0x43b60e = _0x37b696.lib.StreamCipher;
          var _0x43bc31 = [],
            _0x3db7a2 = [],
            _0x44099a = [],
            _0x3dae38 = _0x37b696.algo.Rabbit = _0x43b60e.extend({
              '_doReset': function () {
                for (var _0x3ab6ff = this._key.words, _0x449b13 = this.cfg.iv, _0x246223 = 0x0; 0x4 > _0x246223; _0x246223++) _0x3ab6ff[_0x246223] = 0xff00ff & (_0x3ab6ff[_0x246223] << 0x8 | _0x3ab6ff[_0x246223] >>> 0x18) | 0xff00ff00 & (_0x3ab6ff[_0x246223] << 0x18 | _0x3ab6ff[_0x246223] >>> 0x8);
                for (var _0x2e26af = this._X = [_0x3ab6ff[0x0], _0x3ab6ff[0x3] << 0x10 | _0x3ab6ff[0x2] >>> 0x10, _0x3ab6ff[0x1], _0x3ab6ff[0x0] << 0x10 | _0x3ab6ff[0x3] >>> 0x10, _0x3ab6ff[0x2], _0x3ab6ff[0x1] << 0x10 | _0x3ab6ff[0x0] >>> 0x10, _0x3ab6ff[0x3], _0x3ab6ff[0x2] << 0x10 | _0x3ab6ff[0x1] >>> 0x10], _0x3ab6ff = this._C = [_0x3ab6ff[0x2] << 0x10 | _0x3ab6ff[0x2] >>> 0x10, 0xffff0000 & _0x3ab6ff[0x0] | 0xffff & _0x3ab6ff[0x1], _0x3ab6ff[0x3] << 0x10 | _0x3ab6ff[0x3] >>> 0x10, 0xffff0000 & _0x3ab6ff[0x1] | 0xffff & _0x3ab6ff[0x2], _0x3ab6ff[0x0] << 0x10 | _0x3ab6ff[0x0] >>> 0x10, 0xffff0000 & _0x3ab6ff[0x2] | 0xffff & _0x3ab6ff[0x3], _0x3ab6ff[0x1] << 0x10 | _0x3ab6ff[0x1] >>> 0x10, 0xffff0000 & _0x3ab6ff[0x3] | 0xffff & _0x3ab6ff[0x0]], _0x246223 = this._b = 0x0; 0x4 > _0x246223; _0x246223++) _0xf572bf.call(this);
                for (_0x246223 = 0x0; 0x8 > _0x246223; _0x246223++) _0x3ab6ff[_0x246223] ^= _0x2e26af[_0x246223 + 0x4 & 0x7];
                if (_0x449b13) {
                  var _0x246223 = _0x449b13.words,
                    _0x449b13 = _0x246223[0x0],
                    _0x246223 = _0x246223[0x1],
                    _0x449b13 = 0xff00ff & (_0x449b13 << 0x8 | _0x449b13 >>> 0x18) | 0xff00ff00 & (_0x449b13 << 0x18 | _0x449b13 >>> 0x8),
                    _0x246223 = 0xff00ff & (_0x246223 << 0x8 | _0x246223 >>> 0x18) | 0xff00ff00 & (_0x246223 << 0x18 | _0x246223 >>> 0x8),
                    _0x2e26af = _0x449b13 >>> 0x10 | 0xffff0000 & _0x246223,
                    _0x500bbc = _0x246223 << 0x10 | 0xffff & _0x449b13;
                  _0x3ab6ff[0x0] ^= _0x449b13, _0x3ab6ff[0x1] ^= _0x2e26af, _0x3ab6ff[0x2] ^= _0x246223, _0x3ab6ff[0x3] ^= _0x500bbc, _0x3ab6ff[0x4] ^= _0x449b13, _0x3ab6ff[0x5] ^= _0x2e26af, _0x3ab6ff[0x6] ^= _0x246223, _0x3ab6ff[0x7] ^= _0x500bbc;
                  for (_0x246223 = 0x0; 0x4 > _0x246223; _0x246223++) _0xf572bf.call(this);
                }
              },
              '_doProcessBlock': function (_0x40d611, _0xb48fb7) {
                var _0x534e1e = this._X;
                _0xf572bf.call(this), _0x43bc31[0x0] = _0x534e1e[0x0] ^ _0x534e1e[0x5] >>> 0x10 ^ _0x534e1e[0x3] << 0x10, _0x43bc31[0x1] = _0x534e1e[0x2] ^ _0x534e1e[0x7] >>> 0x10 ^ _0x534e1e[0x5] << 0x10, _0x43bc31[0x2] = _0x534e1e[0x4] ^ _0x534e1e[0x1] >>> 0x10 ^ _0x534e1e[0x7] << 0x10, _0x43bc31[0x3] = _0x534e1e[0x6] ^ _0x534e1e[0x3] >>> 0x10 ^ _0x534e1e[0x1] << 0x10;
                for (_0x534e1e = 0x0; 0x4 > _0x534e1e; _0x534e1e++) _0x43bc31[_0x534e1e] = 0xff00ff & (_0x43bc31[_0x534e1e] << 0x8 | _0x43bc31[_0x534e1e] >>> 0x18) | 0xff00ff00 & (_0x43bc31[_0x534e1e] << 0x18 | _0x43bc31[_0x534e1e] >>> 0x8), _0x40d611[_0xb48fb7 + _0x534e1e] ^= _0x43bc31[_0x534e1e];
              },
              'blockSize': 0x4,
              'ivSize': 0x2
            });
          _0x37b696.Rabbit = _0x43b60e._createHelper(_0x3dae38), _0x32ac1d.exports = _0x37b696.Rabbit, !0x0;
        }, function (_0x2ca120, _0x373519, _0x4c2e7d) {
          _0x373519 = _0x4c2e7d(0x5), _0x4c2e7d(0xc), _0x4c2e7d(0xd), _0x4c2e7d(0xe), _0x4c2e7d(0xf);
          var _0x243577 = function () {
            for (var _0x6f7fad = this._S, _0x45b9b9 = this._i, _0x223853 = this._j, _0x47fd55 = 0x0, _0x5324c7 = 0x0; 0x4 > _0x5324c7; _0x5324c7++) {
              var _0x45b9b9 = (_0x45b9b9 + 0x1) % 0x100,
                _0x223853 = (_0x223853 + _0x6f7fad[_0x45b9b9]) % 0x100,
                _0x3389f8 = _0x6f7fad[_0x45b9b9];
              _0x6f7fad[_0x45b9b9] = _0x6f7fad[_0x223853], _0x6f7fad[_0x223853] = _0x3389f8, _0x47fd55 |= _0x6f7fad[(_0x6f7fad[_0x45b9b9] + _0x6f7fad[_0x223853]) % 0x100] << 0x18 - 0x8 * _0x5324c7;
            }
            return this._i = _0x45b9b9, this._j = _0x223853, _0x47fd55;
          };
          _0x4c2e7d = _0x373519.lib.StreamCipher;
          var _0x8fca53 = _0x373519.algo,
            _0x3af079 = _0x8fca53.RC4 = _0x4c2e7d.extend({
              '_doReset': function () {
                for (var _0x4ec4a2 = this._key, _0x113113 = _0x4ec4a2.words, _0x4ec4a2 = _0x4ec4a2.sigBytes, _0x3f228d = this._S = [], _0x44f1cf = 0x0; 0x100 > _0x44f1cf; _0x44f1cf++) _0x3f228d[_0x44f1cf] = _0x44f1cf;
                for (var _0x30cc01 = _0x44f1cf = 0x0; 0x100 > _0x44f1cf; _0x44f1cf++) {
                  var _0x473636 = _0x44f1cf % _0x4ec4a2,
                    _0x30cc01 = (_0x30cc01 + _0x3f228d[_0x44f1cf] + (_0x113113[_0x473636 >>> 0x2] >>> 0x18 - 0x8 * (_0x473636 % 0x4) & 0xff)) % 0x100,
                    _0x473636 = _0x3f228d[_0x44f1cf];
                  _0x3f228d[_0x44f1cf] = _0x3f228d[_0x30cc01], _0x3f228d[_0x30cc01] = _0x473636;
                }
                this._i = this._j = 0x0;
              },
              '_doProcessBlock': function (_0x490bff, _0x289e19) {
                _0x490bff[_0x289e19] ^= _0x243577.call(this);
              },
              'keySize': 0x8,
              'ivSize': 0x0
            });
          _0x373519.RC4 = _0x4c2e7d._createHelper(_0x3af079), _0x8fca53 = _0x8fca53.RC4Drop = _0x3af079.extend({
            'cfg': _0x3af079.cfg.extend({
              'drop': 0xc0
            }),
            '_doReset': function () {
              _0x3af079._doReset.call(this);
              for (var _0x4915d5 = this.cfg.drop; 0x0 < _0x4915d5; _0x4915d5--) _0x243577.call(this);
            }
          }), _0x373519.RC4Drop = _0x4c2e7d._createHelper(_0x8fca53), _0x2ca120.exports = _0x373519.RC4, !0x0;
        }],
        _0x3372b9 = function (_0x33ffb7) {
          if (_0x53ab72[_0x33ffb7]) return _0x53ab72[_0x33ffb7].exports;
          var _0x36d7a1 = _0x53ab72[_0x33ffb7] = {
            'exports': {},
            'id': _0x33ffb7,
            'loaded': !0x1
          };
          return _0x3db1a4[_0x33ffb7].call(_0x36d7a1.exports, _0x36d7a1, _0x36d7a1.exports, _0x3372b9), _0x36d7a1.loaded = !0x0, _0x36d7a1.exports;
        },
        _0x53ab72 = {};
      return _0x3372b9.m = _0x3db1a4, _0x3372b9.c = _0x53ab72, _0x3372b9.p = '', _0x3372b9(0x0);
    };
    'object' == typeof exports && 'object' == typeof module ? module.exports = _0x4b5c1b() : 'function' == typeof define && define.amd ? define('SecureLS', [], _0x4b5c1b) : 'object' == typeof exports ? exports.SecureLS = _0x4b5c1b() : this.SecureLS = _0x4b5c1b(), !0x0;
  })(), null !== SecureLS && 'undefined' !== typeof SecureLS && (ig.global.SecureLS = SecureLS, ig.SecureLS = SecureLS);
}), ig.baked = !0x0, ig.module('plugins.font.font-info').requires('impact.impact').defines(function () {
  ig.FontInfo = ig.Class.extend({
    'fonts': [{
      'name': 'infinite-justice',
      'source': 'media/fonts/infinite-justice'
    }, {
      'name': 'archivo-black',
      'source': 'media/fonts/archivo-black'
    }],
    'init': function () {
      this.registerCssFont();
    },
    'registerCssFont': function () {
      if (0x0 < this.fonts.length) {
        var _0x3f470d = document.createElement('style');
        _0x3f470d.type = 'text/css';
        for (var _0x4467ca = '', _0x184fdb = 0x0; _0x184fdb < this.fonts.length; _0x184fdb++) var _0x2f9fbf = this.fonts[_0x184fdb], _0x4467ca = _0x4467ca + ("@font-face {font-family: '" + _0x2f9fbf.name + "';src: url('" + _0x2f9fbf.source + ".eot');src: url('" + _0x2f9fbf.source + ".eot?#iefix') format('embedded-opentype'),url('" + _0x2f9fbf.source + ".woff2') format('woff2'),url('" + _0x2f9fbf.source + ".woff') format('woff'),url('" + _0x2f9fbf.source + ".ttf') format('truetype'),url('" + _0x2f9fbf.source + ".svg#svgFontName') format('svg')}");
        _0x3f470d.appendChild(document.createTextNode(_0x4467ca)), document.head.appendChild(_0x3f470d);
      }
    },
    'isValid': function () {
      for (var _0x569d3c = 0x0; _0x569d3c < this.fonts.length; _0x569d3c++) if (!this._isValidName(this.fonts[_0x569d3c].source)) return !0x1;
      return !0x0;
    },
    '_isValidName': function (_0x2de830) {
      return -0x1 == _0x2de830.search(/^[a-z0-9-\/]+$/) ? !0x1 : !0x0;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.font.font-loader').requires('impact.impact', 'plugins.font.font-info', 'impact.loader').defines(function () {
  ig.FontLoader = ig.Class.extend({
    'fontInfo': new ig.FontInfo(),
    'onload': !0x1,
    'onerror': !0x1,
    'init': function (_0x3667c7, _0x273437) {
      this.onload = _0x3667c7, this.onerror = _0x273437;
    },
    'load': function () {
      this.fontInfo.isValid() ? this._loadByLib() : console.error("Only lowercased alphanumeric and dash are allowed for font file name!. Please check the font path");
    },
    '_loadByLib': function () {
      for (var _0x86a3ab = [], _0x3406d4 = 0x0; _0x3406d4 < this.fontInfo.fonts.length; _0x3406d4++) {
        var _0x360a27 = new FontFaceObserver(this.fontInfo.fonts[_0x3406d4].name);
        _0x86a3ab.push(_0x360a27.load());
      }
      Promise.all(_0x86a3ab).then(this.onload)['catch'](this.onerror);
    }
  }), ig.Loader.inject({
    'parentLoad': !0x1,
    'load': function () {
      this.parentLoad = this.parent, new ig.FontLoader(this.onFontLoad.bind(this), this.onFontError.bind(this)).load();
    },
    'onFontLoad': function () {
      this.parentLoad();
    },
    'onFontError': function () {
      console.error("Font is not loaded"), this.parentLoad();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.handlers.dom-handler').defines(function () {
  ig.DomHandler = ig.Class.extend({
    'JQUERYAVAILABLE': !0x1,
    'init': function () {
      this.JQUERYAVAILABLE = this._jqueryAvailable();
    },
    '_jqueryAvailable': function () {
      return 'undefined' !== typeof jQuery;
    },
    'addEvent': function (_0x44d369, _0x4d5701, _0x2b32f7, _0x3b06c7) {
      if (this.JQUERYAVAILABLE) _0x44d369.on(_0x4d5701, _0x2b32f7);else _0x44d369.addEventListener(_0x4d5701, _0x2b32f7, _0x3b06c7);
    },
    'create': function (_0x12317e) {
      return this.JQUERYAVAILABLE ? $('<' + _0x12317e + '>') : ig.$new(_0x12317e);
    },
    'getElementByClass': function (_0x443ab6) {
      return this.JQUERYAVAILABLE ? $('.' + _0x443ab6) : document.getElementsByClassName(_0x443ab6);
    },
    'getElementById': function (_0x409f31) {
      return this.JQUERYAVAILABLE ? 0x0 < $(_0x409f31).length ? $(_0x409f31) : null : ig.$(_0x409f31);
    },
    'appendChild': function (_0x5b94d8, _0x5cdb8c) {
      this.JQUERYAVAILABLE ? _0x5b94d8.append(_0x5cdb8c) : _0x5b94d8.appendChild(_0x5cdb8c);
    },
    'appendToBody': function (_0x121be0) {
      this.JQUERYAVAILABLE ? $('body').append(_0x121be0) : document.body.appendChild(_0x121be0);
    },
    'resize': function (_0xa9963f, _0x57931b, _0x3521b3) {
      if (this.JQUERYAVAILABLE) _0xa9963f.width(_0x57931b.toFixed(0x2)), _0xa9963f.height(_0x3521b3.toFixed(0x2));else {
        var _0x19a3f7 = _0xa9963f.style.visibility;
        _0x57931b = 'width:' + _0x57931b.toFixed(0x2) + "px; height:" + _0x3521b3.toFixed(0x2) + 'px;', this.attr(_0xa9963f, 'style', _0x57931b), _0xa9963f.style.visibility = _0x19a3f7;
      }
    },
    'resizeOffsetLeft': function (_0x51c5c1, _0x4e7c3b, _0x4a3e03, _0x4d7bd1) {
      if (this.JQUERYAVAILABLE) _0x51c5c1.width(_0x4e7c3b.toFixed(0x2)), _0x51c5c1.height(_0x4a3e03.toFixed(0x2)), _0x51c5c1.css('left', _0x4d7bd1);else {
        var _0x7e1040 = _0x51c5c1.style.visibility;
        _0x4e7c3b = 'width:' + _0x4e7c3b.toFixed(0x2) + "px; height:" + _0x4a3e03.toFixed(0x2) + "px; left: " + _0x4d7bd1.toFixed(0x2) + 'px;', this.attr(_0x51c5c1, 'style', _0x4e7c3b), _0x51c5c1.style.visibility = _0x7e1040;
      }
    },
    'resizeOffset': function (_0x409de9, _0x166eda, _0x5d3957, _0x4cf0bb, _0x3a00ca) {
      if (this.JQUERYAVAILABLE) _0x409de9.width(_0x166eda.toFixed(0x2)), _0x409de9.height(_0x5d3957.toFixed(0x2)), _0x409de9.css('left', _0x4cf0bb), _0x409de9.css('top', _0x3a00ca);else {
        var _0x59a6c3 = _0x409de9.style.visibility;
        _0x166eda = 'width:' + _0x166eda.toFixed(0x2) + "px; height:" + _0x5d3957.toFixed(0x2) + "px; left: " + _0x4cf0bb.toFixed(0x2) + "px; top: " + _0x3a00ca.toFixed(0x2) + 'px;', this.attr(_0x409de9, 'style', _0x166eda), _0x409de9.style.visibility = _0x59a6c3;
      }
    },
    'css': function (_0x3069fc, _0xab59cd) {
      if (this.JQUERYAVAILABLE) _0x3069fc.css(_0xab59cd);else {
        var _0x5a5f3f = '',
          _0x477268;
        for (_0x477268 in _0xab59cd) _0x5a5f3f += _0x477268 + ':' + _0xab59cd[_0x477268] + ';';
        this.attr(_0x3069fc, 'style', _0x5a5f3f);
      }
    },
    'getOffsets': function (_0x77e7f7) {
      return this.JQUERYAVAILABLE ? (_0x77e7f7 = _0x77e7f7.offset(), {
        'left': _0x77e7f7.left,
        'top': _0x77e7f7.top
      }) : {
        'left': _0x77e7f7.offsetLeft,
        'top': _0x77e7f7.offsetTop
      };
    },
    'attr': function (_0x3d9991, _0x376b9c, _0x1b1051) {
      if ('undefined' === typeof _0x1b1051) return this.JQUERYAVAILABLE ? _0x3d9991.attr(_0x376b9c) : _0x3d9991.getAttribute(_0x376b9c);
      this.JQUERYAVAILABLE ? _0x3d9991.attr(_0x376b9c, _0x1b1051) : _0x3d9991.setAttribute(_0x376b9c, _0x1b1051);
    },
    'show': function (_0x36983a) {
      _0x36983a && 'undefined' !== typeof _0x36983a && (this.JQUERYAVAILABLE ? (_0x36983a.show(), _0x36983a.css('visibility', 'visible')) : _0x36983a && (_0x36983a.style ? _0x36983a.style.visibility = 'visible' : _0x36983a[0x0] && (_0x36983a[0x0].style.visibility = 'visible')));
    },
    'hide': function (_0x3e3f97) {
      _0x3e3f97 && 'undefined' !== typeof _0x3e3f97 && (this.JQUERYAVAILABLE ? (_0x3e3f97.hide(), _0x3e3f97.css('visibility', 'hidden')) : _0x3e3f97 && (_0x3e3f97.style ? _0x3e3f97.style.visibility = 'hidden' : _0x3e3f97[0x0] && (_0x3e3f97[0x0].style.visibility = 'hidden')));
    },
    'getQueryVariable': function (_0xbce154) {
      for (var _0xc2b5f = window.location.search.substring(0x1).split('&'), _0x1982e1 = 0x0; _0x1982e1 < _0xc2b5f.length; _0x1982e1++) {
        var _0x2eb056 = _0xc2b5f[_0x1982e1].match(/([^=]+?)=(.+)/);
        if (_0x2eb056 && decodeURIComponent(_0x2eb056[0x1]) == _0xbce154) return decodeURIComponent(_0x2eb056[0x2]);
      }
    },
    'forcedDeviceDetection': function () {
      var _0x199d6d = this.getQueryVariable('device');
      if (_0x199d6d) switch (_0x199d6d) {
        case 'mobile':
          console.log("serving mobile version ..."), ig.ua.mobile = !0x0;
          break;
        case 'desktop':
          console.log("serving desktop version ..."), ig.ua.mobile = !0x1;
          break;
        default:
          console.log("serving universal version ...");
      } else console.log("serving universal version ...");
    },
    'forcedDeviceRotation': function () {
      var _0x1a1a87 = this.getQueryVariable('force-rotate');
      if (_0x1a1a87) switch (_0x1a1a87) {
        case 'portrait':
          console.log("force rotate to portrait"), window.orientation = 0x0;
          break;
        case 'landscape':
          console.log("force rotate to horizontal"), window.orientation = 0x5a;
          break;
        default:
          alert("wrong command/type in param force-rotate. Defaulting value to portrait"), window.orientation = 0x0;
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.handlers.size-handler').requires('plugins.data.vector').defines(function () {
  ig.SizeHandler = ig.Class.extend({
    'portraitMode': !0x1,
    'disableStretchToFitOnMobileFlag': !0x1,
    'enableStretchToFitOnAntiPortraitModeFlag': !0x0,
    'enableScalingLimitsOnMobileFlag': !0x1,
    'minScalingOnMobile': 0x0,
    'maxScalingOnMobile': 0x1,
    'enableStretchToFitOnDesktopFlag': !0x1,
    'enableScalingLimitsOnDesktopFlag': !0x1,
    'minScalingOnDesktop': 0x0,
    'maxScalingOnDesktop': 0x1,
    'desktop': {
      'actualSize': new Vector2(window.innerWidth, window.innerHeight),
      'actualResolution': new Vector2(0x500, 0x2d0)
    },
    'mobile': {
      'actualSize': new Vector2(window.innerWidth, window.innerHeight),
      'actualResolution': new Vector2(0x500, 0x2d0)
    },
    'windowSize': new Vector2(window.innerWidth, window.innerHeight),
    'scaleRatioMultiplier': new Vector2(0x1, 0x1),
    'sizeRatio': new Vector2(0x1, 0x1),
    'scale': 0x1,
    'domHandler': null,
    'dynamicClickableEntityDivs': {},
    'coreDivsToResize': ['#canvas', '#play', '#orientate'],
    'adsToResize': {
      'MobileAdInGamePreroll': {
        'box-width': _SETTINGS.Ad.Mobile.Preroll.Width + 0x2,
        'box-height': _SETTINGS.Ad.Mobile.Preroll.Height + 0x14
      },
      'MobileAdInGameEnd': {
        'box-width': _SETTINGS.Ad.Mobile.End.Width + 0x2,
        'box-height': _SETTINGS.Ad.Mobile.End.Height + 0x14
      },
      'MobileAdInGamePreroll2': {
        'box-width': _SETTINGS.Ad.Mobile.Preroll.Width + 0x2,
        'box-height': _SETTINGS.Ad.Mobile.Preroll.Height + 0x14
      },
      'MobileAdInGameEnd2': {
        'box-width': _SETTINGS.Ad.Mobile.End.Width + 0x2,
        'box-height': _SETTINGS.Ad.Mobile.End.Height + 0x14
      },
      'MobileAdInGamePreroll3': {
        'box-width': _SETTINGS.Ad.Mobile.Preroll.Width + 0x2,
        'box-height': _SETTINGS.Ad.Mobile.Preroll.Height + 0x14
      },
      'MobileAdInGameEnd3': {
        'box-width': _SETTINGS.Ad.Mobile.End.Width + 0x2,
        'box-height': _SETTINGS.Ad.Mobile.End.Height + 0x14
      }
    },
    'init': function (_0x5ccd59) {
      this.domHandler = _0x5ccd59;
      if ('undefined' === typeof _0x5ccd59) throw "undefined Dom Handler for Size Handler";
      this.sizeCalcs(), this.eventListenerSetup(), this.samsungFix();
    },
    'sizeCalcs': function () {
      this.windowSize = new Vector2(window.innerWidth, window.innerHeight);
      if (ig.ua.mobile) {
        this.mobile.actualSize = new Vector2(window.innerWidth, window.innerHeight);
        var _0xdf53da = new Vector2(this.mobile.actualResolution.x, this.mobile.actualResolution.y);
        this.scaleRatioMultiplier = new Vector2(this.mobile.actualSize.x / _0xdf53da.x, this.mobile.actualSize.y / _0xdf53da.y);
        if (this.disableStretchToFitOnMobileFlag) {
          var _0x162ae0 = Math.min(this.scaleRatioMultiplier.x, this.scaleRatioMultiplier.y);
          this.enableScalingLimitsOnMobileFlag && (_0x162ae0 = _0x162ae0.limit(this.minScalingOnMobile, this.maxScalingOnMobile)), this.mobile.actualSize.x = _0xdf53da.x * _0x162ae0, this.mobile.actualSize.y = _0xdf53da.y * _0x162ae0, this.scaleRatioMultiplier.x = _0x162ae0, this.scaleRatioMultiplier.y = _0x162ae0;
        } else this.sizeRatio.x = this.scaleRatioMultiplier.x, this.sizeRatio.y = this.scaleRatioMultiplier.y, this.scaleRatioMultiplier.x = 0x1, this.scaleRatioMultiplier.y = 0x1;
      } else this.desktop.actualSize = new Vector2(window.innerWidth, window.innerHeight), _0xdf53da = new Vector2(this.desktop.actualResolution.x, this.desktop.actualResolution.y), this.scaleRatioMultiplier = new Vector2(this.desktop.actualSize.x / _0xdf53da.x, this.desktop.actualSize.y / _0xdf53da.y), this.enableStretchToFitOnDesktopFlag ? (this.sizeRatio.x = this.scaleRatioMultiplier.x, this.sizeRatio.y = this.scaleRatioMultiplier.y, this.scaleRatioMultiplier.x = 0x1, this.scaleRatioMultiplier.y = 0x1) : (_0x162ae0 = Math.min(this.scaleRatioMultiplier.x, this.scaleRatioMultiplier.y), this.enableScalingLimitsOnDesktopFlag && (_0x162ae0 = _0x162ae0.limit(this.minScalingOnDesktop, this.maxScalingOnDesktop)), this.desktop.actualSize.x = _0xdf53da.x * _0x162ae0, this.desktop.actualSize.y = _0xdf53da.y * _0x162ae0, this.scaleRatioMultiplier.x = _0x162ae0, this.scaleRatioMultiplier.y = _0x162ae0);
    },
    'resizeLayers': function () {
      for (var _0x47937a = 0x0; _0x47937a < this.coreDivsToResize.length; _0x47937a++) {
        var _0x2a87d3 = ig.domHandler.getElementById(this.coreDivsToResize[_0x47937a]);
        if (ig.ua.mobile) {
          if (this.disableStretchToFitOnMobileFlag) {
            var _0x1bd9ce = Math.floor(ig.sizeHandler.windowSize.x / 0x2 - ig.sizeHandler.mobile.actualSize.x / 0x2),
              _0x58bfb3 = Math.floor(ig.sizeHandler.windowSize.y / 0x2 - ig.sizeHandler.mobile.actualSize.y / 0x2);
            0x0 > _0x1bd9ce && (_0x1bd9ce = 0x0), 0x0 > _0x58bfb3 && (_0x58bfb3 = 0x0), ig.domHandler.resizeOffset(_0x2a87d3, Math.floor(ig.sizeHandler.mobile.actualSize.x), Math.floor(ig.sizeHandler.mobile.actualSize.y), _0x1bd9ce, _0x58bfb3);
            var _0x42b72d = !0x1;
            if (this.portraitMode ? window.innerHeight < window.innerWidth : window.innerHeight > window.innerWidth) {
              if (this.enableStretchToFitOnAntiPortraitModeFlag) ig.domHandler.resizeOffset(_0x2a87d3, Math.floor(window.innerWidth), Math.floor(window.innerHeight), 0x0, 0x0);else {
                var _0x42b72d = new Vector2(window.innerWidth / this.mobile.actualResolution.y, window.innerHeight / this.mobile.actualResolution.x),
                  _0x1bd9ce = Math.min(_0x42b72d.x, _0x42b72d.y),
                  _0x42b72d = this.mobile.actualResolution.y * _0x1bd9ce,
                  _0x390c1f = this.mobile.actualResolution.x * _0x1bd9ce,
                  _0x1bd9ce = Math.floor(ig.sizeHandler.windowSize.x / 0x2 - _0x42b72d / 0x2),
                  _0x58bfb3 = Math.floor(ig.sizeHandler.windowSize.y / 0x2 - _0x390c1f / 0x2);
                0x0 > _0x1bd9ce && (_0x1bd9ce = 0x0), 0x0 > _0x58bfb3 && (_0x58bfb3 = 0x0), ig.domHandler.resizeOffset(_0x2a87d3, Math.floor(_0x42b72d), Math.floor(_0x390c1f), _0x1bd9ce, _0x58bfb3);
              }
            }
          } else ig.domHandler.resize(_0x2a87d3, Math.floor(ig.sizeHandler.mobile.actualSize.x), Math.floor(ig.sizeHandler.mobile.actualSize.y));
        } else this.enableStretchToFitOnDesktopFlag ? ig.domHandler.resize(_0x2a87d3, Math.floor(ig.sizeHandler.desktop.actualSize.x), Math.floor(ig.sizeHandler.desktop.actualSize.y)) : (_0x1bd9ce = Math.floor(ig.sizeHandler.windowSize.x / 0x2 - ig.sizeHandler.desktop.actualSize.x / 0x2), _0x58bfb3 = Math.floor(ig.sizeHandler.windowSize.y / 0x2 - ig.sizeHandler.desktop.actualSize.y / 0x2), 0x0 > _0x1bd9ce && (_0x1bd9ce = 0x0), 0x0 > _0x58bfb3 && (_0x58bfb3 = 0x0), ig.domHandler.resizeOffset(_0x2a87d3, Math.floor(ig.sizeHandler.desktop.actualSize.x), Math.floor(ig.sizeHandler.desktop.actualSize.y), _0x1bd9ce, _0x58bfb3));
      }
      for (var _0x5cdb4f in this.adsToResize) _0x47937a = ig.domHandler.getElementById('#' + _0x5cdb4f), _0x2a87d3 = ig.domHandler.getElementById('#' + _0x5cdb4f + '-Box'), _0x42b72d = (window.innerWidth - this.adsToResize[_0x5cdb4f]['box-width']) / 0x2 + 'px', _0x1bd9ce = (window.innerHeight - this.adsToResize[_0x5cdb4f]['box-height']) / 0x2 + 'px', _0x47937a && ig.domHandler.css(_0x47937a, {
        'width': window.innerWidth,
        'height': window.innerHeight
      }), _0x2a87d3 && ig.domHandler.css(_0x2a87d3, {
        'left': _0x42b72d,
        'top': _0x1bd9ce
      });
      _0x47937a = ig.domHandler.getElementById('#canvas'), _0x2a87d3 = ig.domHandler.getOffsets(_0x47937a), _0x47937a = _0x2a87d3.left, _0x2a87d3 = _0x2a87d3.top, _0x42b72d = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y);
      for (_0x5cdb4f in this.dynamicClickableEntityDivs) {
        _0x1bd9ce = ig.domHandler.getElementById('#' + _0x5cdb4f);
        if (ig.ua.mobile) {
          var _0x390c1f = this.dynamicClickableEntityDivs[_0x5cdb4f].entity_pos_x,
            _0x23be16 = this.dynamicClickableEntityDivs[_0x5cdb4f].entity_pos_y,
            _0x1fc166 = this.dynamicClickableEntityDivs[_0x5cdb4f].width,
            _0x58bfb3 = this.dynamicClickableEntityDivs[_0x5cdb4f].height;
          this.disableStretchToFitOnMobileFlag ? (_0x390c1f = Math.floor(_0x47937a + _0x390c1f * this.scaleRatioMultiplier.x) + 'px', _0x23be16 = Math.floor(_0x2a87d3 + _0x23be16 * this.scaleRatioMultiplier.y) + 'px', _0x1fc166 = Math.floor(_0x1fc166 * this.scaleRatioMultiplier.x) + 'px', _0x58bfb3 = Math.floor(_0x58bfb3 * this.scaleRatioMultiplier.y) + 'px') : (_0x390c1f = Math.floor(_0x390c1f * this.sizeRatio.x) + 'px', _0x23be16 = Math.floor(_0x23be16 * this.sizeRatio.y) + 'px', _0x1fc166 = Math.floor(_0x1fc166 * this.sizeRatio.x) + 'px', _0x58bfb3 = Math.floor(_0x58bfb3 * this.sizeRatio.y) + 'px');
        } else _0x390c1f = this.dynamicClickableEntityDivs[_0x5cdb4f].entity_pos_x, _0x23be16 = this.dynamicClickableEntityDivs[_0x5cdb4f].entity_pos_y, _0x1fc166 = this.dynamicClickableEntityDivs[_0x5cdb4f].width, _0x58bfb3 = this.dynamicClickableEntityDivs[_0x5cdb4f].height, this.enableStretchToFitOnDesktopFlag ? (_0x390c1f = Math.floor(_0x390c1f * this.sizeRatio.x) + 'px', _0x23be16 = Math.floor(_0x23be16 * this.sizeRatio.y) + 'px', _0x1fc166 = Math.floor(_0x1fc166 * this.sizeRatio.x) + 'px', _0x58bfb3 = Math.floor(_0x58bfb3 * this.sizeRatio.y) + 'px') : (_0x390c1f = Math.floor(_0x47937a + _0x390c1f * this.scaleRatioMultiplier.x) + 'px', _0x23be16 = Math.floor(_0x2a87d3 + _0x23be16 * this.scaleRatioMultiplier.y) + 'px', _0x1fc166 = Math.floor(_0x1fc166 * this.scaleRatioMultiplier.x) + 'px', _0x58bfb3 = Math.floor(_0x58bfb3 * this.scaleRatioMultiplier.y) + 'px');
        ig.domHandler.css(_0x1bd9ce, {
          'float': 'left',
          'position': 'absolute',
          'left': _0x390c1f,
          'top': _0x23be16,
          'width': _0x1fc166,
          'height': _0x58bfb3,
          'z-index': 0x3
        }), this.dynamicClickableEntityDivs[_0x5cdb4f]['font-size'] && ig.domHandler.css(_0x1bd9ce, {
          'font-size': this.dynamicClickableEntityDivs[_0x5cdb4f]['font-size'] * _0x42b72d + 'px'
        });
      }
      $('#ajaxbar').width(this.windowSize.x), $('#ajaxbar').height(this.windowSize.y);
    },
    'resize': function () {
      this.sizeCalcs(), this.resizeLayers();
    },
    'reorient': function () {
      console.log("changing orientation ...");
      if (ig.ua.mobile) {
        var _0x5d3fd7 = !0x1,
          _0x5d3fd7 = this.portraitMode ? window.innerHeight < window.innerWidth : window.innerHeight > window.innerWidth,
          _0x2f5993 = this.domHandler.getElementById('#orientate'),
          _0x2e928b = this.domHandler.getElementById('#game');
        _0x5d3fd7 ? (this.domHandler.show(_0x2f5993), this.domHandler.hide(_0x2e928b), console.log('portrait' + window.innerWidth + ',' + window.innerHeight)) : (this.domHandler.show(_0x2e928b), this.domHandler.hide(_0x2f5993), console.log('landscape' + window.innerWidth + ',' + window.innerHeight));
      }
      ig.ua.mobile ? (this.resize(), this.resizeAds()) : this.resize();
    },
    'resizeAds': function () {
      for (var _0x4b342c in this.adsToResize) {
        var _0x49d7f3 = ig.domHandler.getElementById('#' + _0x4b342c),
          _0x1b62ea = ig.domHandler.getElementById('#' + _0x4b342c + '-Box'),
          _0x1f2d0f = (window.innerWidth - this.adsToResize[_0x4b342c]['box-width']) / 0x2 + 'px',
          _0x26c1f1 = (window.innerHeight - this.adsToResize[_0x4b342c]['box-height']) / 0x2 + 'px';
        _0x49d7f3 && ig.domHandler.css(_0x49d7f3, {
          'width': window.innerWidth,
          'height': window.innerHeight
        }), _0x1b62ea && ig.domHandler.css(_0x1b62ea, {
          'left': _0x1f2d0f,
          'top': _0x26c1f1
        });
      }
    },
    'samsungFix': function () {
      ig.ua.android && !(4.2 > parseFloat(navigator.userAgent.slice(navigator.userAgent.indexOf('Android') + 0x8, navigator.userAgent.indexOf('Android') + 0xb))) && !(0x0 > navigator.userAgent.indexOf('GT')) && !(0x0 < navigator.userAgent.indexOf('Chrome')) && !(0x0 < navigator.userAgent.indexOf('Firefox')) && (document.addEventListener('touchstart', function (_0x1ff2b6) {
        return _0x1ff2b6.preventDefault(), !0x1;
      }, !0x1), document.addEventListener('touchmove', function (_0x17a1c8) {
        return _0x17a1c8.preventDefault(), !0x1;
      }, !0x1), document.addEventListener('touchend', function (_0x13b081) {
        return _0x13b081.preventDefault(), !0x1;
      }, !0x1));
    },
    'orientationInterval': null,
    'orientationTimeout': null,
    'orientationHandler': function () {
      this.reorient(), window.scrollTo(0x0, 0x1);
    },
    'orientationDelayHandler': function () {
      null == this.orientationInterval && (this.orientationInterval = window.setInterval(this.orientationHandler.bind(this), 0x64)), null == this.orientationTimeout && (this.orientationTimeout = window.setTimeout(function () {
        this.clearAllIntervals();
      }.bind(this), 0x7d0));
    },
    'clearAllIntervals': function () {
      window.clearInterval(this.orientationInterval), this.orientationInterval = null, window.clearTimeout(this.orientationTimeout), this.orientationTimeout = null;
    },
    'eventListenerSetup': function () {
      ig.ua.iOS ? (window.addEventListener('orientationchange', this.orientationDelayHandler.bind(this)), window.addEventListener('resize', this.orientationDelayHandler.bind(this))) : (window.addEventListener('orientationchange', this.orientationHandler.bind(this)), window.addEventListener('resize', this.orientationHandler.bind(this))), document.ontouchmove = function (_0x40f5cb) {
        window.scrollTo(0x0, 0x1), _0x40f5cb.preventDefault();
      }, this.chromePullDownRefreshFix();
    },
    'chromePullDownRefreshFix': function () {
      var _0x15bb70 = window.chrome || navigator.userAgent.match('CriOS'),
        _0x3f985d = 'ontouchstart' in document.documentElement;
      if (_0x15bb70 && _0x3f985d) {
        var _0x5833c5 = _0x15bb70 = !0x1,
          _0x483e42 = 0x0,
          _0x345f32 = !0x1;
        try {
          CSS.supports('overscroll-behavior-y', 'contain') && (_0x15bb70 = !0x0);
        } catch (_0x7774c2) {}
        try {
          if (_0x15bb70) return document.body.style.overscrollBehaviorY = 'contain';
        } catch (_0x4089c3) {}
        _0x15bb70 = document.head || document.body, _0x3f985d = document.createElement('style'), _0x3f985d.type = 'text/css', _0x3f985d.styleSheet ? _0x3f985d.styleSheet.cssText = "\n      ::-webkit-scrollbar {\n        width: 500x;\n      }\n      ::-webkit-scrollbar-thumb {\n        border-radius: 500px;\n        background-color: rgba(0, 0, 0, 0.2);\n      }\n      body {\n        -webkit-overflow-scrolling: auto!important;\n      }\n    " : _0x3f985d.appendChild(document.createTextNode("\n      ::-webkit-scrollbar {\n        width: 500px;\n      }\n      ::-webkit-scrollbar-thumb {\n        border-radius: 500px;\n        background-color: rgba(0, 0, 0, 0.2);\n      }\n      body {\n        -webkit-overflow-scrolling: auto!important;\n      }\n    ")), _0x15bb70.appendChild(_0x3f985d);
        try {
          addEventListener('test', null, {
            get 'passive'() {
              _0x5833c5 = !0x0;
            }
          });
        } catch (_0x2a82cd) {}
        document.addEventListener('touchstart', function (_0x341b0b) {
          0x1 === _0x341b0b.touches.length && (_0x483e42 = _0x341b0b.touches[0x0].clientY, _0x345f32 = 0x0 === window.pageYOffset);
        }, !!_0x5833c5 && {
          'passive': !0x0
        }), document.addEventListener('touchmove', function (_0x26ae9a) {
          var _0x1341db;
          if (_0x1341db = _0x345f32) {
            _0x345f32 = !0x1, _0x1341db = _0x26ae9a.touches[0x0].clientY;
            var _0x77a3ec = _0x1341db - _0x483e42;
            _0x1341db = (_0x483e42 = _0x1341db, 0x0 < _0x77a3ec);
          }
          if (_0x1341db) return _0x26ae9a.preventDefault();
        }, !!_0x5833c5 && {
          'passive': !0x1
        });
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.handlers.api-handler').defines(function () {
  ig.ApiHandler = ig.Class.extend({
    'apiAvailable': {
      'MJSPreroll': function () {
        ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS && _SETTINGS.Ad.Mobile.Preroll.Enabled && MobileAdInGamePreroll.Initialize();
      },
      'MJSHeader': function () {
        ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS.Ad.Mobile.Header.Enabled && MobileAdInGameHeader.Initialize();
      },
      'MJSFooter': function () {
        ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS.Ad.Mobile.Footer.Enabled && MobileAdInGameFooter.Initialize();
      },
      'MJSEnd': function () {
        ig.ua.mobile && ig.domHandler.JQUERYAVAILABLE && _SETTINGS.Ad.Mobile.End.Enabled && MobileAdInGameEnd.Initialize();
      }
    },
    'run': function (_0x312cdd, _0x1b594c) {
      if (this.apiAvailable[_0x312cdd]) this.apiAvailable[_0x312cdd](_0x1b594c);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.sound-player').defines(function () {
  SoundPlayer = ig.Class.extend({
    'tagName': 'SoundPlayer',
    'stayMuteFlag': !0x1,
    'debug': !0x1,
    'init': function () {
      this.debug && console.log(this.tagName);
    },
    'play': function (_0x2728f9) {
      this.debug && console.log("play sound ", _0x2728f9);
    },
    'stop': function () {
      this.debug && console.log("stop sound ");
    },
    'volume': function () {
      this.debug && console.log("set volume");
    },
    'mute': function (_0x210757) {
      this.debug && console.log('mute'), 'undefined' === typeof _0x210757 ? this.stayMuteFlag = !0x0 : _0x210757 && (this.stayMuteFlag = !0x0);
    },
    'unmute': function (_0x269e07) {
      this.debug && console.log('unmute'), 'undefined' === typeof _0x269e07 ? this.stayMuteFlag = !0x1 : _0x269e07 && (this.stayMuteFlag = !0x1);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.impact-music-player').requires('plugins.audio.sound-player').defines(function () {
  ImpactMusicPlayer = SoundPlayer.extend({
    'tagName': 'ImpactMusicPlayer',
    'bgmPlaying': !0x1,
    'soundList': {},
    'init': function (_0xc5bd88, _0x3bfb2f) {
      this.parent(_0xc5bd88, _0x3bfb2f);
      for (var _0x465499 in _0xc5bd88) this.soundList[_0x465499] = _0x465499, ig.music.add(_0xc5bd88[_0x465499].path + '.*', _0x465499);
      _0x3bfb2f && _0x3bfb2f.loop && (ig.music.loop = _0x3bfb2f.loop);
    },
    'play': function (_0x365750) {
      this.stayMuteFlag || (this.bgmPlaying = !0x0, 'undefined' === typeof _0x365750 ? ig.music.play(_0x365750) : ig.music.play());
    },
    'stop': function () {
      this.bgmPlaying = !0x1, ig.music.pause();
    },
    'volume': function (_0x216175) {
      console.log('impactmusic:', _0x216175), ig.music.volume = 0x0 > _0x216175 ? 0x0 : isNaN(_0x216175) ? 0x1 : 0x1 < _0x216175 ? 0x1 : _0x216175;
    },
    'getVolume': function () {
      return ig.music.volume;
    },
    'mute': function (_0x3424d1) {
      this.parent(_0x3424d1), this.bgmPlaying && this.stop();
    },
    'unmute': function (_0x27a084) {
      this.parent(_0x27a084), this.play();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.impact-sound-player').requires('plugins.audio.sound-player').defines(function () {
  ImpactSoundPlayer = SoundPlayer.extend({
    'tagName': 'ImpactSoundPlayer',
    'soundList': {},
    'init': function (_0x3dca70, _0x58ff01) {
      this.parent(_0x3dca70, _0x58ff01);
      for (var _0x425b4b in _0x3dca70) {
        var _0xb6c3fa = new ig.Sound(_0x3dca70[_0x425b4b].path + '.*');
        this.soundList[_0x425b4b] = _0xb6c3fa;
      }
    },
    'play': function (_0x4c6687) {
      this.stayMuteFlag || ('object' === typeof _0x4c6687 ? (console.log(_0x4c6687 + " exists"), _0x4c6687.play()) : 'string' === typeof _0x4c6687 && this.soundList[_0x4c6687].play());
    },
    'stop': function (_0x3fa6f9) {
      this.parent(_0x3fa6f9), _0x3fa6f9.stop();
    },
    'volume': function (_0x12dd29) {
      ig.soundManager.volume = 0x0 > _0x12dd29 ? 0x0 : isNaN(_0x12dd29) ? 0x1 : 0x1 < _0x12dd29 ? 0x1 : _0x12dd29;
    },
    'getVolume': function () {
      return ig.soundManager.volume;
    },
    'mute': function (_0x2f0991) {
      this.parent(_0x2f0991), ig.Sound.enabled = !0x1;
    },
    'unmute': function (_0x22f85a) {
      this.parent(_0x22f85a), ig.Sound.enabled = !0x0;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.howler-player').requires('plugins.audio.sound-player').defines(function () {
  HowlerPlayer = SoundPlayer.extend({
    'tagName': 'HowlerPlayer',
    'soundList': {},
    'init': function (_0x407f16, _0xbd928d) {
      this.parent(_0x407f16, _0xbd928d);
      for (var _0x1253a8 in _0x407f16) {
        var _0x2b7a65 = _0x407f16[_0x1253a8].path,
          _0x2b7a65 = new Howl({
            'src': [_0x2b7a65 + '.' + ig.Sound.FORMAT.OGG.ext, _0x2b7a65 + '.' + ig.Sound.FORMAT.MP3.ext]
          });
        this.soundList[_0x1253a8] = _0x2b7a65;
      }
    },
    'play': function (_0x3ee19d) {
      if (Howler.ctx && 'running' !== Howler.ctx.state) return Howler.ctx.resume();
      this.stayMuteFlag || ('object' === typeof _0x3ee19d ? _0x3ee19d.play() : 'string' === typeof _0x3ee19d && this.soundList[_0x3ee19d].play());
    },
    'stop': function (_0x28f9b1) {
      this.parent(_0x28f9b1), 'object' === typeof _0x28f9b1 ? _0x28f9b1.stop() : 'string' === typeof _0x28f9b1 && this.soundList[_0x28f9b1].stop();
    },
    'volume': function (_0x2f79bb) {
      for (var _0x55bdf8 in this.soundList) {
        if (0x0 > _0x2f79bb) {
          this.soundList[_0x55bdf8].volume(0x0);
          break;
        }
        isNaN(_0x2f79bb) ? this.soundList[_0x55bdf8].volume(0x1) : 0x1 < _0x2f79bb ? this.soundList[_0x55bdf8].volume(0x1) : this.soundList[_0x55bdf8].volume(_0x2f79bb);
      }
    },
    'getVolume': function () {
      for (var _0x5acabe in this.soundList) return this.soundList[_0x5acabe].volume();
    },
    'mute': function (_0x11b92f) {
      this.parent(_0x11b92f), Howler.mute(!0x0);
    },
    'unmute': function (_0x4eef96) {
      this.parent(_0x4eef96), Howler.mute(!0x1);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.howler-music-player').requires('plugins.audio.sound-player').defines(function () {
  HowlerMusicPlayer = SoundPlayer.extend({
    'tagName': 'HowlerMusicPlayer',
    'bgmPlaying': !0x1,
    'soundList': {},
    'init': function (_0xa6fa3e, _0x25042e) {
      this.parent(_0xa6fa3e, _0x25042e);
      for (var _0x58a23b in _0xa6fa3e) {
        var _0x234617 = _0xa6fa3e[_0x58a23b].path,
          _0x234617 = new Howl({
            'src': [_0x234617 + '.' + ig.Sound.FORMAT.OGG.ext, _0x234617 + '.' + ig.Sound.FORMAT.MP3.ext],
            'loop': !0x0,
            'autoplay': !0x1,
            'onend': function () {}.bind(this)
          });
        this.soundList[_0x58a23b] = _0x234617;
      }
    },
    'play': function (_0x329800) {
      if (!this.stayMuteFlag && !this.bgmPlaying) {
        if ('object' === typeof _0x329800) this.bgmPlaying = !0x0, _0x329800.play();else {
          if ('string' === typeof _0x329800) this.bgmPlaying = !0x0, this.soundList[_0x329800].play();else for (var _0x46bafd in this.soundList) {
            this.soundList[_0x46bafd].play(), this.bgmPlaying = !0x0;
            break;
          }
        }
      }
    },
    'stop': function (_0x226023) {
      this.parent(_0x226023);
      if (this.bgmPlaying) {
        for (var _0x19d7c7 in this.soundList) this.soundList[_0x19d7c7].stop();
        this.bgmPlaying = !0x1;
      }
    },
    'volume': function (_0x279285) {
      console.log('howler', _0x279285);
      for (var _0x1c5af5 in this.soundList) {
        if (0x0 > _0x279285) {
          this.soundList[_0x1c5af5].volume(0x0);
          break;
        }
        isNaN(_0x279285) ? this.soundList[_0x1c5af5].volume(0x1) : 0x1 < _0x279285 ? this.soundList[_0x1c5af5].volume(0x1) : this.soundList[_0x1c5af5].volume(_0x279285);
      }
    },
    'getVolume': function () {
      for (var _0x1bf665 in this.soundList) return this.soundList[_0x1bf665].volume();
    },
    'mute': function (_0x385734) {
      this.parent(_0x385734), Howler.mute(!0x0);
    },
    'unmute': function (_0x11313c) {
      this.parent(_0x11313c), Howler.mute(!0x1);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.jukebox-player').requires('plugins.audio.sound-player').defines(function () {
  JukeboxPlayer = SoundPlayer.extend({
    'tagName': 'JukeboxPlayer',
    'bgmPlaying': !0x1,
    'soundList': {},
    'jukeboxPlayer': null,
    'pausePosition': 0x0,
    'premuteVolume': 0x0,
    'minVolume': 0.001,
    'init': function (_0x2c40e1, _0x5ca444) {
      this.parent(_0x2c40e1, _0x5ca444);
      for (var _0x320c09 in _0x2c40e1) {
        this.soundList[_0x320c09] = _0x320c09;
        var _0x483cca = _0x2c40e1[_0x320c09].path;
        this.jukeboxPlayer = new jukebox.Player({
          'resources': [_0x483cca + '.' + ig.Sound.FORMAT.OGG.ext, _0x483cca + '.' + ig.Sound.FORMAT.MP3.ext],
          'autoplay': !0x1,
          'spritemap': {
            'music': {
              'start': _0x2c40e1[_0x320c09].startMp3,
              'end': _0x2c40e1[_0x320c09].endMp3,
              'loop': !0x0
            }
          }
        });
      }
    },
    'play': function () {
      this.stayMuteFlag || (this.bgmPlaying = !0x0, this.pausePosition ? (console.log('resume'), this.jukeboxPlayer.resume(this.pausePosition)) : (console.log('play'), this.jukeboxPlayer.play(this.jukeboxPlayer.settings.spritemap.music.start, !0x0)), this.premuteVolume = this.getVolume());
    },
    'stop': function () {
      this.bgmPlaying = !0x1, this.pausePosition = this.jukeboxPlayer.pause();
    },
    'volume': function (_0x41506e) {
      console.log('jukebox:', _0x41506e), 0x0 >= _0x41506e ? this.jukeboxPlayer.setVolume(this.minVolume) : isNaN(_0x41506e) ? this.jukeboxPlayer.setVolume(0x1) : 0x1 < _0x41506e ? this.jukeboxPlayer.setVolume(0x1) : this.jukeboxPlayer.setVolume(_0x41506e);
    },
    'getVolume': function () {
      return this.jukeboxPlayer.getVolume();
    },
    'mute': function (_0x223ef0) {
      this.parent(_0x223ef0), this.bgmPlaying && (console.log('jukebox', this.premuteVolume), this.stayMuteFlag || (this.premuteVolume = this.getVolume()), this.jukeboxPlayer.pause(), this.jukeboxPlayer.setVolume(this.minVolume));
    },
    'unmute': function (_0x1f3f0f) {
      this.parent(_0x1f3f0f), this.stayMuteFlag || (console.log('jukebox', this.premuteVolume), this.jukeboxPlayer.setVolume(this.premuteVolume), this.jukeboxPlayer.resume());
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.webaudio-music-player').requires('plugins.audio.sound-player').defines(function () {
  WebaudioMusicPlayer = SoundPlayer.extend({
    'tagName': 'WebaudioMusicPlayer',
    'bgmPlaying': !0x1,
    'isSupported': !0x1,
    'muteFlag': !0x1,
    'pausedTime': 0x0,
    'webaudio': null,
    'useHTML5Audio': !0x1,
    'audio': null,
    'inactiveAudio': null,
    'codecs': null,
    'reinitOnPlay': !0x1,
    'inputList': null,
    '_volume': 0x1,
    'soundList': {},
    'init': function (_0x1d9c12) {
      this.webaudio = {
        'compatibility': {},
        'gainNode': null,
        'buffer': null,
        'source_loop': {},
        'source_once': {}
      };
      try {
        Howler && Howler.ctx ? this.webaudio.context = Howler.ctx : ig && ig.webaudio_ctx ? this.webaudio.context = ig.webaudio_ctx : (this.AudioContext = window.AudioContext || window.webkitAudioContext, this.webaudio.context = new this.AudioContext(), ig.webaudio_ctx = this.webaudio.context), this.isSupported = !0x0;
      } catch (_0x12c27a) {
        console.log("Web Audio API not supported in this browser."), this.webaudio = null, this.useHTML5Audio = !0x0;
      }
      if (this.useHTML5Audio) {
        if ('undefined' !== typeof Audio) try {
          new Audio();
        } catch (_0x35fc4c) {
          this.useHTML5Audio = !0x1;
        } else this.useHTML5Audio = !0x1;
      }
      this.useHTML5Audio && (this.audio = new Audio(), this.isSupported = !0x0, this.initHTML5Audio(_0x1d9c12));
      if (!this.isSupported) return null;
      this.webaudio && (this.inputList = _0x1d9c12, this.initWebAudio(_0x1d9c12));
    },
    'initWebAudio': function (_0xbff09e) {
      ig.ua.iOS && this.initIOSWebAudioUnlock(), this.webaudio.gainNode = 'undefined' === typeof this.webaudio.context.createGain ? this.webaudio.context.createGainNode() : this.webaudio.context.createGain(), this.webaudio.gainNode.connect(this.webaudio.context.destination), this.webaudio.gainNode.gain.value = this._volume, this.webaudio.buffer = null;
      var _0x38af35 = 'start',
        _0x20e2a5 = 'stop',
        _0x5cf184 = this.webaudio.context.createBufferSource();
      'function' !== typeof _0x5cf184.start && (_0x38af35 = 'noteOn'), this.webaudio.compatibility.start = _0x38af35, 'function' !== typeof _0x5cf184.stop && (_0x20e2a5 = 'noteOff'), this.webaudio.compatibility.stop = _0x20e2a5;
      for (var _0x35a2be in _0xbff09e) {
        this.soundList[_0x35a2be] = _0x35a2be;
        var _0x20e2a5 = _0xbff09e[_0x35a2be].path,
          _0x38af35 = _0x20e2a5 + '.' + ig.Sound.FORMAT.MP3.ext,
          _0x4d18bd = _0x20e2a5 + '.' + ig.Sound.FORMAT.OGG.ext;
        ig.ua.mobile ? ig.ua.iOS && (_0x4d18bd = _0x38af35) : (_0x20e2a5 = navigator.userAgent.toLowerCase(), -0x1 != _0x20e2a5.indexOf('safari') && -0x1 >= _0x20e2a5.indexOf('chrome') && (_0x4d18bd = _0x38af35), _0x20e2a5.indexOf('win64') && (_0x4d18bd = _0x38af35));
        var _0x180b25 = new XMLHttpRequest();
        _0x180b25.open('GET', _0x4d18bd, !0x0), _0x180b25.responseType = 'arraybuffer', _0x180b25.onload = function () {
          this.webaudio.context.decodeAudioData(_0x180b25.response, function (_0x26cacc) {
            this.webaudio.buffer = _0x26cacc, this.webaudio.source_loop = {}, this.bgmPlaying ? this.play(null, !0x0) : this.stop();
          }.bind(this), function () {
            console.log("Error decoding audio \"" + _0x4d18bd + "\".");
          });
        }.bind(this), _0x180b25.send();
        if (0x4 == _0x180b25.readyState && 'undefined' !== typeof Audio) {
          this.useHTML5Audio = !0x0;
          try {
            new Audio();
          } catch (_0x44803d) {
            this.useHTML5Audio = !0x1;
          }
          this.useHTML5Audio && (console.log("Using HTML5 Audio"), this.webaudio = null, this.audio = new Audio(), this.isSupported = !0x0, this.initHTML5Audio(_0xbff09e));
        }
        break;
      }
    },
    'initIOSWebAudioUnlock': function () {
      if (this.webaudio) {
        webaudio = this.webaudio;
        var _0x286091 = function () {
          var _0x3c6564 = webaudio.context,
            _0x4bcb25 = _0x3c6564.createBuffer(0x1, 0x1, 0x5622),
            _0x2dae2b = _0x3c6564.createBufferSource();
          _0x2dae2b.buffer = _0x4bcb25, _0x2dae2b.connect(_0x3c6564.destination), 'undefined' === typeof _0x2dae2b.start ? _0x2dae2b.noteOn(0x0) : _0x2dae2b.start(0x0), setTimeout(function () {
            (_0x2dae2b.playbackState === _0x2dae2b.PLAYING_STATE || _0x2dae2b.playbackState === _0x2dae2b.FINISHED_STATE) && window.removeEventListener('touchend', _0x286091, !0x1);
          }.bind(this), 0x0);
        };
        window.addEventListener('touchend', _0x286091, !0x1);
      }
    },
    'initHTML5Audio': function (_0x55e7e6) {
      if (this.useHTML5Audio && this.audio) {
        var _0x363514 = this.audio;
        this.codecs = {}, this.codecs = {
          'mp3': !!_0x363514.canPlayType('audio/mpeg;').replace(/^no$/, ''),
          'opus': !!_0x363514.canPlayType("audio/ogg; codecs=\"opus\"").replace(/^no$/, ''),
          'ogg': !!_0x363514.canPlayType("audio/ogg; codecs=\"vorbis\"").replace(/^no$/, ''),
          'wav': !!_0x363514.canPlayType("audio/wav; codecs=\"1\"").replace(/^no$/, ''),
          'aac': !!_0x363514.canPlayType('audio/aac;').replace(/^no$/, ''),
          'm4a': !!(_0x363514.canPlayType('audio/x-m4a;') || _0x363514.canPlayType('audio/m4a;') || _0x363514.canPlayType('audio/aac;')).replace(/^no$/, ''),
          'mp4': !!(_0x363514.canPlayType('audio/x-mp4;') || _0x363514.canPlayType('audio/mp4;') || _0x363514.canPlayType('audio/aac;')).replace(/^no$/, ''),
          'weba': !!_0x363514.canPlayType("audio/webm; codecs=\"vorbis\"").replace(/^no$/, '')
        }, this.is = {
          'ff': Boolean(null != window.mozInnerScreenX && /firefox/.test(navigator.userAgent.toLowerCase())),
          'ie': Boolean(document.all && !window.opera),
          'opera': Boolean(window.opera),
          'chrome': Boolean(window.chrome),
          'safari': Boolean(!window.chrome && /safari/.test(navigator.userAgent.toLowerCase()) && window.getComputedStyle && !window.globalStorage && !window.opera)
        }, this.playDelay = -0x3c, this.stopDelay = 0x1e, this.is.chrome && (this.playDelay = -0x19), this.is.chrome && (this.stopDelay = 0x19), this.is.ff && (this.playDelay = -0x19), this.is.ff && (this.stopDelay = 0x55), this.is.opera && (this.playDelay = 0x5), this.is.opera && (this.stopDelay = 0x0);
        for (var _0x382737 in _0x55e7e6) {
          this.soundList[_0x382737] = _0x382737;
          var _0xe92aaf = _0x55e7e6[_0x382737].path,
            _0x363514 = _0xe92aaf + '.' + ig.Sound.FORMAT.OGG.ext,
            _0xe92aaf = _0xe92aaf + '.' + ig.Sound.FORMAT.MP3.ext,
            _0x5ef4b4 = null;
          this.codecs[ig.Sound.FORMAT.OGG.ext.toLowerCase()] ? _0x5ef4b4 = _0x363514 : this.codecs[ig.Sound.FORMAT.MP3.ext.toLowerCase()] && (_0x5ef4b4 = _0xe92aaf);
          if (_0x5ef4b4) {
            ig.ua.mobile ? ig.ua.iOS && (_0x5ef4b4 = _0xe92aaf) : (_0x55e7e6 = navigator.userAgent.toLowerCase(), -0x1 != _0x55e7e6.indexOf('safari') && -0x1 >= _0x55e7e6.indexOf('chrome') && (_0x5ef4b4 = _0xe92aaf)), this.audio.addEventListener('error', function () {
              this.audio.error && 0x4 === this.audio.error.code && (this.isSupported = !0x1);
            }, !0x1), this.audio.src = _0x5ef4b4, this.audio._pos = 0x0, this.audio.preload = 'auto', this.audio.volume = this._volume, this.inactiveAudio = new Audio(), this.inactiveAudio.src = _0x5ef4b4, this.inactiveAudio._pos = 0x0, this.inactiveAudio.preload = 'auto', this.inactiveAudio.volume = this._volume, this.inactiveAudio.load();
            var _0x2dd8db = function () {
              this._duration = this.audio.duration, this._loaded || (this._loaded = !0x0), this.bgmPlaying ? this.play(null, !0x0) : this.stop(), this.audio.removeEventListener('canplaythrough', _0x2dd8db, !0x1);
            }.bind(this);
            this.audio.addEventListener('canplaythrough', _0x2dd8db, !0x1), this.audio.load();
            break;
          }
        }
      }
    },
    'play': function (_0x3963fc, _0x53bc6c) {
      if (this.isSupported) {
        if (this.bgmPlaying = !0x0, this.webaudio) {
          if (!_0x53bc6c && this.reinitOnPlay && this.webaudio.source_loop.buffer == this.webaudio.buffer) {
            if (this.webaudio.source_loop._playing && (this.webaudio.source_loop[this.webaudio.compatibility.stop](0x0), this.webaudio.source_loop._playing = !0x1, this.pausedTime += this.webaudio.context.currentTime - this.webaudio.source_loop._startTime, this.pausedTime %= this.webaudio.source_loop.buffer.duration, this.webaudio.source_loop._startTime = 0x0, 'noteOn' === this.webaudio.compatibility.start)) this.webaudio.source_once[this.webaudio.compatibility.stop](0x0);
            try {
              this.webaudio.context.close(), this.webaudio.context = new this.AudioContext(), this.webaudio.gainNode = this.webaudio.context.createGain(), this.webaudio.gainNode.connect(this.webaudio.context.destination), this.webaudio.gainNode.gain.value = this._volume;
              var _0x1d2c4e = 'start',
                _0x2d93c8 = 'stop',
                _0xe9852 = this.webaudio.context.createBufferSource();
              'function' !== typeof _0xe9852.start && (_0x1d2c4e = 'noteOn'), this.webaudio.compatibility.start = _0x1d2c4e, 'function' !== typeof _0xe9852.stop && (_0x2d93c8 = 'noteOff'), this.webaudio.compatibility.stop = _0x2d93c8, this.webaudio.source_loop = {}, this.play(null, !0x0);
            } catch (_0x4f7c1a) {}
          }
          if (this.webaudio.buffer) {
            if (!this.muteFlag && (this.bgmPlaying = !0x0, !this.webaudio.source_loop._playing)) {
              this.webaudio.source_loop = this.webaudio.context.createBufferSource(), this.webaudio.source_loop.buffer = this.webaudio.buffer, this.webaudio.source_loop.loop = !0x0, this.webaudio.source_loop.connect(this.webaudio.gainNode);
              if (null == _0x3963fc || isNaN(_0x3963fc)) _0x3963fc = 0x0, this.pausedTime && (_0x3963fc = this.pausedTime);
              this.webaudio.source_loop._startTime = this.webaudio.context.currentTime;
              if ('noteOn' === this.webaudio.compatibility.start) this.webaudio.source_once = this.webaudio.context.createBufferSource(), this.webaudio.source_once.buffer = this.webaudio.buffer, this.webaudio.source_once.connect(this.webaudio.gainNode), this.webaudio.source_once.noteGrainOn(0x0, _0x3963fc, this.webaudio.buffer.duration - _0x3963fc), this.webaudio.source_loop[this.webaudio.compatibility.start](this.webaudio.context.currentTime + (this.webaudio.buffer.duration - _0x3963fc));else this.webaudio.source_loop[this.webaudio.compatibility.start](0x0, _0x3963fc);
              this.webaudio.source_loop._playing = !0x0;
            }
          } else this.bgmPlaying = !0x0;
        } else {
          if (this.audio) {
            var _0x1b72bb = this.audio;
            if (!this.muteFlag) {
              if (this.bgmPlaying = !0x0, isNaN(_0x3963fc) && (_0x3963fc = 0x0, this.pausedTime && (_0x3963fc = this.pausedTime)), _0x1d2c4e = this._duration - _0x3963fc, this._onEndTimer && (clearTimeout(this._onEndTimer), this._onEndTimer = null), this._onEndTimer = setTimeout(function () {
                this.audio.currentTime = 0x0, this.audio.pause(), this.pausedTime = 0x0;
                if (this.inactiveAudio) {
                  var _0x2bd210 = this.audio;
                  this.audio = this.inactiveAudio, this.inactiveAudio = _0x2bd210;
                }
                this.play();
              }.bind(this), 0x3e8 * _0x1d2c4e + this.playDelay), 0x4 === _0x1b72bb.readyState || !_0x1b72bb.readyState && navigator.isCocoonJS) _0x1b72bb.readyState = 0x4, _0x1b72bb.currentTime = _0x3963fc, _0x1b72bb.muted = this.muteFlag || _0x1b72bb.muted, _0x1b72bb.volume = this._volume, setTimeout(function () {
                _0x1b72bb.play();
              }, 0x0);else {
                clearTimeout(this._onEndTimer), this._onEndTimer = null;
                var _0x10c3bf = function () {
                  typeof ('function' == this.play) && (this.play(), _0x1b72bb.removeEventListener('canplaythrough', _0x10c3bf, !0x1));
                }.bind(this);
                _0x1b72bb.addEventListener('canplaythrough', _0x10c3bf, !0x1);
              }
            }
          }
        }
      }
    },
    'stop': function () {
      this.bgmPlaying = !0x1;
      if (this.isSupported) {
        if (this.webaudio) {
          if (this.webaudio.source_loop._playing && (this.webaudio.source_loop[this.webaudio.compatibility.stop](0x0), this.webaudio.source_loop._playing = !0x1, this.pausedTime += this.webaudio.context.currentTime - this.webaudio.source_loop._startTime, this.pausedTime %= this.webaudio.source_loop.buffer.duration, this.webaudio.source_loop._startTime = 0x0, 'noteOn' === this.webaudio.compatibility.start)) this.webaudio.source_once[this.webaudio.compatibility.stop](0x0);
        } else {
          if (this.audio) {
            var _0x1e0a45 = this.audio;
            0x4 == _0x1e0a45.readyState && (this.pausedTime = _0x1e0a45.currentTime, _0x1e0a45.currentTime = 0x0, _0x1e0a45.pause(), clearTimeout(this._onEndTimer), this._onEndTimer = null);
          }
        }
      }
    },
    'volume': function (_0x1fabdc) {
      if (isNaN(_0x1fabdc) || null == _0x1fabdc) return this.getVolume();
      this.isSupported && (this._volume = _0x1fabdc, 0x0 > this._volume ? this._volume = 0x0 : 0x1 < this._volume && (this._volume = 0x1), this.webaudio ? this.webaudio.gainNode && (this.webaudio.gainNode.gain.value = this._volume) : this.audio && (this.audio.volume = this._volume, this.inactiveAudio && (this.inactiveAudio.volume = this._volume)));
    },
    'getVolume': function () {
      return !this.isSupported ? 0x0 : this._volume;
    },
    'mute': function (_0x1215ee) {
      this.parent(_0x1215ee), !0x1 == this.muteFlag && (this.muteFlag = !0x0, this.bgmPlaying && (this.stop(), this.bgmPlaying = !0x0));
    },
    'unmute': function (_0x2923f7) {
      this.parent(_0x2923f7), !this.stayMuteFlag && !0x0 == this.muteFlag && (this.muteFlag = !0x1, this.bgmPlaying && this.play());
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.sound-info').defines(function () {
  SoundInfo = ig.Class.extend({
    'FORMATS': {
      'OGG': '.ogg',
      'MP3': '.mp3'
    },
    'sfx': {
      'logosplash1': {
        'path': 'media/audio/opening/logosplash1'
      },
      'logosplash2': {
        'path': 'media/audio/opening/logosplash2'
      },
      'button': {
        'path': 'media/audio/game/button'
      },
      'click': {
        'path': 'media/audio/game/click'
      },
      'buttonSwoosh': {
        'path': 'media/audio/game/button-swoosh'
      },
      'screenSwoosh': {
        'path': 'media/audio/game/screen-swoosh'
      },
      'popupSwing': {
        'path': 'media/audio/game/popup-swing'
      },
      'carLoop': {
        'path': 'media/audio/game/car-loop'
      },
      'carBump': {
        'path': 'media/audio/game/car-bump'
      },
      'carBoost': {
        'path': 'media/audio/game/car-boost'
      },
      'carBoost2': {
        'path': 'media/audio/game/car-boost2'
      },
      'readySetGo': {
        'path': 'media/audio/game/ready-set-go'
      },
      'rev1': {
        'path': 'media/audio/game/rev1'
      },
      'rev2': {
        'path': 'media/audio/game/rev2'
      },
      'rev3': {
        'path': 'media/audio/game/rev3'
      },
      'rev4': {
        'path': 'media/audio/game/rev4'
      },
      'finish': {
        'path': 'media/audio/game/finish'
      },
      'fuel': {
        'path': 'media/audio/game/fuel'
      },
      'coin': {
        'path': 'media/audio/game/coin'
      },
      'charging': {
        'path': 'media/audio/game/charging'
      },
      'merging': {
        'path': 'media/audio/game/merging'
      },
      'openFreeChest': {
        'path': 'media/audio/game/chest-small'
      },
      'openPremiumChest': {
        'path': 'media/audio/game/chest-big'
      },
      'postgame': {
        'path': 'media/audio/game/postgame'
      }
    },
    'bgm': {
      'background': {
        'path': 'media/audio/bgm',
        'startOgg': 0x0,
        'endOgg': 21.463,
        'startMp3': 0x0,
        'endMp3': 21.463
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.audio.sound-handler').requires('plugins.audio.impact-music-player', 'plugins.audio.impact-sound-player', 'plugins.audio.howler-player', 'plugins.audio.howler-music-player', 'plugins.audio.jukebox-player', 'plugins.audio.webaudio-music-player', 'plugins.audio.sound-info').defines(function () {
  ig.SoundHandler = ig.Class.extend({
    'bgmPlayer': null,
    'sfxPlayer': null,
    'focusBlurMute': !0x1,
    'soundInfo': new SoundInfo(),
    'init': function () {
      console.log("Initiating sound handler"), ig.ua.mobile ? (this.sfxPlayer = new HowlerPlayer(this.soundInfo.sfx), this.bgmPlayer = new WebaudioMusicPlayer(this.soundInfo.bgm, {
        'loop': !0x0
      }), this.bgmPlayer.isSupported || (this.bgmPlayer = new JukeboxPlayer(this.soundInfo.bgm, {
        'loop': !0x0
      }))) : (this.sfxPlayer = new HowlerPlayer(this.soundInfo.sfx), this.bgmPlayer = new WebaudioMusicPlayer(this.soundInfo.bgm, {
        'loop': !0x0
      }), this.bgmPlayer.isSupported || (this.bgmPlayer = new ImpactMusicPlayer(this.soundInfo.bgm, {
        'loop': !0x0
      })));
    },
    'unlockWebAudio': function () {
      Howler && (Howler.ctx && 'running' !== Howler.ctx.state && Howler.ctx.resume(), Howler._audioUnlocked || 'function' === typeof Howler._unlockAudio && Howler._unlockAudio()), ig && ig.webaudio_ctx && ig.webaudio_ctx.state && 'running' !== ig.webaudio_ctx.state && ig.webaudio_ctx.resume(), this.bgmPlayer.webaudio && this.bgmPlayer.webaudio.context && this.bgmPlayer.webaudio.context.state && 'running' !== this.bgmPlayer.webaudio.context.state && this.bgmPlayer.webaudio.context.resume();
    },
    'checkBGM': function () {
      return this.bgmPlayer.stayMuteFlag;
    },
    'checkSFX': function () {
      return this.sfxPlayer.stayMuteFlag;
    },
    'muteSFX': function (_0x1e3209) {
      this.sfxPlayer && this.sfxPlayer.mute(_0x1e3209);
    },
    'muteBGM': function (_0x4d21e2) {
      this.bgmPlayer && this.bgmPlayer.mute(_0x4d21e2);
    },
    'unmuteSFX': function (_0x3fdecf) {
      this.sfxPlayer && this.sfxPlayer.unmute(_0x3fdecf);
    },
    'unmuteBGM': function (_0xde5859) {
      this.bgmPlayer && this.bgmPlayer.unmute(_0xde5859);
    },
    'muteAll': function (_0x49e573) {
      this.muteSFX(_0x49e573), this.muteBGM(_0x49e573);
    },
    'unmuteAll': function (_0x15be99) {
      this.unlockWebAudio(), this.unmuteSFX(_0x15be99), this.unmuteBGM(_0x15be99);
    },
    'forceMuteAll': function () {
      this.focusBlurMute || this.muteAll(!0x1), this.focusBlurMute = !0x0;
    },
    'forceUnMuteAll': function () {
      this.focusBlurMute && (this.unmuteAll(!0x1), this.focusBlurMute = !0x1);
    },
    'saveVolume': function () {
      this.sfxPlayer && ig.game.io.storageSet('soundVolume', this.sfxPlayer.getVolume()), this.bgmPlayer && ig.game.io.storageSet('musicVolume', this.bgmPlayer.getVolume());
    },
    'forceLoopBGM': function () {
      var _0x2873a4;
      if (!this.focusBlurMute && this.bgmPlayer.bgmPlaying && this.bgmPlayer) {
        var _0x12021c = this.bgmPlayer.jukeboxPlayer;
        if (_0x12021c) {
          null != window.mozInnerScreenX && /firefox/.test(navigator.userAgent.toLowerCase()), _0x2873a4 = Boolean(window.chrome), !window.chrome && /safari/.test(navigator.userAgent.toLowerCase());
          var _0x6f904a = 0.1;
          ig.ua.mobile && (_0x6f904a = 0.115, ig.ua.android && (_0x6f904a = 0.45, _0x2873a4 && (_0x6f904a = 0.3))), _0x12021c.settings.spritemap.music && (_0x2873a4 = _0x12021c.settings.spritemap.music.end - _0x6f904a, _0x12021c.getCurrentTime() >= _0x2873a4 && (_0x2873a4 = _0x12021c.settings.spritemap.music.start, ig.ua.android ? this.forcelooped || (_0x12021c.play(_0x2873a4, !0x0), this.forcelooped = !0x0, setTimeout(function () {
            ig.soundHandler.forcelooped = !0x1;
          }, _0x6f904a)) : _0x12021c.setCurrentTime(_0x2873a4)));
        } else 'ImpactMusicPlayer' == this.bgmPlayer.tagName && (null != window.mozInnerScreenX && /firefox/.test(navigator.userAgent.toLowerCase()), _0x2873a4 = Boolean(window.chrome), !window.chrome && /safari/.test(navigator.userAgent.toLowerCase()), _0x6f904a = 0.1, ig.ua.mobile && (_0x6f904a = 0.115, ig.ua.android && (_0x6f904a = 0.45, _0x2873a4 && (_0x6f904a = 0.3))), _0x12021c = 0x0, 'mp3' == ig.soundManager.format.ext && (_0x12021c = 0.05), ig.music.currentTrack && (_0x2873a4 = ig.music.currentTrack.duration - _0x6f904a, ig.music.currentTrack.currentTime >= _0x2873a4 && (ig.ua.android ? this.forcelooped || (ig.music.currentTrack.pause(), ig.music.currentTrack.currentTime = _0x12021c, ig.music.currentTrack.play(), this.forcelooped = !0x0, setTimeout(function () {
          ig.soundHandler.forcelooped = !0x1;
        }, _0x6f904a)) : ig.music.currentTrack.currentTime = _0x12021c)));
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.handlers.visibility-handler').requires('plugins.audio.sound-handler').defines(function () {
  ig.VisibilityHandler = ig.Class.extend({
    'version': '1.0.2',
    'config': {
      'allowResumeWithoutFocus': {
        'desktop': !0x0,
        'mobile': {
          'kaios': !0x1,
          'default': !0x0
        }
      },
      'handlerDelay': {
        'desktop': 0x0,
        'mobile': {
          'kaios': 0x0,
          'default': 0x0
        }
      },
      'autoFocusOnResume': {
        'desktop': !0x0,
        'mobile': {
          'kaios': !0x1,
          'default': !0x0
        }
      },
      'autoFocusAfterResume': {
        'desktop': !0x0,
        'mobile': {
          'kaios': !0x1,
          'default': !0x0
        }
      }
    },
    'browserPrefixes': ['o', 'ms', 'moz', 'webkit'],
    'browserPrefix': null,
    'hiddenPropertyName': null,
    'visibilityEventName': null,
    'visibilityStateName': null,
    'isShowingOverlay': !0x1,
    'isFocused': !0x1,
    'isPaused': !0x1,
    'init': function () {
      this.initVisibilityHandler(), this.initFocusHandler(), this.initPageTransitionHandler(), ig.visibilityHandler = this;
    },
    'pauseHandler': function () {
      ig.game && ig.game.pauseGame(), ig.soundHandler && ig.soundHandler.forceMuteAll();
    },
    'resumeHandler': function () {
      ig.game && ig.game.resumeGame(), ig.soundHandler && ig.soundHandler.forceUnMuteAll();
    },
    'initVisibilityHandler': function () {
      this.browserPrefix = this.getBrowserPrefix(), this.hiddenPropertyName = this.getHiddenPropertyName(this.browserPrefix), this.visibilityEventName = this.getVisibilityEventName(this.browserPrefix), this.visibilityStateName = this.getVisibilityStateName(this.browserPrefix), this.visibilityEventName && document.addEventListener(this.visibilityEventName, this.onChange.bind(this), !0x0);
    },
    'initFocusHandler': function () {
      window.addEventListener('blur', this.onChange.bind(this), !0x0), document.addEventListener('blur', this.onChange.bind(this), !0x0), document.addEventListener('focusout', this.onChange.bind(this), !0x0), window.addEventListener('focus', this.onChange.bind(this), !0x0), document.addEventListener('focus', this.onChange.bind(this), !0x0), document.addEventListener('focusin', this.onChange.bind(this), !0x0);
    },
    'initPageTransitionHandler': function () {
      window.addEventListener('pagehide', this.onChange.bind(this), !0x0), window.addEventListener('pageshow', this.onChange.bind(this), !0x0);
    },
    'getBrowserPrefix': function () {
      var _0x1cd2eb = null;
      return this.browserPrefixes.forEach(function (_0x2ecdbd) {
        if (this.getHiddenPropertyName(_0x2ecdbd) in document) return _0x1cd2eb = _0x2ecdbd;
      }.bind(this)), _0x1cd2eb;
    },
    'getHiddenPropertyName': function (_0x3cbd6e) {
      return _0x3cbd6e ? _0x3cbd6e + 'Hidden' : 'hidden';
    },
    'getVisibilityEventName': function (_0x356192) {
      return (_0x356192 ? _0x356192 : '') + 'visibilitychange';
    },
    'getVisibilityStateName': function (_0x5effa8) {
      return _0x5effa8 ? _0x5effa8 + 'VisibilityState' : 'visibilityState';
    },
    'hasView': function () {
      return !(document[this.hiddenPropertyName] || 'visible' !== document[this.visibilityStateName]);
    },
    'hasFocus': function () {
      return document.hasFocus() || this.isFocused;
    },
    'onOverlayShow': function () {
      this.systemPaused(), this.isShowingOverlay = !0x0;
    },
    'onOverlayHide': function () {
      this.isShowingOverlay = !0x1, this.systemResumed();
    },
    'systemPaused': function () {
      if (this.isPaused) return !0x1;
      return this.pauseHandler(), this.isPaused = !0x0;
    },
    'systemResumed': function () {
      if (!this.isPaused || !this.hasView() || this.isShowingOverlay) return !0x1;
      if (!this.hasFocus()) {
        if (ig.ua.mobile) {
          if (this.isKaiOS()) {
            if (!this.config.allowResumeWithoutFocus.mobile.kaios) return !0x1;
          } else {
            if (!this.config.allowResumeWithoutFocus.mobile['default']) return !0x1;
          }
        } else {
          if (!this.config.allowResumeWithoutFocus.desktop) return !0x1;
        }
      }
      return this.focusOnResume(), this.resumeHandler(), this.focusAfterResume(), this.isPaused = !0x1, !0x0;
    },
    'isKaiOS': function () {
      return /KAIOS/.test(navigator.userAgent) || !0x1;
    },
    'focusOnResume': function () {
      return ig.ua.mobile ? this.isKaiOS() ? this.config.autoFocusOnResume.mobile.kaios : this.config.autoFocusOnResume.mobile['default'] : this.config.autoFocusOnResume.desktop;
    },
    'focusAfterResume': function () {
      return ig.ua.mobile ? this.isKaiOS() ? this.config.autoFocusAfterResume.mobile.kaios : this.config.autoFocusAfterResume.mobile['default'] : this.config.autoFocusAfterResume.desktop;
    },
    'focus': function (_0x298b00) {
      window.focus && _0x298b00 && window.focus();
    },
    'handleDelayedEvent': function (_0x43b5e9) {
      if (!this.hasView() || 'pause' === _0x43b5e9.type || 'pageHide' === _0x43b5e9.type || 'blur' === _0x43b5e9.type || 'focusout' === _0x43b5e9.type) {
        if ('blur' === _0x43b5e9.type || 'focusout' === _0x43b5e9.type) this.isFocused = !0x1;
        return this.systemPaused(_0x43b5e9);
      }
      if ('focus' === _0x43b5e9.type || 'focusin' === _0x43b5e9.type) this.isFocused = !0x0;
      return this.systemResumed(_0x43b5e9);
    },
    'startDelayedEventHandler': function (_0x566f45) {
      ig.ua.mobile ? this.isKaiOS() ? 0x0 < this.config.handlerDelay.mobile.kaios ? window.setTimeout(function (_0x487f44) {
        this.handleDelayedEvent(_0x487f44);
      }.bind(this, _0x566f45), this.config.handlerDelay.mobile) : this.handleDelayedEvent(_0x566f45) : 0x0 < this.config.handlerDelay.mobile['default'] ? window.setTimeout(function (_0x549189) {
        this.handleDelayedEvent(_0x549189);
      }.bind(this, _0x566f45), this.config.handlerDelay.mobile) : this.handleDelayedEvent(_0x566f45) : 0x0 < this.config.handlerDelay.desktop ? window.setTimeout(function (_0x2088d5) {
        this.handleDelayedEvent(_0x2088d5);
      }.bind(this, _0x566f45), this.config.handlerDelay.desktop) : this.handleDelayedEvent(_0x566f45);
    },
    'onChange': function (_0x5dfe39) {
      this.startDelayedEventHandler(_0x5dfe39);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.storage').defines(function () {
  ig.Storage = ig.Class.extend({
    'staticInstantiate': function () {
      return !ig.Storage.instance ? null : ig.Storage.instance;
    },
    'init': function () {
      ig.Storage.instance = this;
    },
    'isCapable': function () {
      return 'undefined' !== typeof window.localStorage;
    },
    'isSet': function (_0x5c1b8b) {
      return null !== this.get(_0x5c1b8b);
    },
    'initUnset': function (_0x53df9e, _0x208cf7) {
      null === this.get(_0x53df9e) && this.set(_0x53df9e, _0x208cf7);
    },
    'get': function (_0x157f15) {
      if (!this.isCapable()) return null;
      try {
        return JSON.parse(localStorage.getItem(_0x157f15));
      } catch (_0x22925a) {
        return window.localStorage.getItem(_0x157f15);
      }
    },
    'getInt': function (_0x8c1116) {
      return ~~this.get(_0x8c1116);
    },
    'getFloat': function (_0x32280c) {
      return parseFloat(this.get(_0x32280c));
    },
    'getBool': function (_0x73b261) {
      return !!this.get(_0x73b261);
    },
    'key': function (_0x52acf2) {
      return this.isCapable() ? window.localStorage.key(_0x52acf2) : null;
    },
    'set': function (_0x5ab502, _0x27723b) {
      if (!this.isCapable()) return null;
      try {
        window.localStorage.setItem(_0x5ab502, JSON.stringify(_0x27723b));
      } catch (_0x1ae0e3) {
        console.log(_0x1ae0e3);
      }
    },
    'setHighest': function (_0x3d3757, _0x8c8f05) {
      _0x8c8f05 > this.getFloat(_0x3d3757) && this.set(_0x3d3757, _0x8c8f05);
    },
    'remove': function (_0x3220c8) {
      if (!this.isCapable()) return null;
      window.localStorage.removeItem(_0x3220c8);
    },
    'clear': function () {
      if (!this.isCapable()) return null;
      window.localStorage.clear();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.mouse').requires('plugins.data.vector').defines(function () {
  Mouse = ig.Class.extend({
    'pos': new Vector2(0x0, 0x0),
    'bindings': {
      'click': [ig.KEY.MOUSE1]
    },
    'init': function () {
      ig.input.initMouse();
      for (var _0x34d8af in this.bindings) {
        this[_0x34d8af] = _0x34d8af;
        for (var _0x29d2cd = 0x0; _0x29d2cd < this.bindings[_0x34d8af].length; _0x29d2cd++) ig.input.bind(this.bindings[_0x34d8af][_0x29d2cd], _0x34d8af);
      }
    },
    'getLast': function () {
      return this.pos;
    },
    'getPos': function () {
      return this.pos.set(ig.input.mouse.x / ig.sizeHandler.sizeRatio.x / ig.sizeHandler.scaleRatioMultiplier.x, ig.input.mouse.y / ig.sizeHandler.sizeRatio.y / ig.sizeHandler.scaleRatioMultiplier.y), this.pos.clone();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.keyboard').defines(function () {
  Keyboard = ig.Class.extend({
    'bindings': {
      'jump': [ig.KEY.W, ig.KEY.UP_ARROW],
      'moveright': [ig.KEY.D, ig.KEY.RIGHT_ARROW],
      'moveleft': [ig.KEY.A, ig.KEY.LEFT_ARROW],
      'shoot': [ig.KEY.S, ig.KEY.DOWN_ARROW, ig.KEY.SPACE]
    },
    'init': function () {
      for (var _0x571c69 in this.bindings) {
        this[_0x571c69] = _0x571c69;
        for (var _0x453754 = 0x0; _0x453754 < this.bindings[_0x571c69].length; _0x453754++) ig.input.bind(this.bindings[_0x571c69][_0x453754], _0x571c69);
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.gamepad-input').defines(function () {
  ig.PADKEY = {
    'BUTTON_0': 0x0,
    'PADBUTTON_1': 0x1,
    'BUTTON_2': 0x2,
    'BUTTON_3': 0x3,
    'BUTTON_LEFT_BUMPER': 0x4,
    'BUTTON_RIGHT_BUMPER': 0x5,
    'BUTTON_LEFT_TRIGGER': 0x6,
    'BUTTON_RIGHT_TRIGGER': 0x7,
    'BUTTON_LEFT_JOYSTICK': 0xa,
    'BUTTON_RIGHT_JOYSTICK': 0xb,
    'BUTTON_DPAD_UP': 0xc,
    'BUTTON_DPAD_DOWN': 0xd,
    'BUTTON_DPAD_LEFT': 0xe,
    'BUTTON_DPAD_RIGHT': 0xf,
    'BUTTON_MENU': 0x10,
    'AXIS_LEFT_JOYSTICK_X': 0x0,
    'AXIS_LEFT_JOYSTICK_Y': 0x1,
    'AXIS_RIGHT_JOYSTICK_X': 0x2,
    'AXIS_RIGHT_JOYSTICK_Y': 0x3
  }, ig.GamepadInput = ig.Class.extend({
    'isInit': !0x1,
    'isSupported': !0x1,
    'list': [],
    'bindings': {},
    'states': {},
    'presses': {},
    'releases': {},
    'downLocks': {},
    'upLocks': {},
    'leftStick': {
      'x': 0x0,
      'y': 0x0
    },
    'rightStick': {
      'x': 0x0,
      'y': 0x0
    },
    'start': function () {
      if (!this.isInit) {
        this.isInit = !0x0;
        var _0x292a5d = navigator.getGamepads || navigator.webkitGetGamepads;
        _0x292a5d && (!navigator.getGamepads && navigator.webkitGetGamepads && (navigator.getGamepads = navigator.webkitGetGamepads), this.list = navigator.getGamepads()), this.isSupported = _0x292a5d;
      }
    },
    'isAvailable': function () {
      return this.isInit && this.isSupported;
    },
    'buttonPressed': function (_0x8c8bf2) {
      return 'object' == typeof _0x8c8bf2 ? _0x8c8bf2.pressed : 0x1 == _0x8c8bf2;
    },
    'buttonDown': function (_0x515e7f) {
      if (_0x515e7f = this.bindings[_0x515e7f]) this.states[_0x515e7f] = !0x0, this.downLocks[_0x515e7f] || (this.presses[_0x515e7f] = !0x0, this.downLocks[_0x515e7f] = !0x0);
    },
    'buttonUp': function (_0x5dae06) {
      if ((_0x5dae06 = this.bindings[_0x5dae06]) && this.downLocks[_0x5dae06] && !this.upLocks[_0x5dae06]) this.states[_0x5dae06] = !0x1, this.releases[_0x5dae06] = !0x0, this.upLocks[_0x5dae06] = !0x0;
    },
    'clearPressed': function () {
      for (var _0x2c7364 in this.releases) this.states[_0x2c7364] = !0x1, this.downLocks[_0x2c7364] = !0x1;
      this.releases = {}, this.presses = {}, this.upLocks = {};
    },
    'bind': function (_0x5509fd, _0x2693ed) {
      this.bindings[_0x5509fd] = _0x2693ed;
    },
    'unbind': function (_0x52c0e3) {
      this.releases[this.bindings[_0x52c0e3]] = !0x0, this.bindings[_0x52c0e3] = null;
    },
    'unbindAll': function () {
      this.bindings = {}, this.states = {}, this.presses = {}, this.releases = {}, this.downLocks = {}, this.upLocks = {};
    },
    'state': function (_0xc412ea) {
      return this.states[_0xc412ea];
    },
    'pressed': function (_0x24232b) {
      return this.presses[_0x24232b];
    },
    'released': function (_0x52b098) {
      return this.releases[_0x52b098];
    },
    'clamp': function (_0x1a66e1, _0x396328, _0x138474) {
      return _0x1a66e1 < _0x396328 ? _0x396328 : _0x1a66e1 > _0x138474 ? _0x138474 : _0x1a66e1;
    },
    'pollGamepads': function () {
      if (this.isSupported) {
        this.leftStick.x = 0x0, this.leftStick.y = 0x0, this.rightStick.x = 0x0, this.rightStick.y = 0x0, this.list = navigator.getGamepads();
        for (var _0xeec7d9 in this.bindings) {
          for (var _0x4bea71 = !0x1, _0x11fd07 = 0x0; _0x11fd07 < this.list.length; _0x11fd07++) {
            var _0x14390b = this.list[_0x11fd07];
            if (_0x14390b && _0x14390b.buttons && this.buttonPressed(_0x14390b.buttons[_0xeec7d9])) {
              _0x4bea71 = !0x0;
              break;
            }
          }
          _0x4bea71 ? this.buttonDown(_0xeec7d9) : this.buttonUp(_0xeec7d9);
        }
        for (_0x11fd07 = 0x0; _0x11fd07 < this.list.length; _0x11fd07++) if ((_0x14390b = this.list[_0x11fd07]) && _0x14390b.axes) {
          _0xeec7d9 = _0x14390b.axes[ig.GAMEPADINPUT.AXIS_LEFT_JOYSTICK_X];
          var _0x4bea71 = _0x14390b.axes[ig.GAMEPADINPUT.AXIS_LEFT_JOYSTICK_Y],
            _0x246ff5 = _0x14390b.axes[ig.GAMEPADINPUT.AXIS_RIGHT_JOYSTICK_X],
            _0x14390b = _0x14390b.axes[ig.GAMEPADINPUT.AXIS_RIGHT_JOYSTICK_Y];
          this.leftStick.x += isNaN(_0xeec7d9) ? 0x0 : _0xeec7d9, this.leftStick.y += isNaN(_0x4bea71) ? 0x0 : _0x4bea71, this.rightStick.x += isNaN(_0x246ff5) ? 0x0 : _0x246ff5, this.rightStick.y += isNaN(_0x14390b) ? 0x0 : _0x14390b;
        }
        0x0 < this.list.length && (this.leftStick.x = this.clamp(this.leftStick.x, -0x1, 0x1), this.leftStick.y = this.clamp(this.leftStick.y, -0x1, 0x1), this.rightStick.x = this.clamp(this.rightStick.x, -0x1, 0x1), this.rightStick.y = this.clamp(this.rightStick.y, -0x1, 0x1));
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.gamepad').requires('plugins.io.gamepad-input').defines(function () {
  Gamepad = ig.Class.extend({
    'bindings': {
      'padJump': [ig.PADKEY.BUTTON_0]
    },
    'init': function () {
      ig.gamepadInput.start();
      for (var _0x5216d2 in this.bindings) for (var _0x2e2436 = 0x0; _0x2e2436 < this.bindings[_0x5216d2].length; _0x2e2436++) ig.gamepadInput.bind(this.bindings[_0x5216d2][_0x2e2436], _0x5216d2);
    },
    'press': function () {},
    'held': function () {},
    'release': function () {}
  });
}), ig.baked = !0x0, ig.module('plugins.io.multitouch').defines(function () {
  Multitouch = ig.Class.extend({
    'init': function () {
      ig.multitouchInput.start();
    },
    'getTouchesPos': function () {
      if (ig.ua.mobile) {
        if (0x0 < ig.multitouchInput.touches.length) {
          for (var _0x588bff = [], _0x112c93 = 0x0; _0x112c93 < ig.multitouchInput.touches.length; _0x112c93++) {
            var _0x170050 = ig.multitouchInput.touches[_0x112c93];
            _0x588bff.push({
              'x': _0x170050.x,
              'y': _0x170050.y
            });
          }
          return _0x588bff;
        }
        return null;
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.multitouch-input').defines(function () {
  ig.MultitouchInput = ig.Class.extend({
    'isStart': !0x1,
    'touches': [],
    'multitouchCapable': !0x1,
    'lastEventUp': null,
    'start': function () {
      this.isStart || (this.isStart = !0x0, navigator.maxTouchPoints && 0x1 < navigator.maxTouchPoints && (this.multitouchCapable = !0x0), ig.ua.touchDevice && (window.navigator.msPointerEnabled && (ig.system.canvas.addEventListener('MSPointerDown', this.touchdown.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerUp', this.touchup.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerMove', this.touchmove.bind(this), !0x1), ig.system.canvas.style.msContentZooming = 'none', ig.system.canvas.style.msTouchAction = 'none'), ig.system.canvas.addEventListener('touchstart', this.touchdown.bind(this), !0x1), ig.system.canvas.addEventListener('touchend', this.touchup.bind(this), !0x1), ig.system.canvas.addEventListener('touchmove', this.touchmove.bind(this), !0x1)));
    },
    'touchmove': function (_0x1c2e4c) {
      if (ig.ua.touchDevice) {
        var _0x2713b7 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
          _0x1b1809 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
          _0x2713b7 = ig.system.scale * (_0x2713b7 / ig.system.realWidth),
          _0x1b1809 = ig.system.scale * (_0x1b1809 / ig.system.realHeight);
        if (_0x1c2e4c.touches) {
          for (; 0x0 < this.touches.length;) this.touches.pop();
          !this.multitouchCapable && 0x1 < _0x1c2e4c.touches.length && (this.multitouchCapable = !0x0);
          var _0x10d9fb = {
            'left': 0x0,
            'top': 0x0
          };
          ig.system.canvas.getBoundingClientRect && (_0x10d9fb = ig.system.canvas.getBoundingClientRect());
          for (var _0x3deed7 = 0x0; _0x3deed7 < _0x1c2e4c.touches.length; _0x3deed7++) {
            var _0x3d42bf = _0x1c2e4c.touches[_0x3deed7];
            _0x3d42bf && this.touches.push({
              'x': (_0x3d42bf.clientX - _0x10d9fb.left) / _0x2713b7,
              'y': (_0x3d42bf.clientY - _0x10d9fb.top) / _0x1b1809
            });
          }
        } else this.windowMove(_0x1c2e4c);
      }
      try {
        ig.soundHandler.unlockWebAudio();
      } catch (_0x8dd437) {}
    },
    'touchdown': function (_0x25c7d4) {
      var _0x6429db = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x50e2c4 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
        _0x6429db = ig.system.scale * (_0x6429db / ig.system.realWidth),
        _0x50e2c4 = ig.system.scale * (_0x50e2c4 / ig.system.realHeight);
      if (window.navigator.msPointerEnabled) this.windowKeyDown(_0x25c7d4);else {
        if (ig.ua.touchDevice && _0x25c7d4.touches) {
          for (; 0x0 < this.touches.length;) this.touches.pop();
          !this.multitouchCapable && 0x1 < _0x25c7d4.touches.length && (this.multitouchCapable = !0x0);
          var _0x56a7b4 = {
            'left': 0x0,
            'top': 0x0
          };
          ig.system.canvas.getBoundingClientRect && (_0x56a7b4 = ig.system.canvas.getBoundingClientRect());
          for (var _0x226f9f = 0x0; _0x226f9f < _0x25c7d4.touches.length; _0x226f9f++) {
            var _0x11bb04 = _0x25c7d4.touches[_0x226f9f];
            _0x11bb04 && this.touches.push({
              'x': (_0x11bb04.clientX - _0x56a7b4.left) / _0x6429db,
              'y': (_0x11bb04.clientY - _0x56a7b4.top) / _0x50e2c4
            });
          }
        }
      }
    },
    'touchup': function (_0x4fddf3) {
      var _0x5ca94f = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth;
      parseInt(ig.system.canvas.offsetHeight), _0x5ca94f = ig.system.scale * (_0x5ca94f / ig.system.realWidth);
      if (window.navigator.msPointerEnabled) this.windowKeyUp(_0x4fddf3);else {
        this.lastEventUp = _0x4fddf3;
        var _0x26b077 = {
          'left': 0x0,
          'top': 0x0
        };
        ig.system.canvas.getBoundingClientRect && (_0x26b077 = ig.system.canvas.getBoundingClientRect());
        if (ig.ua.touchDevice) {
          _0x4fddf3 = (_0x4fddf3.changedTouches[0x0].clientX - _0x26b077.left) / _0x5ca94f;
          for (_0x5ca94f = 0x0; _0x5ca94f < this.touches.length; _0x5ca94f++) this.touches[_0x5ca94f].x >= _0x4fddf3 - 0x28 && this.touches[_0x5ca94f].x <= _0x4fddf3 + 0x28 && this.touches.splice(_0x5ca94f, 0x1);
        }
      }
      if (ig.visibilityHandler) ig.visibilityHandler.onChange('focus');
      try {
        ig.soundHandler.unlockWebAudio();
      } catch (_0xcd6ff3) {}
    },
    'windowKeyDown': function (_0x977222) {
      var _0x442889 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x21a834 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
        _0x442889 = ig.system.scale * (_0x442889 / ig.system.realWidth),
        _0x21a834 = ig.system.scale * (_0x21a834 / ig.system.realHeight);
      if (window.navigator.msPointerEnabled) {
        var _0x3207e5 = {
          'left': 0x0,
          'top': 0x0
        };
        ig.system.canvas.getBoundingClientRect && (_0x3207e5 = ig.system.canvas.getBoundingClientRect()), _0x977222 = _0x977222.changedTouches ? _0x977222.changedTouches : [_0x977222];
        for (var _0x34bf10 = 0x0; _0x34bf10 < _0x977222.length; ++_0x34bf10) {
          for (var _0x3b5822 = _0x977222[_0x34bf10], _0x570cbd = 'undefined' != typeof _0x3b5822.identifier ? _0x3b5822.identifier : 'undefined' != typeof _0x3b5822.pointerId ? _0x3b5822.pointerId : 0x1, _0x46ce24 = (_0x3b5822.clientX - _0x3207e5.left) / _0x442889, _0x3b5822 = (_0x3b5822.clientY - _0x3207e5.top) / _0x21a834, _0x48349c = 0x0; _0x48349c < this.touches.length; ++_0x48349c) this.touches[_0x48349c].identifier == _0x570cbd && this.touches.splice(_0x48349c, 0x1);
          this.touches.push({
            'x': _0x46ce24,
            'y': _0x3b5822,
            'identifier': _0x570cbd
          });
        }
        for (_0x442889 = 0x0; _0x442889 < this.touches.length; _0x442889++);
      }
    },
    'windowKeyUp': function (_0x3f9d92) {
      _0x3f9d92 = 'undefined' != typeof _0x3f9d92.identifier ? _0x3f9d92.identifier : 'undefined' != typeof _0x3f9d92.pointerId ? _0x3f9d92.pointerId : 0x1;
      for (var _0xb1d1bc = 0x0; _0xb1d1bc < this.touches.length; ++_0xb1d1bc) this.touches[_0xb1d1bc].identifier == _0x3f9d92 && this.touches.splice(_0xb1d1bc, 0x1);
      for (; 0x0 < this.touches.length;) this.touches.pop();
      if (ig.visibilityHandler) ig.visibilityHandler.onChange('focus');
      try {
        ig.soundHandler.unlockWebAudio();
      } catch (_0x844dee) {}
    },
    'windowMove': function (_0x150125) {
      var _0x352573 = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x252c2c = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight,
        _0x352573 = ig.system.scale * (_0x352573 / ig.system.realWidth),
        _0x252c2c = ig.system.scale * (_0x252c2c / ig.system.realHeight),
        _0x512b2c = {
          'left': 0x0,
          'top': 0x0
        };
      ig.system.canvas.getBoundingClientRect && (_0x512b2c = ig.system.canvas.getBoundingClientRect());
      if (window.navigator.msPointerEnabled) {
        for (var _0x42be30 = 'undefined' != typeof _0x150125.identifier ? _0x150125.identifier : 'undefined' != typeof _0x150125.pointerId ? _0x150125.pointerId : 0x1, _0x494dfa = 0x0; _0x494dfa < this.touches.length; ++_0x494dfa) if (this.touches[_0x494dfa].identifier == _0x42be30) {
          var _0x4d266c = (_0x150125.clientY - _0x512b2c.top) / _0x252c2c;
          this.touches[_0x494dfa].x = (_0x150125.clientX - _0x512b2c.left) / _0x352573, this.touches[_0x494dfa].y = _0x4d266c;
        }
      }
      try {
        ig.soundHandler.unlockWebAudio();
      } catch (_0x181ae6) {}
    },
    'clear': function () {
      for (var _0x202760 = 0x0; _0x202760 < this.released.length; ++_0x202760) this.released[_0x202760] && (this.released.splice(_0x202760, 0x1), _0x202760--);
    },
    'pollMultitouch': function (_0x27f33a) {
      !this.multitouchCapable && 0x1 < _0x27f33a && (this.multitouchCapable = !0x0);
    },
    'spliceFromArray': function (_0x10075a, _0x4b7991) {
      for (var _0x226565 = 0x0; _0x226565 < _0x4b7991.length; _0x226565++) for (var _0x2719a1 = 0x0; _0x2719a1 < _0x10075a.length; _0x2719a1++) _0x10075a[_0x2719a1].identifier === _0x4b7991[_0x226565].identifier && (_0x10075a.splice(_0x2719a1, 0x1), _0x2719a1--);
    },
    'updateSizeProperties': function () {
      var _0x3f30ce = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x317afc = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
      this.scaleX = ig.system.scale * (_0x3f30ce / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x317afc / ig.system.realHeight);
    },
    'upgrade': function (_0xb8df92, _0x39760e, _0x190e96) {
      var _0x3b61f7 = {
        'left': 0x0,
        'top': 0x0
      };
      ig.system.canvas.getBoundingClientRect && (_0x3b61f7 = ig.system.canvas.getBoundingClientRect());
      for (var _0x263eb5 = (_0x190e96.clientX - _0x3b61f7.left) / this.scaleX, _0x3b61f7 = (_0x190e96.clientY - _0x3b61f7.top) / this.scaleY, _0x1a8c9c = 0x0; _0x1a8c9c < _0xb8df92.length; _0x1a8c9c++) if (void 0x0 !== typeof _0xb8df92[_0x1a8c9c].identifier && void 0x0 !== typeof _0x190e96.identifier && _0x190e96.identifier === _0xb8df92[_0x1a8c9c].identifier) {
        _0xb8df92.splice(_0x1a8c9c, 0x1), _0x39760e.push({
          'identifier': _0x190e96.identifier,
          'x': _0x263eb5,
          'y': _0x3b61f7
        });
        break;
      }
    },
    'updateArray': function (_0x203ff4, _0x3bb704) {
      var _0x4d3dad = {
        'left': 0x0,
        'top': 0x0
      };
      ig.system.canvas.getBoundingClientRect && (_0x4d3dad = ig.system.canvas.getBoundingClientRect());
      for (var _0x3596b8 = (_0x3bb704.clientX - _0x4d3dad.left) / this.scaleX, _0x4d3dad = (_0x3bb704.clientY - _0x4d3dad.top) / this.scaleY, _0x44a64c = 0x0; _0x44a64c < _0x203ff4.length; _0x44a64c++) if (void 0x0 !== typeof _0x203ff4[_0x44a64c].identifier && void 0x0 !== typeof _0x3bb704.identifier && _0x3bb704.identifier === _0x203ff4[_0x44a64c].identifier) {
        _0x203ff4[_0x44a64c].x = _0x3596b8, _0x203ff4[_0x44a64c].y = _0x4d3dad;
        break;
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.io-manager').requires('plugins.io.storage', 'plugins.io.mouse', 'plugins.io.keyboard', 'plugins.io.gamepad', 'plugins.io.multitouch', 'plugins.io.multitouch-input', 'plugins.io.gamepad-input', 'plugins.io.fake-storage').defines(function () {
  IoManager = ig.Class.extend({
    'version': '1.0.0',
    'storage': null,
    'localStorageSupport': !0x1,
    'mouse': null,
    'keyboard': null,
    'multitouch': null,
    'gamepad': null,
    'init': function () {
      ig.multitouchInput = new ig.MultitouchInput(), ig.gamepadInput = new ig.GamepadInput(), this.unbindAll(), this.initStorage(), this.initMouse(), this.initKeyboard();
    },
    'unbindAll': function () {
      ig.input.unbindAll(), ig.gamepadInput.unbindAll();
    },
    'initStorage': function () {
      try {
        window.localStorage.setItem('test', 'test'), window.localStorage.removeItem('test'), this.storage = new ig.Storage();
      } catch (_0x50a05c) {
        console.log("using fake storage"), this.storage = new ig.FakeStorage();
      }
    },
    'initMouse': function () {
      this.mouse = new Mouse();
    },
    'initKeyboard': function () {
      this.keyboard = new Keyboard();
    },
    'initMultitouch': function () {
      this.multitouch = new Multitouch();
    },
    'initGamepad': function () {
      this.gamepad = new Gamepad();
    },
    'press': function (_0x3b95ba) {
      return ig.input.pressed(_0x3b95ba) || this.gamepad && this.gamepad.press(_0x3b95ba) ? !0x0 : !0x1;
    },
    'held': function (_0x3aae22) {
      return ig.input.state(_0x3aae22) || this.gamepad && this.gamepad.state(_0x3aae22) ? !0x0 : !0x1;
    },
    'release': function (_0x63ce25) {
      return ig.input.released(_0x63ce25) || this.gamepad && this.gamepad.released(_0x63ce25) ? !0x0 : !0x1;
    },
    'getClickPos': function () {
      return this.mouse.getPos();
    },
    'getLastClickPos': function () {
      return this.mouse.getLast();
    },
    'getTouchesPos': function () {
      return this.multitouch.getTouchesPos();
    },
    'checkOverlap': function (_0x5dedd5, _0x19e940, _0x51de5a, _0x4f6b1f, _0x16ae84) {
      return _0x5dedd5.x > _0x19e940 + _0x4f6b1f || _0x5dedd5.x < _0x19e940 || _0x5dedd5.y > _0x51de5a + _0x16ae84 || _0x5dedd5.y < _0x51de5a ? !0x1 : !0x0;
    },
    'clear': function () {
      ig.multitouchInput.clear();
    },
    '_supportsLocalStorage': function () {
      try {
        return localStorage.setItem('test', 'test'), localStorage.removeItem('test'), this.localStorageSupport = 'localStorage' in window && null !== window.localStorage;
      } catch (_0x5cd3bd) {
        return this.localStorageSupport;
      }
    },
    'storageIsSet': function (_0x4cf611) {
      return 'function' === typeof this.storage.isSet ? this.storage.isSet(_0x4cf611) : null;
    },
    'storageGet': function (_0xfafc34) {
      return 'function' === typeof this.storage.get ? this.storage.get(_0xfafc34) : null;
    },
    'storageSet': function (_0x309d0c, _0x29af6c) {
      return 'function' === typeof this.storage.set ? this.storage.set(_0x309d0c, _0x29af6c) : null;
    },
    'assert': function (_0x3d8da1, _0x214958, _0x425d78) {
      if (_0x214958 !== _0x425d78) throw 'actualValue:' + _0x214958 + " not equal to testValue:" + _0x425d78 + " at " + _0x3d8da1;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.io.storage-manager').requires('impact.game', 'plugins.io.io-manager').defines(function () {
  ig.Game.prototype.name = 'MJS-Game', ig.Game.prototype.version = '1.0.0', ig.Game.prototype.sessionData = {}, ig.Game.prototype.initData = function () {
    return this.sessionData = {
      'sound': 0.5,
      'music': 0.5,
      'level': 0x1,
      'score': 0x0
    };
  }, ig.Game.prototype.setupStorageManager = function () {
    'undefined' === typeof this.name ? console.error("Cannot found Game Name, Storage Manager Cancelled.") : 'undefined' === typeof this.version ? console.error("Cannot found Game Version, Storage Manager Cancelled.") : (this.io || (this.io = new IoManager(), console.log("IO Manager doesn't existed. Initialize...")), console.log("Plug in Storage Manager"), this.storage = this.io.storage, this.storageName = this.name + '-v' + this.version, this.loadAll());
  }, ig.Game.prototype.loadAll = function () {
    var _0x22391f = this.storage.get(this.storageName);
    if (null === _0x22391f || 'undefined' === typeof _0x22391f) _0x22391f = this.initData();
    for (var _0x39dd0e in _0x22391f) this.sessionData[_0x39dd0e] = _0x22391f[_0x39dd0e];
    this.storage.set(this.storageName, _0x22391f);
  }, ig.Game.prototype.saveAll = function () {
    var _0x183ad0 = this.storage.get(this.storageName),
      _0x38b4d8;
    for (_0x38b4d8 in _0x183ad0) _0x183ad0[_0x38b4d8] = this.sessionData[_0x38b4d8];
    this.storage.set(this.storageName, _0x183ad0);
  }, ig.Game.prototype.load = function (_0x334c6d) {
    return this.storage.get(this.storageName)[_0x334c6d];
  }, ig.Game.prototype.save = function (_0x3f2da2, _0x170eb7) {
    var _0x742ecc = this.storage.get(this.storageName);
    _0x742ecc[_0x3f2da2] = _0x170eb7, this.storage.set(this.storageName, _0x742ecc);
  };
}), ig.baked = !0x0, ig.module('plugins.splash-loader').requires('impact.loader', 'impact.animation').defines(function () {
  ig.SplashLoader = ig.Loader.extend({
    'tapToStartDivId': 'tap-to-start',
    'titleLoading': new ig.Image('media/graphics/splash/title-loading.png'),
    'loadingBar': new ig.Image('media/graphics/splash/loading-bar.png'),
    'loadingFill': new ig.Image('media/graphics/splash/loading-fill.png'),
    'gradientColorStop1': '#38AEF8',
    'gradientColorStop2': '#8EDDFE',
    'init': function (_0x5978af, _0x4dc9c8) {
      this.parent(_0x5978af, _0x4dc9c8), ig.apiHandler.run('MJSPreroll');
    },
    'end': function () {
      this.parent(), this._drawStatus = 0x1, _SETTINGS.TapToStartAudioUnlock.Enabled ? this.tapToStartDiv(function () {
        ig.system.setGame(MyGame);
      }) : ig.system.setGame(MyGame), this.draw();
    },
    'tapToStartDiv': function (_0x2ecb96) {
      this.desktopCoverDIV = document.getElementById(this.tapToStartDivId);
      if (!this.desktopCoverDIV) {
        this.desktopCoverDIV = document.createElement('div'), this.desktopCoverDIV.id = this.tapToStartDivId, this.desktopCoverDIV.setAttribute('class', 'play'), this.desktopCoverDIV.setAttribute('style', "position: absolute; display: block; z-index: 999999; background-color: rgba(23, 32, 53, 0.7); visibility: visible; font-size: 10vmin; text-align: center; vertical-align: middle; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;"), this.desktopCoverDIV.innerHTML = "<div style='color:white;background-color: rgba(255, 255, 255, 0.3); border: 2px solid #fff; font-size:20px; border-radius: 5px; position: relative; float: left; top: 50%; left: 50%; transform: translate(-50%, -50%);'><div style='padding:20px 50px; font-family: archivo-black;'>" + _STRINGS.Splash.TapToStart + '</div></div>', (document.getElementById('play').parentNode || document.getElementById('ajaxbar')).appendChild(this.desktopCoverDIV);
        try {
          'undefined' !== typeof ig.sizeHandler ? 'undefined' !== typeof ig.sizeHandler.coreDivsToResize && (ig.sizeHandler.coreDivsToResize.push('#' + this.tapToStartDivId), 'function' === typeof ig.sizeHandler.reorient && ig.sizeHandler.reorient()) : 'undefined' !== typeof coreDivsToResize && (coreDivsToResize.push(this.tapToStartDivId), 'function' === typeof sizeHandler && sizeHandler());
        } catch (_0x4a906e) {
          console.log(_0x4a906e);
        }
        this.desktopCoverDIV.addEventListener('click', function () {
          ig.soundHandler.unlockWebAudio(), this.setAttribute('style', "visibility: hidden;"), 'function' === typeof _0x2ecb96 && _0x2ecb96();
        });
      }
    },
    'animate': function () {
      ig.Timer.step();
    },
    'drawCheck': 0x0,
    'draw': function () {
      this._drawStatus += (this.status - this._drawStatus) / 0x5, 0x1 === this.drawCheck && console.log("Font should be loaded before loader draw loop"), 0x2 > this.drawCheck && this.drawCheck++, ig.system.context.fillStyle = '#000', ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.system.context.font = "27px archivo-black", ig.system.context.fillText('archivo-black', -0x64, -0x64), ig.system.context.font = "27px infinite-justice", ig.system.context.fillText('infinite-justice', -0x64, -0x64), ig.system.context.save();
      var _0x1bba3e = ig.system.context.createLinearGradient(0x0, 0x0, 0x0, ig.system.height);
      _0x1bba3e.addColorStop(0x0, this.gradientColorStop1), _0x1bba3e.addColorStop(0x1, this.gradientColorStop2), ig.system.context.fillStyle = _0x1bba3e, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.titleLoading.draw(0.5 * ig.system.width - 0.5 * this.titleLoading.width, 0.4 * ig.system.height - 0.5 * this.titleLoading.height), this.loadingBar.draw(0.5 * ig.system.width - 0.5 * this.loadingBar.width, 0.7 * ig.system.height - 0.5 * this.loadingBar.height), ig.system.context.drawImage(this.loadingFill.data, 0.5 * ig.system.width - 0.5 * this.loadingBar.width, 0.7 * ig.system.height - 0.5 * this.loadingBar.height, this.loadingBar.width * this._drawStatus, this.loadingBar.height), ig.system.context.restore(), this.drawVersion();
    },
    'drawVersion': function () {
      if ('undefined' !== typeof _SETTINGS.Versioning && null !== _SETTINGS.Versioning && _SETTINGS.Versioning.DrawVersion) {
        var _0x1e1b54 = ig.system.context;
        fontSize = _SETTINGS.Versioning.FontSize, fontFamily = _SETTINGS.Versioning.FontFamily, fillStyle = _SETTINGS.Versioning.FillStyle, _0x1e1b54.save(), _0x1e1b54.textBaseline = 'bottom', _0x1e1b54.textAlign = 'left', _0x1e1b54.font = fontSize + " " + fontFamily || "10px Arial", _0x1e1b54.fillStyle = fillStyle || '#ffffff', _0x1e1b54.fillText('v' + _SETTINGS.Versioning.Version + '+build.' + _SETTINGS.Versioning.Build, 0xa, ig.system.height - 0xa), _0x1e1b54.restore();
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.tween').requires('impact.entity').defines(function () {
  Array.prototype.indexOf || (Array.prototype.indexOf = function (_0x237d6c) {
    for (var _0x525f6f = 0x0; _0x525f6f < this.length; ++_0x525f6f) if (this[_0x525f6f] === _0x237d6c) return _0x525f6f;
    return -0x1;
  }), ig.Entity.prototype.tweens = [], ig.Entity.prototype._preTweenUpdate = ig.Entity.prototype.update, ig.Entity.prototype.update = function () {
    this._preTweenUpdate();
    if (0x0 < this.tweens.length) {
      for (var _0x3ef6ad = [], _0x550e88 = 0x0; _0x550e88 < this.tweens.length; _0x550e88++) this.tweens[_0x550e88].update(), this.tweens[_0x550e88].complete || _0x3ef6ad.push(this.tweens[_0x550e88]);
      this.tweens = _0x3ef6ad;
    }
  }, ig.Entity.prototype.tween = function (_0x4c0fa7, _0x24461a, _0x580ad2) {
    return _0x4c0fa7 = new ig.Tween(this, _0x4c0fa7, _0x24461a, _0x580ad2), this.tweens.push(_0x4c0fa7), _0x4c0fa7;
  }, ig.Entity.prototype.pauseTweens = function () {
    for (var _0x3fd255 = 0x0; _0x3fd255 < this.tweens.length; _0x3fd255++) this.tweens[_0x3fd255].pause();
  }, ig.Entity.prototype.resumeTweens = function () {
    for (var _0x2b446e = 0x0; _0x2b446e < this.tweens.length; _0x2b446e++) this.tweens[_0x2b446e].resume();
  }, ig.Entity.prototype.stopTweens = function (_0x3ffa90) {
    for (var _0x36f993 = 0x0; _0x36f993 < this.tweens.length; _0x36f993++) this.tweens[_0x36f993].stop(_0x3ffa90);
  }, ig.Tween = function (_0x1c0904, _0x2ed17a, _0x38d554, _0x3e212b) {
    var _0x38293d = {},
      _0x2f79f5 = {},
      _0xa86227 = {},
      _0x4b9fe4 = 0x0,
      _0xfbceed = !0x1,
      _0x504d8e = !0x1,
      _0x4482d4 = !0x1;
    this.duration = _0x38d554, this.paused = this.complete = !0x1, this.easing = ig.Tween.Easing.Linear.EaseNone, this.onComplete = !0x1, this.loop = this.delay = 0x0, this.loopCount = -0x1, ig.merge(this, _0x3e212b), this.loopNum = this.loopCount, this.chain = function (_0x127b1a) {
      _0x4482d4 = _0x127b1a;
    }, this.initEnd = function (_0xabb372, _0xbbf546, _0x4a37af) {
      if ('object' !== typeof _0xbbf546[_0xabb372]) _0x4a37af[_0xabb372] = _0xbbf546[_0xabb372];else {
        for (subprop in _0xbbf546[_0xabb372]) _0x4a37af[_0xabb372] || (_0x4a37af[_0xabb372] = {}), this.initEnd(subprop, _0xbbf546[_0xabb372], _0x4a37af[_0xabb372]);
      }
    }, this.initStart = function (_0xe9fc06, _0x1ad445, _0x397054, _0x9cf6b5) {
      if ('object' !== typeof _0x397054[_0xe9fc06]) 'undefined' !== typeof _0x1ad445[_0xe9fc06] && (_0x9cf6b5[_0xe9fc06] = _0x397054[_0xe9fc06]);else {
        for (subprop in _0x397054[_0xe9fc06]) _0x9cf6b5[_0xe9fc06] || (_0x9cf6b5[_0xe9fc06] = {}), 'undefined' !== typeof _0x1ad445[_0xe9fc06] && this.initStart(subprop, _0x1ad445[_0xe9fc06], _0x397054[_0xe9fc06], _0x9cf6b5[_0xe9fc06]);
      }
    }, this.start = function () {
      this.paused = this.complete = !0x1, this.loopNum = this.loopCount, _0x4b9fe4 = 0x0, -0x1 == _0x1c0904.tweens.indexOf(this) && _0x1c0904.tweens.push(this), _0x504d8e = !0x0, _0xfbceed = new ig.Timer();
      for (var _0x310c6d in _0x2ed17a) this.initEnd(_0x310c6d, _0x2ed17a, _0x2f79f5);
      for (_0x310c6d in _0x2f79f5) this.initStart(_0x310c6d, _0x2f79f5, _0x1c0904, _0x38293d), this.initDelta(_0x310c6d, _0xa86227, _0x1c0904, _0x2f79f5);
    }, this.initDelta = function (_0x4e5aca, _0x4ce443, _0x4c2bdc, _0x4878cb) {
      if ('object' !== typeof _0x4878cb[_0x4e5aca]) _0x4ce443[_0x4e5aca] = _0x4878cb[_0x4e5aca] - _0x4c2bdc[_0x4e5aca];else {
        for (subprop in _0x4878cb[_0x4e5aca]) _0x4ce443[_0x4e5aca] || (_0x4ce443[_0x4e5aca] = {}), this.initDelta(subprop, _0x4ce443[_0x4e5aca], _0x4c2bdc[_0x4e5aca], _0x4878cb[_0x4e5aca]);
      }
    }, this.propUpdate = function (_0x3be52b, _0x7ed45a, _0x5b1f8e, _0x1f4daa, _0x59b913) {
      if ('object' !== typeof _0x5b1f8e[_0x3be52b]) _0x7ed45a[_0x3be52b] = 'undefined' != typeof _0x5b1f8e[_0x3be52b] ? _0x5b1f8e[_0x3be52b] + _0x1f4daa[_0x3be52b] * _0x59b913 : _0x7ed45a[_0x3be52b];else {
        for (subprop in _0x5b1f8e[_0x3be52b]) this.propUpdate(subprop, _0x7ed45a[_0x3be52b], _0x5b1f8e[_0x3be52b], _0x1f4daa[_0x3be52b], _0x59b913);
      }
    }, this.propSet = function (_0x29c8c1, _0x43c60a, _0x5b9a9c) {
      if ('object' !== typeof _0x43c60a[_0x29c8c1]) _0x5b9a9c[_0x29c8c1] = _0x43c60a[_0x29c8c1];else {
        for (subprop in _0x43c60a[_0x29c8c1]) _0x5b9a9c[_0x29c8c1] || (_0x5b9a9c[_0x29c8c1] = {}), this.propSet(subprop, _0x43c60a[_0x29c8c1], _0x5b9a9c[_0x29c8c1]);
      }
    }, this.update = function () {
      if (!_0x504d8e) return !0x1;
      if (this.delay) {
        if (_0xfbceed.delta() < this.delay) return;
        this.delay = 0x0, _0xfbceed.reset();
      }
      if (this.paused || this.complete) return !0x1;
      var _0x3aa111 = (_0xfbceed.delta() + _0x4b9fe4) / this.duration,
        _0x3aa111 = 0x1 < _0x3aa111 ? 0x1 : _0x3aa111,
        _0x1f7b27 = this.easing(_0x3aa111);
      for (property in _0xa86227) this.propUpdate(property, _0x1c0904, _0x38293d, _0xa86227, _0x1f7b27);
      if (0x1 <= _0x3aa111) {
        if (0x0 == this.loopNum || !this.loop) {
          this.complete = !0x0;
          if (this.onComplete) this.onComplete();
          return _0x4482d4 && _0x4482d4.start(), !0x1;
        }
        if (this.loop == ig.Tween.Loop.Revert) {
          for (property in _0x38293d) this.propSet(property, _0x38293d, _0x1c0904);
          _0x4b9fe4 = 0x0, _0xfbceed.reset(), -0x1 != this.loopNum && this.loopNum--;
        } else {
          if (this.loop == ig.Tween.Loop.Reverse) {
            _0x3aa111 = {}, _0x1f7b27 = {}, ig.merge(_0x3aa111, _0x2f79f5), ig.merge(_0x1f7b27, _0x38293d), ig.merge(_0x38293d, _0x3aa111), ig.merge(_0x2f79f5, _0x1f7b27);
            for (property in _0x2f79f5) this.initDelta(property, _0xa86227, _0x1c0904, _0x2f79f5);
            _0x4b9fe4 = 0x0, _0xfbceed.reset(), -0x1 != this.loopNum && this.loopNum--;
          }
        }
      }
    }, this.pause = function () {
      this.paused = !0x0, _0xfbceed && _0xfbceed.delta && (_0x4b9fe4 += _0xfbceed.delta());
    }, this.resume = function () {
      this.paused = !0x1, _0xfbceed && _0xfbceed.reset && _0xfbceed.reset();
    }, this.stop = function (_0x12ef6e) {
      _0x12ef6e && (this.loop = this.complete = this.paused = !0x1, _0x4b9fe4 += _0x38d554, this.update()), this.complete = !0x0;
    };
  }, ig.Tween.Loop = {
    'Revert': 0x1,
    'Reverse': 0x2
  }, ig.Tween.Easing = {
    'Linear': {},
    'Quadratic': {},
    'Cubic': {},
    'Quartic': {},
    'Quintic': {},
    'Sinusoidal': {},
    'Exponential': {},
    'Circular': {},
    'Elastic': {},
    'Back': {},
    'Bounce': {}
  }, ig.Tween.Easing.Linear.EaseNone = function (_0x274c41) {
    return _0x274c41;
  }, ig.Tween.Easing.Quadratic.EaseIn = function (_0x14d592) {
    return _0x14d592 * _0x14d592;
  }, ig.Tween.Easing.Quadratic.EaseOut = function (_0xff88dd) {
    return -_0xff88dd * (_0xff88dd - 0x2);
  }, ig.Tween.Easing.Quadratic.EaseInOut = function (_0x28f70d) {
    return 0x1 > (_0x28f70d *= 0x2) ? 0.5 * _0x28f70d * _0x28f70d : -0.5 * (--_0x28f70d * (_0x28f70d - 0x2) - 0x1);
  }, ig.Tween.Easing.Cubic.EaseIn = function (_0x53d0cc) {
    return _0x53d0cc * _0x53d0cc * _0x53d0cc;
  }, ig.Tween.Easing.Cubic.EaseOut = function (_0x2ab35b) {
    return --_0x2ab35b * _0x2ab35b * _0x2ab35b + 0x1;
  }, ig.Tween.Easing.Cubic.EaseInOut = function (_0x498814) {
    return 0x1 > (_0x498814 *= 0x2) ? 0.5 * _0x498814 * _0x498814 * _0x498814 : 0.5 * ((_0x498814 -= 0x2) * _0x498814 * _0x498814 + 0x2);
  }, ig.Tween.Easing.Quartic.EaseIn = function (_0x5b2363) {
    return _0x5b2363 * _0x5b2363 * _0x5b2363 * _0x5b2363;
  }, ig.Tween.Easing.Quartic.EaseOut = function (_0x1c945d) {
    return -(--_0x1c945d * _0x1c945d * _0x1c945d * _0x1c945d - 0x1);
  }, ig.Tween.Easing.Quartic.EaseInOut = function (_0x37ced0) {
    return 0x1 > (_0x37ced0 *= 0x2) ? 0.5 * _0x37ced0 * _0x37ced0 * _0x37ced0 * _0x37ced0 : -0.5 * ((_0x37ced0 -= 0x2) * _0x37ced0 * _0x37ced0 * _0x37ced0 - 0x2);
  }, ig.Tween.Easing.Quintic.EaseIn = function (_0x178112) {
    return _0x178112 * _0x178112 * _0x178112 * _0x178112 * _0x178112;
  }, ig.Tween.Easing.Quintic.EaseOut = function (_0x132603) {
    return (_0x132603 -= 0x1) * _0x132603 * _0x132603 * _0x132603 * _0x132603 + 0x1;
  }, ig.Tween.Easing.Quintic.EaseInOut = function (_0x3498d4) {
    return 0x1 > (_0x3498d4 *= 0x2) ? 0.5 * _0x3498d4 * _0x3498d4 * _0x3498d4 * _0x3498d4 * _0x3498d4 : 0.5 * ((_0x3498d4 -= 0x2) * _0x3498d4 * _0x3498d4 * _0x3498d4 * _0x3498d4 + 0x2);
  }, ig.Tween.Easing.Sinusoidal.EaseIn = function (_0x3ba5c5) {
    return -Math.cos(_0x3ba5c5 * Math.PI / 0x2) + 0x1;
  }, ig.Tween.Easing.Sinusoidal.EaseOut = function (_0x4239c5) {
    return Math.sin(_0x4239c5 * Math.PI / 0x2);
  }, ig.Tween.Easing.Sinusoidal.EaseInOut = function (_0x5bd9d7) {
    return -0.5 * (Math.cos(Math.PI * _0x5bd9d7) - 0x1);
  }, ig.Tween.Easing.Exponential.EaseIn = function (_0x26359d) {
    return 0x0 == _0x26359d ? 0x0 : Math.pow(0x2, 0xa * (_0x26359d - 0x1));
  }, ig.Tween.Easing.Exponential.EaseOut = function (_0x2f43a7) {
    return 0x1 == _0x2f43a7 ? 0x1 : -Math.pow(0x2, -0xa * _0x2f43a7) + 0x1;
  }, ig.Tween.Easing.Exponential.EaseInOut = function (_0x3d450f) {
    return 0x0 == _0x3d450f ? 0x0 : 0x1 == _0x3d450f ? 0x1 : 0x1 > (_0x3d450f *= 0x2) ? 0.5 * Math.pow(0x2, 0xa * (_0x3d450f - 0x1)) : 0.5 * (-Math.pow(0x2, -0xa * (_0x3d450f - 0x1)) + 0x2);
  }, ig.Tween.Easing.Circular.EaseIn = function (_0x15cc1c) {
    return -(Math.sqrt(0x1 - _0x15cc1c * _0x15cc1c) - 0x1);
  }, ig.Tween.Easing.Circular.EaseOut = function (_0x2c6fdf) {
    return Math.sqrt(0x1 - --_0x2c6fdf * _0x2c6fdf);
  }, ig.Tween.Easing.Circular.EaseInOut = function (_0x5bc346) {
    return 0x1 > (_0x5bc346 /= 0.5) ? -0.5 * (Math.sqrt(0x1 - _0x5bc346 * _0x5bc346) - 0x1) : 0.5 * (Math.sqrt(0x1 - (_0x5bc346 -= 0x2) * _0x5bc346) + 0x1);
  }, ig.Tween.Easing.Elastic.EaseIn = function (_0x318b85) {
    var _0xcfdd8,
      _0x557901 = 0.1,
      _0x32930d = 0.4;
    if (0x0 == _0x318b85) return 0x0;
    if (0x1 == _0x318b85) return 0x1;
    return _0x32930d || (_0x32930d = 0.3), !_0x557901 || 0x1 > _0x557901 ? (_0x557901 = 0x1, _0xcfdd8 = _0x32930d / 0x4) : _0xcfdd8 = _0x32930d / (0x2 * Math.PI) * Math.asin(0x1 / _0x557901), -(_0x557901 * Math.pow(0x2, 0xa * (_0x318b85 -= 0x1)) * Math.sin(0x2 * (_0x318b85 - _0xcfdd8) * Math.PI / _0x32930d));
  }, ig.Tween.Easing.Elastic.EaseOut = function (_0x3a8690) {
    var _0x1a642,
      _0x217c6d = 0.1,
      _0x34a066 = 0.4;
    if (0x0 == _0x3a8690) return 0x0;
    if (0x1 == _0x3a8690) return 0x1;
    return _0x34a066 || (_0x34a066 = 0.3), !_0x217c6d || 0x1 > _0x217c6d ? (_0x217c6d = 0x1, _0x1a642 = _0x34a066 / 0x4) : _0x1a642 = _0x34a066 / (0x2 * Math.PI) * Math.asin(0x1 / _0x217c6d), _0x217c6d * Math.pow(0x2, -0xa * _0x3a8690) * Math.sin(0x2 * (_0x3a8690 - _0x1a642) * Math.PI / _0x34a066) + 0x1;
  }, ig.Tween.Easing.Elastic.EaseInOut = function (_0x2f3ed6) {
    var _0x57ea17,
      _0x3f14e2 = 0.1,
      _0x10a3d4 = 0.4;
    if (0x0 == _0x2f3ed6) return 0x0;
    if (0x1 == _0x2f3ed6) return 0x1;
    return _0x10a3d4 || (_0x10a3d4 = 0.3), !_0x3f14e2 || 0x1 > _0x3f14e2 ? (_0x3f14e2 = 0x1, _0x57ea17 = _0x10a3d4 / 0x4) : _0x57ea17 = _0x10a3d4 / (0x2 * Math.PI) * Math.asin(0x1 / _0x3f14e2), 0x1 > (_0x2f3ed6 *= 0x2) ? -0.5 * _0x3f14e2 * Math.pow(0x2, 0xa * (_0x2f3ed6 -= 0x1)) * Math.sin(0x2 * (_0x2f3ed6 - _0x57ea17) * Math.PI / _0x10a3d4) : 0.5 * _0x3f14e2 * Math.pow(0x2, -0xa * (_0x2f3ed6 -= 0x1)) * Math.sin(0x2 * (_0x2f3ed6 - _0x57ea17) * Math.PI / _0x10a3d4) + 0x1;
  }, ig.Tween.Easing.Back.EaseIn = function (_0x36821a) {
    return _0x36821a * _0x36821a * (2.70158 * _0x36821a - 1.70158);
  }, ig.Tween.Easing.Back.EaseOut = function (_0x328063) {
    return (_0x328063 -= 0x1) * _0x328063 * (2.70158 * _0x328063 + 1.70158) + 0x1;
  }, ig.Tween.Easing.Back.EaseInOut = function (_0x1a22c8) {
    return 0x1 > (_0x1a22c8 *= 0x2) ? 0.5 * _0x1a22c8 * _0x1a22c8 * (3.5949095 * _0x1a22c8 - 2.5949095) : 0.5 * ((_0x1a22c8 -= 0x2) * _0x1a22c8 * (3.5949095 * _0x1a22c8 + 2.5949095) + 0x2);
  }, ig.Tween.Easing.Bounce.EaseIn = function (_0x20619d) {
    return 0x1 - ig.Tween.Easing.Bounce.EaseOut(0x1 - _0x20619d);
  }, ig.Tween.Easing.Bounce.EaseOut = function (_0x28a0e0) {
    return (_0x28a0e0 /= 0x1) < 0x1 / 2.75 ? 7.5625 * _0x28a0e0 * _0x28a0e0 : _0x28a0e0 < 0x2 / 2.75 ? 7.5625 * (_0x28a0e0 -= 1.5 / 2.75) * _0x28a0e0 + 0.75 : _0x28a0e0 < 2.5 / 2.75 ? 7.5625 * (_0x28a0e0 -= 2.25 / 2.75) * _0x28a0e0 + 0.9375 : 7.5625 * (_0x28a0e0 -= 2.625 / 2.75) * _0x28a0e0 + 0.984375;
  }, ig.Tween.Easing.Bounce.EaseInOut = function (_0x374601) {
    return 0.5 > _0x374601 ? 0.5 * ig.Tween.Easing.Bounce.EaseIn(0x2 * _0x374601) : 0.5 * ig.Tween.Easing.Bounce.EaseOut(0x2 * _0x374601 - 0x1) + 0.5;
  }, ig.Tween.Interpolation = {
    'Linear': function (_0x37dadf, _0x362a75) {
      var _0x1db9b9 = _0x37dadf.length - 0x1,
        _0x68cf8b = _0x1db9b9 * _0x362a75,
        _0x5db7cd = Math.floor(_0x68cf8b),
        _0x2842c8 = TWEEN.Interpolation.Utils.Linear;
      return 0x0 > _0x362a75 ? _0x2842c8(_0x37dadf[0x0], _0x37dadf[0x1], _0x68cf8b) : 0x1 < _0x362a75 ? _0x2842c8(_0x37dadf[_0x1db9b9], _0x37dadf[_0x1db9b9 - 0x1], _0x1db9b9 - _0x68cf8b) : _0x2842c8(_0x37dadf[_0x5db7cd], _0x37dadf[_0x5db7cd + 0x1 > _0x1db9b9 ? _0x1db9b9 : _0x5db7cd + 0x1], _0x68cf8b - _0x5db7cd);
    }
  };
}), ig.baked = !0x0, ig.module('plugins.patches.entity-patch').requires('impact.entity').defines(function () {
  ig.Entity.inject({
    'handleMovementTrace': function (_0x29d7b2) {
      this.standing = !0x1, _0x29d7b2.collision.y && (0x0 < this.bounciness && Math.abs(this.vel.y) > this.minBounceVelocity ? this.vel.y *= -this.bounciness : (0x0 < this.vel.y && (this.standing = !0x0), this.vel.y = 0x0)), _0x29d7b2.collision.x && (this.vel.x = 0x0 < this.bounciness && Math.abs(this.vel.x) > this.minBounceVelocity ? this.vel.x * -this.bounciness : 0x0);
      if (_0x29d7b2.collision.slope) {
        var _0x11ed5f = _0x29d7b2.collision.slope;
        if (0x0 < this.bounciness) {
          var _0x12c6d8 = this.vel.x * _0x11ed5f.nx + this.vel.y * _0x11ed5f.ny;
          this.vel.x = (this.vel.x - 0x2 * _0x11ed5f.nx * _0x12c6d8) * this.bounciness, this.vel.y = (this.vel.y - 0x2 * _0x11ed5f.ny * _0x12c6d8) * this.bounciness;
        } else _0x12c6d8 = (this.vel.x * _0x11ed5f.x + this.vel.y * _0x11ed5f.y) / (_0x11ed5f.x * _0x11ed5f.x + _0x11ed5f.y * _0x11ed5f.y), this.vel.x = _0x11ed5f.x * _0x12c6d8, this.vel.y = _0x11ed5f.y * _0x12c6d8, _0x11ed5f = Math.atan2(_0x11ed5f.x, _0x11ed5f.y), _0x11ed5f > this.slopeStanding.min && _0x11ed5f < this.slopeStanding.max && (this.standing = !0x0);
      }
      this.pos.x = _0x29d7b2.pos.x, this.pos.y = _0x29d7b2.pos.y;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.tweens-handler').requires('impact.entity', 'plugins.tween', 'plugins.patches.entity-patch').defines(function () {
  Array.prototype.indexOf || (Array.prototype.indexOf = function (_0x2bbf93) {
    for (var _0x5a2a5a = 0x0; _0x5a2a5a < this.length; ++_0x5a2a5a) if (this[_0x5a2a5a] === _0x2bbf93) return _0x5a2a5a;
    return -0x1;
  }), ig.TweensHandler = ig.Class.extend({
    '_tweens': [],
    '_systemPausedTweens': [],
    'init': function () {},
    'getAll': function () {
      return this._tweens;
    },
    'removeAll': function () {
      this._tweens = [];
    },
    'add': function (_0x53f833) {
      this._tweens.push(_0x53f833);
    },
    'remove': function (_0x13ad39) {
      _0x13ad39 = this._tweens.indexOf(_0x13ad39), -0x1 !== _0x13ad39 && this._tweens.splice(_0x13ad39, 0x1);
    },
    'onSystemPause': function () {
      if (0x0 === this._tweens.length) return !0x1;
      for (var _0x4f564c = 0x0, _0x4a1944 = null; _0x4f564c < this._tweens.length;) _0x4a1944 = this._tweens[_0x4f564c], _0x4a1944._isPlaying && (this._systemPausedTweens.push(_0x4a1944), _0x4a1944.pause()), _0x4f564c++;
      return !0x0;
    },
    'onSystemResume': function () {
      if (0x0 === this._systemPausedTweens.length) return !0x1;
      for (var _0x311301 = 0x0; _0x311301 < this._systemPausedTweens.length;) this._systemPausedTweens[_0x311301].resume(), _0x311301++;
      return this._systemPausedTweens = [], !0x0;
    },
    'update': function (_0x5af98e, _0x50068e) {
      if (0x0 === this._tweens.length) return !0x1;
      var _0x298642 = 0x0;
      for (_0x5af98e = void 0x0 !== _0x5af98e ? _0x5af98e : ig.game.tweens.now(); _0x298642 < this._tweens.length;) this._tweens[_0x298642].update(_0x5af98e) || _0x50068e ? _0x298642++ : this._tweens.splice(_0x298642, 0x1);
      return !0x0;
    },
    'now': function () {
      return Date.now();
    }
  }), ig.TweenDef = ig.Class.extend({
    '_ent': null,
    '_valuesStart': {},
    '_valuesEnd': {},
    '_valuesStartRepeat': {},
    '_duration': 0x3e8,
    '_repeat': 0x0,
    '_yoyo': !0x1,
    '_isPlaying': !0x1,
    '_reversed': !0x1,
    '_delayTime': 0x0,
    '_startTime': null,
    '_pauseTime': null,
    '_easingFunction': ig.Tween.Easing.Linear.EaseNone,
    '_interpolationFunction': ig.Tween.Interpolation.Linear,
    '_chainedTweens': [],
    '_onStartCallback': null,
    '_onStartCallbackFired': !0x1,
    '_onUpdateCallback': null,
    '_onCompleteCallback': null,
    '_onStopCallback': null,
    '_onPauseCallback': null,
    '_onResumeCallback': null,
    '_currentElapsed': 0x0,
    'init': function (_0x38f802) {
      this._object = _0x38f802;
    },
    'to': function (_0xbddc66, _0x1ae75c) {
      return this._valuesEnd = _0xbddc66, void 0x0 !== _0x1ae75c && (this._duration = _0x1ae75c), this;
    },
    'start': function (_0x5e5875) {
      if (this._isPlaying) return this;
      ig.game.tweens.add(this), this._isPlaying = !0x0, this._onStartCallbackFired = !0x1, this._startTime = void 0x0 !== _0x5e5875 ? _0x5e5875 : ig.game.tweens.now(), this._startTime += this._delayTime;
      for (var _0x5977dd in this._valuesEnd) {
        if (this._valuesEnd[_0x5977dd] instanceof Array) {
          if (0x0 === this._valuesEnd[_0x5977dd].length) continue;
          this._valuesEnd[_0x5977dd] = [this._object[_0x5977dd]].concat(this._valuesEnd[_0x5977dd]);
        }
        void 0x0 !== this._object[_0x5977dd] && (this._valuesStart[_0x5977dd] = this._object[_0x5977dd], !0x1 === this._valuesStart[_0x5977dd] instanceof Array && (this._valuesStart[_0x5977dd] *= 0x1), this._valuesStartRepeat[_0x5977dd] = this._valuesStart[_0x5977dd] || 0x0);
      }
      return this;
    },
    'stop': function () {
      if (!this._isPlaying) return this;
      return ig.game.tweens.remove(this), this._isPlaying = !0x1, null !== this._onStopCallback && this._onStopCallback.call(this._object, this._object), this.stopChainedTweens(), this;
    },
    'pause': function () {
      if (!this._isPlaying) return this;
      return ig.game.tweens.remove(this), this._isPlaying = !0x1, this._pauseTime = ig.game.tweens.now(), null !== this._onPauseCallback && this._onPauseCallback.call(this._object, this._object), this;
    },
    'resume': function () {
      if (this._isPlaying || !this._pauseTime) return this;
      var _0xec7c6e = ig.game.tweens.now() - this._pauseTime;
      return this._startTime += _0xec7c6e, ig.game.tweens.add(this), this._isPlaying = !0x0, null !== this._onResumeCallback && this._onResumeCallback.call(this._object, this._object), this._pauseTime = null, this;
    },
    'end': function () {
      return this.update(this._startTime + this._duration), this;
    },
    'stopChainedTweens': function () {
      for (var _0x9db087 = 0x0, _0x518d8b = this._chainedTweens.length; _0x9db087 < _0x518d8b; _0x9db087++) this._chainedTweens[_0x9db087].stop();
    },
    'delay': function (_0x7400d7) {
      return this._delayTime = _0x7400d7, this;
    },
    'repeat': function (_0x5a2391) {
      return this._repeat = _0x5a2391, this;
    },
    'repeatDelay': function (_0x79ef8c) {
      return this._repeatDelayTime = _0x79ef8c, this;
    },
    'yoyo': function (_0x31466a) {
      return this._yoyo = _0x31466a, this;
    },
    'easing': function (_0x927be9) {
      return this._easingFunction = _0x927be9, this;
    },
    'interpolation': function (_0x23256a) {
      return this._interpolationFunction = _0x23256a, this;
    },
    'chain': function () {
      return this._chainedTweens = arguments, this;
    },
    'onStart': function (_0x3e4f47) {
      return this._onStartCallback = _0x3e4f47, this;
    },
    'onUpdate': function (_0x5d876f) {
      return this._onUpdateCallback = _0x5d876f, this;
    },
    'onComplete': function (_0xeec9d) {
      return this._onCompleteCallback = _0xeec9d, this;
    },
    'onStop': function (_0x57866f) {
      return this._onStopCallback = _0x57866f, this;
    },
    'onPause': function (_0x44c304) {
      return this._onPauseCallback = _0x44c304, this;
    },
    'onResume': function (_0x28ea13) {
      return this._onResumeCallback = _0x28ea13, this;
    },
    'update': function (_0x2fe761) {
      var _0x59cd60, _0x18240d, _0x49b2e0;
      if (_0x2fe761 < this._startTime) return !0x0;
      !0x1 === this._onStartCallbackFired && (null !== this._onStartCallback && this._onStartCallback.call(this._object, this._object), this._onStartCallbackFired = !0x0), _0x18240d = (_0x2fe761 - this._startTime) / this._duration, this._currentElapsed = _0x18240d = 0x1 < _0x18240d ? 0x1 : _0x18240d, _0x49b2e0 = this._easingFunction(_0x18240d);
      for (_0x59cd60 in this._valuesEnd) if (void 0x0 !== this._valuesStart[_0x59cd60]) {
        var _0x4fbd44 = this._valuesStart[_0x59cd60] || 0x0,
          _0x288146 = this._valuesEnd[_0x59cd60];
        _0x288146 instanceof Array ? this._object[_0x59cd60] = this._interpolationFunction(_0x288146, _0x49b2e0) : ('string' === typeof _0x288146 && (_0x288146 = '+' === _0x288146.charAt(0x0) || '-' === _0x288146.charAt(0x0) ? _0x4fbd44 + parseFloat(_0x288146) : parseFloat(_0x288146)), 'number' === typeof _0x288146 && (this._object[_0x59cd60] = _0x4fbd44 + (_0x288146 - _0x4fbd44) * _0x49b2e0));
      }
      null !== this._onUpdateCallback && this._onUpdateCallback.call(this._object, this._object, _0x49b2e0);
      if (0x1 === _0x18240d) {
        if (0x0 < this._repeat) {
          isFinite(this._repeat) && this._repeat--;
          for (_0x59cd60 in this._valuesStartRepeat) 'string' === typeof this._valuesEnd[_0x59cd60] && (this._valuesStartRepeat[_0x59cd60] = _valuesStartRepeat[_0x59cd60] + parseFloat(_valuesEnd[_0x59cd60])), this._yoyo && (_0x18240d = this._valuesStartRepeat[_0x59cd60], this._valuesStartRepeat[_0x59cd60] = this._valuesEnd[_0x59cd60], this._valuesEnd[_0x59cd60] = _0x18240d), this._valuesStart[_0x59cd60] = this._valuesStartRepeat[_0x59cd60];
          this._yoyo && (this._reversed = !this._reversed), this._startTime = void 0x0 !== this._repeatDelayTime ? _0x2fe761 + this._repeatDelayTime : _0x2fe761 + this._delayTime;
        } else {
          null !== this._onCompleteCallback && this._onCompleteCallback.call(this._object, this._object), _0x2fe761 = 0x0;
          for (_0x59cd60 = this._chainedTweens.length; _0x2fe761 < _0x59cd60; _0x2fe761++) this._chainedTweens[_0x2fe761].start(this._startTime + this._duration);
          return !0x1;
        }
      }
      return !0x0;
    }
  });
  var _0x2ace15 = [0x1];
  ig.Tween.Interpolation = {
    'Linear': function (_0x21c167, _0x32d7f6) {
      var _0x3f2315 = _0x21c167.length - 0x1,
        _0x6dc5ec = _0x3f2315 * _0x32d7f6,
        _0x32de49 = Math.floor(_0x6dc5ec),
        _0x30cb0c = ig.Tween.Interpolation.Utils.Linear;
      return 0x0 > _0x32d7f6 ? _0x30cb0c(_0x21c167[0x0], _0x21c167[0x1], _0x6dc5ec) : 0x1 < _0x32d7f6 ? _0x30cb0c(_0x21c167[_0x3f2315], _0x21c167[_0x3f2315 - 0x1], _0x3f2315 - _0x6dc5ec) : _0x30cb0c(_0x21c167[_0x32de49], _0x21c167[_0x32de49 + 0x1 > _0x3f2315 ? _0x3f2315 : _0x32de49 + 0x1], _0x6dc5ec - _0x32de49);
    },
    'Bezier': function (_0x38f218, _0x38967b) {
      for (var _0x422283 = 0x0, _0x2a6f2c = _0x38f218.length - 0x1, _0x29f5fa = Math.pow, _0x2e33cc = ig.Tween.Interpolation.Utils.Bernstein, _0xd40587 = 0x0; _0xd40587 <= _0x2a6f2c; _0xd40587++) _0x422283 += _0x29f5fa(0x1 - _0x38967b, _0x2a6f2c - _0xd40587) * _0x29f5fa(_0x38967b, _0xd40587) * _0x38f218[_0xd40587] * _0x2e33cc(_0x2a6f2c, _0xd40587);
      return _0x422283;
    },
    'CatmullRom': function (_0x12af87, _0x2dd4ad) {
      var _0x5c9409 = _0x12af87.length - 0x1,
        _0x2e0bf9 = _0x5c9409 * _0x2dd4ad,
        _0x33df46 = Math.floor(_0x2e0bf9),
        _0x488ebe = ig.Tween.Interpolation.Utils.CatmullRom;
      return _0x12af87[0x0] === _0x12af87[_0x5c9409] ? (0x0 > _0x2dd4ad && (_0x33df46 = Math.floor(_0x2e0bf9 = _0x5c9409 * (0x1 + _0x2dd4ad))), _0x488ebe(_0x12af87[(_0x33df46 - 0x1 + _0x5c9409) % _0x5c9409], _0x12af87[_0x33df46], _0x12af87[(_0x33df46 + 0x1) % _0x5c9409], _0x12af87[(_0x33df46 + 0x2) % _0x5c9409], _0x2e0bf9 - _0x33df46)) : 0x0 > _0x2dd4ad ? _0x12af87[0x0] - (_0x488ebe(_0x12af87[0x0], _0x12af87[0x0], _0x12af87[0x1], _0x12af87[0x1], -_0x2e0bf9) - _0x12af87[0x0]) : 0x1 < _0x2dd4ad ? _0x12af87[_0x5c9409] - (_0x488ebe(_0x12af87[_0x5c9409], _0x12af87[_0x5c9409], _0x12af87[_0x5c9409 - 0x1], _0x12af87[_0x5c9409 - 0x1], _0x2e0bf9 - _0x5c9409) - _0x12af87[_0x5c9409]) : _0x488ebe(_0x12af87[_0x33df46 ? _0x33df46 - 0x1 : 0x0], _0x12af87[_0x33df46], _0x12af87[_0x5c9409 < _0x33df46 + 0x1 ? _0x5c9409 : _0x33df46 + 0x1], _0x12af87[_0x5c9409 < _0x33df46 + 0x2 ? _0x5c9409 : _0x33df46 + 0x2], _0x2e0bf9 - _0x33df46);
    },
    'Utils': {
      'Linear': function (_0xc981, _0x52d0d6, _0x1e776e) {
        return (_0x52d0d6 - _0xc981) * _0x1e776e + _0xc981;
      },
      'Bernstein': function (_0x29ae19, _0x57bfb2) {
        var _0x13428c = ig.Tween.Interpolation.Utils.Factorial;
        return _0x13428c(_0x29ae19) / _0x13428c(_0x57bfb2) / _0x13428c(_0x29ae19 - _0x57bfb2);
      },
      'Factorial': function (_0x587d2b) {
        var _0x2f0be6 = 0x1;
        if (_0x2ace15[_0x587d2b]) return _0x2ace15[_0x587d2b];
        for (var _0x759fb9 = _0x587d2b; 0x1 < _0x759fb9; _0x759fb9--) _0x2f0be6 *= _0x759fb9;
        return _0x2ace15[_0x587d2b] = _0x2f0be6;
      },
      'CatmullRom': function (_0x17eeba, _0x2e9bf4, _0x299648, _0x21aea2, _0x177b6e) {
        _0x17eeba = 0.5 * (_0x299648 - _0x17eeba), _0x21aea2 = 0.5 * (_0x21aea2 - _0x2e9bf4);
        var _0x3823d2 = _0x177b6e * _0x177b6e;
        return (0x2 * _0x2e9bf4 - 0x2 * _0x299648 + _0x17eeba + _0x21aea2) * _0x177b6e * _0x3823d2 + (-0x3 * _0x2e9bf4 + 0x3 * _0x299648 - 0x2 * _0x17eeba - _0x21aea2) * _0x3823d2 + _0x17eeba * _0x177b6e + _0x2e9bf4;
      }
    }
  };
}), ig.baked = !0x0, ig.module('plugins.url-parameters').defines(function () {
  ig.UrlParameters = ig.Class.extend({
    'init': function () {
      switch (getQueryVariable('iphone')) {
        case 'true':
          ig.ua.iPhone = !0x0, console.log("iPhone mode");
      }
      var _0x4679f2 = getQueryVariable('webview');
      if (_0x4679f2) switch (_0x4679f2) {
        case 'true':
          ig.ua.is_uiwebview = !0x0, console.log("webview mode");
      }
      if (_0x4679f2 = getQueryVariable('debug')) switch (_0x4679f2) {
        case 'true':
          ig.game.showDebugMenu(), console.log("debug mode");
      }
      switch (getQueryVariable('view')) {
        case 'stats':
          ig.game.resetPlayerStats(), ig.game.endGame();
      }
      getQueryVariable('ad');
    }
  });
}), ig.baked = !0x0, ig.module('plugins.director').requires('impact.impact').defines(function () {
  ig.Director = ig.Class.extend({
    'init': function (_0x2c026f, _0x394383) {
      this.game = _0x2c026f, this.levels = [], this.currentLevel = 0x0, this.append(_0x394383);
    },
    'loadLevel': function (_0x372506) {
      for (var _0x5a8fda in ig.sizeHandler.dynamicClickableEntityDivs) {
        var _0x12c092 = ig.domHandler.getElementById('#' + _0x5a8fda);
        ig.domHandler.hide(_0x12c092);
      }
      return this.currentLevel = _0x372506, this.game.loadLevel(this.levels[_0x372506]), !0x0;
    },
    'loadLevelWithoutEntities': function (_0xe18980) {
      return this.currentLevel = _0xe18980, this.game.loadLevelWithoutEntities(this.levels[_0xe18980]), !0x0;
    },
    'append': function (_0x148a50) {
      return newLevels = [], 'object' === typeof _0x148a50 ? (_0x148a50.constructor === [].constructor ? newLevels = _0x148a50 : newLevels[0x0] = _0x148a50, this.levels = this.levels.concat(newLevels), !0x0) : !0x1;
    },
    'nextLevel': function () {
      return this.currentLevel + 0x1 < this.levels.length ? this.loadLevel(this.currentLevel + 0x1) : !0x1;
    },
    'previousLevel': function () {
      return 0x0 <= this.currentLevel - 0x1 ? this.loadLevel(this.currentLevel - 0x1) : !0x1;
    },
    'jumpTo': function (_0xc7e143) {
      var _0xaa2a65 = null;
      for (i = 0x0; i < this.levels.length; i++) this.levels[i] == _0xc7e143 && (_0xaa2a65 = i);
      return 0x0 <= _0xaa2a65 ? this.loadLevel(_0xaa2a65) : !0x1;
    },
    'firstLevel': function () {
      return this.loadLevel(0x0);
    },
    'lastLevel': function () {
      return this.loadLevel(this.levels.length - 0x1);
    },
    'reloadLevel': function () {
      return this.loadLevel(this.currentLevel);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.impact-storage').requires('impact.game').defines(function () {
  ig.Storage = ig.Class.extend({
    'staticInstantiate': function () {
      return !ig.Storage.instance ? null : ig.Storage.instance;
    },
    'init': function () {
      ig.Storage.instance = this;
    },
    'isCapable': function () {
      return 'undefined' !== typeof window.localStorage;
    },
    'isSet': function (_0x264abd) {
      return null !== this.get(_0x264abd);
    },
    'initUnset': function (_0x153fad, _0x2052e9) {
      null === this.get(_0x153fad) && this.set(_0x153fad, _0x2052e9);
    },
    'get': function (_0xb6fca) {
      if (!this.isCapable()) return null;
      try {
        return JSON.parse(localStorage.getItem(_0xb6fca));
      } catch (_0x5db6f0) {
        return window.localStorage.getItem(_0xb6fca);
      }
    },
    'getInt': function (_0x41ef26) {
      return ~~this.get(_0x41ef26);
    },
    'getFloat': function (_0x1b14c3) {
      return parseFloat(this.get(_0x1b14c3));
    },
    'getBool': function (_0x8d1a2f) {
      return !!this.get(_0x8d1a2f);
    },
    'key': function (_0x32e89f) {
      return this.isCapable() ? window.localStorage.key(_0x32e89f) : null;
    },
    'set': function (_0x50e953, _0x212383) {
      if (!this.isCapable()) return null;
      try {
        window.localStorage.setItem(_0x50e953, JSON.stringify(_0x212383));
      } catch (_0x4e1c03) {
        console.log(_0x4e1c03);
      }
    },
    'setHighest': function (_0x4437c8, _0x460956) {
      _0x460956 > this.getFloat(_0x4437c8) && this.set(_0x4437c8, _0x460956);
    },
    'remove': function (_0x299453) {
      if (!this.isCapable()) return null;
      window.localStorage.removeItem(_0x299453);
    },
    'clear': function () {
      if (!this.isCapable()) return null;
      window.localStorage.clear();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.fullscreen').requires('impact.entity', 'plugins.handlers.size-handler', 'plugins.director').defines(function () {
  ig.Fullscreen = {
    'enableFullscreenButton': !0x1,
    '_isEnabled': 'notChecked',
    'isEnabled': function () {
      return 'notChecked' == this._isEnabled && (console.log("Fullscreen plugin v1.1"), this._isEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled ? !0x0 : !0x1), this._isEnabled;
    },
    'isFullscreen': function () {
      return ig.Fullscreen.isEnabled() && (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement) ? !0x0 : !0x1;
    },
    'toggleFullscreen': function () {
      ig.Fullscreen.isFullscreen() ? ig.Fullscreen.exitFullscreen() : ig.Fullscreen.requestFullscreen(), ig.sizeHandler.orientationDelayHandler();
    },
    'requestFullscreen': function () {
      var _0x3f729d = document.documentElement;
      _0x3f729d.requestFullscreen ? _0x3f729d.requestFullscreen() : _0x3f729d.webkitRequestFullscreen ? _0x3f729d.webkitRequestFullscreen() : _0x3f729d.mozRequestFullScreen ? _0x3f729d.mozRequestFullScreen() : _0x3f729d.msRequestFullscreen ? _0x3f729d.msRequestFullscreen() : console.log("no request fullscreen method available");
    },
    'exitFullscreen': function () {
      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : console.log("no exit fullscreen method available");
    },
    'divs': {}
  }, ig.Director.inject({
    'loadLevel': function (_0x5928b4) {
      var _0x277722 = ig.Fullscreen.divs,
        _0x441340;
      for (_0x441340 in _0x277722) _0x277722 = ig.domHandler.getElementById('#' + _0x441340), ig.domHandler.hide(_0x277722);
      return this.parent(_0x5928b4);
    }
  }), ig.SizeHandler.inject({
    'resize': function () {
      this.parent();
      var _0x4eca7a = ig.Fullscreen.divs,
        _0x4fddc7;
      for (_0x4fddc7 in _0x4eca7a) {
        var _0x3690f0 = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y),
          _0x1ca18d = ig.domHandler.getElementById('#' + _0x4fddc7),
          _0x49d160 = _0x4eca7a[_0x4fddc7].entity_pos_x,
          _0x22bb5a = _0x4eca7a[_0x4fddc7].entity_pos_y,
          _0x47ff90 = _0x4eca7a[_0x4fddc7].width,
          _0x3a0f81 = _0x4eca7a[_0x4fddc7].height,
          _0x1dccfa = ig.domHandler.getElementById('#canvas'),
          _0x3bb84f = ig.domHandler.getOffsets(_0x1dccfa);
        ig.ua.mobile ? (_0x1dccfa = _0x3bb84f.left, _0x3bb84f = _0x3bb84f.top, ig.sizeHandler.disableStretchToFitOnMobileFlag ? (_0x49d160 = Math.floor(_0x1dccfa + _0x49d160 * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x22bb5a = Math.floor(_0x3bb84f + _0x22bb5a * ig.sizeHandler.scaleRatioMultiplier.y) + 'px', _0x47ff90 = Math.floor(_0x47ff90 * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x3a0f81 = Math.floor(_0x3a0f81 * ig.sizeHandler.scaleRatioMultiplier.y) + 'px') : (_0x49d160 = Math.floor(_0x49d160 * ig.sizeHandler.sizeRatio.x) + 'px', _0x22bb5a = Math.floor(_0x22bb5a * ig.sizeHandler.sizeRatio.y) + 'px', _0x47ff90 = Math.floor(_0x47ff90 * ig.sizeHandler.sizeRatio.x) + 'px', _0x3a0f81 = Math.floor(_0x3a0f81 * ig.sizeHandler.sizeRatio.y) + 'px')) : (_0x1dccfa = _0x3bb84f.left, _0x3bb84f = _0x3bb84f.top, _0x49d160 = Math.floor(_0x1dccfa + _0x49d160 * _0x3690f0) + 'px', _0x22bb5a = Math.floor(_0x3bb84f + _0x22bb5a * _0x3690f0) + 'px', _0x47ff90 = Math.floor(_0x47ff90 * _0x3690f0) + 'px', _0x3a0f81 = Math.floor(_0x3a0f81 * _0x3690f0) + 'px'), ig.domHandler.css(_0x1ca18d, {
          'float': 'left',
          'position': 'absolute',
          'left': _0x49d160,
          'top': _0x22bb5a,
          'width': _0x47ff90,
          'height': _0x3a0f81,
          'z-index': 0x3
        }), _0x4eca7a[_0x4fddc7]['font-size'] && ig.domHandler.css(_0x1ca18d, {
          'font-size': _0x4eca7a[_0x4fddc7]['font-size'] * _0x3690f0 + 'px'
        });
      }
    }
  }), ig.FullscreenButton = ig.Entity.extend({
    'enterImage': null,
    'exitImage': null,
    'isReady': !0x1,
    'isShown': !0x0,
    'zIndex': 0xf423f,
    'identifier': null,
    'prevPos': {
      'x': 0x0,
      'y': 0x0
    },
    'alpha': 0x1,
    'invisImagePath': 'media/graphics/misc/invisible.png',
    'init': function (_0x446230, _0xfa86e8, _0x167457) {
      this.parent(_0x446230, _0xfa86e8, _0x167457), ig.Fullscreen.isEnabled() && ig.Fullscreen.enableFullscreenButton ? this.enterImage.loaded ? this.initSize() : this.enterImage.loadCallback = function () {
        this.initSize();
      }.bind(this) : this.kill();
    },
    'kill': function () {
      this.parent();
      var _0x3657e6 = ig.domHandler.getElementById('#' + this.identifier);
      _0x3657e6 && ig.domHandler.hide(_0x3657e6);
    },
    'show': function () {
      this.isShown = !0x0;
      var _0x5c904d = ig.domHandler.getElementById('#' + this.identifier);
      _0x5c904d && ig.domHandler.show(_0x5c904d);
    },
    'hide': function () {
      this.isShown = !0x1;
      var _0xd4b6f2 = ig.domHandler.getElementById('#' + this.identifier);
      _0xd4b6f2 && ig.domHandler.hide(_0xd4b6f2);
    },
    'initSize': function () {
      this.size.x = this.enterImage.width, this.size.y = this.enterImage.height, this.createClickableLayer(), this.isReady = !0x0;
    },
    'createClickableLayer': function () {
      this.identifier = 'fullscreen-button-layer';
      var _0x3a7b80 = ig.domHandler.getElementById('#' + this.identifier);
      _0x3a7b80 ? (ig.domHandler.show(_0x3a7b80), ig.domHandler.attr(_0x3a7b80, 'onclick', 'ig.Fullscreen.toggleFullscreen()')) : this.createClickableOutboundLayer();
    },
    'update': function (_0x2dd98d, _0x1f9775) {
      this.parent(), _0x2dd98d = this.pos.x, _0x1f9775 = this.pos.y, this.isReady && !(this.prevPos.x === _0x2dd98d && this.prevPos.y === _0x1f9775) && (ig.Fullscreen.divs[this.identifier] = {}, ig.Fullscreen.divs[this.identifier].width = this.size.x, ig.Fullscreen.divs[this.identifier].height = this.size.y, ig.Fullscreen.divs[this.identifier].entity_pos_x = this.pos.x, ig.Fullscreen.divs[this.identifier].entity_pos_y = this.pos.y, this.prevPos.x = _0x2dd98d, this.prevPos.y = _0x1f9775);
    },
    'draw': function () {
      this.isReady && this.isShown && (ig.system.context.globalAlpha = this.alpha, ig.Fullscreen.isFullscreen() ? this.exitImage.draw(this.pos.x, this.pos.y) : this.enterImage.draw(this.pos.x, this.pos.y), ig.system.context.globalAlpha = 0x1);
    },
    'createClickableOutboundLayer': function () {
      var _0x50df5f = this.identifier,
        _0x338354 = this.invisImagePath,
        _0x1852cd = ig.domHandler.create('div');
      ig.domHandler.attr(_0x1852cd, 'id', _0x50df5f), ig.domHandler.attr(_0x1852cd, 'onclick', 'ig.Fullscreen.toggleFullscreen()');
      var _0xf8316a = ig.domHandler.create('a'),
        _0x1d1155 = ig.domHandler.create('img');
      ig.domHandler.css(_0x1d1155, {
        'width': '100%',
        'height': '100%'
      }), ig.domHandler.attr(_0x1d1155, 'src', _0x338354), _0x338354 = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y);
      if (ig.ua.mobile) {
        var _0x1ee022 = ig.domHandler.getElementById('#canvas'),
          _0x1ee022 = ig.domHandler.getOffsets(_0x1ee022),
          _0x4c2963 = _0x1ee022.left,
          _0x38c07b = _0x1ee022.top;
        console.log(_0x1ee022.left), ig.sizeHandler.disableStretchToFitOnMobileFlag ? (_0x1ee022 = Math.floor(_0x4c2963 + this.pos.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x38c07b = Math.floor(_0x38c07b + this.pos.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px', _0x4c2963 = Math.floor(this.size.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x338354 = Math.floor(this.size.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px') : (_0x1ee022 = Math.floor(this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x38c07b = Math.floor(this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x4c2963 = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x338354 = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px');
      } else _0x1ee022 = ig.domHandler.getElementById('#canvas'), _0x1ee022 = ig.domHandler.getOffsets(_0x1ee022), _0x4c2963 = _0x1ee022.left, _0x38c07b = _0x1ee022.top, ig.sizeHandler.enableStretchToFitOnDesktopFlag ? (_0x1ee022 = Math.floor(_0x4c2963 + this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x38c07b = Math.floor(_0x38c07b + this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x4c2963 = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x338354 = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px') : (_0x1ee022 = Math.floor(_0x4c2963 + this.pos.x * _0x338354) + 'px', _0x38c07b = Math.floor(_0x38c07b + this.pos.y * _0x338354) + 'px', _0x4c2963 = Math.floor(this.size.x * _0x338354) + 'px', _0x338354 = Math.floor(this.size.y * _0x338354) + 'px');
      ig.domHandler.css(_0x1852cd, {
        'float': 'left',
        'position': 'absolute',
        'left': _0x1ee022,
        'top': _0x38c07b,
        'width': _0x4c2963,
        'height': _0x338354,
        'z-index': 0x3
      }), ig.domHandler.addEvent(_0x1852cd, 'mousemove', ig.input.mousemove.bind(ig.input), !0x1), ig.domHandler.appendChild(_0xf8316a, _0x1d1155), ig.domHandler.appendChild(_0x1852cd, _0xf8316a), ig.domHandler.appendToBody(_0x1852cd), ig.Fullscreen.divs[_0x50df5f] = {}, ig.Fullscreen.divs[_0x50df5f].width = this.size.x, ig.Fullscreen.divs[_0x50df5f].height = this.size.y, ig.Fullscreen.divs[_0x50df5f].entity_pos_x = this.pos.x, ig.Fullscreen.divs[_0x50df5f].entity_pos_y = this.pos.y;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.tiered-rv.tiered-rv-game-object').requires('impact.entity').defines(function () {
  ig.TieredRvGameObject = ig.Entity.extend({
    'main': null,
    'isBTN': !0x1,
    'img': null,
    'isClicking': !0x1,
    'isEnabled': !0x0,
    'isHidden': !0x1,
    'isHover': !0x1,
    'isShow': !0x0,
    'btnDelay': 0x0,
    'interactable': !0x0,
    'hasPressAnim': !0x1,
    'size': {
      'x': 0x0,
      'y': 0x0
    },
    'scale': {
      'x': 0x1,
      'y': 0x1
    },
    'objAlpha': 0x1,
    'anchorObj': null,
    'posOffset': null,
    'init': function (_0x1e9756, _0x93cf75, _0x139387) {
      this.parent(_0x1e9756, _0x93cf75, _0x139387);
    },
    'update': function () {
      this.parent(), this.anchorObj && (this.pos = {
        'x': this.anchorObj.pos.x + this.posOffset.x,
        'y': this.anchorObj.pos.y + this.posOffset.y
      }), this.isEnabled && !this.isHidden && this.isShow && this.isBTN && (this.isHover = this.checkMousePos(), ig.input.state('click') ? this.isHover ? (this.isFirstPressed || (this.clicked(), this.isFirstPressed = !0x0), this.clicking()) : (this.isFirstPressed = this.isClicking = !0x1, this.tween({
        'scale': {
          'x': 0x1,
          'y': 0x1
        }
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start()) : this.isClicking && (this.released(), this.tween({
        'scale': {
          'x': 0x1,
          'y': 0x1
        }
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start()), 0x0 < this.btnDelay && this.btnDelay--);
    },
    'draw': function () {
      if (this.isShow) {
        var _0x288af6 = ig.system.context;
        _0x288af6.save(), this.main && this.main.objAlpha && (this.objAlpha = this.main.objAlpha), _0x288af6.globalAlpha = this.objAlpha, this.img && _0x288af6.drawImage(this.img.data, this.pos.x + this.size.x * (0x1 - this.scale.x) / 0x2, this.pos.y + this.size.y * (0x1 - this.scale.y) / 0x2, this.size.x * this.scale.x, this.size.y * this.scale.y), _0x288af6.globalAlpha = 0x1, _0x288af6.restore();
      }
    },
    'show': function () {
      this.isShow = !0x0;
    },
    'hide': function () {
      this.isShow = !0x1;
    },
    'checkMousePos': function () {
      var _0x48bddc = ig.game.getEntitiesByType(EntityPointer)[0x0];
      return _0x48bddc || (_0x48bddc = ig.game.spawnEntity(EntityPointer)), _0x48bddc.pos.x - ig.game.screen.x >= this.pos.x && _0x48bddc.pos.x - ig.game.screen.x <= this.pos.x + this.size.x && _0x48bddc.pos.y - ig.game.screen.y >= this.pos.y && _0x48bddc.pos.y - ig.game.screen.y <= this.pos.y + this.size.y;
    },
    'clicked': function () {
      this.isShow && ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.tieredRV.soundsID.click]);
    },
    'clicking': function () {
      !this.isClicking && this.isEnabled && this.isShow && 0x0 >= this.btnDelay && (this.isClicking = !0x0, this.tween({
        'scale': {
          'x': 0.9,
          'y': 0.9
        }
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start());
    },
    'released': function () {
      this.isClicking && this.isEnabled && this.isShow && (this.isFirstPressed = this.isClicking = !0x1, this.interact(), this.btnDelay = 0x3);
    },
    'interact': function () {}
  });
}), ig.baked = !0x0, ig.module('plugins.tiered-rv.tiered-rv-window').requires('plugins.tiered-rv.tiered-rv-game-object').defines(function () {
  ig.TieredRvWindow = ig.TieredRvGameObject.extend({
    'main': null,
    'panels': [],
    'objs': [],
    'objAlpha': 0x0,
    'posOrig': null,
    'gameResolution': null,
    'responsive': !0x1,
    'respTween': 0x0,
    'hideCallback': null,
    'init': function (_0x32135, _0x4b4364, _0x833ca0) {
      this.parent(_0x32135, _0x4b4364, _0x833ca0), this.zIndex = this.main.windowBox.zIndex, ig.responsive ? (this.responsive = !0x0, this.anchorType = 'center-middle', this.anchoredPositionX = -this.main.windowBox.size.x / 0x2, this.anchoredPositionY = 0x0) : (this.gameResolution = !ig.ua.mobile ? ig.sizeHandler.desktop.actualResolution : ig.sizeHandler.mobile.actualResolution, this.pos = {
        'x': this.main.windowBox.endPos.x,
        'y': this.main.windowBox.endPos.y
      }, this.posOrig = {
        'x': this.main.windowBox.endPos.x,
        'y': this.main.windowBox.endPos.y
      }), this.btnClose = ig.game.spawnEntity(ig.TieredRvBtnClose, 0x0, 0x0, {
        'main': this,
        'anchorObj': this,
        'posOffset': this.main.windowBox.closeBtn_posOffset,
        'size': this.main.windowBox.closeBtn_size,
        'zIndex': this.zIndex + 0x1,
        'img': this.main.windowBox.closeBtn_img,
        'isShow': !0x1
      }), this.objs.push(this.btnClose);
      for (_0x32135 = 0x0; _0x32135 < this.main.tiersData_cur.length; _0x32135++) this.panels[_0x32135] = ig.game.spawnEntity(ig.TieredRvTierPanel, 0x0, 0x0, {
        'main': this,
        'index': _0x32135,
        'size': this.main.tierPanel.size,
        'bg': this.main.tierPanel.imgBg,
        'icon': this.main.tierPanel.tierIcons[_0x32135],
        'posOffset': 0x0 === _0x32135 ? this.main.tierPanel.posOffset_firstPanel : {
          'x': this.main.tierPanel.posOffset_firstPanel.x + this.main.tierPanel.posOffset_nextPanels.x * _0x32135,
          'y': this.main.tierPanel.posOffset_firstPanel.y + this.main.tierPanel.posOffset_nextPanels.y * _0x32135
        },
        'posOffset_icon': this.main.tierPanel.posOffset_icon,
        'zIndex': this.zIndex + 0x1,
        'btn_posOffset': this.main.tierPanel_btn.posOffset,
        'btn_size': this.main.tierPanel_btn.size,
        'btn_img': this.main.tierPanel_btn.img
      }), this.objs.push(this.panels[_0x32135]);
      for (_0x32135 = 0x0; _0x32135 < this.objs.length; _0x32135++) this.objs[_0x32135].show();
      this.hide_window();
    },
    'update': function () {
      this.parent(), this.responsive && (this.pos = ig.responsive.toAnchor(-this.main.windowBox.size.x / 0x2 + this.respTween, -this.main.windowBox.size.y / 0x2, 'center-middle'));
    },
    'draw': function () {
      if (this.isShow) {
        this.parent();
        var _0xff22fe = ig.system.context;
        _0xff22fe.save(), _0xff22fe.fillStyle = '#000000', _0xff22fe.globalAlpha = 0.5, this.responsive ? _0xff22fe.fillRect(0x0, 0x0, ig.responsive.width, ig.responsive.height) : _0xff22fe.fillRect(0x0, 0x0, this.gameResolution.x, this.gameResolution.y), _0xff22fe.globalAlpha = this.objAlpha, _0xff22fe.drawImage(this.main.windowBox.img.data, this.pos.x, this.pos.y, this.main.windowBox.size.x, this.main.windowBox.size.y), _0xff22fe.font = this.main.windowBox.titleFont, _0xff22fe.fillStyle = this.main.windowBox.titleFillStyle, _0xff22fe.textAlign = 'center', _0xff22fe.fillText(this.main.windowBox.strTitle, this.pos.x + this.main.windowBox.title_posOffset.x, this.pos.y + this.main.windowBox.title_posOffset.y), _0xff22fe.font = this.main.windowBox.descFont, _0xff22fe.fillStyle = this.main.windowBox.descFillStyle, _0xff22fe.textAlign = 'center', _0xff22fe.fillText(this.main.windowBox.strDesc, this.pos.x + this.main.windowBox.desc_posOffset.x, this.pos.y + this.main.windowBox.desc_posOffset.y), _0xff22fe.globalAlpha = 0x1, _0xff22fe.restore();
      }
    },
    'show': function () {
      this.isShow = !0x0;
      for (var _0x4d0b41 = 0x0; _0x4d0b41 < this.objs.length; _0x4d0b41++) this.objs[_0x4d0b41].show();
      this.objAlpha = 0x0, this.responsive ? (this.respTween = -0x32, this.tween({
        'respTween': 0x0
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start()) : (_0x4d0b41 = {
        'x': this.posOrig.x,
        'y': this.posOrig.y
      }, this.pos = {
        'x': this.posOrig.x,
        'y': this.posOrig.y + 0x32
      }, this.tween({
        'pos': _0x4d0b41,
        'objAlpha': 0x1
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start()), this.main.update_panel_buttons_status(), ig.soundHandler.sfxPlayer.play(ig.tieredRV.soundsID.popup);
    },
    'hide': function () {
      this.tween({
        'objAlpha': 0x0
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut,
        'onComplete': function () {
          this.hide_window();
        }.bind(this)
      }).start();
      if (this.responsive) this.respTween = 0x0, this.tween({
        'respTween': 0x32
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start();else {
        var _0x48bac4 = {
          'x': this.posOrig.x,
          'y': this.posOrig.y + 0x32
        };
        this.pos = {
          'x': this.posOrig.x,
          'y': this.posOrig.y
        }, this.tween({
          'pos': _0x48bac4
        }, 0.5, {
          'easing': ig.Tween.Easing.Exponential.EaseOut
        }).start();
      }
      ig.soundHandler.sfxPlayer.play(ig.tieredRV.soundsID.popup);
    },
    'enable_buttons': function (_0x5d09e7) {
      this.btnClose.isEnabled = _0x5d09e7;
      for (var _0x158fc0 = 0x0; _0x158fc0 < this.panels.length; _0x158fc0++) this.panels[_0x158fc0].btn.isEnabled = _0x5d09e7;
    },
    'hide_window': function () {
      this.isShow = !0x1;
      for (var _0x1b8070 = 0x0; _0x1b8070 < this.objs.length; _0x1b8070++) this.objs[_0x1b8070].hide();
      this.popup && this.popup.kill(), this.hideCallback instanceof Function && this.hideCallback();
    },
    'update_panel_buttons_status': function () {
      for (var _0x2b05ce = 0x0; _0x2b05ce < this.panels.length; _0x2b05ce++) this.main.tiersData_cur[_0x2b05ce].active && (this.panels[_0x2b05ce].btn.img = this.main.tierPanel_btn.imgActive, this.panels[_0x2b05ce].btn.isEnabled = !0x1), 0x0 >= this.main.tiersData_cur[_0x2b05ce].cd_cur && (this.panels[_0x2b05ce].btn.img = this.main.tierPanel_btn.img, this.panels[_0x2b05ce].btn.isEnabled = !0x0);
    },
    'spawn_popup': function (_0x365b43) {
      this.popup = ig.game.spawnEntity(ig.TieredRvPopup, 0x0, 0x0, {
        'txt': _0x365b43
      });
    }
  }), ig.TieredRvBtnClose = ig.TieredRvGameObject.extend({
    'main': null,
    'isBTN': !0x0,
    'update': function () {
      this.parent();
    },
    'interact': function () {
      this.main.hide();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.tiered-rv.tiered-rv-tier-panel').requires('plugins.tiered-rv.tiered-rv-game-object').defines(function () {
  ig.TieredRvTierPanel = ig.TieredRvGameObject.extend({
    'main': null,
    'bg': null,
    'icon': null,
    'index': 0x0,
    'posOffset': {
      'x': 0x0,
      'y': 0x0
    },
    'posOffset_icon': {
      'x': 0x0,
      'y': 0x0
    },
    'btn': null,
    'btn_posOffset': null,
    'btn_size': null,
    'btn_img': null,
    'init': function (_0x45cdca, _0x41eb65, _0x44b4bb) {
      this.parent(_0x45cdca, _0x41eb65, _0x44b4bb), this.btn = ig.game.spawnEntity(ig.TieredRvBtnWatchAd, 0x0, 0x0, {
        'main': this,
        'img': this.btn_img,
        'size': this.btn_size,
        'zIndex': this.zIndex + 0x1,
        'anchorObj': this,
        'posOffset': this.btn_posOffset
      });
    },
    'update': function () {
      this.parent(), this.pos = {
        'x': this.main.pos.x + this.posOffset.x,
        'y': this.main.pos.y + this.posOffset.y
      };
    },
    'draw': function () {
      if (this.main.isShow) {
        this.parent();
        var _0xa1461f = ig.system.context;
        _0xa1461f.save(), _0xa1461f.globalAlpha = this.objAlpha, _0xa1461f.drawImage(this.bg.data, this.pos.x, this.pos.y, this.size.x, this.size.y), _0xa1461f.drawImage(this.icon.data, this.pos.x + this.posOffset_icon.x, this.pos.y + this.posOffset_icon.y);
        var _0x3e54a9 = ig.tieredRV;
        _0xa1461f.font = _0x3e54a9.tierPanel.titleFont, _0xa1461f.fillStyle = _0x3e54a9.tierPanel.titleFillStyle, _0xa1461f.textAlign = 'left', _0x3e54a9.draw_text_wrapped(_0xa1461f, _0x3e54a9.tierPanel.str_tierTitles[this.index], this.pos.x + _0x3e54a9.tierPanel.title_posOffset.x, this.pos.y + _0x3e54a9.tierPanel.title_posOffset.y, _0x3e54a9.tierPanel.title_wrapSize.x, _0x3e54a9.tierPanel.title_wrapSize.ySpacing), _0xa1461f.font = _0x3e54a9.tierPanel.descFont, _0xa1461f.fillStyle = _0x3e54a9.tierPanel.descFillStyle, _0xa1461f.textAlign = 'left', _0x3e54a9.draw_text_wrapped(_0xa1461f, _0x3e54a9.tierPanel.str_tierDesc[this.index], this.pos.x + _0x3e54a9.tierPanel.desc_posOffset.x, this.pos.y + _0x3e54a9.tierPanel.desc_posOffset.y, _0x3e54a9.tierPanel.desc_wrapSize.x, _0x3e54a9.tierPanel.desc_wrapSize.ySpacing), _0xa1461f.globalAlpha = 0x1, _0xa1461f.restore();
      }
    }
  }), ig.TieredRvBtnWatchAd = ig.TieredRvGameObject.extend({
    'main': null,
    'isBTN': !0x0,
    'posOffset': null,
    'status': '',
    'draw': function () {
      if (this.main.main.isShow) {
        this.isShow = !0x0, this.parent();
        var _0x86a7ba = ig.system.context;
        _0x86a7ba.save(), _0x86a7ba.globalAlpha = this.objAlpha;
        var _0x224247 = ig.tieredRV;
        if ('clickable' == this.status) _0x86a7ba.font = _0x224247.tierPanel_btn.txtFontSize * this.scale.x + "px " + _0x224247.tierPanel_btn.txtFontType, _0x86a7ba.fillStyle = _0x224247.tierPanel_btn.txtFillStyleOn, _0x86a7ba.textAlign = 'center', _0x86a7ba.fillText(_0x224247.tierPanel_btn.str_watchAd, this.pos.x + _0x224247.tierPanel_btn.txt_posOffset.x, this.pos.y + _0x224247.tierPanel_btn.txt_posOffset.y);else {
          if ('running' == this.status) {
            var _0x1e0ce2 = new Date().getTime(),
              _0x1e0ce2 = _0x224247.tiersData_cur[this.main.index].timeTarg - _0x1e0ce2;
            _0x86a7ba.font = (_0x224247.tierPanel_btn.txtFontSize + 0x2) * this.scale.x + "px " + _0x224247.tierPanel_btn.txtFontType, _0x86a7ba.fillStyle = _0x224247.tierPanel_btn.txtFillStyleOff, _0x86a7ba.textAlign = 'center', _0x86a7ba.fillText(_0x224247.convert_time_text(_0x1e0ce2), this.pos.x + _0x224247.tierPanel_btn.txt_posOffset.x, this.pos.y + _0x224247.tierPanel_btn.txt_posOffset.y);
          }
        }
        _0x86a7ba.globalAlpha = 0x1, _0x86a7ba.restore();
      } else this.isShow = !0x1;
    },
    'interact': function () {
      this.main.main.isShow && 'clickable' == this.status && ig.tieredRV.rv_btn_pressed(this.main.index, this.main.main);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.tiered-rv.tiered-rv-popup').requires('plugins.tiered-rv.tiered-rv-game-object').defines(function () {
  ig.TieredRvPopup = ig.TieredRvGameObject.extend({
    'main': null,
    'img': null,
    'icon': null,
    'index': 0x0,
    'posOffset': {
      'x': 0x0,
      'y': 0x0
    },
    'posOffset_orig': null,
    'size': {
      'x': 0x0,
      'y': 0x0
    },
    'objAlpha': 0x0,
    'txt': '',
    'dur': 0x0,
    'init': function (_0x188a68, _0x505c4c, _0x534d26) {
      this.parent(_0x188a68, _0x505c4c, _0x534d26), ig.responsive || (this.gameResolution = !ig.ua.mobile ? ig.sizeHandler.desktop.actualResolution : ig.sizeHandler.mobile.actualResolution), _0x188a68 = ig.tieredRV, this.dur = _0x188a68.popup.dur, this.posOffset = _0x188a68.popup.posOffset, this.img = _0x188a68.popup.img, this.size = _0x188a68.popup.size, this.posOffset_orig = {
        'x': this.posOffset.x,
        'y': this.posOffset.y
      }, this.tween_in();
    },
    'tween_in': function () {
      this.posOffset = {
        'x': this.posOffset_orig.x,
        'y': this.posOffset_orig.y
      }, this.posOffset.x -= 0x32, this.tween({
        'posOffset': {
          'x': this.posOffset_orig.x,
          'y': this.posOffset_orig.y
        }
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start(), this.tween({
        'objAlpha': 0x1
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start(), ig.game.getEntitiesByType(ig.TieredRvWindow)[0x0].enable_buttons(!0x1);
    },
    'tween_out': function () {
      this.posOffset = {
        'x': this.posOffset_orig.x,
        'y': this.posOffset_orig.y
      }, this.tween({
        'posOffset': {
          'x': this.posOffset_orig.x + 0x32,
          'y': this.posOffset_orig.y
        }
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut,
        'onComplete': function () {
          var _0x10618f = ig.game.getEntitiesByType(ig.TieredRvWindow)[0x0];
          _0x10618f.enable_buttons(!0x0), _0x10618f.update_panel_buttons_status(), this.kill();
        }.bind(this)
      }).start(), this.tween({
        'objAlpha': 0x0
      }, 0.5, {
        'easing': ig.Tween.Easing.Exponential.EaseOut
      }).start();
    },
    'update': function () {
      this.parent(), this.pos = ig.responsive ? {
        'x': ig.responsive.width / 0x2 - this.size.x / 0x2 + this.posOffset.x,
        'y': ig.responsive.height / 0x2 - this.size.y / 0x2 + this.posOffset.y
      } : {
        'x': this.gameResolution.x / 0x2 - this.size.x / 0x2 + this.posOffset.x,
        'y': this.gameResolution.y / 0x2 - this.size.y / 0x2 + this.posOffset.y
      }, this.dur -= ig.system.tick, 0x0 >= this.dur && this.tween_out();
    },
    'draw': function () {
      this.parent();
      var _0x40d509 = ig.system.context;
      _0x40d509.save(), _0x40d509.globalAlpha = this.objAlpha, _0x40d509.drawImage(this.img.data, this.pos.x, this.pos.y, this.size.x, this.size.y);
      var _0x5b0ce3 = ig.tieredRV;
      _0x40d509.font = _0x5b0ce3.popup.txtFont, _0x40d509.fillStyle = _0x5b0ce3.popup.txtFillStyle, _0x40d509.textAlign = 'center', _0x40d509.fillText(this.txt, this.pos.x + _0x5b0ce3.popup.txtPosOffset.x, this.pos.y + _0x5b0ce3.popup.txtPosOffset.y), _0x40d509.globalAlpha = 0x1, _0x40d509.restore();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.tiered-rv.tiered-rv').requires('plugins.secure-ls', 'plugins.tiered-rv.tiered-rv-window', 'plugins.tiered-rv.tiered-rv-game-object', 'plugins.tiered-rv.tiered-rv-tier-panel', 'plugins.tiered-rv.tiered-rv-popup').defines(function () {
  ig.TieredRv = ig.Class.extend({
    'pluginVersion': '1.1.2',
    'tierDataVersion': '1',
    'tiersData': [{
      'name': 'tier1',
      'cd': 0x3c,
      'timeOfWatch': 0x0,
      'timeTarg': 0x0,
      'active': !0x1,
      'coins': 0x14
    }, {
      'name': 'tier2',
      'cd': 0xb4,
      'timeOfWatch': 0x0,
      'timeTarg': 0x0,
      'active': !0x1,
      'coins': 0x1e
    }, {
      'name': 'tier3',
      'cd': 0x168,
      'timeOfWatch': 0x0,
      'timeTarg': 0x0,
      'active': !0x1,
      'coins': 0x32
    }, {
      'name': 'tier4',
      'cd': 0x2d0,
      'timeOfWatch': 0x0,
      'timeTarg': 0x0,
      'active': !0x1,
      'coins': 0x64
    }, {
      'name': 'tier5',
      'cd': 0x5a0,
      'timeOfWatch': 0x0,
      'timeTarg': 0x0,
      'active': !0x1,
      'coins': 0x96
    }],
    'rv_btn_pressed': function (_0x45acef, _0x3dc1f2) {
      this.curRVBtn = _0x45acef;
      for (var _0x112ab3 = 0x0; _0x112ab3 < _0x3dc1f2.panels.length; _0x112ab3++) _0x3dc1f2.panels[_0x112ab3].btn.isEnabled = !0x1;
      this.winBox = _0x3dc1f2, this.winBox.enable_buttons(!0x1), this.rv_end_success();
    },
    'rv_end_success': function () {
      ig.game.advStorage && ig.game.advStorage.addCoins(this.tiersData_cur[this.curRVBtn].coins);
      var _0x3e823e = new Date().getTime(),
        _0x36b29a = 0xea60 * this.tiersData_cur[this.curRVBtn].cd;
      this.tiersData_cur[this.curRVBtn].timeOfWatch = _0x3e823e, this.tiersData_cur[this.curRVBtn].timeTarg = _0x3e823e + _0x36b29a, this.tiersData_cur[this.curRVBtn].active = !0x0, this.save_data(), this.update_panel_buttons_status(), this.winBox && this.winBox.spawn_popup(this.popup.txtStr_success), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[this.soundsID.reward]);
    },
    'rv_end_fail': function () {
      this.update_panel_buttons_status(), this.winBox && this.winBox.spawn_popup(this.popup.txtStr_fail), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[this.soundsID.error]);
    },
    'tier_dur_ends': function (_0x1ae526) {
      this.tiersData_cur[_0x1ae526].timeOfWatch = 0x0, this.tiersData_cur[_0x1ae526].timeTarg = 0x0, this.tiersData_cur[_0x1ae526].active = !0x1, this.save_data(), this.update_panel_buttons_status();
    },
    'getNumActive': function () {
      for (var _0x1fe748 = 0x0; _0x1fe748 < this.tiersData_cur.length; _0x1fe748++) if (!this.tiersData_cur[_0x1fe748].active) return !0x0;
      return 0x0;
    },
    'windowBox': {
      'img': new ig.Image('media/graphics/ui/tiered-rv/window-bg.png'),
      'size': {
        'x': 0x1cb,
        'y': 0x272
      },
      'endPos': {
        'x': 0x19a,
        'y': 0x19
      },
      'zIndex': 0xa,
      'titleFont': "36px archivo-black",
      'titleFillStyle': '#011b3c',
      'descFont': "16px archivo-black",
      'descFillStyle': '#011b3c',
      'title_posOffset': {
        'x': 0xe6,
        'y': 0x50
      },
      'desc_posOffset': {
        'x': 0xe6,
        'y': 0x73
      },
      'strTitle': _STRINGS.TieredRV.title,
      'strDesc': _STRINGS.TieredRV.description,
      'closeBtn_img': new ig.Image('media/graphics/ui/common/btn-close.png'),
      'closeBtn_size': {
        'x': 0x4a,
        'y': 0x47
      },
      'closeBtn_posOffset': {
        'x': 0x186,
        'y': -0x2
      }
    },
    'tierPanel': {
      'tierIcons': [new ig.Image('media/graphics/ui/tiered-rv/icon-01.png'), new ig.Image('media/graphics/ui/tiered-rv/icon-02.png'), new ig.Image('media/graphics/ui/tiered-rv/icon-03.png'), new ig.Image('media/graphics/ui/tiered-rv/icon-04.png'), new ig.Image('media/graphics/ui/tiered-rv/icon-05.png')],
      'str_tierTitles': _STRINGS.TieredRV.itemTitle,
      'str_tierDesc': [_STRINGS.TieredRV.itemReward.replace('#', '20'), _STRINGS.TieredRV.itemReward.replace('#', '30'), _STRINGS.TieredRV.itemReward.replace('#', '50'), _STRINGS.TieredRV.itemReward.replace('#', '100'), _STRINGS.TieredRV.itemReward.replace('#', '150')],
      'imgBg': new ig.Image('media/graphics/ui/tiered-rv/panel-bg.png'),
      'size': {
        'x': 0x180,
        'y': 0x4a
      },
      'posOffset_firstPanel': {
        'x': 0x24,
        'y': 0x82
      },
      'posOffset_nextPanels': {
        'x': 0x0,
        'y': 0x5a
      },
      'posOffset_icon': {
        'x': 0x6,
        'y': 0x4
      },
      'titleFont': "16px archivo-black",
      'titleFillStyle': 'white',
      'descFont': "12px archivo-black",
      'descFillStyle': 'white',
      'title_posOffset': {
        'x': 0x5a,
        'y': 0x19
      },
      'title_wrapSize': {
        'x': 0x82,
        'ySpacing': 0x14
      },
      'desc_posOffset': {
        'x': 0x5a,
        'y': 0x3e
      },
      'desc_wrapSize': {
        'x': 0x7d,
        'ySpacing': 0xa
      }
    },
    'tierPanel_btn': {
      'img': new ig.Image('media/graphics/ui/tiered-rv/btn-watch-ad.png'),
      'imgOff': new ig.Image('media/graphics/ui/tiered-rv/btn-watch-ad-disabled.png'),
      'imgActive': new ig.Image('media/graphics/ui/tiered-rv/btn-watch-ad-active.png'),
      'size': {
        'x': 0x93,
        'y': 0x37
      },
      'posOffset': {
        'x': 0xe6,
        'y': 0xa
      },
      'str_watchAd': _STRINGS.TieredRV.buttonAd,
      'txtFontSize': 0xe,
      'txtFontType': 'archivo-black',
      'txtFillStyleOn': '#011b3c',
      'txtFillStyleOff': 'white',
      'txt_posOffset': {
        'x': 0x5a,
        'y': 0x21
      }
    },
    'popup': {
      'img': new ig.Image('media/graphics/ui/tiered-rv/popup.png'),
      'size': {
        'x': 0x191,
        'y': 0x46
      },
      'posOffset': {
        'x': 0x0,
        'y': 0x0
      },
      'dur': 2.25,
      'txtFont': "22px archivo-black",
      'txtFillStyle': 'white',
      'txtPosOffset': {
        'x': 0xc8,
        'y': 0x28
      },
      'txtStr_success': _STRINGS.TieredRV.success,
      'txtStr_fail': _STRINGS.TieredRV.fail
    },
    'soundsID': {
      'click': 'button',
      'reward': 'postgame',
      'error': 'rankUpdate',
      'popup': 'popupSwing'
    },
    'saveName': null,
    'isShow': !0x1,
    'tiersData_cur': null,
    'curRVBtn': 0x0,
    'gameResolution': {
      'x': 0x0,
      'y': 0x0
    },
    'winBox': null,
    'winBox_pos': null,
    'init': function () {
      this.load_data(), this.calc_remaining_time();
    },
    'update': function () {
      this.calc_remaining_time();
    },
    'get_tier_is_active': function (_0xcf66aa) {
      return this.tiersData_cur[_0xcf66aa].active;
    },
    'get_highest_active_tier_index': function () {
      for (var _0x124748 = this.tiersData_cur.length - 0x1; 0x0 <= _0x124748; _0x124748--) if (this.tiersData_cur[_0x124748].active) return _0x124748;
    },
    'update_panel_buttons_status': function () {
      try {
        var _0x191627 = ig.game.getEntitiesByType(ig.TieredRvWindow)[0x0];
        if (!_0x191627) return;
      } catch (_0x1d1615) {
        return;
      }
      for (var _0x475ac7 = 0x0; _0x475ac7 < _0x191627.panels.length; _0x475ac7++) 0x0 >= _0x475ac7 ? this._set_btn_status(_0x191627.panels[_0x475ac7].btn, this.tiersData_cur[_0x475ac7].active ? 'running' : 'clickable', _0x191627) : this.check_past_buttons_status(_0x475ac7) && !this.tiersData_cur[_0x475ac7].active ? this._set_btn_status(_0x191627.panels[_0x475ac7].btn, 'clickable', _0x191627) : this.tiersData_cur[_0x475ac7].active ? this._set_btn_status(_0x191627.panels[_0x475ac7].btn, 'running', _0x191627) : this._set_btn_status(_0x191627.panels[_0x475ac7].btn, 'locked', _0x191627);
    },
    'check_past_buttons_status': function (_0x2a9296) {
      for (var _0x6def5c = 0x0; _0x6def5c < _0x2a9296; _0x6def5c++) if (!this.tiersData_cur[_0x6def5c].active) return !0x1;
      return !0x0;
    },
    '_set_btn_status': function (_0x3054b5, _0x1c8a84) {
      var _0x28b332 = !0x1;
      switch (_0x1c8a84) {
        case 'clickable':
          _0x3054b5.img = this.tierPanel_btn.img, _0x28b332 = !0x0;
          break;
        case 'running':
          _0x3054b5.img = this.tierPanel_btn.imgActive;
          break;
        case 'locked':
          _0x3054b5.img = this.tierPanel_btn.imgOff;
      }
      _0x3054b5.isEnabled = _0x28b332, _0x3054b5.status = _0x1c8a84;
    },
    'save_data': function () {
      var _0x719b44 = JSON.stringify(this.tiersData_cur);
      ig.ls.set(this.saveName, _0x719b44);
    },
    'load_data': function () {
      ig.ls || (ig.ls = new SecureLS({
        'encodingType': 'aes'
      })), this.saveName || (this.saveName = this.hash(ig.game.name + '-tiered-rv-data-' + this.tierDataVersion, '').replace('-', 's'));
      var _0x4d6355 = ig.ls.get(this.saveName);
      '' == _0x4d6355 ? this.clear_data() : this.tiersData_cur = JSON.parse(_0x4d6355);
    },
    'clear_data': function () {
      this.tiersData_cur = this.tiersData, this.save_data();
    },
    'calc_remaining_time': function () {
      for (var _0x53f733 = new Date().getTime(), _0x59c8cb = 0x0; _0x59c8cb < this.tiersData_cur.length; _0x59c8cb++) this.tiersData_cur[_0x59c8cb].active && this.tiersData_cur[_0x59c8cb].timeTarg <= _0x53f733 && this.tier_dur_ends(_0x59c8cb);
    },
    'convert_time_text': function (_0x185cf4) {
      _0x185cf4 /= 0x3e8;
      var _0xafb61e = Math.floor(_0x185cf4 / 0xe10),
        _0x19dbef = Math.floor(_0x185cf4 % 0xe10 / 0x3c);
      return _0x185cf4 = Math.floor(_0x185cf4 % 0x3c), 0xa > _0x185cf4 && (_0x185cf4 = '0' + _0x185cf4), (0x0 >= _0xafb61e ? '' : 0xa > _0xafb61e ? '0' + _0xafb61e + ':' : _0xafb61e + ':') + (0xa > _0x19dbef ? '0' + _0x19dbef + ':' : _0x19dbef + ':') + _0x185cf4;
    },
    'hash': function (_0x1021cf) {
      var _0x4ddf28 = 0x0,
        _0x3e3da8,
        _0x5c99e9;
      if (0x0 === _0x1021cf.length) return _0x4ddf28;
      for (_0x3e3da8 = 0x0; _0x3e3da8 < _0x1021cf.length; _0x3e3da8++) _0x5c99e9 = _0x1021cf.charCodeAt(_0x3e3da8), _0x4ddf28 = (_0x4ddf28 << 0x5) - _0x4ddf28 + _0x5c99e9, _0x4ddf28 |= 0x0;
      return _0x4ddf28.toString(0x24);
    },
    'draw_text_wrapped': function (_0x13293f, _0x16e07d, _0x454db6, _0x35c498, _0x33c01f, _0x31fa79) {
      _0x16e07d = _0x16e07d.split(" ");
      for (var _0x54f394 = '', _0x3cb4cf = 0x0; _0x3cb4cf < _0x16e07d.length; _0x3cb4cf++) {
        var _0x5838ba = _0x54f394 + _0x16e07d[_0x3cb4cf] + " ";
        _0x13293f.measureText(_0x5838ba).width > _0x33c01f && 0x0 < _0x3cb4cf ? (_0x13293f.fillText(_0x54f394, _0x454db6, _0x35c498), _0x54f394 = _0x16e07d[_0x3cb4cf] + " ", _0x35c498 += _0x31fa79) : _0x54f394 = _0x5838ba;
      }
      _0x13293f.fillText(_0x54f394, _0x454db6, _0x35c498);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-signal').requires('impact.impact').defines(function () {
  ig.DailyrewardSignal = ig.Class.extend({
    'signalListeners': null,
    'id': 0x0,
    'init': function () {
      this.id = ++ig.DailyrewardSignal._lastId, this.signalListeners = [];
    },
    'addOnce': function (_0x15e72a, _0x15ae56) {
      this.signalListeners.push({
        'signalListener': _0x15e72a,
        'signalContext': _0x15ae56,
        'isOnce': !0x0
      });
    },
    'add': function (_0x4e049d, _0x3ae151) {
      this.signalListeners.push({
        'signalListener': _0x4e049d,
        'signalContext': _0x3ae151,
        'isOnce': !0x1
      });
    },
    'remove': function (_0x555889) {
      for (var _0x4bc6df = 0x0; _0x4bc6df < this.signalListeners.length;) this.signalListeners[_0x4bc6df].signalListener === _0x555889 ? this.signalListeners.splice(_0x4bc6df, 0x1) : _0x4bc6df++;
    },
    'dispatch': function () {
      for (var _0x15fc97 = 0x0; _0x15fc97 < this.signalListeners.length;) {
        var _0x2db389 = this.signalListeners[_0x15fc97];
        _0x2db389.signalListener.apply(_0x2db389.signalContext, arguments), _0x2db389.isOnce ? this.signalListeners.splice(_0x15fc97, 0x1) : _0x15fc97++;
      }
    }
  }), ig.DailyrewardSignal._lastId = 0x0;
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-object').requires('impact.entity', 'plugins.dailyreward.dailyreward-signal').defines(function () {
  ig.Entity.prototype.delayedCall = function (_0x51f9d9, _0x5655fe, _0x410d5f) {
    return void 0x0 === _0x410d5f && (_0x410d5f = !0x0), _0x51f9d9 = new ig.Tween(this, {}, _0x51f9d9, {
      'onComplete': _0x5655fe
    }), this.tweens.push(_0x51f9d9), _0x410d5f && _0x51f9d9.start(), _0x51f9d9;
  }, EntityDailyrewardObject = ig.Entity.extend({
    'gravityFactor': 0x0,
    'idleSheetInfo': null,
    'singleFrameImage': null,
    'visible': !0x0,
    'alpha': 0x1,
    'zIndex': 0xf4236,
    'drawAsRect': !0x1,
    'drawAsOutline': !0x1,
    'outlineWidth': 0x1,
    'rectColor': '#FFFFFF',
    'entryDelay': 0x0,
    'entryDuration': 0.25,
    'entryType': null,
    'exitDelay': 0x0,
    'exitDuration': 0.25,
    'exitType': null,
    'killOnExit': !0x0,
    'scaleX': 0x1,
    'scaleY': 0x1,
    'angle': 0x0,
    'anchorX': 0x0,
    'anchorY': 0x0,
    'forceDraw': !0x1,
    'width': 0x20,
    'height': 0x20,
    'onInputDown': null,
    'onInputUp': null,
    'onClicked': null,
    'hasTouchInside': !0x1,
    'inputEnabled': !0x1,
    'isClicking': !0x1,
    'boundLeft': 0x0,
    'boundRight': 0x0,
    'boundTop': 0x0,
    'boundBottom': 0x0,
    'isFinishEntering': !0x1,
    'timedLife': -0x3e7,
    'size': {
      'x': 0x20,
      'y': 0x20
    },
    'init': function (_0x9f96c1, _0x4496fc, _0x5c1156) {
      this.onInputDown = new ig.DailyrewardSignal(), this.onInputUp = new ig.DailyrewardSignal(), this.onClicked = new ig.DailyrewardSignal(), _0x5c1156.singleFrameImage ? this.singleFrameImage = _0x5c1156.singleFrameImage : _0x5c1156.image && (this.singleFrameImage = _0x5c1156.image), null != this.singleFrameImage ? (this.idleSheetInfo = {
        'sheetImage': this.singleFrameImage,
        'sheetX': 0x1,
        'sheetY': 0x1
      }, this.setSpriteSheet('idle'), this.setSize('idle'), this.addAnimation('idle', 'idleSheet', 0x1, [0x0], !0x1, !0x0)) : null != this.idleSheetInfo && (this.setSpriteSheet('idle'), this.setSize('idle')), this.parent(_0x9f96c1, _0x4496fc, _0x5c1156), this.enter(), !0x1 === _0x5c1156.visible && (this.visible = !0x1), this.anchorType = _0x5c1156.anchorType ? _0x5c1156.anchorType : 'default';
    },
    'onFinishEntering': function () {},
    'enter': function () {
      this.visible = !0x0, null != this.entryType ? (this[this.entryType](), this.delayedCall(this.entryDelay + this.entryDuration, function () {
        this.onFinishEntering(), this.isFinishEntering = !0x0;
      }.bind(this))) : (this.isFinishEntering = !0x0, this.onFinishEntering());
    },
    'exit': function () {
      if (null != this.exitType) this[this.exitType]();else this.alpha0();
      this.delayedCall(this.exitDuration + this.exitDelay, function () {
        this.checkKill();
      }.bind(this));
    },
    'setSpriteSheet': function (_0x403b7d) {
      this[_0x403b7d + 'Sheet'] = new ig.AnimationSheet(this[_0x403b7d + 'SheetInfo'].sheetImage.path, this[_0x403b7d + 'SheetInfo'].sheetImage.width / this[_0x403b7d + 'SheetInfo'].sheetX, this[_0x403b7d + 'SheetInfo'].sheetImage.height / this[_0x403b7d + 'SheetInfo'].sheetY);
    },
    'setSize': function (_0x4ada00) {
      this.width = this[_0x4ada00 + 'SheetInfo'].sheetImage.width / this[_0x4ada00 + 'SheetInfo'].sheetX, this.height = this[_0x4ada00 + 'SheetInfo'].sheetImage.height / this[_0x4ada00 + 'SheetInfo'].sheetY;
    },
    'addAnimation': function (_0x1c8c7d, _0x3b5a59, _0x318e8d, _0x5bb3b2, _0x3a6c3d, _0x3727fa) {
      this[_0x1c8c7d] = new ig.Animation(this[_0x3b5a59], _0x318e8d, _0x5bb3b2, !_0x3a6c3d), !0x0 == _0x3727fa && (this.currentAnim = this[_0x1c8c7d]);
    },
    'makeFramesArray': function (_0x54f41b, _0x58a5be, _0x933425) {
      for (var _0x14d5f7 = [], _0x478bc8 = _0x54f41b; _0x478bc8 <= _0x58a5be; _0x478bc8++) _0x14d5f7.push(_0x478bc8);
      if (_0x933425) {
        for (_0x478bc8 = _0x58a5be; _0x478bc8 >= _0x54f41b; _0x478bc8--) _0x14d5f7.push(_0x478bc8);
      }
      return _0x14d5f7;
    },
    'draw': function () {
      if (this.visible && (this.forceDraw || this.currentAnim || this.drawAsRect || this.drawAsOutline)) {
        var _0x466e77 = ig.system.context;
        _0x466e77.save(), _0x466e77.translate(ig.system.getDrawPos(this.pos.x.round() - this.offset.x - ig.game.screen.x), ig.system.getDrawPos(this.pos.y.round() - this.offset.y - ig.game.screen.y)), (0x1 != this.scaleX || 0x1 != this.scaleY) && _0x466e77.scale(this.scaleX, this.scaleY), this.drawObject(-this.anchorX * this.width, -this.anchorY * this.height), _0x466e77.restore();
      }
    },
    'drawObject': function (_0x33c1c9, _0x46b7ae) {
      var _0x2379d6 = ig.system.context,
        _0x247022 = this.hexToRgb(this.rectColor);
      this.drawAsRect && (_0x2379d6.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x247022.r + ',' + _0x247022.g + ',' + _0x247022.b + ',' + this.alpha + ')' : _0x247022.hex, _0x2379d6.fillRect(_0x33c1c9, _0x46b7ae, this.width, this.height)), this.drawAsOutline ? (_0x2379d6.strokeStyle = 0x1 > this.alpha ? 'rgba(' + _0x247022.r + ',' + _0x247022.g + ',' + _0x247022.b + ',' + this.alpha + ')' : _0x247022.hex, _0x2379d6.strokeRect(_0x33c1c9, _0x46b7ae, this.width, this.height)) : null != this.currentAnim && (this.currentAnim.alpha = this.alpha, this.currentAnim.draw(_0x33c1c9, _0x46b7ae));
    },
    'hexToRgb': function (_0x115d4e) {
      ig.hexToRgbTable || (ig.hexToRgbTable = {});
      if (ig.hexToRgbTable[_0x115d4e]) return ig.hexToRgbTable[_0x115d4e];
      var _0x397b64 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(_0x115d4e);
      if (_0x397b64) return ig.hexToRgbTable[_0x115d4e] = {
        'r': parseInt(_0x397b64[0x1], 0x10),
        'g': parseInt(_0x397b64[0x2], 0x10),
        'b': parseInt(_0x397b64[0x3], 0x10),
        'hex': _0x115d4e
      }, ig.hexToRgbTable[_0x115d4e];
      return console.log("cannot convert to rgb from hex :", _0x115d4e), null;
    },
    'update': function () {
      ig.game.entities && this.parent();
      if (this.inputEnabled && this.isFinishEntering && this.visible) {
        var _0xde25df = !0x1;
        this.hasTouchInside = !0x1;
        for (var _0x14a084 = 0x0; _0x14a084 < ig.multitouchInput.touches.length; _0x14a084++) {
          var _0xde25df = !0x0,
            _0x4202aa = ig.multitouchInput.touches[_0x14a084];
          this.processInput(_0x4202aa.x, _0x4202aa.y);
        }
        !_0xde25df && ig.input.state('click') && (_0xde25df = !0x0, _0x14a084 = ig.game.io.mouse.getPos(), this.processInput(_0x14a084.x, _0x14a084.y)), _0xde25df ? this.hasTouchInside || (this.isClicking = !0x1) : (this.isClicking && (this.onInputUp.dispatch(this), this.onClicked.dispatch(this)), this.isClicking = !0x1);
      }
      -0x3e7 != this.timedLife && (this.timedLife -= ig.system.tick, 0x0 >= this.timedLife && (this.timedLife = -0x3e7, this.exit()));
    },
    'processInput': function (_0x5737d9, _0x440511) {
      this.isInsideBounds(_0x5737d9, _0x440511) && (this.hasTouchInside = !0x0, this.isClicking || (this.isClicking = !0x0, this.onInputDown.dispatch(this)));
    },
    'isInsideBounds': function (_0x35a745, _0x5431c2) {
      var _0x3347b1 = this.scaleX * this.width,
        _0x275479 = this.scaleY * this.height;
      return this.boundLeft = this.pos.x - _0x3347b1 * this.anchorX, this.boundTop = this.pos.y - _0x275479 * this.anchorY, this.boundRight = this.boundLeft + _0x3347b1, this.boundBottom = this.boundTop + _0x275479, this.boundLeft > this.boundRight && (_0x3347b1 = this.boundLeft, this.boundLeft = this.boundRight, this.boundRight = _0x3347b1), this.boundTop > this.boundBottom && (_0x3347b1 = this.boundTop, this.boundTop = this.boundBottom, this.boundBottom = _0x3347b1), _0x35a745 < this.boundLeft || _0x5431c2 < this.boundTop || _0x35a745 > this.boundRight || _0x5431c2 > this.boundBottom ? !0x1 : !0x0;
    },
    'fadeDropBackIn': function () {
      var _0x52c616 = this.alpha,
        _0x20b354 = this.anchorY;
      this.alpha = 0x0, this.anchorY -= 0.5, this.tween({
        'alpha': _0x52c616
      }, 0.75 * this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'anchorY': _0x20b354
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Back.EaseOut
      }).start();
    },
    'fadeDropBackOut': function () {
      var _0x14d59e = this.anchorY - 0.5;
      this.tween({
        'alpha': 0x0
      }, 0.75 * this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'anchorY': _0x14d59e
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Back.EaseOut
      }).start();
    },
    'fadeBounceRightIn': function () {
      this.alpha = 0x0;
      var _0x5be084 = this.pos.x;
      this.pos.x -= 0x64, this.tween({
        'alpha': 0x1
      }, 0.75 * this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'pos': {
          'x': _0x5be084
        }
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Back.EaseOut
      }).start();
    },
    'fadeBounceRightOut': function () {
      this.tween({
        'alpha': 0x0
      }, 0.75 * this.exitDuration, {
        'delay': this.exitDelay + 0.25 * this.exitDuration,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'pos': {
          'x': this.pos.x - 0x64
        }
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Back.EaseIn
      }).start();
    },
    'fadeBounceLeftIn': function () {
      this.alpha = 0x0;
      var _0x4735fd = this.pos.x;
      this.pos.x += 0x64, this.tween({
        'alpha': 0x1
      }, 0.75 * this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'pos': {
          'x': _0x4735fd
        }
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Back.EaseOut
      }).start();
    },
    'fadeBounceLeftOut': function () {
      this.tween({
        'alpha': 0x0
      }, 0.75 * this.exitDuration, {
        'delay': this.exitDelay + 0.25 * this.exitDuration,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'pos': {
          'x': this.pos.x + 0x64
        }
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Back.EaseIn
      }).start();
    },
    'fadeJumpIn': function () {
      this.alpha = 0x0;
      var _0x2b1cee = this.pos.y;
      this.pos.y += 0x64, this.tween({
        'alpha': 0x1
      }, 0.75 * this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'pos': {
          'y': _0x2b1cee
        }
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Back.EaseOut
      }).start();
    },
    'fadeJumpOut': function () {
      this.tween({
        'alpha': 0x0
      }, 0.75 * this.exitDuration, {
        'delay': this.exitDelay + 0.25 * this.exitDuration,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.tween({
        'pos': {
          'y': this.pos.y + 0x64
        }
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Back.EaseIn
      }).start();
    },
    'fadeIn': function () {
      var _0x2b6835 = this.alpha;
      this.alpha = 0x0, this.tween({
        'alpha': _0x2b6835
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'fadeInLinear': function () {
      var _0x41284c = this.alpha;
      this.alpha = 0x0, this.tween({
        'alpha': _0x41284c
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Linear.EaseNone
      }).start();
    },
    'fadeOut': function () {
      this.tween({
        'alpha': 0x0
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'fadeOutLinear': function () {
      this.tween({
        'alpha': 0x0
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Linear.EaseNone
      }).start();
    },
    'expandIn': function () {
      this.alpha = 0x0, this.tween({
        'alpha': 0x1
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'expandOut': function () {
      this.tween({
        'alpha': 0x0
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'dropBoinkIn': function () {
      this.alpha = 0x0;
      var _0x6a927b = this.pos.y,
        _0x190095 = 1.2 * this.scaleX,
        _0x7312c = 0.8 * this.scaleY,
        _0x4a9285 = this.scaleX,
        _0x272a40 = this.scaleY;
      this.pos.y -= 0x0 < this.height ? 0x3 * this.height : 0x3 * this.size.y, _0x190095 = this.tween({
        'scaleX': _0x190095,
        'scaleY': _0x7312c
      }, 0.2 * this.entryDuration, {
        'delay': this.entryDelay + 0.6 * this.entryDuration,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }), _0x4a9285 = this.tween({
        'scaleX': _0x4a9285,
        'scaleY': _0x272a40
      }, 0.2 * this.entryDuration, {
        'easing': ig.Tween.Easing.Quadratic.EaseIn
      }), _0x190095.chain(_0x4a9285), _0x190095.start(), this.tween({
        'alpha': 0x1
      }, 0.6 * this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseIn
      }).start(), this.tween({
        'pos': {
          'y': _0x6a927b
        }
      }, 0.6 * this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quartic.EaseIn
      }).start();
    },
    'alpha0': function () {
      this.alpha = 0x0;
    },
    'alpha1': function () {
      this.alpha = 0x1;
    },
    'checkKill': function () {
      this.killOnExit && this.kill();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-text').requires('plugins.dailyreward.dailyreward-object').defines(function () {
  EntityDailyrewardText = EntityDailyrewardObject.extend({
    'textString': '',
    'textFont': "48px Arial",
    'textRgb': '#FFFFFF',
    'textAlign': 'start',
    'textOffsetX': 0x0,
    'textOffsetY': 0x0,
    'zIndex': 0xf423f,
    'forceDraw': !0x0,
    'textLineSpacing': 0x1,
    '_previousTextString': '',
    '_multiline': !0x1,
    '_lines': [],
    '_lineSpacing': 0x0,
    'init': function (_0x352ac8, _0x5538cf, _0x14d572) {
      this.parent(_0x352ac8, _0x5538cf, _0x14d572);
    },
    'drawObject': function (_0x264aa7, _0x19df7c) {
      if (this.visible && 0x0 < this.textString.length) {
        this._previousTextString != this.textString && (this._previousTextString = this.textString, this._lines = this.textString.split(/\r?\n/), 0x1 < this._lines.length ? (this._multiline = !0x0, this._lineSpacing = parseInt(this.textFont.split('px')[0x0].split(" ").pop()) * this.textLineSpacing) : this._multiline = !0x1);
        var _0x80afca = ig.system.context;
        _0x80afca.save(), _0x80afca.font = this.textFont, _0x80afca.textAlign = this.textAlign;
        var _0x25762e = this.hexToRgb(this.textRgb);
        _0x80afca.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x25762e.r + ',' + _0x25762e.g + ',' + _0x25762e.b + ',' + this.alpha + ')' : _0x25762e.hex;
        var _0x25762e = _0x264aa7 + this.textOffsetX,
          _0xe13f17 = _0x19df7c + this.textOffsetY;
        if (this._multiline) {
          var _0x137a7e = _0xe13f17;
          'center' == this.textVAlign && (_0x137a7e = _0xe13f17 - (this._lines.length - 0x1) * this._lineSpacing / 0x2);
          for (_0xe13f17 = 0x0; _0xe13f17 < this._lines.length; _0xe13f17++) _0x80afca.fillText(this._lines[_0xe13f17], _0x25762e, _0x137a7e + _0xe13f17 * this._lineSpacing);
        } else this._lineSpacing && (_0xe13f17 += this._lineSpacing / 0x2), _0x80afca.fillText(this.textString, _0x25762e, _0xe13f17);
        _0x80afca.restore();
      }
    },
    'measureTextWidth': function () {
      var _0x5467b5 = ig.system.context;
      _0x5467b5.save(), _0x5467b5.font = this.textFont, _0x5467b5.textAlign = 'left';
      var _0x5bddaa = _0x5467b5.measureText(this.textString);
      return _0x5467b5.restore(), _0x5bddaa.width;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-button').requires('plugins.dailyreward.dailyreward-object', 'plugins.dailyreward.dailyreward-text').defines(function () {
  EntityDailyrewardButton = EntityDailyrewardObject.extend({
    'anchorX': 0.5,
    'anchorY': 0.5,
    'checkDelay': 0x0,
    'entryType': 'fadeIn',
    'exitType': 'fadeOut',
    'popup': null,
    'onPopupOpen': null,
    'onPopupClosed': null,
    'onRewardCollected': null,
    'hasReward': !0x1,
    'init': function (_0x1856b8, _0x1e6f48, _0xa96a4e) {
      _0xa96a4e.image = ig.dailyreward.rewardButtonImage, this.parent(_0x1856b8, _0x1e6f48, _0xa96a4e), this.onClicked.add(this.onButtonClicked, this), this.onPopupOpen = new ig.DailyrewardSignal(), this.onPopupClosed = new ig.DailyrewardSignal(), this.onRewardCollected = new ig.DailyrewardSignal();
    },
    'onButtonClicked': function () {
      this.popup || (this.popup = ig.game.spawnEntity(EntityDailyrewardPopup, 0x0, 0x0), this.popup.onClosed.add(this.onPopupClosedCallback, this), this.popup.onRewardCollected.add(this.onPopupRewardCollectedCallback, this), this.onPopupOpen.dispatch(), ig.dailyreward.playClickSound());
    },
    'onPopupRewardCollectedCallback': function () {
      this.onRewardCollected.dispatch();
    },
    'onPopupClosedCallback': function () {
      this.onPopupClosed.dispatch(), this.popup = null;
    },
    'drawObject': function (_0x2e8ff4, _0x3a70e5) {
      this.parent(_0x2e8ff4, _0x3a70e5);
      if (this.hasReward) {
        var _0x35ab3c = ig.system.context;
        _0x35ab3c.save(), _0x35ab3c.globalAlpha = this.alpha;
        var _0xa5941 = 0x1;
        0.5 > this.checkDelay && (_0xa5941 = 0.25 > this.checkDelay ? 0x1 + this.checkDelay : 1.25 - (this.checkDelay - 0.25)), _0x35ab3c.beginPath(), _0x35ab3c.fillStyle = ig.dailyreward.notificationBgColor, _0x35ab3c.arc(ig.dailyreward.notificationOffsetX, ig.dailyreward.notificationOffsetY, ig.dailyreward.notificationRadius * _0xa5941, 0x0, 0x2 * Math.PI), _0x35ab3c.fill(), _0x35ab3c.closePath();
        var _0xa5941 = parseInt(ig.dailyreward.notificationTextFont.split(" ")[0x0].split('px')[0x0]) * _0xa5941,
          _0x102615 = _0xa5941 + 'px' + ig.dailyreward.notificationTextFont.split('px')[0x1];
        _0x35ab3c.textAlign = 'center', _0x35ab3c.fillStyle = ig.dailyreward.notificationTextColor, _0x35ab3c.font = _0x102615, _0x35ab3c.fillText('!', ig.dailyreward.notificationOffsetX + ig.dailyreward.notificationTextOffsetX, ig.dailyreward.notificationOffsetY + ig.dailyreward.notificationTextOffsetY + _0xa5941 / 0x2), _0x35ab3c.globalAlpha = 0x1, _0x35ab3c.restore();
      }
    },
    'onFinishEntering': function () {
      this.inputEnabled = !0x0;
    },
    'tapDownScale': 0.9,
    'tapReleaseScale': 0x1,
    'update': function () {
      this.parent(), this.hasTouchInside ? (this.scaleX += (this.tapDownScale - this.scaleX) / 0x3, this.scaleY += (this.tapDownScale - this.scaleY) / 0x3) : (this.scaleX += (this.tapReleaseScale - this.scaleX) / 0x3, this.scaleY += (this.tapReleaseScale - this.scaleY) / 0x3), this.checkDelay -= ig.system.tick, 0x0 > this.checkDelay && (this.checkDelay = 0x1, this.hasReward = ig.dailyreward.hasReward() ? !0x0 : !0x1);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-settings').defines(function () {
  ig.applyDailyrewardSettings = function () {
    var _0x47bcef = ig.dailyreward;
    _0x47bcef.collectedRewards = [], _0x47bcef.gameWidth = 0x500, _0x47bcef.gameHeight = 0x2d0, _0x47bcef.overlayAlpha = 0.3, _0x47bcef.saveDataName = 'MJS-Kart-Racing-Pro-dailyreward', _0x47bcef.continueButtonText = _STRINGS.DailyReward['continue'], _0x47bcef.titleText = _STRINGS.DailyReward.title, _0x47bcef.rewardCollectedTitleText = _STRINGS.DailyReward.collected, _0x47bcef.rewardBoxDayTextPrefix = _STRINGS.DailyReward.day, _0x47bcef.bottomText = _STRINGS.DailyReward.desc, _0x47bcef.rewardCollectButtonText = _STRINGS.DailyReward.collect, _0x47bcef.randomGiftTitle = _STRINGS.DailyReward.gift, _0x47bcef.spinButtonText = _STRINGS.DailyReward.spin, _0x47bcef.spinCollectButtonText = _STRINGS.DailyReward.collect, _0x47bcef.rewardTexts = ['15', '25', '45', '75', '100'], _0x47bcef.continueButtonImage = new ig.Image('media/graphics/ui/common/button.png'), _0x47bcef.rewardCollectedIcon = new ig.Image('media/graphics/ui/daily-reward/icon-check.png'), _0x47bcef.closeButtonImage = new ig.Image('media/graphics/ui/common/btn-close.png'), _0x47bcef.rewardButtonImage = new ig.Image('media/graphics/ui/daily-reward/button-reward.png'), _0x47bcef.rewardPopupBgImage = new ig.Image('media/graphics/ui/daily-reward/dailyreward-popup.png'), _0x47bcef.rewardBoxImage = new ig.Image('media/graphics/ui/daily-reward/reward-box.png'), _0x47bcef.rewardCollectButtonImage = new ig.Image('media/graphics/ui/daily-reward/btn-claim-on.png'), _0x47bcef.rewardIdleButtonImage = new ig.Image('media/graphics/ui/daily-reward/btn-claim-off.png'), _0x47bcef.giftBoxImage = new ig.Image('media/graphics/ui/daily-reward/reward-box.png'), _0x47bcef.rewardIcons = [new ig.Image('media/graphics/ui/common/coin.png'), new ig.Image('media/graphics/ui/common/coin.png'), new ig.Image('media/graphics/ui/common/coin.png'), new ig.Image('media/graphics/ui/common/coin.png'), new ig.Image('media/graphics/ui/common/coin.png')], _0x47bcef.randomRewardImage = new ig.Image('media/graphics/ui/daily-reward/reward-box.png'), _0x47bcef.playClickSound = function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList.button);
    }, _0x47bcef.playRewardCollectedSound = function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList.openFreeChest);
    }, _0x47bcef.playSwipeSound = function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList.popupSwing);
    }, _0x47bcef.notificationBgColor = '#dd3333', _0x47bcef.notificationTextFont = "23px archivo-black", _0x47bcef.notificationTextColor = '#ffffff', _0x47bcef.notificationRadius = 0xf, _0x47bcef.notificationOffsetX = 0x37, _0x47bcef.notificationOffsetY = -0x32, _0x47bcef.notificationTextOffsetX = 0x0, _0x47bcef.notificationTextOffsetY = -0x5, _0x47bcef.rewardBoxCount = 0x5, _0x47bcef.rewardBoxSpacing = 0x5, _0x47bcef.rewardBoxOffsetY = -0x14, _0x47bcef.rewardBoxIconOffsetY = 0x0, _0x47bcef.titleOffsetY = -0x82, _0x47bcef.titleFont = "46px archivo-black", _0x47bcef.titleColor = '#011b3c', _0x47bcef.bodyTextFont = "30px archivo-black", _0x47bcef.bodyTextColor = '#ffffff', _0x47bcef.bottomTextOffsetY = 0xa0, _0x47bcef.bottomTextFont = "30px archivo-black", _0x47bcef.bottomTextColor = '#011b3c', _0x47bcef.closeButtonOffsetX = 0x118, _0x47bcef.closeButtonOffsetY = -0xb0, _0x47bcef.rewardBoxDayTextFont = "18px archivo-black", _0x47bcef.rewardBoxDayTextColor = '#ffffff', _0x47bcef.rewardBoxDayTextOffsetY = -0x2c, _0x47bcef.rewardTextFont = "20px archivo-black", _0x47bcef.rewardTextColor = '#ffffff', _0x47bcef.rewardTextOffsetY = 0x37, _0x47bcef.rewardCollectButtonTextFont = "18px archivo-black", _0x47bcef.rewardCollectButtonTextColor = '#ffffff', _0x47bcef.rewardCollectButtonOffsetY = 0x74, _0x47bcef.rewardCollectButtonTextOffsetY = -0x2, _0x47bcef.rewardCollectedTitleOffsetY = -0x7d, _0x47bcef.rewardCollectedTitleFont = "46px archivo-black", _0x47bcef.rewardCollectedTitleColor = '#011b3c', _0x47bcef.rewardCollectedIconScale = 1.5, _0x47bcef.rewardCollectedTextOffsetY = 0x46, _0x47bcef.rewardCollectedTextFont = "28px archivo-black", _0x47bcef.rewardCollectedTextColor = '#ffffff', _0x47bcef.continueButtonTextFont = "32px archivo-black", _0x47bcef.continueButtonTextColor = '#011b3c', _0x47bcef.continueButtonOffsetY = 0x8c, _0x47bcef.continueButtonTextOffsetY = -0x7, _0x47bcef.spinButtonTextFont = "32px archivo-black", _0x47bcef.spinButtonTextColor = '#ffffff', _0x47bcef.spinButtonOffsetY = 0x8c, _0x47bcef.spinButtonTextOffsetY = -0x7, _0x47bcef.spinWinnerScale = 0x2, _0x47bcef.spinBoxIconOffsetY = -0x23, _0x47bcef.spinBoxTextOffsetY = 0x1e, _0x47bcef.spinBoxTextFont = "32px archivo-black", _0x47bcef.spinBoxTextColor = '#ffffff', _0x47bcef.spinBoxSpacing = 0x5;
  };
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-gift').requires('plugins.dailyreward.dailyreward-object', 'plugins.dailyreward.dailyreward-text', 'plugins.dailyreward.dailyreward-signal').defines(function () {
  EntityDailyrewardGift = EntityDailyrewardObject.extend({
    'zIndex': 0xf423f,
    'anchorX': 0.5,
    'anchorY': 0.5,
    'giftIndex': 0x0,
    'giftOffset': 0x0,
    'centerX': 0x0,
    'maxSpeed': 0x0,
    'isSpinning': !0x1,
    'targetOffsetIndex': 0x1e,
    'onSpinCompleted': null,
    'isSpinComplete': !0x1,
    'isWinner': !0x1,
    'forceAlpha': 0x1,
    'targetMaxSpeed': 0xf,
    'isExiting': !0x1,
    'hasPlaySound': !0x1,
    'init': function (_0x1ca3f7, _0x394397, _0x26aff5) {
      _0x26aff5.image = ig.dailyreward.giftBoxImage, _0x26aff5.entryType = 'fadeDropBackIn', _0x26aff5.exitType = 'fadeOut', _0x26aff5.entryDuration = 0.5, this.parent(_0x1ca3f7, _0x394397, _0x26aff5), this.centerX = _0x1ca3f7, this.onSpinCompleted = new ig.DailyrewardSignal();
    },
    'exit': function () {
      this.isExiting = !0x0, this.parent();
    },
    'drawObject': function (_0xed2ca0, _0x30d6f0) {
      var _0xc65c9a = ig.system.context;
      null != this.currentAnim && (this.currentAnim.alpha = this.alpha * this.forceAlpha, this.currentAnim.draw(_0xed2ca0, _0x30d6f0)), this.isWinner ? this.globalAlpha = 0x1 : _0xc65c9a.globalAlpha = this.forceAlpha * this.alpha, this.isExiting && (_0xc65c9a.globalAlpha = 0x0);
      var _0x5c08e4 = ig.dailyreward.rewardIcons[this.giftIndex],
        _0x2aebf4 = _0xed2ca0 + this.width / 0x2,
        _0xca9c3e = _0x30d6f0 + this.height / 0x2;
      _0x5c08e4.draw(_0x2aebf4 - _0x5c08e4.width / 0x2, _0xca9c3e - _0x5c08e4.height / 0x2 + ig.dailyreward.spinBoxIconOffsetY), _0xc65c9a.font = ig.dailyreward.spinBoxTextFont, _0xc65c9a.fillStyle = ig.dailyreward.spinBoxTextColor, _0xc65c9a.textAlign = 'center', _0xc65c9a.fillText(ig.dailyreward.rewardTexts[this.giftIndex], _0x2aebf4, _0xca9c3e + ig.dailyreward.spinBoxTextOffsetY), _0xc65c9a.globalAlpha = 0x1;
    },
    'update': function () {
      this.parent();
      var _0x44edb5 = this.width + ig.dailyreward.spinBoxSpacing;
      if (this.isSpinning) {
        var _0x4255d3 = _0x44edb5 * this.targetOffsetIndex,
          _0xa8012 = (_0x4255d3 - this.giftOffset) / 0x14;
        this.maxSpeed += (this.targetMaxSpeed - this.maxSpeed) / 0x1e, _0xa8012 > this.maxSpeed && (_0xa8012 = this.maxSpeed), this.giftOffset += _0xa8012, 0x2 > Math.abs(this.giftOffset - _0x4255d3) && (this.giftOffset = _0x4255d3, this.isSpinning = !0x1, _0x4255d3 = this.updateX(_0x44edb5), 0xa > Math.abs(_0x4255d3 - this.centerX) && (this.onSpinCompleted.dispatch(this.giftIndex), this.isWinner = !0x0), this.isSpinComplete = !0x0);
      }
      this.updateAlpha(this.updateX(_0x44edb5), _0x44edb5), this.isSpinComplete && (_0x44edb5 = ig.system.tick, 0x0 < this.forceAlpha && (this.forceAlpha -= 0x2 * _0x44edb5), 0x0 > this.forceAlpha && (this.forceAlpha = 0x0), this.isWinner && this.scaleX < ig.dailyreward.spinWinnerScale && (this.scaleY = this.scaleX += 0x2 * _0x44edb5));
    },
    'updateX': function (_0x1204ab) {
      for (var _0x1c61c0 = this.giftOffset + this.centerX + this.giftIndex * _0x1204ab, _0xbcc3e1 = _0x1204ab * ig.dailyreward.rewardTexts.length; _0x1c61c0 > _0xbcc3e1 - _0x1204ab;) _0x1c61c0 -= _0xbcc3e1;
      return ig.responsive ? this.anchoredPositionX = _0x1c61c0 : this.pos.x = _0x1c61c0, _0x1c61c0;
    },
    'updateAlpha': function (_0x489a26, _0x493b04) {
      var _0x44679e = Math.abs(0x0 - (_0x489a26 - this.centerX));
      _0x44679e > 0x2 * _0x493b04 ? (this.alpha = 0x0, this.hasPlaySound = !0x1) : (this.alpha = 1.5 * (0x1 - _0x44679e / (0x2 * _0x493b04)), 0x1 < this.alpha && (this.alpha = 0x1)), this.isSpinning && 0.9 < this.alpha && !this.hasPlaySound && (this.hasPlaySound = !0x0, ig.dailyreward.playClickSound());
    }
  });
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-random-gift-popup').requires('plugins.dailyreward.dailyreward-object', 'plugins.dailyreward.dailyreward-text', 'plugins.dailyreward.dailyreward-signal', 'plugins.dailyreward.dailyreward-gift').defines(function () {
  EntityDailyrewardRandomGiftPopup = EntityDailyrewardObject.extend({
    'zIndex': 0x270f,
    'anchorX': 0.5,
    'anchorY': 0.5,
    'onClosed': null,
    'onRewardCollected': null,
    'entryType': 'fadeIn',
    'exitType': 'fadeOut',
    'items': [],
    'gifts': [],
    'init': function (_0x5c8c95, _0x27370e, _0x3f45fc) {
      _0x3f45fc.image = ig.dailyreward.rewardPopupBgImage, _0x3f45fc.entryType = 'fadeDropBackIn', _0x3f45fc.entryDuration = 0.5, this.parent(ig.dailyreward.gameWidth / 0x2, ig.dailyreward.gameHeight / 0x2, _0x3f45fc), this.onClosed = new ig.DailyrewardSignal(), this.onRewardCollected = new ig.DailyrewardSignal(), _0x5c8c95 = ig.game.spawnEntity(EntityDailyrewardText, this.pos.x, this.pos.y + ig.dailyreward.titleOffsetY, {
        'textString': ig.dailyreward.randomGiftTitle,
        'textAlign': 'center',
        'textRgb': ig.dailyreward.titleColor,
        'textFont': ig.dailyreward.titleFont,
        'entryType': 'fadeDropBackIn',
        'entryDuration': 0.5,
        'exitType': 'fadeOut',
        'entryDelay': 0.3
      }), _0x27370e = ig.game.spawnEntity(EntityDailyrewardObject, this.pos.x, this.pos.y + ig.dailyreward.continueButtonOffsetY, {
        'image': ig.dailyreward.continueButtonImage,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'zIndex': 0xf423f,
        'entryType': 'fadeDropBackIn',
        'entryDuration': 0.5,
        'exitType': 'fadeOut',
        'entryDelay': 0.3
      }), _0x3f45fc = parseInt(ig.dailyreward.spinButtonTextFont.split(" ")[0x0].split('px')[0x0]), _0x3f45fc = ig.game.spawnEntity(EntityDailyrewardText, _0x5c8c95.pos.x, _0x27370e.pos.y + _0x3f45fc / 0x2 + ig.dailyreward.spinButtonTextOffsetY, {
        'textString': ig.dailyreward.spinButtonText,
        'textAlign': 'center',
        'textRgb': ig.dailyreward.spinButtonTextColor,
        'textFont': ig.dailyreward.spinButtonTextFont,
        'entryType': 'fadeDropBackIn',
        'entryDuration': 0.5,
        'exitType': 'fadeOut',
        'entryDelay': 0.3
      }), _0x27370e.inputEnabled = !0x0, _0x27370e.onClicked.addOnce(this.onSpinClicked, this), this.currentButton = _0x27370e, this.currentText = _0x3f45fc, this.items = [_0x5c8c95, _0x27370e, _0x3f45fc];
      for (_0x5c8c95 = 0x0; _0x5c8c95 < ig.dailyreward.rewardTexts.length; _0x5c8c95++) _0x27370e = ig.game.spawnEntity(EntityDailyrewardGift, this.pos.x, this.pos.y, {
        'giftIndex': _0x5c8c95
      }), this.gifts.push(_0x27370e);
      ig.game.sortEntitiesDeferred();
    },
    'onSpinClicked': function () {
      for (var _0x1983fe = 0x14 + Math.floor(Math.random() * ig.dailyreward.rewardTexts.length), _0x573908 = 0x0; _0x573908 < this.gifts.length; _0x573908++) {
        var _0x3b1646 = this.gifts[_0x573908];
        _0x3b1646.isSpinning = !0x0, _0x3b1646.targetOffsetIndex = _0x1983fe, _0x3b1646.onSpinCompleted.addOnce(this.onSpinCompleted, this);
      }
      this.exitItems(), ig.dailyreward.playClickSound();
    },
    'onSpinCompleted': function (_0x1c430c) {
      var _0x3651f0 = ig.dailyreward.gameWidth / 0x2,
        _0x4db6f1 = ig.game.spawnEntity(EntityDailyrewardObject, _0x3651f0, ig.dailyreward.gameHeight / 0x2 + ig.dailyreward.continueButtonOffsetY, {
          'image': ig.dailyreward.continueButtonImage,
          'anchorX': 0.5,
          'anchorY': 0.5,
          'zIndex': 0xf423f,
          'entryType': 'fadeIn',
          'exitType': 'fadeOut'
        }),
        _0x5c21e2 = parseInt(ig.dailyreward.spinButtonTextFont.split(" ")[0x0].split('px')[0x0]),
        _0x3651f0 = ig.game.spawnEntity(EntityDailyrewardText, _0x3651f0, _0x4db6f1.pos.y + _0x5c21e2 / 0x2 + ig.dailyreward.spinButtonTextOffsetY, {
          'textString': ig.dailyreward.spinCollectButtonText,
          'textAlign': 'center',
          'textRgb': ig.dailyreward.spinButtonTextColor,
          'textFont': ig.dailyreward.spinButtonTextFont,
          'entryType': 'fadeIn',
          'exitType': 'fadeOut'
        });
      _0x4db6f1.inputEnabled = !0x0, _0x4db6f1.onClicked.addOnce(this.onCollectClicked, this), this.currentButton = _0x4db6f1, this.currentText = _0x3651f0, ig.dailyreward.collectedRewards.push(_0x1c430c), this.onRewardCollected.dispatch(), ig.dailyreward.playRewardCollectedSound();
    },
    'onCollectClicked': function () {
      this.onClosed.dispatch(), this.currentButton.exit(), this.currentText.exit();
      for (var _0x2e974a = 0x0; _0x2e974a < this.gifts.length; _0x2e974a++) this.gifts[_0x2e974a].exit();
      this.exit(), ig.dailyreward.playClickSound();
    },
    'exitItems': function () {
      for (var _0x5a622a = 0x0; _0x5a622a < this.items.length; _0x5a622a++) this.items[_0x5a622a].exit();
      this.items = [];
    },
    'draw': function () {
      var _0x1182f8 = ig.system.context;
      _0x1182f8.save(), _0x1182f8.fillStyle = 'rgba(0,0,0,' + ig.dailyreward.overlayAlpha * this.alpha + ')', _0x1182f8.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x1182f8.restore(), this.parent();
    },
    'onFinishEntering': function () {
      this.inputEnabled = !0x0;
    },
    'update': function () {
      this.parent(), this.currentButton && (this.currentButton.hasTouchInside ? (this.currentButton.scaleX += (0.9 - this.currentButton.scaleX) / 0x3, this.currentButton.scaleY += (0.9 - this.currentButton.scaleY) / 0x3) : (this.currentButton.scaleX += (0x1 - this.currentButton.scaleX) / 0x3, this.currentButton.scaleY += (0x1 - this.currentButton.scaleY) / 0x3), this.currentText.scaleX = this.currentButton.scaleX, this.currentText.scaleY = this.currentButton.scaleY);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-popup').requires('plugins.dailyreward.dailyreward-object', 'plugins.dailyreward.dailyreward-text', 'plugins.dailyreward.dailyreward-signal').defines(function () {
  EntityDailyrewardPopup = EntityDailyrewardObject.extend({
    'zIndex': 0x270f,
    'anchorX': 0.5,
    'anchorY': 0.5,
    'onClosed': null,
    'onRewardCollected': null,
    'entryType': 'fadeIn',
    'exitType': 'fadeOut',
    'items': [],
    'rewardCollectedItems': [],
    'currentBox': null,
    'currentCollectButton': null,
    'currentCollectButtonText': null,
    'currentContinueButton': null,
    'currentContinueButtonText': null,
    'init': function (_0x3567b7, _0x440aea, _0x362b00) {
      _0x362b00.image = ig.dailyreward.rewardPopupBgImage, _0x362b00.exitType = 'fadeDropBackOut', _0x362b00.exitDuration = 0.5, _0x362b00.entryType = 'fadeDropBackIn', _0x362b00.entryDuration = 0.5, this.parent(ig.dailyreward.gameWidth / 0x2, ig.dailyreward.gameHeight / 0x2, _0x362b00), this.onClosed = new ig.DailyrewardSignal(), this.onRewardCollected = new ig.DailyrewardSignal(), _0x3567b7 = ig.game.spawnEntity(EntityDailyrewardText, this.pos.x, this.pos.y + ig.dailyreward.titleOffsetY, {
        'textString': ig.dailyreward.titleText,
        'textAlign': 'center',
        'textRgb': ig.dailyreward.titleColor,
        'textFont': ig.dailyreward.titleFont,
        'entryType': 'fadeDropBackIn',
        'entryDuration': 0.5,
        'exitType': 'fadeDropBackOut',
        'entryDelay': 0.3,
        'exitDuration': 0.2
      }), _0x440aea = ig.game.spawnEntity(EntityDailyrewardText, this.pos.x, this.pos.y + ig.dailyreward.bottomTextOffsetY, {
        'textString': ig.dailyreward.bottomText,
        'textAlign': 'center',
        'textRgb': ig.dailyreward.bottomTextColor,
        'textFont': ig.dailyreward.bottomTextFont,
        'entryType': 'fadeDropBackIn',
        'entryDuration': 0.5,
        'exitType': 'fadeDropBackOut',
        'entryDelay': 0.3,
        'exitDuration': 0.2
      }), _0x362b00 = ig.game.spawnEntity(EntityDailyrewardObject, this.pos.x + ig.dailyreward.closeButtonOffsetX, this.pos.y + ig.dailyreward.closeButtonOffsetY, {
        'image': ig.dailyreward.closeButtonImage,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'zIndex': 0xf423f,
        'entryType': 'fadeDropBackIn',
        'entryDuration': 0.5,
        'exitType': 'fadeDropBackOut',
        'exitDuration': 0.2
      }), _0x362b00.inputEnabled = !0x0, _0x362b00.onClicked.addOnce(this.onCloseButtonClicked, this), this.closeButton = _0x362b00, this.items.push(_0x3567b7, _0x440aea, _0x362b00), _0x3567b7 = ig.dailyreward.rewardBoxImage.width + ig.dailyreward.rewardBoxSpacing, _0x440aea = this.pos.x - (ig.dailyreward.rewardBoxImage.width * ig.dailyreward.rewardBoxCount + ig.dailyreward.rewardBoxSpacing * (ig.dailyreward.rewardBoxCount - 0x1)) / 0x2, _0x362b00 = ig.dailyreward.getRewardList();
      for (var _0x4922d2 = 0x0; _0x4922d2 < _0x362b00.length; _0x4922d2++) {
        var _0x4f18f5 = _0x362b00[_0x4922d2],
          _0x524cef = ig.game.spawnEntity(EntityDailyrewardObject, _0x440aea + _0x3567b7 * _0x4922d2, this.pos.y + ig.dailyreward.rewardBoxOffsetY, {
            'image': ig.dailyreward.rewardBoxImage,
            'anchorX': 0x0,
            'anchorY': 0.5,
            'zIndex': 0xf423f,
            'entryType': 'fadeDropBackIn',
            'entryDuration': 0.5,
            'exitType': 'fadeDropBackOut',
            'exitDuration': 0.2
          }),
          _0x29b844 = ig.game.spawnEntity(EntityDailyrewardObject, _0x524cef.pos.x + ig.dailyreward.rewardBoxImage.width / 0x2, _0x524cef.pos.y + ig.dailyreward.rewardBoxIconOffsetY, {
            'image': ig.dailyreward.rewardIcons[_0x4f18f5.id],
            'anchorX': 0.5,
            'anchorY': 0.5,
            'zIndex': 0xf423f,
            'entryType': 'fadeDropBackIn',
            'entryDuration': 0.5,
            'exitType': 'fadeDropBackOut',
            'exitDuration': 0.2
          }),
          _0x493456 = ig.game.spawnEntity(EntityDailyrewardText, _0x29b844.pos.x, _0x524cef.pos.y + ig.dailyreward.rewardTextOffsetY, {
            'textString': ig.dailyreward.rewardTexts[_0x4f18f5.id],
            'textAlign': 'center',
            'textRgb': ig.dailyreward.rewardTextColor,
            'textFont': ig.dailyreward.rewardTextFont,
            'entryType': 'fadeDropBackIn',
            'entryDuration': 0.5,
            'exitType': 'fadeDropBackOut',
            'entryDelay': 0.3,
            'exitDuration': 0.2
          }),
          _0x406e1d = ig.game.spawnEntity(EntityDailyrewardText, _0x29b844.pos.x, _0x524cef.pos.y + ig.dailyreward.rewardBoxDayTextOffsetY, {
            'textString': ig.dailyreward.rewardBoxDayTextPrefix + _0x4f18f5.day,
            'textAlign': 'center',
            'textRgb': ig.dailyreward.rewardBoxDayTextColor,
            'textFont': ig.dailyreward.rewardBoxDayTextFont,
            'entryType': 'fadeDropBackIn',
            'eentryDuration': 0.5,
            'exitType': 'fadeDropBackOut',
            'entryDelay': 0.3,
            'exitDuration': 0.2
          }),
          _0x2ca7b5 = ig.game.spawnEntity(EntityDailyrewardObject, _0x29b844.pos.x, _0x524cef.pos.y + ig.dailyreward.rewardCollectButtonOffsetY, {
            'image': ig.dailyreward.rewardCollectButtonImage,
            'anchorX': 0.5,
            'anchorY': 0.5,
            'zIndex': 0xf423f,
            'entryType': 'fadeDropBackIn',
            'entryDuration': 0.5,
            'exitType': 'fadeDropBackOut',
            'entryDelay': 0.3,
            'exitDuration': 0.2
          }),
          _0x5f63d5 = parseInt(ig.dailyreward.rewardCollectButtonTextFont.split(" ")[0x0].split('px')[0x0]),
          _0x5f63d5 = ig.game.spawnEntity(EntityDailyrewardText, _0x29b844.pos.x, _0x2ca7b5.pos.y + _0x5f63d5 / 0x2 + ig.dailyreward.rewardCollectButtonTextOffsetY, {
            'textString': ig.dailyreward.rewardCollectButtonText,
            'textAlign': 'center',
            'textRgb': ig.dailyreward.rewardCollectButtonTextColor,
            'textFont': ig.dailyreward.rewardCollectButtonTextFont,
            'entryDuration': 0.5,
            'entryType': 'fadeDropBackIn',
            'exitType': 'fadeDropBackOut',
            'entryDelay': 0.3,
            'exitDuration': 0.2
          }),
          _0x26cfa7 = ig.game.spawnEntity(EntityDailyrewardObject, _0x29b844.pos.x, _0x524cef.pos.y + ig.dailyreward.rewardCollectButtonOffsetY, {
            'image': ig.dailyreward.rewardIdleButtonImage,
            'anchorX': 0.5,
            'anchorY': 0.5,
            'zIndex': 0xf423f,
            'entryType': 'fadeDropBackIn',
            'entryDuration': 0.5,
            'exitType': 'fadeDropBackOut',
            'entryDelay': 0.3,
            'exitDuration': 0.2
          });
        _0x2ca7b5.visible = !0x1, _0x5f63d5.visible = !0x1, _0x26cfa7.visible = !0x1, _0x4f18f5.isCurrent ? (_0x2ca7b5.inputEnabled = !0x0, _0x2ca7b5.onClicked.addOnce(this.onRewardClicked, this), _0x2ca7b5.visible = !0x0, this.currentCollectButton = _0x2ca7b5, this.currentCollectButtonText = _0x5f63d5, this.currentBox = _0x524cef) : _0x4f18f5.isCollected ? (_0x29b844.visible = !0x1, _0x493456.visible = !0x1, _0x4f18f5 = ig.game.spawnEntity(EntityDailyrewardObject, _0x524cef.pos.x + ig.dailyreward.rewardBoxImage.width / 0x2, _0x524cef.pos.y + ig.dailyreward.rewardBoxIconOffsetY, {
          'image': ig.dailyreward.rewardCollectedIcon,
          'anchorX': 0.5,
          'anchorY': 0.5,
          'zIndex': 0xf423f,
          'entryType': 'fadeDropBackIn',
          'entryDuration': 0.5,
          'exitType': 'fadeDropBackOut',
          'exitDuration': 0.2
        }), this.items.push(_0x4f18f5)) : _0x26cfa7.visible = !0x0, this.items.push(_0x524cef, _0x29b844, _0x493456, _0x406e1d, _0x2ca7b5, _0x5f63d5, _0x26cfa7);
      }
      _0x3567b7 = ig.game.spawnEntity(EntityDailyrewardText, this.pos.x, this.pos.y + ig.dailyreward.rewardCollectedTitleOffsetY, {
        'textString': ig.dailyreward.rewardCollectedTitleText,
        'textAlign': 'center',
        'textRgb': ig.dailyreward.rewardCollectedTitleColor,
        'textFont': ig.dailyreward.rewardCollectedTitleFont,
        'entryType': 'fadeIn',
        'exitType': 'fadeOut'
      }), _0x4922d2 = ig.dailyreward.getRewardId(ig.dailyreward.data.dayCount), _0x440aea = ig.game.spawnEntity(EntityDailyrewardObject, this.pos.x - ig.dailyreward.rewardBoxImage.width / 0x2, this.pos.y + ig.dailyreward.rewardBoxOffsetY, {
        'image': ig.dailyreward.rewardBoxImage,
        'anchorX': 0x0,
        'anchorY': 0.5,
        'zIndex': 0xf423f
      }), _0x362b00 = ig.game.spawnEntity(EntityDailyrewardObject, _0x440aea.pos.x + ig.dailyreward.rewardBoxImage.width / 0x2, _0x440aea.pos.y + ig.dailyreward.rewardBoxIconOffsetY, {
        'image': ig.dailyreward.rewardIcons[_0x4922d2],
        'anchorX': 0.5,
        'anchorY': 0.5,
        'zIndex': 0xf423f,
        'scaleX': ig.dailyreward.rewardCollectedIconScale,
        'scaleY': ig.dailyreward.rewardCollectedIconScale,
        'entryType': 'fadeIn',
        'exitType': 'fadeOut'
      }), _0x4922d2 = ig.game.spawnEntity(EntityDailyrewardText, _0x362b00.pos.x, _0x440aea.pos.y + ig.dailyreward.rewardCollectedTextOffsetY, {
        'textString': ig.dailyreward.rewardTexts[_0x4922d2],
        'textAlign': 'center',
        'textRgb': ig.dailyreward.rewardCollectedTextColor,
        'textFont': ig.dailyreward.rewardCollectedTextFont,
        'entryType': 'fadeIn',
        'exitType': 'fadeOut'
      }), _0x524cef = ig.game.spawnEntity(EntityDailyrewardObject, _0x362b00.pos.x, _0x440aea.pos.y + ig.dailyreward.continueButtonOffsetY, {
        'image': ig.dailyreward.continueButtonImage,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'zIndex': 0xf423f,
        'entryType': 'fadeIn',
        'exitType': 'fadeOut'
      }), _0x29b844 = parseInt(ig.dailyreward.continueButtonTextFont.split(" ")[0x0].split('px')[0x0]), _0x29b844 = ig.game.spawnEntity(EntityDailyrewardText, _0x362b00.pos.x, _0x524cef.pos.y + _0x29b844 / 0x2 + ig.dailyreward.continueButtonTextOffsetY, {
        'textString': ig.dailyreward.continueButtonText,
        'textAlign': 'center',
        'textRgb': ig.dailyreward.continueButtonTextColor,
        'textFont': ig.dailyreward.continueButtonTextFont,
        'entryType': 'fadeIn',
        'exitType': 'fadeOut'
      }), _0x440aea.alpha = 0x0, _0x524cef.inputEnabled = !0x0, _0x524cef.onClicked.addOnce(this.onCloseButtonClicked, this), this.currentContinueButton = _0x524cef, this.currentContinueButtonText = _0x29b844, this.rewardCollectedItems.push(_0x3567b7, _0x440aea, _0x362b00, _0x4922d2, _0x524cef, _0x29b844);
      for (_0x4922d2 = 0x0; _0x4922d2 < this.rewardCollectedItems.length; _0x4922d2++) this.rewardCollectedItems[_0x4922d2].visible = !0x1;
      ig.game.sortEntitiesDeferred();
    },
    'onRewardClicked': function () {
      ig.dailyreward.collectReward(), this.onRewardCollected.dispatch(), this.exitItems(), this.showRewardCollectedPopup(), ig.dailyreward.playRewardCollectedSound();
    },
    'onCloseButtonClicked': function () {
      this.onClosed.dispatch(), this.exitRewardCollectedPopupItems(), this.exitItems(), this.exit(), ig.dailyreward.playClickSound();
    },
    'showRewardCollectedPopup': function () {
      for (var _0x2fbc34 = 0x0; _0x2fbc34 < this.rewardCollectedItems.length; _0x2fbc34++) {
        var _0x36a63f = this.rewardCollectedItems[_0x2fbc34];
        _0x36a63f.visible = !0x0, _0x36a63f.enter();
      }
    },
    'exitItems': function () {
      for (var _0x423df4 = 0x0; _0x423df4 < this.items.length; _0x423df4++) this.items[_0x423df4].exit();
      this.items = [];
    },
    'exitRewardCollectedPopupItems': function () {
      for (var _0x5de19b = 0x0; _0x5de19b < this.rewardCollectedItems.length; _0x5de19b++) this.rewardCollectedItems[_0x5de19b].exit();
      this.rewardCollectedItems = [];
    },
    'draw': function () {
      var _0x5cd6e2 = ig.system.context;
      _0x5cd6e2.save(), _0x5cd6e2.fillStyle = 'rgba(0,0,0,' + ig.dailyreward.overlayAlpha * this.alpha + ')', _0x5cd6e2.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x5cd6e2.restore(), this.parent();
    },
    'drawObject': function (_0x485c51, _0x2ea29c) {
      this.parent(_0x485c51, _0x2ea29c);
    },
    'onFinishEntering': function () {
      this.inputEnabled = !0x0;
    },
    'update': function () {
      this.parent(), this.currentCollectButton && (this.currentBox.hasTouchInside ? (this.currentCollectButton.scaleX += (0.8 - this.currentCollectButton.scaleX) / 0x3, this.currentCollectButton.scaleY += (0.8 - this.currentCollectButton.scaleY) / 0x3) : (this.currentCollectButton.scaleX += (0x1 - this.currentCollectButton.scaleX) / 0x3, this.currentCollectButton.scaleY += (0x1 - this.currentCollectButton.scaleY) / 0x3), this.currentCollectButtonText.scaleX = this.currentCollectButton.scaleX, this.currentCollectButtonText.scaleY = this.currentCollectButton.scaleY), this.currentContinueButton && this.currentContinueButton.visible && (this.currentContinueButton.hasTouchInside ? (this.currentContinueButton.scaleX += (0.9 - this.currentContinueButton.scaleX) / 0x3, this.currentContinueButton.scaleY += (0.9 - this.currentContinueButton.scaleY) / 0x3) : (this.currentContinueButton.scaleX += (0x1 - this.currentContinueButton.scaleX) / 0x3, this.currentContinueButton.scaleY += (0x1 - this.currentContinueButton.scaleY) / 0x3), this.currentContinueButtonText.scaleX = this.currentContinueButton.scaleX, this.currentContinueButtonText.scaleY = this.currentContinueButton.scaleY), this.closeButton && this.closeButton.visible && (this.closeButton.scaleX = this.closeButton.hasTouchInside ? this.closeButton.scaleX + (0.8 - this.closeButton.scaleX) / 0x3 : this.closeButton.scaleX + (0x1 - this.closeButton.scaleX) / 0x3, this.closeButton.scaleY = this.closeButton.scaleX);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.dailyreward.dailyreward-plugin').requires('impact.system', 'impact.entity', 'plugins.dailyreward.dailyreward-object', 'plugins.dailyreward.dailyreward-text', 'plugins.dailyreward.dailyreward-button', 'plugins.dailyreward.dailyreward-signal', 'plugins.dailyreward.dailyreward-settings', 'plugins.dailyreward.dailyreward-random-gift-popup', 'plugins.dailyreward.dailyreward-popup').defines(function () {
  ig.dailyreward = {
    'data': {
      'lastCollectTime': 0x0,
      'dayCount': 0x0
    },
    'localSaveEnabled': !0x1,
    'start': function () {
      this.onPopupOpen = new ig.DailyrewardSignal(), this.onPopupClosed = new ig.DailyrewardSignal(), this.onRewardCollected = new ig.DailyrewardSignal();
    },
    'showCheat': function () {
      var _0x334271 = ig.game.spawnEntity(EntityDailyrewardObject, 0x5, ig.system.height - 0x5, {
        'anchorY': 0x1,
        'drawAsRect': !0x0,
        'rectColor': '#222222',
        'width': 0x64,
        'height': 0x28
      });
      ig.game.spawnEntity(EntityDailyrewardText, 0x37, ig.system.height - 0x19, {
        'textString': "SKIP NEXT\nDAY CHEAT",
        'textFont': "14px arial black",
        'textAlign': 'center'
      }), _0x334271.inputEnabled = !0x0, _0x334271.onClicked.add(this.cheatAdvanceDay, this);
    },
    'showWindow': function () {
      this.popup || (this.popup = ig.game.spawnEntity(EntityDailyrewardPopup, 0x0, 0x0), this.popup.onClosed.add(this.hideWindow, this), this.popup.onRewardCollected.add(this.onPopupRewardCollectedCallback, this), this.onPopupOpen.dispatch(), ig.dailyreward.playSwipeSound());
    },
    'onPopupRewardCollectedCallback': function () {
      this.onRewardCollected.dispatch();
      try {
        var _0x217c83 = ig.dailyreward.collectedRewards.pop();
        ig.game.advStorage.addCoins(parseInt(this.rewardTexts[_0x217c83]));
      } catch (_0x4f7636) {}
    },
    'hideWindow': function () {
      this.onPopupClosed.dispatch(), this.popup = null, ig.dailyreward.playSwipeSound();
    },
    'cheatAdvanceDay': function () {
      this.data.lastCollectTime -= 0x5265c00, this.save();
    },
    'hasReward': function () {
      var _0x48f4cc = new Date(),
        _0x3d2692 = _0x48f4cc.getTime(),
        _0x471cee = _0x48f4cc.getDate();
      return _0x48f4cc.setTime(this.data.lastCollectTime), _0x48f4cc = _0x48f4cc.getDate(), _0x3d2692 > this.data.lastCollectTime && _0x471cee != _0x48f4cc ? !0x0 : !0x1;
    },
    'collectReward': function () {
      var _0x3e5b6e = this.getRewardId(this.data.dayCount);
      this.collectedRewards.push(_0x3e5b6e), this.data.lastCollectTime = new Date().getTime(), this.data.dayCount++, 0x63 < this.data.dayCount && (this.data.dayCount = 0x0), this.save();
    },
    'getRewardList': function () {
      var _0x582ddf = 0x5 * Math.floor(this.data.dayCount / 0x5);
      0x5 > _0x582ddf && (_0x582ddf = 0x0);
      for (var _0x4b31e5 = [], _0x430953 = _0x582ddf; _0x430953 < _0x582ddf + this.rewardBoxCount; _0x430953++) {
        var _0x488a34 = {
          'day': _0x430953 + 0x1,
          'id': this.getRewardId(_0x430953),
          'isCollected': _0x430953 < this.data.dayCount,
          'isCurrent': this.hasReward() && _0x430953 == this.data.dayCount
        };
        _0x4b31e5.push(_0x488a34);
      }
      return _0x4b31e5;
    },
    'getRewardId': function (_0x36ad57) {
      return _0x36ad57 % this.rewardTexts.length;
    },
    'save': function () {
      this.localSaveEnabled && localStorage.setItem(this.saveDataName, window.btoa(JSON.stringify(this.data)));
    },
    'load': function () {
      if (this.localSaveEnabled) {
        var _0x263c84 = localStorage.getItem(this.saveDataName);
        if (!_0x263c84 || 0x0 >= _0x263c84.length) _0x263c84 = '';
        var _0x114ba6 = '';
        try {
          _0x114ba6 = window.atob(_0x263c84);
        } catch (_0x5272fe) {
          _0x114ba6 = '';
        }
        try {
          if (!_0x114ba6 || 0x0 >= _0x114ba6.length) throw Error();
          this.data = JSON.parse(_0x114ba6);
        } catch (_0x50989d) {
          this.data = {
            'lastCollectTime': 0x0,
            'dayCount': 0x0
          };
        }
      } else this.data = {
        'lastCollectTime': 0x0,
        'dayCount': 0x0
      };
    },
    'isLocalStorageUsable': function () {
      try {
        var _0xe894d0 = 'test-localstorage-' + Date.now();
        localStorage.setItem(_0xe894d0, _0xe894d0);
        var _0x4e99c7 = localStorage.getItem(_0xe894d0);
        localStorage.removeItem(_0xe894d0);
        if (_0x4e99c7 !== _0xe894d0) throw Error();
        this.localSaveEnabled = !0x0;
      } catch (_0x5a4cff) {
        this.localSaveEnabled = !0x1;
      }
    }
  }, ig.applyDailyrewardSettings(), ig.dailyreward.isLocalStorageUsable(), ig.dailyreward.load(), ig.dailyreward.start(), setTimeout(function () {
    console.log("dailyreward-plugin 1.1.0");
  }, 0x3e8);
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-settings').defines(function () {
  ig.initAchievementSettings = function () {
    ig.Achievement.list = [{
      'name': _STRINGS.Achievement.itemTitle[0x0],
      'description': _STRINGS.Achievement.itemDesc[0x0],
      'reward': _STRINGS.Achievement.itemReward.replace('#', '5'),
      'goal': 0x1,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-1.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x1],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '3'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '10'),
      'goal': 0x3,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-1.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x2],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '5'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '15'),
      'goal': 0x5,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-1.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x3],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '10'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0xa,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-1.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x4],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '15'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '25'),
      'goal': 0xf,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-1.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x5],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '20'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '30'),
      'goal': 0x14,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-2.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x6],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '30'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '40'),
      'goal': 0x1e,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-2.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x7],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '40'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '50'),
      'goal': 0x28,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-2.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x8],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '50'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '60'),
      'goal': 0x32,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-2.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x9],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '60'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '70'),
      'goal': 0x3c,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-2.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0xa],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '70'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '80'),
      'goal': 0x46,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-3.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0xb],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '80'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '100'),
      'goal': 0x50,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-3.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0xc],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '100'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '120'),
      'goal': 0x64,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-3.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0xd],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '120'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '140'),
      'goal': 0x78,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-3.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0xe],
      'description': _STRINGS.Achievement.itemDesc[0x1].replace('#', '150'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '160'),
      'goal': 0x96,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-3.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0xf],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '50'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '1'),
      'goal': 0x32,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x10],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '100'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '5'),
      'goal': 0x64,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x11],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '200'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '10'),
      'goal': 0xc8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x12],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '400'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '15'),
      'goal': 0x190,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x13],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '700'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x2bc,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x14],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '1,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '25'),
      'goal': 0x3e8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-5.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x15],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '1,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '30'),
      'goal': 0x5dc,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-5.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x16],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '2,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '35'),
      'goal': 0x7d0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-5.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x17],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '2,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '40'),
      'goal': 0x9c4,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-5.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x18],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '3,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '45'),
      'goal': 0xbb8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-5.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x19],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '3,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '50'),
      'goal': 0xdac,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-6.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x1a],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '4,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '55'),
      'goal': 0x1194,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-6.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x1b],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '5,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '60'),
      'goal': 0x1388,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-6.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x1c],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '5,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '65'),
      'goal': 0x157c,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-6.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x1d],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '6,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '70'),
      'goal': 0x1770,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-6.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x1e],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '6,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '75'),
      'goal': 0x1964,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-7.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x1f],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '7,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '80'),
      'goal': 0x1b58,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-7.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x20],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '8,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '100'),
      'goal': 0x1f40,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-7.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x21],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '9,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '120'),
      'goal': 0x2328,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-7.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x22],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '10,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '140'),
      'goal': 0x2710,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-7.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x23],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '11,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '160'),
      'goal': 0x2af8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-8.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x24],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '12,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '180'),
      'goal': 0x2ee0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-8.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x25],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '13,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '200'),
      'goal': 0x32c8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-8.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x26],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '14,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '220'),
      'goal': 0x36b0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-8.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x27],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '15,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '240'),
      'goal': 0x3a98,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-8.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x28],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '16,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '260'),
      'goal': 0x3e80,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-9.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x29],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '17,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '280'),
      'goal': 0x4268,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-9.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x2a],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '18,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '300'),
      'goal': 0x4650,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-9.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x2b],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '19,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '320'),
      'goal': 0x4a38,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-9.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x2c],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '20,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '340'),
      'goal': 0x4e20,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-9.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x2d],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '21,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '360'),
      'goal': 0x5208,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-10.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x2e],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '22,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '380'),
      'goal': 0x55f0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-10.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x2f],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '23,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '400'),
      'goal': 0x59d8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-10.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x30],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '24,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '420'),
      'goal': 0x5dc0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-10.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x31],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '25,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '440'),
      'goal': 0x61a8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-10.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x32],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '26,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '460'),
      'goal': 0x6590,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-11.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x33],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '27,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '480'),
      'goal': 0x6978,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-11.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x34],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '28,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '500'),
      'goal': 0x6d60,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-11.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x35],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '29,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '520'),
      'goal': 0x7148,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-11.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x36],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '30,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '540'),
      'goal': 0x7530,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-11.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x37],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '31,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '560'),
      'goal': 0x7918,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-12.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x38],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '32,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '580'),
      'goal': 0x7d00,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-12.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x39],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '33,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '600'),
      'goal': 0x80e8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-12.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x3a],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '34,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '620'),
      'goal': 0x84d0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-12.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x3b],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '35,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '640'),
      'goal': 0x88b8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-12.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x3c],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '36,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '660'),
      'goal': 0x8ca0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-13.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x3d],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '37,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '680'),
      'goal': 0x9088,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-13.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x3e],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '38,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '700'),
      'goal': 0x9470,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-13.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x3f],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '39,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '720'),
      'goal': 0x9858,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-13.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x40],
      'description': _STRINGS.Achievement.itemDesc[0x2].replace('#', '40,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '740'),
      'goal': 0x9c40,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-13.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '1'),
      'description': _STRINGS.Achievement.itemDesc[0x3],
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x1,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '2'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '2'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x2,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '3'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '3'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x3,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '4'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '4'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x4,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '5'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '5'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x5,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-4.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '6'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '6'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x6,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-15.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '7'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '7'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x7,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-15.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '8'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '8'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-15.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '9'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '9'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0x9,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-15.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x41].replace('#', '10'),
      'description': _STRINGS.Achievement.itemDesc[0x4].replace('#', '10'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '20'),
      'goal': 0xa,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-15.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x42],
      'description': _STRINGS.Achievement.itemDesc[0x5],
      'reward': _STRINGS.Achievement.itemReward.replace('#', '1'),
      'goal': 0x1,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-16.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x43],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '10'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '5'),
      'goal': 0xa,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-16.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x44],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '50'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '15'),
      'goal': 0x32,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-16.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x45],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '100'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '25'),
      'goal': 0x64,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-16.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x46],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '150'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '35'),
      'goal': 0x96,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-16.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x47],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '200'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '50'),
      'goal': 0xc8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-17.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x48],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '400'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '70'),
      'goal': 0x190,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-17.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x49],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '600'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '90'),
      'goal': 0x258,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-17.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x4a],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '1,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '110'),
      'goal': 0x3e8,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-17.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x4b],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '1,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '130'),
      'goal': 0x5dc,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-17.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x4c],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '2,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '150'),
      'goal': 0x7d0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-18.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x4d],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '2,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '170'),
      'goal': 0x9c4,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-18.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x4e],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '3,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '190'),
      'goal': 0xdac,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-18.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x4f],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '4,500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '210'),
      'goal': 0x1194,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-18.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x50],
      'description': _STRINGS.Achievement.itemDesc[0x6].replace('#', '6,000'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '230'),
      'goal': 0x1770,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-18.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '1'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '5'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '1'),
      'goal': 0x5,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-19.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '2'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '20'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '5'),
      'goal': 0x14,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-19.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '3'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '40'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '15'),
      'goal': 0x28,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-19.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '4'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '70'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '25'),
      'goal': 0x46,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-19.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '5'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '110'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '35'),
      'goal': 0x6e,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-19.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '6'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '160'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '50'),
      'goal': 0xa0,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-20.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '7'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '220'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '70'),
      'goal': 0xdc,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-20.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '8'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '290'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '90'),
      'goal': 0x122,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-20.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '9'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '380'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '120'),
      'goal': 0x17c,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-20.png')
    }, {
      'name': _STRINGS.Achievement.itemTitle[0x51].replace('#', '10'),
      'description': _STRINGS.Achievement.itemDesc[0x7].replace('#', '500'),
      'reward': _STRINGS.Achievement.itemReward.replace('#', '150'),
      'goal': 0x1f4,
      'icon': new ig.Image('media/graphics/ui/achievement/icon-20.png')
    }], ig.Achievement.overlay = {
      'color': '#000000',
      'alpha': 0.6
    }, ig.Achievement.popup = {
      'width': 0x258,
      'height': 0x294,
      'color': '#ffffff',
      'radius': 0x1e,
      'itemsPerPage': 0x3,
      'itemsStartY': 0x87,
      'autoSortItems': !0x0,
      'title': {
        'font': "46px archivo-black",
        'color': '#011b3c',
        'offsetY': 0x5a
      },
      'item': {
        'width': 0x1f4,
        'height': 0x82,
        'radius': 0x14,
        'color': '#ffffff',
        'spacing': 0x5,
        'innerSpacing': 0xf,
        'textSpacing': 0x5,
        'textStartOffsetY': 0xa,
        'name': {
          'font': "26px archivo-black",
          'color': '#ffffff'
        },
        'description': {
          'font': "16px arial",
          'color': '#ffffff'
        },
        'reward': {
          'font': "16px arial",
          'color': '#ffffff'
        },
        'panel': {
          'offsetX': 0x4,
          'offsetY': 0x6
        },
        'progress': {
          'font': "16px arial",
          'color': '#011b3c',
          'textOffsetY': -0x2,
          'bar': {
            'height': 0x14,
            'radius': 0xa,
            'color': '#f3fe2f',
            'colorBg': '#155892',
            'stroke': '#011c3e',
            'offsetY': 0x8
          }
        },
        'claimButton': {
          'x': 0x1b5,
          'y': 0x3e,
          'width': 0x64,
          'height': 0x28,
          'color': '#46ab46',
          'shadowColor': '#136a13',
          'font': "22px archivo-black",
          'textColor': '#011b3c',
          'textOffsetY': 0x0
        },
        'completedSign': {
          'x': 0x1a0,
          'y': 0x3c,
          'width': 0x64,
          'height': 0x1e,
          'color': '#555555',
          'font': "20px archivo-black",
          'textColor': '#0fff0f',
          'textOffsetY': 0x2
        },
        'rewardEffect': {
          'width': 0x78,
          'height': 0x1e,
          'color': '#011c3e',
          'font': "14px arial",
          'textColor': '#ffffff',
          'timedLife': 0x1,
          'upSpeed': 0x32
        }
      },
      'paging': {
        'button': {
          'width': 0x50,
          'height': 0x4c,
          'offsetY': -0x6,
          'color': '#1565b5',
          'shadowColor': '#1e5885',
          'symbolColor': '#ffffff',
          'symbolSize': 0x1e
        },
        'display': {
          'font': "30px arial",
          'textColor': '#ffffff',
          'color': '#1565b5',
          'textOffsetY': 0x5,
          'textOffsetX': 0x0
        }
      },
      'closeButton': {
        'width': 0x65,
        'height': 0x60,
        'color': '#dd5555',
        'shadowColor': '#ae1d1d',
        'offsetX': 0x5a,
        'offsetY': 0x5c,
        'symbolColor': '#ffffff',
        'symbolSize': 0x19
      }
    }, ig.Achievement.notificationDot = {
      'color': '#ff5555',
      'textColor': '#ffffff',
      'size': 0x1e,
      'font': "20px arial",
      'textOffsetY': 0x2
    }, ig.Achievement.notificationDropDown = {
      'placement': 'top-center',
      'width': 0x168,
      'height': 0x64,
      'color': '#222222',
      'font': "16px arial",
      'textColor': '#ffffff',
      'textOffsetY': 0x19,
      'lineSpacing': 0x2,
      'padding': 0x14,
      'showDuration': 0x1
    }, ig.Achievement.sounds = {
      'button': 'button',
      'claim': 'openFreeChest',
      'swipe': 'screenSwoosh',
      'popup': 'popupSwing'
    }, ig.Achievement.strings = {
      'achievementTitle': _STRINGS.Achievement.title,
      'reward': _STRINGS.Achievement.reward,
      'claim': _STRINGS.Achievement.claim,
      'completed': _STRINGS.Achievement.completed,
      'unlocked': _STRINGS.Achievement.unlocked,
      'rewardFx': _STRINGS.Achievement.rewardFx,
      'ok': _STRINGS.Achievement.ok
    }, ig.Achievement.allowClaim = !0x0;
  };
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-game-object').requires('impact.entity').defines(function () {
  ig.AchievementGameObject = ig.Entity.extend({
    'idleSheetInfo': null,
    'singleFrameImage': null,
    'visible': !0x0,
    'alpha': 0x1,
    'zIndex': 0x3e8,
    'drawAsRect': !0x1,
    'drawAsOutline': !0x1,
    'outlineWidth': 0x1,
    'rectColor': '#FFFFFF',
    'outlineColor': '#000000',
    'entryDelay': 0x0,
    'entryDuration': 0.25,
    'entryType': null,
    'exitDelay': 0x0,
    'exitDuration': 0.25,
    'exitType': null,
    'killOnExit': !0x0,
    'scaleX': 0x1,
    'scaleY': 0x1,
    'angle': 0x0,
    'anchorX': 0x0,
    'anchorY': 0x0,
    'forceDraw': !0x1,
    'width': 0x20,
    'height': 0x20,
    'onInputDown': null,
    'onInputUp': null,
    'onClicked': null,
    'hasTouchInside': !0x1,
    'inputEnabled': !0x1,
    'isClicking': !0x1,
    'boundLeft': 0x0,
    'boundRight': 0x0,
    'boundTop': 0x0,
    'boundBottom': 0x0,
    'isFinishEntering': !0x1,
    'fixedOnCamera': !0x1,
    'anchorType': 'default',
    'timedLife': -0x3e7,
    'size': {
      'x': 0x20,
      'y': 0x20
    },
    'init': function (_0x15ad9b, _0x1836fa, _0x3c00ab) {
      ig.AchievementTouch.hasInitialized || ig.AchievementTouch.init(), this.onInputDown = new ig.AchievementSignal(), this.onInputUp = new ig.AchievementSignal(), this.onClicked = new ig.AchievementSignal(), _0x3c00ab.singleFrameImage ? this.singleFrameImage = _0x3c00ab.singleFrameImage : _0x3c00ab.image && (this.image = this.singleFrameImage = _0x3c00ab.image), null != this.singleFrameImage ? (this.idleSheetInfo = {
        'sheetImage': this.singleFrameImage,
        'sheetX': 0x1,
        'sheetY': 0x1
      }, this.setSpriteSheet('idle'), this.setSize('idle'), this.addAnimation('idle', 'idleSheet', 0x1, [0x0], !0x1, !0x0)) : null != this.idleSheetInfo && (this.setSpriteSheet('idle'), this.setSize('idle')), this.parent(_0x15ad9b, _0x1836fa, _0x3c00ab), !0x1 === _0x3c00ab.visible && (this.visible = !0x1), this.anchorType = _0x3c00ab.anchorType ? _0x3c00ab.anchorType : 'default', this.enter();
    },
    'swapImage': function (_0xa03a16) {
      this.idleSheetInfo.sheetImage = _0xa03a16, this.idleSheet.image = _0xa03a16;
    },
    'onFinishEntering': function () {},
    'enter': function () {
      this.visible = !0x0;
      if (ig.responsive) {
        var _0x3fffc8 = ig.responsive.toAnchor(this.anchoredPositionX, this.anchoredPositionY, this.anchorType);
        this.pos.x = _0x3fffc8.x, this.pos.y = _0x3fffc8.y;
      }
      null != this.entryType ? (this[this.entryType](), this.delayedCall(this.entryDelay + this.entryDuration, function () {
        this.onFinishEntering(), this.isFinishEntering = !0x0;
      }.bind(this))) : (this.isFinishEntering = !0x0, this.onFinishEntering());
    },
    'exit': function () {
      if (null != this.exitType) this[this.exitType]();else this.alpha0();
      this.delayedCall(this.exitDuration + this.exitDelay, function () {
        this.checkKill();
      }.bind(this));
    },
    'setSpriteSheet': function (_0x3a4578) {
      this[_0x3a4578 + 'Sheet'] = new ig.AnimationSheet(this[_0x3a4578 + 'SheetInfo'].sheetImage.path, this[_0x3a4578 + 'SheetInfo'].sheetImage.width / this[_0x3a4578 + 'SheetInfo'].sheetX, this[_0x3a4578 + 'SheetInfo'].sheetImage.height / this[_0x3a4578 + 'SheetInfo'].sheetY);
    },
    'setSize': function (_0x2ea0cd) {
      this.width = this[_0x2ea0cd + 'SheetInfo'].sheetImage.width / this[_0x2ea0cd + 'SheetInfo'].sheetX, this.height = this[_0x2ea0cd + 'SheetInfo'].sheetImage.height / this[_0x2ea0cd + 'SheetInfo'].sheetY;
    },
    'addAnimation': function (_0x106aa1, _0x44d105, _0xaa0bd7, _0x30be1e, _0x50d69b, _0x12107e) {
      this[_0x106aa1] = new ig.Animation(this[_0x44d105], _0xaa0bd7, _0x30be1e, !_0x50d69b), !0x0 == _0x12107e && (this.currentAnim = this[_0x106aa1]);
    },
    'makeFramesArray': function (_0x173be2, _0x321375, _0x1528df) {
      for (var _0x2e27b3 = [], _0x31b7dc = _0x173be2; _0x31b7dc <= _0x321375; _0x31b7dc++) _0x2e27b3.push(_0x31b7dc);
      if (_0x1528df) {
        for (_0x31b7dc = _0x321375; _0x31b7dc >= _0x173be2; _0x31b7dc--) _0x2e27b3.push(_0x31b7dc);
      }
      return _0x2e27b3;
    },
    'draw': function () {
      if (!(0.01 > this.alpha) && this.visible && (this.forceDraw || this.currentAnim || this.drawAsRect || this.drawAsOutline)) {
        var _0xd2dc14 = ig.system.context;
        _0xd2dc14.save();
        var _0xe09d86 = 0x0,
          _0x51f2f7 = 0x0;
        this.fixedOnCamera ? (_0xe09d86 = ig.system.getDrawPos(this.pos.x.round() - this.offset.x), _0x51f2f7 = ig.system.getDrawPos(this.pos.y.round() - this.offset.y)) : (_0xe09d86 = ig.system.getDrawPos(this.pos.x.round() - this.offset.x - ig.game.screen.x), _0x51f2f7 = ig.system.getDrawPos(this.pos.y.round() - this.offset.y - ig.game.screen.y)), _0xd2dc14.translate(_0xe09d86, _0x51f2f7), (0x1 != this.scaleX || 0x1 != this.scaleY) && _0xd2dc14.scale(this.scaleX, this.scaleY), _0xe09d86 = -this.anchorX * this.width, _0x51f2f7 = -this.anchorY * this.height, 0x0 < this.shakeValue && (this.shakeValue -= ig.system.tick * this.shakeReductionMultiplier, _0xe09d86 += ig.AchievementRandom.float(-this.shakeValue, this.shakeValue), _0x51f2f7 += ig.AchievementRandom.float(-this.shakeValue, this.shakeValue)), this.drawObject(_0xe09d86, _0x51f2f7), _0xd2dc14.restore();
      }
    },
    'drawObject': function (_0x975542, _0x17a99f) {
      var _0x8826ae = ig.system.context,
        _0x522550 = ig.hexToRgb(this.rectColor);
      this.drawAsRect && (_0x8826ae.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x522550.r + ',' + _0x522550.g + ',' + _0x522550.b + ',' + this.alpha + ')' : _0x522550.hex, _0x8826ae.fillRect(_0x975542, _0x17a99f, this.width, this.height)), _0x522550 = ig.hexToRgb(this.outlineColor), this.drawAsOutline ? (_0x8826ae.lineWidth = this.outlineWidth, _0x8826ae.strokeStyle = 0x1 > this.alpha ? 'rgba(' + _0x522550.r + ',' + _0x522550.g + ',' + _0x522550.b + ',' + this.alpha + ')' : _0x522550.hex, _0x8826ae.strokeRect(_0x975542, _0x17a99f, this.width, this.height)) : null != this.currentAnim && (this.currentAnim.alpha = this.alpha, this.currentAnim.draw(_0x975542, _0x17a99f));
    },
    'update': function () {
      ig.game.entities && this.parent();
      if (this.inputEnabled && this.isFinishEntering && this.visible && 0.01 < this.alpha) {
        var _0x591718 = !0x1;
        this.hasTouchInside = !0x1;
        for (var _0xa620cb = 0x0; _0xa620cb < ig.multitouchInput.touches.length; _0xa620cb++) {
          var _0x591718 = !0x0,
            _0x406e1a = ig.multitouchInput.touches[_0xa620cb];
          this.processInput(_0x406e1a.x, _0x406e1a.y);
        }
        for (_0xa620cb = 0x0; _0xa620cb < ig.AchievementTouch.touches.length; _0xa620cb++) _0x591718 = !0x0, _0x406e1a = ig.AchievementTouch.touches[_0xa620cb], this.processInput(_0x406e1a.x, _0x406e1a.y);
        !_0x591718 && ig.input.state('click') && (_0xa620cb = ig.AchievementTouch.mouseX, _0x406e1a = ig.AchievementTouch.mouseY, 0x0 != _0xa620cb && 0x0 != _0x406e1a && (this.processInput(_0xa620cb, _0x406e1a), _0x591718 = !0x0)), _0x591718 ? this.hasTouchInside || (this.isClicking = !0x1) : (this.isClicking && (this.onInputUp.dispatch(this), this.onClicked.dispatch(this)), this.isClicking = !0x1);
      }
      -0x3e7 != this.timedLife && this.isFinishEntering && (this.timedLife -= ig.system.tick, 0x0 >= this.timedLife && (this.timedLife = -0x3e7, this.exit()));
    },
    'processInput': function (_0x2251d9, _0x4ec75f) {
      this.isInsideBounds(_0x2251d9, _0x4ec75f) && (this.hasTouchInside = !0x0, this.isClicking || (this.isClicking = !0x0, this.onInputDown.dispatch(this)));
    },
    'isInsideBounds': function (_0x24be95, _0x5a66d9) {
      var _0x1bc7f7 = this.scaleX * this.width,
        _0x5e5006 = this.scaleY * this.height;
      return this.boundLeft = this.pos.x - _0x1bc7f7 * this.anchorX, this.boundTop = this.pos.y - _0x5e5006 * this.anchorY, this.boundRight = this.boundLeft + _0x1bc7f7, this.boundBottom = this.boundTop + _0x5e5006, this.boundLeft > this.boundRight && (_0x1bc7f7 = this.boundLeft, this.boundLeft = this.boundRight, this.boundRight = _0x1bc7f7), this.boundTop > this.boundBottom && (_0x1bc7f7 = this.boundTop, this.boundTop = this.boundBottom, this.boundBottom = _0x1bc7f7), _0x24be95 < this.boundLeft || _0x5a66d9 < this.boundTop || _0x24be95 > this.boundRight || _0x5a66d9 > this.boundBottom ? !0x1 : !0x0;
    },
    'getBounds': function () {
      this._bounds || (this._bounds = {});
      var _0x19feb5 = this._bounds,
        _0x599926 = this.scaleX * this.width,
        _0x1a81d1 = this.scaleY * this.height;
      return _0x19feb5.left = this.pos.x - _0x599926 * this.anchorX, _0x19feb5.top = this.pos.y - _0x1a81d1 * this.anchorY, _0x19feb5.right = _0x19feb5.left + _0x599926, _0x19feb5.bottom = _0x19feb5.top + _0x1a81d1, _0x19feb5.width = Math.abs(_0x599926), _0x19feb5.height = Math.abs(_0x1a81d1), _0x19feb5.left > _0x19feb5.right && (_0x599926 = _0x19feb5.left, _0x19feb5.left = _0x19feb5.right, _0x19feb5.right = _0x599926), _0x19feb5.top > _0x19feb5.bottom && (_0x599926 = _0x19feb5.top, _0x19feb5.top = _0x19feb5.bottom, _0x19feb5.bottom = _0x599926), _0x19feb5.x = _0x19feb5.left, _0x19feb5.y = _0x19feb5.top, _0x19feb5;
    },
    'isCollidingWith': function (_0x5de76a) {
      var _0x539645 = this.getBounds();
      return _0x5de76a = _0x5de76a.getBounds(), _0x539645.right < _0x5de76a.left || _0x539645.left > _0x5de76a.right || _0x539645.bottom < _0x5de76a.top || _0x539645.top > _0x5de76a.bottom ? !0x1 : !0x0;
    },
    'shakeValue': 0x0,
    'shakeReductionMultiplier': 0x0,
    'shake': function (_0x8f3c14, _0x5003e1) {
      _0x8f3c14 || (_0x8f3c14 = 0x5), _0x5003e1 || (_0x5003e1 = 0xa), this.shakeValue = _0x8f3c14, this.shakeReductionMultiplier = _0x5003e1;
    },
    'fadeIn': function () {
      var _0x528b37 = this.alpha;
      this.alpha = 0x0, this.tween({
        'alpha': _0x528b37
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'fadeOut': function () {
      this.tween({
        'alpha': 0x0
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'popupIn': function (_0x33656d) {
      var _0x391ba0 = this.alpha,
        _0x42e438 = this.pos.x,
        _0x2f2429 = this.pos.y;
      this.pos.y += 0x32, this.alpha = 0x0, this.tween({
        'alpha': _0x391ba0,
        'pos': {
          'x': _0x42e438,
          'y': _0x2f2429
        }
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': _0x33656d
      }).start(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.popup]);
    },
    'popupOut': function (_0x36eb3e) {
      this.tween({
        'alpha': 0x0,
        'pos': {
          'x': this.pos.x,
          'y': this.pos.y + 0x32
        }
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': _0x36eb3e
      }).start(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.popup]);
    },
    'alpha0': function () {
      this.alpha = 0x0;
    },
    'alpha1': function () {
      this.alpha = 0x1;
    },
    'checkKill': function () {
      this.killOnExit && this.kill();
    }
  }), ig.AchievementTextRenderer = ig.Class.extend({
    'text': '',
    'font': "48px Arial",
    'color': '#000000',
    'alpha': 0x1,
    'align': 'start',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'lineSpacing': 0x1,
    'valign': 'default',
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0x1,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    '_previousText': '',
    '_multiline': !0x1,
    '_lines': [],
    '_lineHeightInPixel': 0x0,
    'init': function () {},
    'draw': function (_0x187486, _0x46906c) {
      void 0x0 === _0x187486 && (_0x187486 = 0x0), void 0x0 === _0x46906c && (_0x46906c = 0x0), this.enableShadow && this.drawText(_0x187486 + this.shadowOffsetX, _0x46906c + this.shadowOffsetY, this.shadowAlpha * this.alpha, this.shadowColor, this.shadowColor), this.drawText(_0x187486, _0x46906c, this.alpha, this.color, this.outlineColor);
    },
    'drawText': function (_0x10b5ea, _0x92358c, _0x133c83, _0x5e8dad, _0x2450c7) {
      if (0x0 < this.text.length) {
        this._previousTextString != this.text && (this._previousTextString = this.text, this._lines = this.text.split(/\r?\n/), this._multiline = 0x1 < this._lines.length ? !0x0 : !0x1, this._lineHeightInPixel = parseInt(this.font.split('px')[0x0].split(" ").pop()) * this.lineSpacing, isNaN(this._lineHeightInPixel) && console.error("'" + this.font + "' is a wrong font string format, error when rendering " + this.text));
        var _0x175762 = ig.system.context;
        _0x175762.save(), _0x175762.font = this.font, _0x175762.textAlign = this.align, _0x175762.lineWidth = 0x2 * this.outlineWeight, _0x175762.lineCap = this.outlineCap, _0x175762.lineJoin = this.outlineJoin, _0x175762.miterLimit = 0x2 * this.outlineWeight, 0x1 > _0x133c83 ? (_0x5e8dad = ig.hexToRgb(_0x5e8dad), _0x175762.fillStyle = 'rgba(' + _0x5e8dad.r + ',' + _0x5e8dad.g + ',' + _0x5e8dad.b + ',' + _0x133c83 + ')', _0x5e8dad = ig.hexToRgb(_0x2450c7), _0x175762.strokeStyle = 'rgba(' + _0x5e8dad.r + ',' + _0x5e8dad.g + ',' + _0x5e8dad.b + ',' + _0x133c83 + ')') : (_0x175762.fillStyle = _0x5e8dad, _0x175762.strokeStyle = _0x2450c7), _0x10b5ea += this.offsetX, _0x133c83 = _0x92358c + this.offsetY;
        if (this._multiline) {
          _0x92358c = _0x133c83, 'center' == this.valign && (_0x92358c = _0x133c83 - (this._lines.length - 0x1) * this._lineHeightInPixel / 0x2);
          for (_0x133c83 = 0x0; _0x133c83 < this._lines.length; _0x133c83++) _0x2450c7 = this._lines[_0x133c83], 0x0 < this.outlineWeight && _0x175762.strokeText(_0x2450c7, _0x10b5ea, _0x92358c + _0x133c83 * this._lineHeightInPixel), _0x175762.fillText(_0x2450c7, _0x10b5ea, _0x92358c + _0x133c83 * this._lineHeightInPixel);
        } else 'center' == this.valign && (_0x133c83 += this._lineHeightInPixel / 0x2), 0x0 < this.outlineWeight && _0x175762.strokeText(this.text, _0x10b5ea, _0x133c83), _0x175762.fillText(this.text, _0x10b5ea, _0x133c83);
        _0x175762.restore();
      }
    },
    'measureTextWidth': function () {
      var _0x11683e = ig.system.context;
      _0x11683e.save(), _0x11683e.font = this.font, _0x11683e.textAlign = 'left';
      var _0x478c06 = _0x11683e.measureText(this.text);
      return _0x11683e.restore(), _0x478c06.width;
    }
  }), ig.AchievementTextField = ig.AchievementGameObject.extend({
    'text': '',
    'font': "48px Arial",
    'color': '#FFFFFF',
    'align': 'start',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'lineSpacing': 0x1,
    'valign': 'top',
    'textRenderer': null,
    'forceDraw': !0x0,
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0.4,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    'zIndex': 0x1b58,
    'init': function (_0x44cf03, _0x4f9139, _0x28a78f) {
      this.parent(_0x44cf03, _0x4f9139, _0x28a78f), this.textRenderer = new ig.AchievementTextRenderer();
    },
    'drawObject': function (_0x5585f1, _0x5eef2e) {
      this.parent(_0x5585f1, _0x5eef2e), this.visible && (this.applyProperties(), this.textRenderer.draw(_0x5585f1, _0x5eef2e));
    },
    'applyProperties': function () {
      this.textRenderer.text = this.text, this.textRenderer.font = this.font, this.textRenderer.color = this.color, this.textRenderer.alpha = this.alpha, this.textRenderer.align = this.align, this.textRenderer.offsetX = this.offsetX, this.textRenderer.offsetY = this.offsetY, this.textRenderer.lineSpacing = this.lineSpacing, this.textRenderer.valign = this.valign, this.textRenderer.enableShadow = this.enableShadow, this.textRenderer.shadowAlpha = this.shadowAlpha, this.textRenderer.shadowColor = this.shadowColor, this.textRenderer.shadowOffsetX = this.shadowOffsetX, this.textRenderer.shadowOffsetY = this.shadowOffsetY, this.textRenderer.outlineWeight = this.outlineWeight, this.textRenderer.outlineColor = this.outlineColor, this.textRenderer.outlineCap = this.outlineCap, this.textRenderer.outlineJoin = this.outlineJoin;
    },
    'getTextWidth': function () {
      return this.applyProperties(), this.textRenderer.measureTextWidth();
    }
  }), ig.AchievementSimpleButton = ig.AchievementGameObject.extend({
    'originalX': 0x0,
    'originalY': 0x0,
    'transitionInDelay': 0x0,
    'zIndex': 0x1b58,
    'text': '',
    'font': "48px Arial",
    'textColor': '#FFFFFF',
    'align': 'center',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'anchorX': 0.5,
    'anchorY': 0.5,
    'lineSpacing': 0x1,
    'valign': 'center',
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0.4,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    'normalScale': 0x1,
    'usePressedTween': !0x0,
    'textRenderer': null,
    'forceDraw': !0x0,
    'prevText': '',
    'init': function (_0x42318c, _0x54ab00, _0x30e132) {
      this.parent(_0x42318c, _0x54ab00, _0x30e132), this.textRenderer = new ig.AchievementTextRenderer();
    },
    'update': function () {
      this.parent();
      if (this.usePressedTween && this.visible) {
        var _0x3954e7 = 0.9 * this.normalScale,
          _0x9e7c6d = 0.9 * this.normalScale,
          _0x3954e7 = this.hasTouchInside ? 0.9 * this.normalScale : this.normalScale,
          _0x9e7c6d = 0x0 > this.scaleX ? -0x1 * _0x3954e7 : _0x3954e7,
          _0x3954e7 = 0x0 > this.scaleY ? -0x1 * _0x3954e7 : _0x3954e7;
        this.scaleX += (_0x9e7c6d - this.scaleX) / 0x3, this.scaleY += (_0x3954e7 - this.scaleY) / 0x3;
      }
    },
    'drawObject': function (_0x15dbb3, _0x29e94a) {
      this.parent(_0x15dbb3, _0x29e94a);
      if (this.visible) {
        this.textRenderer.text = this.text, this.textRenderer.font = this.font, this.textRenderer.color = this.textColor, this.textRenderer.alpha = this.alpha, this.textRenderer.align = this.align, this.textRenderer.offsetX = this.offsetX, this.textRenderer.offsetY = this.offsetY, this.textRenderer.lineSpacing = this.lineSpacing, this.textRenderer.valign = this.valign, this.textRenderer.enableShadow = this.enableShadow, this.textRenderer.shadowAlpha = this.shadowAlpha, this.textRenderer.shadowColor = this.shadowColor, this.textRenderer.shadowOffsetX = this.shadowOffsetX, this.textRenderer.shadowOffsetY = this.shadowOffsetY, this.textRenderer.outlineWeight = this.outlineWeight, this.textRenderer.outlineColor = this.outlineColor, this.textRenderer.outlineCap = this.outlineCap, this.textRenderer.outlineJoin = this.outlineJoin;
        if (this.prevText != this.text) {
          this.prevText = this.text;
          var _0x3b7cd4 = ig.system.context;
          _0x3b7cd4.save(), _0x3b7cd4.font = this.font;
          var _0x3ecf5d = _0x3b7cd4.measureText(this.text);
          this.centerYOffset = parseInt(this.font.split('px')[0x0].split(" ").pop()) / 0x2 - _0x3ecf5d.actualBoundingBoxAscent, _0x3b7cd4.restore();
        }
        this.textRenderer.draw(_0x15dbb3 + this.width / 0x2, _0x29e94a + this.height / 0x2 + this.centerYOffset);
      }
    },
    'onFinishEntering': function () {
      this.inputEnabled = !0x0;
    }
  }), ig.AchievementParticleIn = ig.AchievementGameObject.extend({
    'zIndex': 0xf423f,
    'forceDraw': !0x0,
    'targetX': 0x0,
    'targetY': 0x0,
    'hasSpawned': !0x1,
    'fadeAway': !0x1,
    'fillColor': '#ffffff',
    'init': function (_0xe0d36f, _0x3ba936, _0x4c374d) {
      this.parent(_0xe0d36f + 0x2 * ig.AchievementRandom.float(-0xb4, 0xb4), _0x3ba936 + 0x2 * ig.AchievementRandom.float(-0xb4, 0xb4), _0x4c374d), this.targetX = _0xe0d36f, this.targetY = _0x3ba936, this.alpha = 0x0, this.width = this.height = ig.AchievementRandom.int(0x14, 0x1e);
    },
    'update': function () {
      this.parent(), 0x0 < this.delay ? this.delay -= ig.system.tick : (this.hasSpawned = !0x0, ig.responsive ? (this.anchoredPositionX += (this.targetX - this.anchoredPositionX) / 0xa, this.anchoredPositionY += (this.targetY - this.anchoredPositionY) / 0xa, 0x64 > Math.abs(this.anchoredPositionX - this.targetX) && 0x64 > Math.abs(this.anchoredPositionY - this.targetY) && (this.fadeAway = !0x0)) : (this.pos.x += (this.targetX - this.pos.x) / 0xa, this.pos.y += (this.targetY - this.pos.y) / 0xa, 0x64 > Math.abs(this.pos.x - this.targetX) && 0x64 > Math.abs(this.pos.y - this.targetY) && (this.fadeAway = !0x0)), this.fadeAway ? (this.alpha -= 0x5 * ig.system.tick, 0x0 >= this.alpha && this.kill()) : this.alpha = 0.5 > this.alpha ? this.alpha + 0xa * ig.system.tick : 0.5);
    },
    'drawObject': function (_0x20bb94, _0x248c98) {
      this.parent(_0x20bb94, _0x248c98);
      if (this.hasSpawned) {
        var _0x5baad0 = ig.system.context,
          _0x12f151 = ig.hexToRgb(this.fillColor);
        _0x5baad0.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x12f151.r + ',' + _0x12f151.g + ',' + _0x12f151.b + ',' + this.alpha + ')' : _0x12f151.hex, _0x5baad0.beginPath(), _0x5baad0.arc(_0x20bb94, _0x248c98, this.width, 0x0, 0x2 * Math.PI), _0x5baad0.fill(), _0x5baad0.closePath();
      }
    }
  }), ig.AchievementParticleOut = ig.AchievementGameObject.extend({
    'zIndex': 0xf423f,
    'forceDraw': !0x0,
    'targetX': 0x0,
    'targetY': 0x0,
    'hasSpawned': !0x1,
    'fadeAway': !0x1,
    'fillColor': '#ffffff',
    'init': function (_0x49ae41, _0x433baf, _0x250910) {
      var _0x20c80c = 0x2 * Math.random() * Math.PI,
        _0x1c09bb = 1.5 * Math.cos(_0x20c80c) * ig.AchievementRandom.int(0x5a, 0x168),
        _0x20c80c = 1.5 * Math.sin(_0x20c80c) * ig.AchievementRandom.int(0x5a, 0x168);
      this.parent(_0x49ae41 + _0x1c09bb / 0x2, _0x433baf + _0x20c80c / 0x2, _0x250910), this.targetX = _0x49ae41 + _0x1c09bb, this.targetY = _0x433baf + _0x20c80c, this.alpha = 0.5, this.width = this.height = ig.AchievementRandom.int(0x14, 0x1e);
    },
    'update': function () {
      this.parent();
      if (0x0 < this.delay) this.delay -= ig.system.tick;else {
        this.hasSpawned = !0x0;
        if (ig.responsive) {
          if (this.anchoredPositionX += (this.targetX - this.anchoredPositionX) / 0xa, this.anchoredPositionY += (this.targetY - this.anchoredPositionY) / 0xa, 0xa < Math.abs(this.anchoredPositionX - this.targetX) || 0xa < Math.abs(this.anchoredPositionY - this.targetY)) this.fadeAway = !0x0;
        } else {
          if (this.pos.x += (this.targetX - this.pos.x) / 0xa, this.pos.y += (this.targetY - this.pos.y) / 0xa, 0xa < Math.abs(this.pos.x - this.targetX) || 0xa < Math.abs(this.pos.y - this.targetY)) this.fadeAway = !0x0;
        }
        this.fadeAway && (this.alpha -= ig.system.tick, 0x0 >= this.alpha && this.kill());
      }
    },
    'drawObject': function (_0x36b584, _0xe0a501) {
      this.parent(_0x36b584, _0xe0a501);
      if (this.hasSpawned) {
        var _0x1967c9 = ig.system.context,
          _0xcfbff2 = ig.hexToRgb(this.fillColor);
        _0x1967c9.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0xcfbff2.r + ',' + _0xcfbff2.g + ',' + _0xcfbff2.b + ',' + this.alpha + ')' : _0xcfbff2.hex, _0x1967c9.beginPath(), _0x1967c9.arc(_0x36b584, _0xe0a501, this.width, 0x0, 0x2 * Math.PI), _0x1967c9.fill(), _0x1967c9.closePath();
      }
    }
  }), ig.hexToRgb = function (_0x1e2284) {
    ig.hexToRgbTable || (ig.hexToRgbTable = {});
    if (ig.hexToRgbTable[_0x1e2284]) return ig.hexToRgbTable[_0x1e2284];
    var _0x186593 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(_0x1e2284);
    if (_0x186593) return ig.hexToRgbTable[_0x1e2284] = {
      'r': parseInt(_0x186593[0x1], 0x10),
      'g': parseInt(_0x186593[0x2], 0x10),
      'b': parseInt(_0x186593[0x3], 0x10),
      'hex': _0x1e2284
    }, ig.hexToRgbTable[_0x1e2284];
    return console.log("cannot convert to rgb from hex :", _0x1e2284), null;
  }, ig.AchievementSignal = ig.Class.extend({
    'signalListeners': null,
    'id': 0x0,
    'init': function () {
      this.id = ++ig.AchievementSignal._lastId, this.signalListeners = [];
    },
    'addOnce': function (_0x11a7ab, _0x3d2dc1) {
      this.signalListeners.push({
        'signalListener': _0x11a7ab,
        'signalContext': _0x3d2dc1,
        'isOnce': !0x0
      });
    },
    'add': function (_0x17e970, _0x76edf4) {
      this.signalListeners.push({
        'signalListener': _0x17e970,
        'signalContext': _0x76edf4,
        'isOnce': !0x1
      });
    },
    'dispatch': function () {
      for (var _0x5c8d31 = 0x0; _0x5c8d31 < this.signalListeners.length;) {
        var _0x24bfc9 = this.signalListeners[_0x5c8d31];
        _0x24bfc9.signalListener.apply(_0x24bfc9.signalContext, arguments), _0x24bfc9.isOnce ? this.signalListeners.splice(_0x5c8d31, 0x1) : _0x5c8d31++;
      }
    },
    'clear': function () {
      this.signalListeners = [];
    }
  }), ig.AchievementSignal._lastId = 0x0, ig.AchievementTouch = {
    'hasInitialized': !0x1,
    'touches': [],
    'mouseX': 0x0,
    'mouseY': 0x0,
    'init': function () {
      ig.ua.touchDevice && (window.navigator.msPointerEnabled && (ig.system.canvas.addEventListener('MSPointerDown', this.touchDown.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerUp', this.touchUp.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerMove', this.touchMove.bind(this), !0x1), ig.system.canvas.style.msContentZooming = 'none', ig.system.canvas.style.msTouchAction = 'none'), ig.system.canvas.addEventListener('touchstart', this.touchDown.bind(this), !0x1), ig.system.canvas.addEventListener('touchend', this.touchUp.bind(this), !0x1), ig.system.canvas.addEventListener('touchmove', this.touchMove.bind(this), !0x1)), ig.system.canvas.addEventListener('mousemove', this.mouseMove.bind(this), !0x1), this.hasInitialized = !0x0;
    },
    'mouseMove': function (_0xc1441d) {
      var _0x4f47bd = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x56c846 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
      this.scaleX = ig.system.scale * (_0x4f47bd / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x56c846 / ig.system.realHeight), _0x4f47bd = {
        'left': 0x0,
        'top': 0x0
      }, ig.system.canvas.getBoundingClientRect && (_0x4f47bd = ig.system.canvas.getBoundingClientRect()), this.mouseX = (_0xc1441d.clientX - _0x4f47bd.left) / this.scaleX, this.mouseY = (_0xc1441d.clientY - _0x4f47bd.top) / this.scaleY;
    },
    'touchDown': function (_0xa3f114) {
      this.processTouch(_0xa3f114.touches);
    },
    'touchUp': function (_0x46bc02) {
      this.processTouch(_0x46bc02.touches);
    },
    'touchMove': function (_0x2d69ca) {
      this.processTouch(_0x2d69ca.touches);
    },
    'processTouch': function (_0x5ca6c1) {
      var _0x28ee6a = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x95c38b = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
      this.scaleX = ig.system.scale * (_0x28ee6a / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x95c38b / ig.system.realHeight), _0x28ee6a = {
        'left': 0x0,
        'top': 0x0
      }, ig.system.canvas.getBoundingClientRect && (_0x28ee6a = ig.system.canvas.getBoundingClientRect()), this.touches = [];
      for (_0x95c38b = 0x0; _0x95c38b < _0x5ca6c1.length; _0x95c38b++) {
        var _0x479aea = _0x5ca6c1[_0x95c38b];
        this.touches.push({
          'x': (_0x479aea.clientX - _0x28ee6a.left) / this.scaleX,
          'y': (_0x479aea.clientY - _0x28ee6a.top) / this.scaleY
        });
      }
    }
  }, ig.Entity.prototype.delayedCall = function (_0x414891, _0x482947, _0xc9042f) {
    return void 0x0 === _0xc9042f && (_0xc9042f = !0x0), _0x414891 = new ig.Tween(this, {}, _0x414891, {
      'onComplete': _0x482947
    }), this.tweens.push(_0x414891), _0xc9042f && _0x414891.start(), _0x414891;
  }, ig.AchievementRandom = {
    'chance': function (_0x58548f) {
      return Math.random() < _0x58548f;
    },
    'bool': function () {
      return 0.5 > Math.random();
    },
    'int': function (_0x2a24f2, _0x77e8de) {
      return _0x2a24f2 + Math.floor((_0x77e8de - _0x2a24f2 + 0x1) * Math.random());
    },
    'float': function (_0x56c7c2, _0x2accdf) {
      return _0x56c7c2 + (_0x2accdf - _0x56c7c2) * Math.random();
    },
    'string': function (_0x2478b8, _0x45f9c2) {
      void 0x0 === _0x45f9c2 && (_0x45f9c2 = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');
      for (var _0x17f2e7 = '', _0x36f0c0 = 0x0; _0x36f0c0 < _0x2478b8; _0x36f0c0++) _0x17f2e7 += _0x45f9c2.charAt(Random.int(0x0, _0x45f9c2.length - 0x1));
      return _0x17f2e7;
    },
    'fromArray': function (_0x61a318) {
      return null != _0x61a318 && 0x0 < _0x61a318.length ? _0x61a318[this.int(0x0, _0x61a318.length - 0x1)] : null;
    },
    'shuffle': function (_0x3e71ec) {
      if (null != _0x3e71ec) for (var _0x4193c2 = 0x0; _0x4193c2 < _0x3e71ec.length; _0x4193c2++) {
        var _0x2eca9c = this.int(0x0, _0x3e71ec.length - 0x1),
          _0x5d5275 = _0x3e71ec[_0x4193c2];
        _0x3e71ec[_0x4193c2] = _0x3e71ec[_0x2eca9c], _0x3e71ec[_0x2eca9c] = _0x5d5275;
      }
      return _0x3e71ec;
    }
  };
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-rounded-rect').requires('plugins.achievement.achievement-game-object').defines(function () {
  ig.AchievementRoundedRect = {
    'cache': {},
    'drawShadowedRoundedRect': function (_0x2cce05, _0x2d8152, _0x5222ce, _0x124241, _0x5d1674, _0x173516, _0x2fea7c, _0x4dcd64, _0x33bc33) {
      0x0 != _0x124241 && 0x0 != _0x5d1674 && (_0x2fea7c || (_0x2fea7c = '#ffffff'), _0x4dcd64 || (_0x4dcd64 = '#666666'), _0x173516 || (_0x173516 = 0xa), _0x124241 = this.getShadowedRoundedRectCache(_0x124241, _0x5d1674, _0x173516, _0x2fea7c, _0x4dcd64, _0x33bc33), _0x2cce05.drawImage(_0x124241, _0x2d8152, _0x5222ce));
    },
    'getShadowedRoundedRectCache': function (_0x28c2a8, _0x2398fc, _0x38907a, _0x3e6004, _0x147dc7, _0x40d773) {
      var _0x234469 = 'canvasShadowed|' + _0x28c2a8 + '|' + _0x2398fc + '|' + _0x38907a + '|' + _0x3e6004 + '|' + _0x147dc7 + '|' + _0x40d773;
      if (this.cache[_0x234469]) return this.cache[_0x234469];
      var _0x5ac003 = ig.$new('canvas');
      _0x5ac003.width = _0x28c2a8, _0x5ac003.height = _0x2398fc;
      var _0x233c64 = _0x5ac003.getContext('2d');
      return this.drawRoundedRect(_0x233c64, 0x0, 0x0, _0x28c2a8, _0x2398fc, _0x38907a, _0x147dc7), this.drawRoundedRect(_0x233c64, 0x0, 0x0, _0x28c2a8, _0x2398fc - _0x40d773, _0x38907a, _0x3e6004), this.cache[_0x234469] = _0x5ac003;
    },
    'drawRoundedRect': function (_0x4d64e9, _0x3e767a, _0x3f5c79, _0x37c3d3, _0x3cc555, _0x2fdd18, _0x3abfd3) {
      0x0 != _0x37c3d3 && 0x0 != _0x3cc555 && (_0x3abfd3 || (_0x3abfd3 = '#ffffff'), _0x37c3d3 = Math.round(_0x37c3d3), _0x3cc555 = Math.round(_0x3cc555), _0x2fdd18 = Math.round(_0x2fdd18), _0x2fdd18 = this.getCache(_0x37c3d3, _0x3cc555, _0x2fdd18, _0x3abfd3), _0x4d64e9.drawImage(_0x2fdd18, _0x3e767a, _0x3f5c79, _0x37c3d3, _0x3cc555));
    },
    'getCache': function (_0x2c94dd, _0x40eb8f, _0x2e0538, _0x44e2ab) {
      var _0x4bad9b = 'canvas|' + _0x2c94dd + '|' + _0x40eb8f + '|' + _0x2e0538 + '|' + _0x44e2ab;
      if (this.cache[_0x4bad9b]) return this.cache[_0x4bad9b];
      var _0x542508 = ig.$new('canvas');
      _0x542508.width = _0x2c94dd, _0x542508.height = _0x40eb8f;
      var _0xf99da8 = _0x542508.getContext('2d');
      return _0xf99da8.fillStyle = _0x44e2ab, _0xf99da8.fillRect(_0x2e0538, 0x0, _0x2c94dd - 0x2 * _0x2e0538, _0x40eb8f), _0xf99da8.fillRect(0x0, _0x2e0538, _0x2c94dd, _0x40eb8f - 0x2 * _0x2e0538), _0xf99da8.beginPath(), _0xf99da8.arc(_0x2e0538, _0x2e0538, _0x2e0538, 0x0, 0x2 * Math.PI), _0xf99da8.fill(), _0xf99da8.closePath(), _0xf99da8.beginPath(), _0xf99da8.arc(_0x2c94dd - _0x2e0538, _0x2e0538, _0x2e0538, 0x0, 0x2 * Math.PI), _0xf99da8.fill(), _0xf99da8.closePath(), _0xf99da8.beginPath(), _0xf99da8.arc(_0x2e0538, _0x40eb8f - _0x2e0538, _0x2e0538, 0x0, 0x2 * Math.PI), _0xf99da8.fill(), _0xf99da8.closePath(), _0xf99da8.beginPath(), _0xf99da8.arc(_0x2c94dd - _0x2e0538, _0x40eb8f - _0x2e0538, _0x2e0538, 0x0, 0x2 * Math.PI), _0xf99da8.fill(), _0xf99da8.closePath(), this.cache[_0x4bad9b] = _0x542508;
    }
  }, CanvasRenderingContext2D.prototype.roundRect = function (_0x5e7e74, _0x3cd95f, _0x46da21, _0xfb433b, _0x231faa, _0x4813f6, _0x4b5f36) {
    var _0xa125e3 = {
      'upperLeft': 0x0,
      'upperRight': 0x0,
      'lowerLeft': 0x0,
      'lowerRight': 0x0
    };
    'undefined' == typeof _0x4b5f36 && (_0x4b5f36 = !0x0);
    if ('object' === typeof _0x231faa) {
      for (var _0xa0036e in _0x231faa) _0xa125e3[_0xa0036e] = _0x231faa[_0xa0036e];
    } else {
      if (!isNaN(_0x231faa)) {
        for (_0xa0036e in _0xa125e3) _0xa125e3[_0xa0036e] = _0x231faa;
      }
    }
    this.beginPath(), this.moveTo(_0x5e7e74 + _0xa125e3.upperLeft, _0x3cd95f), this.lineTo(_0x5e7e74 + _0x46da21 - _0xa125e3.upperRight, _0x3cd95f), this.quadraticCurveTo(_0x5e7e74 + _0x46da21, _0x3cd95f, _0x5e7e74 + _0x46da21, _0x3cd95f + _0xa125e3.upperRight), this.lineTo(_0x5e7e74 + _0x46da21, _0x3cd95f + _0xfb433b - _0xa125e3.lowerRight), this.quadraticCurveTo(_0x5e7e74 + _0x46da21, _0x3cd95f + _0xfb433b, _0x5e7e74 + _0x46da21 - _0xa125e3.lowerRight, _0x3cd95f + _0xfb433b), this.lineTo(_0x5e7e74 + _0xa125e3.lowerLeft, _0x3cd95f + _0xfb433b), this.quadraticCurveTo(_0x5e7e74, _0x3cd95f + _0xfb433b, _0x5e7e74, _0x3cd95f + _0xfb433b - _0xa125e3.lowerLeft), this.lineTo(_0x5e7e74, _0x3cd95f + _0xa125e3.upperLeft), this.quadraticCurveTo(_0x5e7e74, _0x3cd95f, _0x5e7e74 + _0xa125e3.upperLeft, _0x3cd95f), this.closePath(), _0x4b5f36 && this.stroke(), _0x4813f6 && this.fill();
  };
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-rounded-button').requires('plugins.achievement.achievement-game-object').defines(function () {
  ig.AchievementRoundedButton = ig.AchievementSimpleButton.extend({
    'zIndex': 0x1869f,
    'entryType': 'fadeIn',
    'exitType': 'fadeOut',
    'radius': 0xa,
    'color': '#555555',
    'shadowColor': '#222222',
    'shadowDistance': 0x5,
    'symbol': 'none',
    'symbolColor': '#ffffff',
    'symbolSize': 0x1e,
    'closeBtnSprite': new ig.Image('media/graphics/ui/common/btn-close.png'),
    'leftBtnSprite': new ig.Image('media/graphics/ui/common/btn-left.png'),
    'rightBtnSprite': new ig.Image('media/graphics/ui/common/btn-right.png'),
    'init': function (_0x3e77b9, _0xdaa063, _0xef8ce0) {
      this.parent(_0x3e77b9, _0xdaa063, _0xef8ce0);
    },
    'exit': function () {
      this.parent();
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent();
    },
    'drawObject': function (_0x5f0dee, _0x3fee1) {
      var _0x31c843 = ig.system.context;
      _0x31c843.save(), 'exit' == this.symbol ? this.closeBtnSprite.draw(_0x5f0dee, _0x3fee1) : 'next' == this.symbol ? this.rightBtnSprite.draw(_0x5f0dee, _0x3fee1) : 'prev' == this.symbol ? this.leftBtnSprite.draw(_0x5f0dee, _0x3fee1) : 0x0 < this.shadowDistance ? ig.AchievementRoundedRect.drawShadowedRoundedRect(_0x31c843, _0x5f0dee, _0x3fee1, this.width, this.height, this.radius, this.color, this.shadowColor, this.shadowDistance) : ig.AchievementRoundedRect.drawRoundedRect(_0x31c843, _0x5f0dee, _0x3fee1, this.width, this.height, this.radius, this.color), _0x31c843.globalAlpha = 0x1, _0x31c843.restore(), this.parent(_0x5f0dee, _0x3fee1);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-item').requires('plugins.achievement.achievement-game-object').defines(function () {
  ig.AchievementItem = ig.AchievementGameObject.extend({
    'zIndex': 0x15f8f,
    'entryType': 'fadeIn',
    'exitType': 'fadeOut',
    'entryDuration': 0.2,
    'pagingOffsetX': 0x0,
    'pagingOffsetY': 0x0,
    'pagingAlpha': 0x0,
    'isCompleted': !0x1,
    'isClaimable': !0x1,
    'inputEnabled': !0x0,
    'completedCenterYOffset': -0x270f,
    'claimCenterYOffset': -0x270f,
    'panelBg': new ig.Image('media/graphics/ui/achievement/panel-bg.png'),
    'btnImage': new ig.Image('media/graphics/ui/achievement/btn-claim.png'),
    'init': function (_0x21ca40, _0x3bf67d, _0x9053d7) {
      this.parent(_0x21ca40, _0x3bf67d, _0x9053d7), this.originalX = _0x21ca40, this.originalY = _0x3bf67d, this.forceDraw = !0x0, this.data = _0x21ca40 = ig.Achievement.getAchievementData(_0x9053d7.id), this.iconImage = _0x21ca40.icon, this.limitSpaceWidth = ig.Achievement.popup.width, this.limitSpaceHeight = ig.Achievement.popup.height, this.nameTextRenderer = new ig.AchievementTextRenderer(), this.nameTextRenderer.font = ig.Achievement.popup.item.name.font, this.nameTextRenderer.color = ig.Achievement.popup.item.name.color, this.nameTextRenderer.align = 'left', this.nameTextRenderer.text = _0x21ca40.name, this.descriptionTextRenderer = new ig.AchievementTextRenderer(), this.descriptionTextRenderer.font = ig.Achievement.popup.item.description.font, this.descriptionTextRenderer.color = ig.Achievement.popup.item.description.color, this.descriptionTextRenderer.align = 'left', this.descriptionTextRenderer.text = _0x21ca40.description, this.rewardTextRenderer = new ig.AchievementTextRenderer(), this.rewardTextRenderer.font = ig.Achievement.popup.item.reward.font, this.rewardTextRenderer.color = ig.Achievement.popup.item.reward.color, this.rewardTextRenderer.align = 'left', this.rewardTextRenderer.text = ig.Achievement.strings.reward + _0x21ca40.reward, this.progressTextRenderer = new ig.AchievementTextRenderer(), this.progressTextRenderer.font = ig.Achievement.popup.item.progress.font, this.progressTextRenderer.color = ig.Achievement.popup.item.progress.color, this.progressTextRenderer.align = 'center', this.progressTextRenderer.text = _0x21ca40.progress + " / " + _0x21ca40.goal, this.completedTextRenderer = new ig.AchievementTextRenderer(), this.completedTextRenderer.font = ig.Achievement.popup.item.completedSign.font, this.completedTextRenderer.color = ig.Achievement.popup.item.completedSign.textColor, this.completedTextRenderer.align = 'center', this.completedTextRenderer.valign = 'center', this.completedTextRenderer.text = ig.Achievement.strings.completed, this.claimTextRenderer = new ig.AchievementTextRenderer(), this.claimTextRenderer.font = ig.Achievement.popup.item.claimButton.font, this.claimTextRenderer.color = ig.Achievement.popup.item.claimButton.textColor, this.claimTextRenderer.align = 'center', this.claimTextRenderer.valign = 'center', this.claimTextRenderer.text = ig.Achievement.strings.claim, this.width = ig.Achievement.popup.item.width, this.height = ig.Achievement.popup.item.height, this.size = {
        'x': ig.Achievement.popup.item.width,
        'y': ig.Achievement.popup.item.height
      }, this.onInputDown.add(this.onClickThis, this), ig.game.sortEntitiesDeferred();
    },
    'onClickThis': function () {
      if (this.isAnyInputInsideClaimButton()) this.onClickClaim();
    },
    'onClickClaim': function () {
      if (this.isClaimable && ig.Achievement.allowClaim && !(0.5 > this.alpha)) {
        ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.claim]), this.onClaim.dispatch(this.id), ig.Achievement.claimReward(this.id);
        var _0x406a2c = 0x0,
          _0x3210d6 = 0x0;
        ig.responsive ? (_0x406a2c = this.anchoredPositionX, _0x3210d6 = this.anchoredPositionY) : (_0x406a2c = this.pos.x, _0x3210d6 = this.pos.y), _0x406a2c += ig.Achievement.popup.item.claimButton.x, _0x3210d6 += ig.Achievement.popup.item.claimButton.y, ig.game.spawnEntity(ig.AchievementRewardFx, _0x406a2c, _0x3210d6, {
          'zIndex': 0x5f5e0ff,
          'text': ig.Achievement.strings.rewardFx + this.data.reward
        }), ig.game.sortEntitiesDeferred();
      }
    },
    'exit': function () {
      this.parent();
    },
    'update': function () {
      this.pagingAlpha = this.page != this.currentPage ? this.pagingAlpha - this.pagingAlpha / 0x2 : this.pagingAlpha + (0x1 - this.pagingAlpha) / 0x5, ig.responsive ? this.anchoredPositionX += (this.originalX + this.pagingOffsetX - this.anchoredPositionX) / 0x5 : this.pos.x += (this.originalX + this.pagingOffsetX - this.pos.x) / 0x5, ig.Achievement.isAchievementAchieved(this.id) ? ig.Achievement.isAchievementClaimed(this.id) ? (this.isClaimable = !0x1, this.isCompleted = !0x0) : (this.isClaimable = !0x0, this.isCompleted = !0x1) : this.isCompleted = this.isClaimable = !0x1, this.parent();
    },
    'drawItem': function () {
      var _0xed584b = ig.system.context;
      _0xed584b.save(), _0xed584b.beginPath(), _0xed584b.moveTo(ig.system.width / 0x2 - this.limitSpaceWidth / 0x2, ig.system.height / 0x2 - this.limitSpaceHeight / 0x2), _0xed584b.lineTo(ig.system.width / 0x2 + this.limitSpaceWidth / 0x2, ig.system.height / 0x2 - this.limitSpaceHeight / 0x2), _0xed584b.lineTo(ig.system.width / 0x2 + this.limitSpaceWidth / 0x2, ig.system.height / 0x2 + this.limitSpaceHeight / 0x2), _0xed584b.lineTo(ig.system.width / 0x2 - this.limitSpaceWidth / 0x2, ig.system.height / 0x2 + this.limitSpaceHeight / 0x2), _0xed584b.clip(), _0xed584b.globalAlpha = this.alpha * this.pagingAlpha, _0xed584b.drawImage(this.panelBg.data, this.pos.x + ig.Achievement.popup.item.panel.offsetX, this.pos.y + ig.Achievement.popup.item.panel.offsetY);
      var _0x3e215d = ig.Achievement.popup.item.innerSpacing,
        _0x5c9a36 = ig.Achievement.popup.item.textSpacing,
        _0x3ee8ce = ig.Achievement.popup.item.height - 0x2 * _0x3e215d - _0x5c9a36 - ig.Achievement.popup.item.progress.bar.height,
        _0x31f032 = this.pos.x + _0x3e215d,
        _0x226478 = this.pos.y + _0x3e215d;
      _0xed584b.lineWidth = ig.Achievement.popup.item.progress.bar.height, _0xed584b.lineCap = 'round';
      var _0x27b897 = this.pos.y + ig.Achievement.popup.item.height - ig.Achievement.popup.item.progress.bar.height - _0x3e215d + _0xed584b.lineWidth / 0x2 + ig.Achievement.popup.item.progress.bar.offsetY;
      _0xed584b.lineWidth = 1.5 * ig.Achievement.popup.item.progress.bar.height;
      var _0x3eef57 = ig.Achievement.popup.item.width - 0x2 * _0x3e215d - _0xed584b.lineWidth / 0x2 + Math.floor(0.2 * _0xed584b.lineWidth);
      _0xed584b.strokeStyle = ig.Achievement.popup.item.progress.bar.stroke, _0xed584b.beginPath(), _0xed584b.moveTo(this.pos.x + _0x3e215d + _0xed584b.lineWidth / 0x2 - Math.floor(0.2 * _0xed584b.lineWidth), _0x27b897), _0xed584b.lineTo(this.pos.x + _0x3e215d + _0x3eef57, _0x27b897), _0xed584b.stroke(), _0xed584b.closePath(), _0xed584b.lineWidth = ig.Achievement.popup.item.progress.bar.height, _0x3eef57 = ig.Achievement.popup.item.width - 0x2 * _0x3e215d - _0xed584b.lineWidth / 0x2, _0xed584b.strokeStyle = ig.Achievement.popup.item.progress.bar.colorBg, _0xed584b.beginPath(), _0xed584b.moveTo(this.pos.x + _0x3e215d + _0xed584b.lineWidth / 0x2, _0x27b897), _0xed584b.lineTo(this.pos.x + _0x3e215d + _0x3eef57, _0x27b897), _0xed584b.stroke(), _0xed584b.closePath(), _0x3eef57 = Math.round(_0x3eef57 * this.data.progress / this.data.goal), 0x0 < this.data.progress && _0x3eef57 < _0xed584b.lineWidth / 0x2 && (_0x3eef57 = _0xed584b.lineWidth / 0x2 + 0x1), 0x0 < _0x3eef57 && (_0xed584b.beginPath(), _0xed584b.strokeStyle = ig.Achievement.popup.item.progress.bar.color, _0xed584b.moveTo(this.pos.x + _0x3e215d + _0xed584b.lineWidth / 0x2, _0x27b897), _0xed584b.lineTo(this.pos.x + _0x3e215d + _0x3eef57, _0x27b897), _0xed584b.stroke(), _0xed584b.closePath()), _0x27b897 = this.pos.x + _0x3ee8ce + 0x2 * _0x3e215d, _0x3eef57 = this.pos.y + this.getFontHeight(ig.Achievement.popup.item.name.font) + ig.Achievement.popup.item.textStartOffsetY, this.nameTextRenderer.draw(_0x27b897, _0x3eef57), _0x3eef57 += this.getFontHeight(ig.Achievement.popup.item.description.font) + _0x5c9a36, this.descriptionTextRenderer.draw(_0x27b897, _0x3eef57), _0x3eef57 += this.getFontHeight(ig.Achievement.popup.item.reward.font) + _0x5c9a36, this.rewardTextRenderer.draw(_0x27b897, _0x3eef57), _0x5c9a36 = this.getFontHeight(ig.Achievement.popup.item.progress.font), _0x27b897 = this.pos.x + ig.Achievement.popup.item.width / 0x2, _0x3eef57 = this.pos.y + ig.Achievement.popup.item.height - ig.Achievement.popup.item.progress.bar.height - _0x3e215d + _0x5c9a36 + (ig.Achievement.popup.item.progress.bar.height - _0x5c9a36) / 0x2 + ig.Achievement.popup.item.progress.textOffsetY + ig.Achievement.popup.item.progress.bar.offsetY, this.progressTextRenderer.draw(_0x27b897, _0x3eef57), this.iconImage.drawImageCtx ? this.iconImage.drawImageCtx(_0xed584b, 0x0, 0x0, this.iconImage.width, this.iconImage.height, _0x31f032, _0x226478, _0x3ee8ce, _0x3ee8ce) : _0xed584b.drawImage(this.iconImage.data, 0x0, 0x0, this.iconImage.width, this.iconImage.height, _0x31f032, _0x226478, _0x3ee8ce, _0x3ee8ce), this.isCompleted && (-0x270f == this.completedCenterYOffset && (this.completedCenterYOffset = this.calculateCenterYOffset(this.completedTextRenderer)), this.completedTextRenderer.draw(this.pos.x + ig.Achievement.popup.item.completedSign.x, this.pos.y + ig.Achievement.popup.item.completedSign.y + ig.Achievement.popup.item.completedSign.textOffsetY + this.completedCenterYOffset)), this.isClaimable && (-0x270f == this.claimCenterYOffset && (this.claimCenterYOffset = this.calculateCenterYOffset(this.claimTextRenderer)), _0x3e215d = ig.Achievement.popup.item.claimButton.width, _0x3ee8ce = ig.Achievement.popup.item.claimButton.height, this.hasTouchInside && this.isAnyInputInsideClaimButton() && (_0x3e215d *= 0.9, _0x3ee8ce *= 0.9), _0xed584b.drawImage(this.btnImage.data, this.pos.x + ig.Achievement.popup.item.claimButton.x - _0x3e215d / 0x2, this.pos.y + ig.Achievement.popup.item.claimButton.y - _0x3ee8ce / 0x2, _0x3e215d, _0x3ee8ce), this.claimTextRenderer.draw(this.pos.x + ig.Achievement.popup.item.claimButton.x, this.pos.y + ig.Achievement.popup.item.claimButton.y + ig.Achievement.popup.item.claimButton.textOffsetY + this.claimCenterYOffset)), _0xed584b.globalAlpha = 0x1, _0xed584b.restore();
    },
    'calculateCenterYOffset': function (_0x105199) {
      var _0x50893c = ig.system.context;
      _0x50893c.save(), _0x50893c.font = _0x105199.font;
      var _0x250c61 = _0x50893c.measureText(_0x105199.text);
      return _0x105199 = parseInt(_0x105199.font.split('px')[0x0].split(" ").pop()) / 0x2 - _0x250c61.actualBoundingBoxAscent, _0x50893c.restore(), _0x105199;
    },
    'isAnyInputInsideClaimButton': function () {
      var _0x41253d = this.isInsideClaimButtonBounds(ig.AchievementTouch.mouseX, ig.AchievementTouch.mouseY);
      if (!_0x41253d) for (var _0x1db1f4 = 0x0; _0x1db1f4 < ig.multitouchInput.touches.length; _0x1db1f4++) {
        var _0x141775 = ig.multitouchInput.touches[_0x1db1f4];
        this.isInsideClaimButtonBounds(_0x141775.x, _0x141775.y) && (_0x41253d = !0x0);
      }
      if (!_0x41253d) {
        for (_0x1db1f4 = 0x0; _0x1db1f4 < ig.AchievementTouch.touches.length; _0x1db1f4++) _0x141775 = ig.AchievementTouch.touches[_0x1db1f4], this.isInsideClaimButtonBounds(_0x141775.x, _0x141775.y) && (_0x41253d = !0x0);
      }
      return _0x41253d;
    },
    'isInsideClaimButtonBounds': function (_0xfc88e4, _0x7c0e18) {
      var _0xa83f85 = ig.Achievement.popup.item.claimButton.width,
        _0x274382 = ig.Achievement.popup.item.claimButton.height,
        _0x2ea080 = this.pos.x + ig.Achievement.popup.item.claimButton.x - _0xa83f85 / 0x2,
        _0x18a01f = this.pos.y + ig.Achievement.popup.item.claimButton.y - _0x274382 / 0x2,
        _0xa83f85 = _0x2ea080 + _0xa83f85,
        _0x274382 = _0x18a01f + _0x274382;
      if (this.boundLeft > this.boundRight) var _0x4c296c = _0x2ea080,
        _0x2ea080 = _0xa83f85,
        _0xa83f85 = _0x4c296c;
      return _0x18a01f > _0x274382 && (_0x4c296c = _0x18a01f, _0x18a01f = _0x274382, _0x274382 = _0x4c296c), _0xfc88e4 < _0x2ea080 || _0x7c0e18 < _0x18a01f || _0xfc88e4 > _0xa83f85 || _0x7c0e18 > _0x274382 ? !0x1 : !0x0;
    },
    'getFontHeight': function (_0x47e3a1) {
      return parseInt(_0x47e3a1.split('px')[0x0]);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-reward-fx').requires('plugins.achievement.achievement-rounded-button').defines(function () {
  ig.AchievementRewardFx = ig.AchievementRoundedButton.extend({
    'zIndex': 0x98967f,
    'usePressedTween': !0x1,
    'shadowDistance': 0x0,
    'init': function (_0x5020f8, _0x1cd997, _0x133ac9) {
      this.parent(_0x5020f8, _0x1cd997, _0x133ac9), this.timedLife = ig.Achievement.popup.item.rewardEffect.timedLife, this.upSpeed = ig.Achievement.popup.item.rewardEffect.upSpeed, this.width = ig.Achievement.popup.item.rewardEffect.width, this.height = ig.Achievement.popup.item.rewardEffect.height, this.color = ig.Achievement.popup.item.rewardEffect.color, this.textColor = ig.Achievement.popup.item.rewardEffect.textColor, this.font = ig.Achievement.popup.item.rewardEffect.font;
    },
    'exit': function () {
      this.parent();
    },
    'update': function () {
      this.parent(), ig.responsive ? this.anchoredPositionY -= this.upSpeed * ig.system.tick : this.pos.y -= this.upSpeed * ig.system.tick;
    },
    'draw': function () {
      this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-popup').requires('plugins.achievement.achievement-game-object').defines(function () {
  ig.AchievementPopup = ig.AchievementGameObject.extend({
    'zIndex': 0x270f,
    'onClaim': null,
    'onBack': null,
    'entryType': 'popupIn',
    'exitType': 'popupOut',
    'items': [],
    'page': 0x0,
    'sprite': new ig.Image('media/graphics/ui/achievement/bg.png'),
    'fg': new ig.Image('media/graphics/ui/achievement/fg.png'),
    'init': function (_0x18639f, _0x519cc8, _0x356c60) {
      this.parent(0x0, 0x0, _0x356c60), ig.Achievement.loadData(), this.forceDraw = !0x0, this.onClaim = new ig.AchievementSignal(), this.onBack = new ig.AchievementSignal(), this.title = ig.game.spawnEntity(ig.AchievementTextField, ig.system.width / 0x2, (ig.system.height - ig.Achievement.popup.height) / 0x2 + ig.Achievement.popup.title.offsetY, {
        'text': ig.Achievement.strings.achievementTitle,
        'font': ig.Achievement.popup.title.font,
        'align': 'center',
        'color': ig.Achievement.popup.title.color,
        'zIndex': 0x1869f,
        'entryDuration': 0.2
      }), ig.responsive && (this.title.anchoredPositionX = ig.responsive.originalWidth / 0x2, this.title.anchoredPositionY = (ig.responsive.originalHeight - ig.Achievement.popup.height) / 0x2 + ig.Achievement.popup.title.offsetY), _0x18639f = [], _0x519cc8 = [];
      var _0x11debb = [];
      for (_0x356c60 = 0x0; _0x356c60 < ig.Achievement.list.length; _0x356c60++) {
        var _0x255b7b = ig.game.spawnEntity(ig.AchievementItem, 0x0, 0x0, {
          'id': _0x356c60
        });
        _0x255b7b.onClaim = this.onClaim, this.items.push(_0x255b7b);
        var _0x4a6263 = ig.Achievement.getAchievementData(_0x356c60);
        _0x4a6263.achieved ? _0x4a6263.claimed ? _0x11debb.push(_0x255b7b) : _0x18639f.push(_0x255b7b) : _0x519cc8.push(_0x255b7b);
      }
      _0x11debb = ig.Achievement.popup.autoSortItems ? [].concat(_0x18639f, _0x519cc8, _0x11debb) : this.items;
      for (_0x356c60 = 0x0; _0x356c60 < _0x11debb.length; _0x356c60++) _0x255b7b = _0x11debb[_0x356c60], _0x18639f = ig.system.width / 0x2 - ig.Achievement.popup.item.width / 0x2, _0x519cc8 = (ig.system.height - ig.Achievement.popup.height) / 0x2 + ig.Achievement.popup.itemsStartY + (ig.Achievement.popup.item.height + ig.Achievement.popup.item.spacing) * (_0x356c60 % ig.Achievement.popup.itemsPerPage), ig.responsive && (_0x18639f = ig.responsive.originalWidth / 0x2 - ig.Achievement.popup.item.width / 0x2, _0x519cc8 = (ig.responsive.originalHeight - ig.Achievement.popup.height) / 0x2 + ig.Achievement.popup.itemsStartY + (ig.Achievement.popup.item.height + ig.Achievement.popup.item.spacing) * (_0x356c60 % ig.Achievement.popup.itemsPerPage)), _0x18639f += Math.floor(_0x356c60 / ig.Achievement.popup.itemsPerPage) * (ig.Achievement.popup.item.width + ig.Achievement.popup.item.spacing), ig.responsive ? (_0x255b7b.anchoredPositionX = _0x18639f, _0x255b7b.anchoredPositionY = _0x519cc8) : (_0x255b7b.pos.x = _0x18639f, _0x255b7b.pos.y = _0x519cc8), _0x255b7b.originalX = _0x18639f, _0x255b7b.originalY = _0x519cc8, _0x255b7b.page = Math.floor(_0x356c60 / ig.Achievement.popup.itemsPerPage);
      this.prevButton = ig.game.spawnEntity(ig.AchievementRoundedButton, ig.system.width / 0x2 - 1.6 * ig.Achievement.popup.paging.button.width, ig.system.height / 0x2 + ig.Achievement.popup.height / 0x2 - ig.Achievement.popup.paging.button.height + ig.Achievement.popup.paging.button.offsetY, {
        'symbol': 'prev',
        'symbolColor': ig.Achievement.popup.paging.button.symbolColor,
        'color': ig.Achievement.popup.paging.button.color,
        'shadowColor': ig.Achievement.popup.paging.button.shadowColor,
        'symbolSize': ig.Achievement.popup.paging.button.symbolSize,
        'width': ig.Achievement.popup.paging.button.width,
        'height': ig.Achievement.popup.paging.button.height,
        'zIndex': 0x1869f,
        'entryDuration': 0.2,
        'exitDuration': 0.1
      }), this.nextButton = ig.game.spawnEntity(ig.AchievementRoundedButton, ig.system.width / 0x2 + 1.5 * ig.Achievement.popup.paging.button.width, ig.system.height / 0x2 + ig.Achievement.popup.height / 0x2 - ig.Achievement.popup.paging.button.height + ig.Achievement.popup.paging.button.offsetY, {
        'symbol': 'next',
        'symbolColor': ig.Achievement.popup.paging.button.symbolColor,
        'color': ig.Achievement.popup.paging.button.color,
        'shadowColor': ig.Achievement.popup.paging.button.shadowColor,
        'symbolSize': ig.Achievement.popup.paging.button.symbolSize,
        'width': ig.Achievement.popup.paging.button.width,
        'height': ig.Achievement.popup.paging.button.height,
        'zIndex': 0x1869f,
        'entryDuration': 0.2,
        'exitDuration': 0.1
      }), this.closeButton = ig.game.spawnEntity(ig.AchievementRoundedButton, (ig.system.width + ig.Achievement.popup.width) / 0x2 + ig.Achievement.popup.closeButton.width / 0x2 - ig.Achievement.popup.closeButton.offsetX, (ig.system.height - ig.Achievement.popup.height) / 0x2 - ig.Achievement.popup.closeButton.height / 0x2 + ig.Achievement.popup.closeButton.offsetY, {
        'symbol': 'exit',
        'symbolColor': ig.Achievement.popup.closeButton.symbolColor,
        'symbolSize': ig.Achievement.popup.closeButton.symbolSize,
        'width': ig.Achievement.popup.closeButton.width,
        'height': ig.Achievement.popup.closeButton.height,
        'color': ig.Achievement.popup.closeButton.color,
        'shadowColor': ig.Achievement.popup.closeButton.shadowColor,
        'zIndex': 0x1869f,
        'entryDuration': 0.2
      }), this.closeButton.onClicked.addOnce(this.onClickClose, this), this.pagingDisplay = ig.game.spawnEntity(ig.AchievementRoundedButton, ig.system.width / 0x2, ig.system.height / 0x2 + ig.Achievement.popup.height / 0x2 - ig.Achievement.popup.paging.button.height, {
        'text': '',
        'textColor': ig.Achievement.popup.paging.display.textColor,
        'font': ig.Achievement.popup.paging.display.font,
        'color': ig.Achievement.popup.paging.display.color,
        'offsetY': ig.Achievement.popup.paging.display.textOffsetY,
        'offsetX': ig.Achievement.popup.paging.display.textOffsetX,
        'shadowDistance': 0x0,
        'width': 1.6 * ig.Achievement.popup.paging.button.width,
        'height': ig.Achievement.popup.paging.button.height,
        'zIndex': 0x1869f,
        'entryDuration': 0.2,
        'exitDuration': 0.1
      }), this.pagingDisplay.usePressedTween = !0x1, this.pagingDisplay.inputEnabled = !0x1, this.nextButton.onClicked.add(this.onClickNext, this), this.prevButton.onClicked.add(this.onClickPrev, this), ig.responsive && (this.prevButton.anchoredPositionX = ig.responsive.originalWidth / 0x2 - 1.5 * ig.Achievement.popup.paging.button.width, this.prevButton.anchoredPositionY = ig.responsive.originalHeight / 0x2 + ig.Achievement.popup.height / 0x2 - ig.Achievement.popup.paging.button.height, this.nextButton.anchoredPositionX = ig.responsive.originalWidth / 0x2 + 1.5 * ig.Achievement.popup.paging.button.width, this.nextButton.anchoredPositionY = ig.responsive.originalHeight / 0x2 + ig.Achievement.popup.height / 0x2 - ig.Achievement.popup.paging.button.height, this.pagingDisplay.anchoredPositionX = ig.responsive.originalWidth / 0x2, this.pagingDisplay.anchoredPositionY = ig.responsive.originalHeight / 0x2 + ig.Achievement.popup.height / 0x2 - ig.Achievement.popup.paging.button.height, this.closeButton.anchoredPositionX = (ig.responsive.originalWidth + ig.Achievement.popup.width) / 0x2 - ig.Achievement.popup.closeButton.width / 0x2 - ig.Achievement.popup.closeButton.offsetX, this.closeButton.anchoredPositionY = (ig.responsive.originalHeight - ig.Achievement.popup.height) / 0x2 + ig.Achievement.popup.closeButton.height / 0x2 + ig.Achievement.popup.closeButton.offsetY), this.progressTextRenderer = new ig.AchievementTextRenderer(), this.progressTextRenderer.font = ig.Achievement.popup.item.progress.font, this.progressTextRenderer.color = ig.Achievement.popup.item.progress.color, this.progressTextRenderer.align = 'center', this.progressTextRenderer.text = "0 / 20", ig.game.sortEntitiesDeferred();
    },
    'onClickPrev': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.button]);
      var _0x37819a = Math.ceil(this.items.length / ig.Achievement.popup.itemsPerPage) - 0x1;
      this.page -= 0x1, 0x0 > this.page && (this.page = _0x37819a), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.swipe]);
    },
    'onClickNext': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.button]), this.page += 0x1;
      var _0x1cd6a9 = Math.ceil(this.items.length / ig.Achievement.popup.itemsPerPage) - 0x1;
      this.page > _0x1cd6a9 && (this.page = 0x0), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.swipe]);
    },
    'onClickClose': function () {
      this.onBack.dispatch(), this.closeButton.exit(), this.nextButton.exit(), this.prevButton.exit(), this.title.exit(), this.pagingDisplay.exit();
      for (var _0x4e8a34 = 0x0; _0x4e8a34 < this.items.length; _0x4e8a34++) this.items[_0x4e8a34].exit();
      this.exit(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Achievement.sounds.button]);
    },
    'exit': function () {
      this.parent();
    },
    'update': function () {
      for (var _0x3a5237 = 0x0; _0x3a5237 < this.items.length; _0x3a5237++) {
        var _0xc32ec0 = this.items[_0x3a5237];
        _0xc32ec0.pagingOffsetX = -this.page * (ig.Achievement.popup.item.width + ig.Achievement.popup.item.spacing), _0xc32ec0.currentPage = this.page;
      }
      this.pagingDisplay.text = this.page + 0x1 + " / " + Math.ceil(this.items.length / ig.Achievement.popup.itemsPerPage), this.parent();
    },
    'draw': function () {
      var _0xb6b415 = ig.system.context;
      _0xb6b415.save(), _0xb6b415.fillStyle = ig.Achievement.overlay.color, _0xb6b415.globalAlpha = ig.Achievement.overlay.alpha * this.alpha, _0xb6b415.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0xb6b415.globalAlpha = this.alpha, this.sprite ? this.sprite.draw(this.pos.x + (ig.system.width - this.sprite.width) / 0x2, this.pos.y + (ig.system.height - this.sprite.height) / 0x2) : ig.AchievementRoundedRect.drawRoundedRect(_0xb6b415, (ig.system.width - ig.Achievement.popup.width) / 0x2, (ig.system.height - ig.Achievement.popup.height) / 0x2, ig.Achievement.popup.width, ig.Achievement.popup.height, ig.Achievement.popup.radius, ig.Achievement.popup.color);
      for (var _0x7694af = 0x0, _0x14bc7f = ig.Achievement.data.achievements.length, _0x27629a = 0x0; _0x27629a < ig.Achievement.data.achievements.length; _0x27629a++) ig.Achievement.data.achievements[_0x27629a].claimed && _0x7694af++;
      _0xb6b415.lineCap = 'round', _0xb6b415.lineWidth = ig.Achievement.popup.item.progress.bar.height;
      var _0x27629a = (ig.system.width - ig.Achievement.popup.item.width) / 0x2,
        _0x38352b = (ig.system.height - ig.Achievement.popup.height) / 0x2 + ig.Achievement.popup.title.offsetY + ig.Achievement.popup.item.progress.bar.height + _0xb6b415.lineWidth / 0x2;
      _0xb6b415.beginPath(), _0xb6b415.lineWidth = 1.5 * ig.Achievement.popup.item.progress.bar.height, _0xb6b415.strokeStyle = ig.Achievement.popup.item.progress.bar.stroke;
      var _0x53bda7 = ig.Achievement.popup.item.width - _0xb6b415.lineWidth / 0x2 + Math.floor(0.2 * _0xb6b415.lineWidth);
      _0xb6b415.moveTo(_0x27629a + _0xb6b415.lineWidth / 0x2 - Math.floor(0.2 * _0xb6b415.lineWidth), _0x38352b), _0xb6b415.lineTo(_0x27629a + _0x53bda7, _0x38352b), _0xb6b415.stroke(), _0xb6b415.closePath(), _0xb6b415.beginPath(), _0xb6b415.lineWidth = ig.Achievement.popup.item.progress.bar.height, _0xb6b415.strokeStyle = ig.Achievement.popup.item.progress.bar.colorBg, _0x53bda7 = ig.Achievement.popup.item.width - _0xb6b415.lineWidth / 0x2, _0xb6b415.moveTo(_0x27629a + _0xb6b415.lineWidth / 0x2, _0x38352b), _0xb6b415.lineTo(_0x27629a + _0x53bda7, _0x38352b), _0xb6b415.stroke(), _0xb6b415.closePath(), _0x53bda7 = Math.round(_0x53bda7 * (_0x7694af / _0x14bc7f)), 0x0 < _0x7694af && _0x53bda7 <= _0xb6b415.lineWidth / 0x2 && (_0x53bda7 = _0xb6b415.lineWidth / 0x2 + 0x1 + 0x2 * Math.floor(_0x53bda7 / 0xa)), 0x0 < _0x53bda7 && (_0xb6b415.beginPath(), _0xb6b415.strokeStyle = ig.Achievement.popup.item.progress.bar.color, _0xb6b415.moveTo(_0x27629a + _0xb6b415.lineWidth / 0x2, _0x38352b), _0xb6b415.lineTo(_0x27629a + _0x53bda7, _0x38352b), _0xb6b415.stroke(), _0xb6b415.closePath()), this.progressTextRenderer.text = _0x7694af + " / " + _0x14bc7f, this.progressTextRenderer.draw(ig.system.width / 0x2, (ig.system.height - ig.Achievement.popup.height) / 0x2 + ig.Achievement.popup.title.offsetY + 1.5 * ig.Achievement.popup.item.progress.bar.height + this.items[0x0].getFontHeight(ig.Achievement.popup.item.progress.font) / 0x2 + ig.Achievement.popup.item.progress.textOffsetY), this.items.forEach(function (_0x1e6df4) {
        _0x1e6df4.drawItem();
      }), this.fg.draw(this.pos.x + (ig.system.width - this.fg.width) / 0x2, this.pos.y + (ig.system.height - this.fg.height) / 0x2), _0xb6b415.globalAlpha = 0x1, _0xb6b415.restore();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-notification-drop-down').requires('plugins.achievement.achievement-game-object').defines(function () {
  ig.AchievementNotificationDropDown = ig.AchievementSimpleButton.extend({
    'zIndex': 0x98967f,
    'name': 'achievementNotification',
    'drawAsRect': !0x0,
    'forceDraw': !0x0,
    'anchorX': 0x0,
    'anchorY': 0x0,
    'align': 'left',
    'valign': 'top',
    'icon': null,
    'oriX': 0x0,
    'oriY': 0x0,
    'destY': 0x0,
    'clickNotificationCooldown': 0x0,
    'usePressedTween': !0x1,
    'onClickNotification': null,
    'showDuration': 0x1,
    'isShowing': !0x1,
    'init': function (_0x81a51c, _0x345408, _0x1de013) {
      this.parent(_0x81a51c, _0x345408, _0x1de013), this.rectColor = ig.Achievement.notificationDropDown.color, this.textColor = ig.Achievement.notificationDropDown.textColor, this.width = ig.Achievement.notificationDropDown.width, this.height = ig.Achievement.notificationDropDown.height, this.font = ig.Achievement.notificationDropDown.font, this.lineSpacing = ig.Achievement.notificationDropDown.lineSpacing, this.offsetX = -this.width / 0x2 + this.height, this.offsetY = -this.height / 0x2 + ig.Achievement.notificationDropDown.padding + ig.Achievement.notificationDropDown.textOffsetY, this.visible = !0x1, this.onClickNotification = new ig.AchievementSignal(), this.onClicked.add(this.onClickThis, this);
    },
    'onClickThis': function () {
      this.isShowing && !(0x0 < this.clickNotificationCooldown) && (this.clickNotificationCooldown = this.showDuration + this.entryDuration + this.exitDuration, this.onClickNotification.dispatch());
    },
    'show': function (_0x497324) {
      if (!this.isShowing) {
        this.visible = !0x0;
        var _0x1a94f4 = ig.Achievement.getAchievementData(_0x497324);
        this.icon = _0x1a94f4.icon, this.text = ig.Achievement.strings.unlocked + "\n" + _0x1a94f4.name, this.isShowing = !0x0, this.currentId = _0x497324, this.showDuration = ig.Achievement.notificationDropDown.showDuration, this.exitDuration = this.entryDuration = 0.5, this.anchorY = this.anchorX = 0x0;
        if (ig.responsive) {
          this.anchorType = ig.Achievement.notificationDropDown.placement;
          switch (ig.Achievement.notificationDropDown.placement) {
            case 'top-left':
              this.oriX = 0x0, this.oriY = -this.height, this.destX = this.oriX, this.destY = 0x0;
              break;
            case 'top-center':
              this.oriX = 0x0, this.oriY = -this.height, this.destX = this.oriX, this.destY = 0x0, this.anchorX = 0.5;
              break;
            case 'top-right':
              this.oriX = -this.width, this.oriY = -this.height, this.destX = this.oriX, this.destY = 0x0;
              break;
            case 'middle-left':
              this.oriY = this.oriX = 0x0, this.destX = this.width, this.destY = this.oriY, this.anchorX = 0x1, this.anchorY = 0.5;
              break;
            case 'middle-right':
              this.oriY = this.oriX = 0x0, this.destX = -this.width, this.destY = this.oriY, this.anchorX = 0x0, this.anchorY = 0.5;
              break;
            case 'bottom-left':
              this.destX = this.oriY = this.oriX = 0x0, this.destY = -this.height;
              break;
            case 'bottom-center':
              this.destX = this.oriY = this.oriX = 0x0, this.destY = -this.height, this.anchorX = 0.5;
              break;
            case 'bottom-right':
              this.oriX = -this.width, this.oriY = 0x0, this.destX = this.oriX, this.destY = -this.height;
          }
          this.anchoredPositionX = this.oriX, this.anchoredPositionY = this.oriY;
        } else {
          switch (ig.Achievement.notificationDropDown.placement) {
            case 'top-left':
              this.oriX = 0x0, this.oriY = -this.height, this.destX = this.oriX, this.destY = 0x0;
              break;
            case 'top-center':
              this.oriX = ig.system.width / 0x2, this.oriY = -this.height, this.destX = this.oriX, this.destY = 0x0, this.anchorX = 0.5;
              break;
            case 'top-right':
              this.oriX = ig.system.width - this.width, this.oriY = -this.height, this.destX = this.oriX, this.destY = 0x0;
              break;
            case 'middle-left':
              this.oriX = 0x0, this.oriY = ig.system.height / 0x2, this.destX = this.width, this.destY = this.oriY, this.anchorX = 0x1, this.anchorY = 0.5;
              break;
            case 'middle-right':
              this.oriX = ig.system.width, this.oriY = ig.system.height / 0x2, this.destX = ig.system.width - this.width, this.destY = this.oriY, this.anchorX = 0x0, this.anchorY = 0.5;
              break;
            case 'bottom-left':
              this.oriX = 0x0, this.oriY = ig.system.height, this.destX = this.oriX, this.destY = ig.system.height - this.height;
              break;
            case 'bottom-center':
              this.oriX = ig.system.width / 0x2, this.oriY = ig.system.height, this.destX = this.oriX, this.destY = ig.system.height - this.height, this.anchorX = 0.5;
              break;
            case 'bottom-right':
              this.oriX = ig.system.width - this.width, this.oriY = ig.system.height, this.destX = this.oriX, this.destY = ig.system.height - this.height;
          }
          this.pos.x = this.oriX, this.pos.y = this.oriY;
        }
      }
    },
    'update': function () {
      this.parent(), this.clickNotificationCooldown -= ig.system.tick, this.isShowing && (0x0 < this.entryDuration ? (this.entryDuration -= ig.system.tick, ig.responsive ? (this.anchoredPositionX += (this.destX - this.anchoredPositionX) / 0xa, this.anchoredPositionY += (this.destY - this.anchoredPositionY) / 0xa) : (this.pos.x += (this.destX - this.pos.x) / 0xa, this.pos.y += (this.destY - this.pos.y) / 0xa)) : (this.showDuration -= ig.system.tick, 0x0 > this.showDuration && (this.exitDuration -= ig.system.tick, ig.responsive ? (this.anchoredPositionX += (this.oriX - this.anchoredPositionX) / 0xa, this.anchoredPositionY += (this.oriY - this.anchoredPositionY) / 0xa) : (this.pos.x += (this.oriX - this.pos.x) / 0xa, this.pos.y += (this.oriY - this.pos.y) / 0xa), 0x0 > this.exitDuration && (this.visible = this.isShowing = !0x1, ig.Achievement.data.achievements[this.currentId].popupShown = !0x0, ig.Achievement.saveData(), this.currentId = -0x1))));
    },
    'drawObject': function (_0x283963, _0x3fa8df) {
      this.parent(_0x283963, _0x3fa8df);
      if (this.icon) {
        var _0x3e317e = ig.system.context;
        _0x3e317e.save();
        var _0x4973a8 = ig.Achievement.notificationDropDown.padding + _0x283963,
          _0x389dab = ig.Achievement.notificationDropDown.padding + _0x3fa8df,
          _0x28eef6 = this.height - 0x2 * ig.Achievement.notificationDropDown.padding;
        this.icon.drawImageCtx ? this.icon.drawImageCtx(_0x3e317e, 0x0, 0x0, this.icon.width, this.icon.height, _0x4973a8, _0x389dab, _0x28eef6, _0x28eef6) : _0x3e317e.drawImage(this.icon.data, 0x0, 0x0, this.icon.width, this.icon.height, _0x4973a8, _0x389dab, _0x28eef6, _0x28eef6), _0x3e317e.restore();
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-notification-dot').requires('plugins.achievement.achievement-game-object').defines(function () {
  ig.AchievementNotificationDot = ig.AchievementSimpleButton.extend({
    'zIndex': 0xf423f,
    'text': '1',
    'forceDraw': !0x0,
    'dotColor': '#ff7777',
    'textColor': '#ffffff',
    'type': 'assembly',
    'init': function (_0x580cec, _0x3c6833, _0x53084d) {
      this.parent(_0x580cec, _0x3c6833, _0x53084d), ig.Achievement.saveName || ig.Achievement.loadData(), this.dotColor = ig.Achievement.notificationDot.color, this.textColor = ig.Achievement.notificationDot.textColor, this.width = this.height = ig.Achievement.notificationDot.size, this.font = ig.Achievement.notificationDot.font, this.offsetY = ig.Achievement.notificationDot.textOffsetY;
    },
    'update': function () {
      this.parent();
      for (var _0x1500d = 0x0, _0x3e963b = 0x0; _0x3e963b < ig.Achievement.data.achievements.length; _0x3e963b++) {
        var _0x5d5e34 = ig.Achievement.data.achievements[_0x3e963b].claimed;
        ig.Achievement.data.achievements[_0x3e963b].progress >= ig.Achievement.list[_0x3e963b].goal && !_0x5d5e34 && _0x1500d++;
      }
      this.text = '' + _0x1500d, this.visible = 0x0 < _0x1500d ? !0x0 : !0x1;
    },
    'drawObject': function (_0x1f2939, _0x4efb5d) {
      var _0x162c13 = ig.system.context;
      _0x162c13.save();
      var _0x2baee0 = ig.hexToRgb(this.dotColor);
      _0x162c13.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x2baee0.r + ',' + _0x2baee0.g + ',' + _0x2baee0.b + ',' + this.alpha + ')' : _0x2baee0.hex, _0x162c13.beginPath(), _0x162c13.arc(_0x1f2939 + this.width / 0x2, _0x4efb5d + this.height / 0x2, this.width / 0x2, 0x0, 0x2 * Math.PI), _0x162c13.fill(), _0x162c13.closePath(), _0x162c13.restore(), this.parent(_0x1f2939, _0x4efb5d);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.achievement.achievement-plugin').requires('plugins.achievement.achievement-settings', 'plugins.achievement.achievement-game-object', 'plugins.achievement.achievement-rounded-rect', 'plugins.achievement.achievement-rounded-button', 'plugins.achievement.achievement-item', 'plugins.achievement.achievement-reward-fx', 'plugins.achievement.achievement-popup', 'plugins.achievement.achievement-notification-drop-down', 'plugins.achievement.achievement-notification-dot').defines(function () {
  ig.Achievement = {
    'onClickNotification': new ig.AchievementSignal(),
    'data': {
      'achievements': []
    },
    'checkUnclaim': !0x0,
    'claimReward': function (_0x48851a) {
      this.data.achievements[_0x48851a].claimed = !0x0, ig.game.advStorage && ig.game.advStorage.addCoins(parseInt(this.getAchievementData(_0x48851a).reward.replace(" coins", ''))), this.saveData();
    },
    'getNumUnclaim': function () {
      if (this.checkUnclaim) {
        this.checkUnclaim = !0x1;
        for (var _0x55f73c = 0x0, _0x528bf9 = 0x0; _0x528bf9 < this.list.length; _0x528bf9++) !this.isAchievementClaimed(_0x528bf9) && this.isAchievementAchieved(_0x528bf9) && _0x55f73c++;
        return _0x55f73c;
      }
    },
    'incrementProgress': function (_0x339b3a, _0x136b40) {
      this.isAchievementClaimed(_0x339b3a) || (this.data.achievements[_0x339b3a].progress += _0x136b40, this.data.achievements[_0x339b3a].progress >= this.list[_0x339b3a].goal && (this.data.achievements[_0x339b3a].progress = this.list[_0x339b3a].goal), this.dataNeedSave = !0x0);
    },
    'setProgress': function (_0x2ebee6, _0x19adae) {
      this.isAchievementClaimed(_0x2ebee6) || (this.data.achievements[_0x2ebee6].progress = _0x19adae, this.data.achievements[_0x2ebee6].progress >= this.list[_0x2ebee6].goal && (this.data.achievements[_0x2ebee6].progress = this.list[_0x2ebee6].goal), this.dataNeedSave = !0x0);
    },
    'unlockAll': function () {
      for (var _0x4365c4 = 0x0; _0x4365c4 < this.data.achievements.length; _0x4365c4++) this.data.achievements[_0x4365c4].progress = this.list[_0x4365c4].goal;
    },
    'setNotificationAnimationDrop': function (_0x38b095) {
      switch (_0x38b095) {
        case 'top-left':
        case 'top-center':
        case 'top-right':
        case " middle-left":
        case 'middle-right':
        case 'bottom-left':
        case 'bottom-center':
        case 'bottom-right':
          ig.Achievement.notificationDropDown.placement = _0x38b095;
          break;
        default:
          ig.Achievement.notificationDropDown.placement = 'top-center';
      }
    },
    'unlockByIndex': function (_0xa4d7fa) {
      this.data.achievements[_0xa4d7fa].progress = this.list[_0xa4d7fa].goal, this.dataNeedSave = !0x0;
    },
    'getAchievementData': function (_0x375e78) {
      return {
        'id': _0x375e78,
        'name': this.list[_0x375e78].name,
        'description': this.list[_0x375e78].description,
        'reward': this.list[_0x375e78].reward,
        'goal': this.list[_0x375e78].goal,
        'icon': this.list[_0x375e78].icon,
        'progress': this.data.achievements[_0x375e78].progress,
        'popupShown': this.data.achievements[_0x375e78].popupShown,
        'claimed': this.data.achievements[_0x375e78].claimed,
        'achieved': this.data.achievements[_0x375e78].progress >= this.list[_0x375e78].goal
      };
    },
    'isAchievementClaimed': function (_0x57e553) {
      return this.data.achievements[_0x57e553].claimed;
    },
    'isAchievementAchieved': function (_0x2b06a5) {
      return this.data.achievements[_0x2b06a5].progress >= this.list[_0x2b06a5].goal;
    },
    'clearData': function () {
      this.data = {
        'achievements': []
      };
      for (var _0x24eba9 = 0x0; _0x24eba9 < this.list.length; _0x24eba9++) this.data.achievements.push({
        'id': _0x24eba9,
        'progress': 0x69 == _0x24eba9 ? 0x1 : 0x0,
        'popupShown': !0x1,
        'claimed': !0x1
      });
      this.saveData();
    },
    'saveData': function () {
      var _0x3bcd2a = JSON.stringify(this.data);
      ig.LSAchievement.set(this.saveName, _0x3bcd2a), this.checkUnclaim = !0x0;
    },
    'loadData': function () {
      ig.LSAchievement || (ig.LSAchievement = new SecureLS({
        'encodingType': 'aes'
      }), this.saveName = this.hash(ig.game.name + '-mjs-achievement-save-data', '').replace('-', 's'));
      var _0x461510 = ig.LSAchievement.get(this.saveName);
      '' == _0x461510 ? this.clearData() : this.data = JSON.parse(_0x461510);
    },
    'hash': function (_0x1b3fa0) {
      var _0x3c4f0d = 0x0,
        _0x558840,
        _0x260f21;
      if (0x0 === _0x1b3fa0.length) return _0x3c4f0d;
      for (_0x558840 = 0x0; _0x558840 < _0x1b3fa0.length; _0x558840++) _0x260f21 = _0x1b3fa0.charCodeAt(_0x558840), _0x3c4f0d = (_0x3c4f0d << 0x5) - _0x3c4f0d + _0x260f21, _0x3c4f0d |= 0x0;
      return _0x3c4f0d.toString(0x24);
    },
    'notificationCheck': function () {
      ig && ig.game && !ig.Achievement.saveName && ig.Achievement.loadData(), this.dataNeedSave && (this.dataNeedSave = !0x1, this.saveData());
      var _0x3fca07 = 0x64;
      if (ig && ig.game) {
        for (var _0x49b81f = !0x1, _0x521d42 = 0x0; _0x521d42 < ig.game.entities.length; _0x521d42++) {
          var _0x80704 = ig.game.entities[_0x521d42];
          if ('achievementNotification' == _0x80704.name) {
            _0x49b81f = !0x0, ig.Achievement.notificationInstance = _0x80704;
            break;
          }
        }
        _0x49b81f ? _0x3fca07 = 0x3e8 : ig.Achievement.notificationInstance = ig.game.spawnEntity(ig.AchievementNotificationDropDown, 0x0, 0x0);
        if (ig.Achievement.notificationInstance && !ig.Achievement.notificationInstance.isShown) {
          for (_0x521d42 = 0x0; _0x521d42 < ig.Achievement.data.achievements.length; _0x521d42++) if (_0x49b81f = ig.Achievement.getAchievementData(_0x521d42), _0x49b81f.achieved && !_0x49b81f.popupShown) {
            ig.Achievement.notificationInstance.show(_0x521d42);
            break;
          }
        }
      }
      setTimeout(function () {
        ig.Achievement.notificationCheck();
      }, _0x3fca07);
    }
  }, ig.initAchievementSettings(), ig && ig.game && !ig.Achievement.saveName && ig.Achievement.loadData(), ig.Achievement.notificationCheckRunning || (ig.Achievement.notificationCheckRunning = !0x0, ig.Achievement.notificationCheck());
}), ig.baked = !0x0, ig.module('plugins.minigame.minigame-settings').defines(function () {
  ig.initMinigameSettings = function () {
    ig.Minigame.sounds = {
      'click': 'button',
      'reward': 'postGame',
      'correct': 'finish',
      'incorrect': 'rankUpdate',
      'flip': 'buttonSwoosh',
      'mazeStep': 'button',
      'popup': 'popupSwing'
    }, ig.Minigame.startButton = {
      'width': 0x154,
      'height': 0x69,
      'roundedRadius': 0x14,
      'sprite': new ig.Image('media/graphics/ui/minigames/start-btn.png'),
      'color': '#54c2c1',
      'shadowColor': '#217a78',
      'text': {
        'offsetY': -0x13,
        'font': "26px archivo-black",
        'color': '#011b3c'
      },
      'subtitleText': {
        'offsetY': 0x1d,
        'font': "24px archivo-black",
        'color': '#ffffff',
        'strings': {
          'available': _STRINGS.Minigames.buttonOn,
          'cooldown': _STRINGS.Minigames.buttonOff
        }
      }
    }, ig.Minigame.gamePopup = {
      'sizeRatio': 0.8,
      'roundedRadius': 0x14,
      'padding': 0x28,
      'color': '#ffffff',
      'overlayColor': '#000000',
      'overlayAlpha': 0.5,
      'particleColor': '#fbc653',
      'sprite': new ig.Image('media/graphics/ui/minigames/main-panel.png'),
      'titleText': {
        'font': "50px archivo-black",
        'color': '#011b3c'
      },
      'bodyText': {
        'font': "46px archivo-black",
        'color': '#ffffff'
      },
      'closeButton': {
        'width': 0x3a,
        'height': 0x3c,
        'sprite': new ig.Image('media/graphics/ui/common/btn-close.png'),
        'radius': 0xa,
        'padding': 0xa,
        'iconSize': 0x1c,
        'color': '#d81a1a',
        'shadowColor': '#8b0d00',
        'iconColor': '#ffffff'
      }
    }, ig.Minigame.games = {
      'guessTheNumber': {
        'id': 'guessTheNumber',
        'contentClass': ig.MinigameGuessTheNumber,
        'strings': {
          'title': _STRINGS.Minigames.game1.title,
          'correctGuess': _STRINGS.Minigames.game1.correctGuess,
          'wrongGuessHigher': _STRINGS.Minigames.game1.wrongGuessHigher,
          'wrongGuessLower': _STRINGS.Minigames.game1.wrongGuessLower,
          'retryButton': _STRINGS.Minigames.game1.retryButton,
          'collectButton': _STRINGS.Minigames.game1.collectButton
        },
        'sprite': new ig.Image('media/graphics/ui/minigames/games-panel.png'),
        'cooldownHours': 0x18,
        'digitLength': 0x3,
        'useSeededRandom': !0x0,
        'rewardIcon': new ig.Image('media/graphics/ui/common/coin.png'),
        'reward': 0xa,
        'wrongColor': '#d81a1a',
        'answerDigits': {
          'color': '#011b3c',
          'font': "60px archivo-black",
          'textColor': '#fffc00',
          'textOffsetY': 0x4
        },
        'keypad': {
          'color': '#15c8f2',
          'shadowColor': '#0088b2',
          'font': "54px archivo-black",
          'textColor': '#ffffff',
          'textOffsetY': 0x1
        }
      },
      'matchTheCards': {
        'id': 'matchTheCards',
        'contentClass': ig.MinigameMatchTheCards,
        'strings': {
          'title': _STRINGS.Minigames.game2.title,
          'failed': _STRINGS.Minigames.game2.failed,
          'success': _STRINGS.Minigames.game2.success,
          'retryButton': _STRINGS.Minigames.game2.retryButton,
          'collectButton': _STRINGS.Minigames.game2.collectButton
        },
        'cooldownHours': 0x18,
        'attemptDisplay': {
          'maxIncorrectAttempts': 0x4,
          'offColor': '#bbbbbb',
          'onColor': '#d81a1a'
        },
        'reward': 0xa,
        'sprite': new ig.Image('media/graphics/ui/minigames/games-panel.png'),
        'useSeededRandom': !0x0,
        'shapeColors': "#cc0001 #fb940b #fcd944 #01cc00 #03c0c6 #0000fe #762ca7 #fe98bf".split(" "),
        'card': {
          'bgColor': '#346293',
          'fgColor': '#ffeace',
          'roundedRadius': 0xe,
          'row': 0x2,
          'column': 0x4
        },
        'button': {
          'color': '#54c2c1',
          'shadowColor': '#217a78',
          'font': "54px archivo-black",
          'textColor': '#ffffff',
          'textOffsetY': 0x1
        },
        'rewardIcon': new ig.Image('media/graphics/ui/common/coin.png'),
        'failedXColor': '#d81a1a'
      },
      'simonSays': {
        'id': 'simonSays',
        'contentClass': ig.MinigameSimonSays,
        'strings': {
          'title': _STRINGS.Minigames.game3.title,
          'correctGuess': _STRINGS.Minigames.game3.correctGuess,
          'failed': _STRINGS.Minigames.game3.failed,
          'success': _STRINGS.Minigames.game3.success,
          'round': _STRINGS.Minigames.game3.round,
          'start': _STRINGS.Minigames.game3.start,
          'retryButton': _STRINGS.Minigames.game3.retryButton,
          'collectButton': _STRINGS.Minigames.game3.collectButton
        },
        'reward': 0xa,
        'sprite': new ig.Image('media/graphics/ui/minigames/games-panel.png'),
        'cooldownHours': 0x18,
        'rounds': [{
          'count': 0x3,
          'duration': 0.7
        }, {
          'count': 0x4,
          'duration': 0.5
        }, {
          'count': 0x5,
          'duration': 0.3
        }],
        'useSeededRandom': !0x0,
        'shapeColors': "#cc0001 #fb940b #fcd944 #01cc00 #03c0c6 #0000fe #762ca7 #fe98bf".split(" "),
        'answerButton': {
          'color': '#fff1d6',
          'shadowColor': '#c98600'
        },
        'button': {
          'color': '#54c2c1',
          'shadowColor': '#217a78',
          'font': "54px archivo-black",
          'textColor': '#ffffff',
          'textOffsetY': 0x1
        },
        'rewardIcon': new ig.Image('media/graphics/ui/common/coin.png'),
        'failedXColor': '#d81a1a'
      },
      'mazeChallenge': {
        'id': 'mazeChallenge',
        'contentClass': ig.MinigameMazeChallenge,
        'strings': {
          'title': _STRINGS.Minigames.game4.title,
          'success': _STRINGS.Minigames.game4.success,
          'collectButton': _STRINGS.Minigames.game4.collectButton
        },
        'reward': 0xa,
        'cooldownHours': 0x18,
        'useSeededRandom': !0x0,
        'maze': {
          'size': 0xc,
          'wallColor': '#ffffff',
          'goalColor': '#ff2424',
          'playerColor': '#1c993f',
          'stepColor': '#f3fe2f',
          'playerSymbol': 'squarediamond',
          'goalSymbol': 'heart'
        },
        'sprite': new ig.Image('media/graphics/ui/minigames/games-panel.png'),
        'button': {
          'color': '#0c2759',
          'shadowColor': '#000000',
          'font': "54px archivo-black",
          'textColor': '#ffffff',
          'textOffsetY': 0x1
        },
        'rewardIcon': new ig.Image('media/graphics/ui/common/coin.png')
      },
      'minigamePopup': {
        'id': 'minigamePopup',
        'strings': {
          'title': _STRINGS.Minigames.title
        }
      }
    };
  };
}), ig.baked = !0x0, ig.module('plugins.minigame.minigame-utils').requires('impact.entity').defines(function () {
  ig.MinigameGameObject = ig.Entity.extend({
    'idleSheetInfo': null,
    'singleFrameImage': null,
    'visible': !0x0,
    'alpha': 0x1,
    'zIndex': 0x3e8,
    'drawAsRect': !0x1,
    'drawAsOutline': !0x1,
    'outlineWidth': 0x1,
    'rectColor': '#FFFFFF',
    'outlineColor': '#000000',
    'entryDelay': 0x0,
    'entryDuration': 0.25,
    'entryType': null,
    'exitDelay': 0x0,
    'exitDuration': 0.25,
    'exitType': null,
    'killOnExit': !0x0,
    'scaleX': 0x1,
    'scaleY': 0x1,
    'angle': 0x0,
    'anchorX': 0x0,
    'anchorY': 0x0,
    'forceDraw': !0x1,
    'width': 0x20,
    'height': 0x20,
    'onInputDown': null,
    'onInputUp': null,
    'onClicked': null,
    'enable': !0x0,
    'hasTouchInside': !0x1,
    'inputEnabled': !0x1,
    'isClicking': !0x1,
    'boundLeft': 0x0,
    'boundRight': 0x0,
    'boundTop': 0x0,
    'boundBottom': 0x0,
    'isFinishEntering': !0x1,
    'fixedOnCamera': !0x1,
    'anchorType': 'default',
    'timedLife': -0x3e7,
    'size': {
      'x': 0x20,
      'y': 0x20
    },
    'init': function (_0x1d8a8c, _0x437dcc, _0x10e7e5) {
      ig.MinigameTouch.hasInitialized || ig.MinigameTouch.init(), this.onInputDown = new ig.MinigameSignal(), this.onInputUp = new ig.MinigameSignal(), this.onClicked = new ig.MinigameSignal(), _0x10e7e5.singleFrameImage ? this.singleFrameImage = _0x10e7e5.singleFrameImage : _0x10e7e5.image && (this.image = this.singleFrameImage = _0x10e7e5.image), null != this.singleFrameImage ? (this.idleSheetInfo = {
        'sheetImage': this.singleFrameImage,
        'sheetX': 0x1,
        'sheetY': 0x1
      }, this.setSpriteSheet('idle'), this.setSize('idle'), this.addAnimation('idle', 'idleSheet', 0x1, [0x0], !0x1, !0x0)) : null != this.idleSheetInfo && (this.setSpriteSheet('idle'), this.setSize('idle')), this.parent(_0x1d8a8c, _0x437dcc, _0x10e7e5), !0x1 === _0x10e7e5.visible && (this.visible = !0x1), this.anchorType = _0x10e7e5.anchorType ? _0x10e7e5.anchorType : 'default', this.enter();
    },
    'swapImage': function (_0x43bc4f) {
      this.idleSheetInfo.sheetImage = _0x43bc4f, this.idleSheet.image = _0x43bc4f;
    },
    'onFinishEntering': function () {},
    'enter': function () {
      this.visible = !0x0;
      if (ig.responsive) {
        var _0x19fd45 = ig.responsive.toAnchor(this.anchoredPositionX, this.anchoredPositionY, this.anchorType);
        this.pos.x = _0x19fd45.x, this.pos.y = _0x19fd45.y;
      }
      null != this.entryType ? (this[this.entryType](), this.delayedCall(this.entryDelay + this.entryDuration, function () {
        this.onFinishEntering(), this.isFinishEntering = !0x0;
      }.bind(this))) : (this.isFinishEntering = !0x0, this.onFinishEntering());
    },
    'exit': function () {
      if (null != this.exitType) this[this.exitType]();else this.alpha0();
      this.delayedCall(this.exitDuration + this.exitDelay, function () {
        this.checkKill();
      }.bind(this));
    },
    'setSpriteSheet': function (_0x433bfb) {
      this[_0x433bfb + 'Sheet'] = new ig.AnimationSheet(this[_0x433bfb + 'SheetInfo'].sheetImage.path, this[_0x433bfb + 'SheetInfo'].sheetImage.width / this[_0x433bfb + 'SheetInfo'].sheetX, this[_0x433bfb + 'SheetInfo'].sheetImage.height / this[_0x433bfb + 'SheetInfo'].sheetY);
    },
    'setSize': function (_0x402924) {
      this.width = this[_0x402924 + 'SheetInfo'].sheetImage.width / this[_0x402924 + 'SheetInfo'].sheetX, this.height = this[_0x402924 + 'SheetInfo'].sheetImage.height / this[_0x402924 + 'SheetInfo'].sheetY;
    },
    'addAnimation': function (_0x5c1789, _0x5cdc55, _0x454183, _0x2d9058, _0x4dafd8, _0x408dfe) {
      this[_0x5c1789] = new ig.Animation(this[_0x5cdc55], _0x454183, _0x2d9058, !_0x4dafd8), !0x0 == _0x408dfe && (this.currentAnim = this[_0x5c1789]);
    },
    'makeFramesArray': function (_0x256eb2, _0x216446, _0x4ddf18) {
      for (var _0x383580 = [], _0x1ef4a6 = _0x256eb2; _0x1ef4a6 <= _0x216446; _0x1ef4a6++) _0x383580.push(_0x1ef4a6);
      if (_0x4ddf18) {
        for (_0x1ef4a6 = _0x216446; _0x1ef4a6 >= _0x256eb2; _0x1ef4a6--) _0x383580.push(_0x1ef4a6);
      }
      return _0x383580;
    },
    'draw': function () {
      if (!(0.01 > this.alpha) && this.visible && (this.forceDraw || this.currentAnim || this.drawAsRect || this.drawAsOutline)) {
        var _0x3ab335 = ig.system.context;
        _0x3ab335.save();
        var _0x114e43 = 0x0,
          _0x3304ab = 0x0;
        this.fixedOnCamera ? (_0x114e43 = ig.system.getDrawPos(this.pos.x.round() - this.offset.x), _0x3304ab = ig.system.getDrawPos(this.pos.y.round() - this.offset.y)) : (_0x114e43 = ig.system.getDrawPos(this.pos.x.round() - this.offset.x - ig.game.screen.x), _0x3304ab = ig.system.getDrawPos(this.pos.y.round() - this.offset.y - ig.game.screen.y)), _0x3ab335.translate(_0x114e43, _0x3304ab), (0x1 != this.scaleX || 0x1 != this.scaleY) && _0x3ab335.scale(this.scaleX, this.scaleY), _0x114e43 = -this.anchorX * this.width, _0x3304ab = -this.anchorY * this.height, 0x0 < this.shakeValue && (this.shakeValue -= ig.system.tick * this.shakeReductionMultiplier, _0x114e43 += ig.MinigameRandom.float(-this.shakeValue, this.shakeValue), _0x3304ab += ig.MinigameRandom.float(-this.shakeValue, this.shakeValue)), this.drawObject(_0x114e43, _0x3304ab), _0x3ab335.restore();
      }
    },
    'drawObject': function (_0x113ce5, _0x59513c) {
      var _0x2d0ad8 = ig.system.context,
        _0x55a887 = ig.hexToRgb(this.rectColor);
      this.drawAsRect && (_0x2d0ad8.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x55a887.r + ',' + _0x55a887.g + ',' + _0x55a887.b + ',' + this.alpha + ')' : _0x55a887.hex, _0x2d0ad8.fillRect(_0x113ce5, _0x59513c, this.width, this.height)), _0x55a887 = ig.hexToRgb(this.outlineColor), this.drawAsOutline ? (_0x2d0ad8.lineWidth = this.outlineWidth, _0x2d0ad8.strokeStyle = 0x1 > this.alpha ? 'rgba(' + _0x55a887.r + ',' + _0x55a887.g + ',' + _0x55a887.b + ',' + this.alpha + ')' : _0x55a887.hex, _0x2d0ad8.strokeRect(_0x113ce5, _0x59513c, this.width, this.height)) : null != this.currentAnim && (this.currentAnim.alpha = this.alpha, this.currentAnim.draw(_0x113ce5, _0x59513c));
    },
    'update': function () {
      ig.game.entities && this.parent();
      if (this.inputEnabled && this.isFinishEntering && this.visible && 0.01 < this.alpha) {
        var _0xda2f10 = !0x1;
        this.hasTouchInside = !0x1;
        for (var _0x946328 = 0x0; _0x946328 < ig.multitouchInput.touches.length; _0x946328++) {
          var _0xda2f10 = !0x0,
            _0x4c0b3b = ig.multitouchInput.touches[_0x946328];
          this.processInput(_0x4c0b3b.x, _0x4c0b3b.y);
        }
        for (_0x946328 = 0x0; _0x946328 < ig.MinigameTouch.touches.length; _0x946328++) _0xda2f10 = !0x0, _0x4c0b3b = ig.MinigameTouch.touches[_0x946328], this.processInput(_0x4c0b3b.x, _0x4c0b3b.y);
        !_0xda2f10 && ig.input.state('click') && (_0x946328 = ig.MinigameTouch.mouseX, _0x4c0b3b = ig.MinigameTouch.mouseY, 0x0 != _0x946328 && 0x0 != _0x4c0b3b && (this.processInput(_0x946328, _0x4c0b3b), _0xda2f10 = !0x0)), _0xda2f10 ? this.hasTouchInside || (this.isClicking = !0x1) : (this.isClicking && this.enable && (this.onInputUp.dispatch(this), this.onClicked.dispatch(this)), this.isClicking = !0x1);
      }
      -0x3e7 != this.timedLife && this.isFinishEntering && (this.timedLife -= ig.system.tick, 0x0 >= this.timedLife && (this.timedLife = -0x3e7, this.exit()));
    },
    'processInput': function (_0x5ab766, _0x1d05ea) {
      this.isInsideBounds(_0x5ab766, _0x1d05ea) && (this.hasTouchInside = !0x0, !this.isClicking && this.enable && (this.isClicking = !0x0, this.onInputDown.dispatch(this)));
    },
    'isInsideBounds': function (_0x2a70ca, _0x10d135) {
      var _0x592654 = this.scaleX * this.width,
        _0x219eb1 = this.scaleY * this.height;
      return this.boundLeft = this.pos.x - _0x592654 * this.anchorX, this.boundTop = this.pos.y - _0x219eb1 * this.anchorY, this.boundRight = this.boundLeft + _0x592654, this.boundBottom = this.boundTop + _0x219eb1, this.boundLeft > this.boundRight && (_0x592654 = this.boundLeft, this.boundLeft = this.boundRight, this.boundRight = _0x592654), this.boundTop > this.boundBottom && (_0x592654 = this.boundTop, this.boundTop = this.boundBottom, this.boundBottom = _0x592654), _0x2a70ca < this.boundLeft || _0x10d135 < this.boundTop || _0x2a70ca > this.boundRight || _0x10d135 > this.boundBottom ? !0x1 : !0x0;
    },
    'getBounds': function () {
      this._bounds || (this._bounds = {});
      var _0x59c3af = this._bounds,
        _0x3b8eaf = this.scaleX * this.width,
        _0x271853 = this.scaleY * this.height;
      return _0x59c3af.left = this.pos.x - _0x3b8eaf * this.anchorX, _0x59c3af.top = this.pos.y - _0x271853 * this.anchorY, _0x59c3af.right = _0x59c3af.left + _0x3b8eaf, _0x59c3af.bottom = _0x59c3af.top + _0x271853, _0x59c3af.width = Math.abs(_0x3b8eaf), _0x59c3af.height = Math.abs(_0x271853), _0x59c3af.left > _0x59c3af.right && (_0x3b8eaf = _0x59c3af.left, _0x59c3af.left = _0x59c3af.right, _0x59c3af.right = _0x3b8eaf), _0x59c3af.top > _0x59c3af.bottom && (_0x3b8eaf = _0x59c3af.top, _0x59c3af.top = _0x59c3af.bottom, _0x59c3af.bottom = _0x3b8eaf), _0x59c3af.x = _0x59c3af.left, _0x59c3af.y = _0x59c3af.top, _0x59c3af;
    },
    'isCollidingWith': function (_0x505dc0) {
      var _0x67952 = this.getBounds();
      return _0x505dc0 = _0x505dc0.getBounds(), _0x67952.right < _0x505dc0.left || _0x67952.left > _0x505dc0.right || _0x67952.bottom < _0x505dc0.top || _0x67952.top > _0x505dc0.bottom ? !0x1 : !0x0;
    },
    'shakeValue': 0x0,
    'shakeReductionMultiplier': 0x0,
    'shake': function (_0x3529e4, _0x4d096f) {
      _0x3529e4 || (_0x3529e4 = 0x5), _0x4d096f || (_0x4d096f = 0xa), this.shakeValue = _0x3529e4, this.shakeReductionMultiplier = _0x4d096f;
    },
    'fadeIn': function () {
      var _0x4a46aa = this.alpha;
      this.alpha = 0x0, this.tween({
        'alpha': _0x4a46aa
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'fadeOut': function () {
      this.tween({
        'alpha': 0x0
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'alpha0': function () {
      this.alpha = 0x0;
    },
    'alpha1': function () {
      this.alpha = 0x1;
    },
    'checkKill': function () {
      this.killOnExit && this.kill();
    }
  }), ig.MinigameTextRenderer = ig.Class.extend({
    'text': '',
    'font': "48px Arial",
    'color': '#000000',
    'alpha': 0x1,
    'align': 'start',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'lineSpacing': 0x1,
    'valign': 'default',
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0x1,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    '_previousText': '',
    '_multiline': !0x1,
    '_lines': [],
    '_lineHeightInPixel': 0x0,
    'init': function () {},
    'draw': function (_0x14436a, _0x50bfee) {
      void 0x0 === _0x14436a && (_0x14436a = 0x0), void 0x0 === _0x50bfee && (_0x50bfee = 0x0), this.enableShadow && this.drawText(_0x14436a + this.shadowOffsetX, _0x50bfee + this.shadowOffsetY, this.shadowAlpha * this.alpha, this.shadowColor, this.shadowColor), this.drawText(_0x14436a, _0x50bfee, this.alpha, this.color, this.outlineColor);
    },
    'drawText': function (_0x2e997d, _0x1d5cc9, _0xf60fb5, _0x3ab4b0, _0x2f2c85) {
      if (0x0 < this.text.length) {
        this._previousTextString != this.text && (this._previousTextString = this.text, this._lines = this.text.split(/\r?\n/), this._multiline = 0x1 < this._lines.length ? !0x0 : !0x1, this._lineHeightInPixel = parseInt(this.font.split('px')[0x0].split(" ").pop()) * this.lineSpacing, isNaN(this._lineHeightInPixel) && console.error("'" + this.font + "' is a wrong font string format, error when rendering " + this.text));
        var _0xbe4530 = ig.system.context;
        _0xbe4530.save(), _0xbe4530.font = this.font, _0xbe4530.textAlign = this.align, _0xbe4530.lineWidth = 0x2 * this.outlineWeight, _0xbe4530.lineCap = this.outlineCap, _0xbe4530.lineJoin = this.outlineJoin, _0xbe4530.miterLimit = 0x2 * this.outlineWeight, 0x1 > _0xf60fb5 ? (_0x3ab4b0 = ig.hexToRgb(_0x3ab4b0), _0xbe4530.fillStyle = 'rgba(' + _0x3ab4b0.r + ',' + _0x3ab4b0.g + ',' + _0x3ab4b0.b + ',' + _0xf60fb5 + ')', _0x3ab4b0 = ig.hexToRgb(_0x2f2c85), _0xbe4530.strokeStyle = 'rgba(' + _0x3ab4b0.r + ',' + _0x3ab4b0.g + ',' + _0x3ab4b0.b + ',' + _0xf60fb5 + ')') : (_0xbe4530.fillStyle = _0x3ab4b0, _0xbe4530.strokeStyle = _0x2f2c85), _0x2e997d += this.offsetX, _0xf60fb5 = _0x1d5cc9 + this.offsetY;
        if (this._multiline) {
          _0x1d5cc9 = _0xf60fb5, 'center' == this.valign && (_0x1d5cc9 = _0xf60fb5 - (this._lines.length - 0x1) * this._lineHeightInPixel / 0x2);
          for (_0xf60fb5 = 0x0; _0xf60fb5 < this._lines.length; _0xf60fb5++) _0x2f2c85 = this._lines[_0xf60fb5], 0x0 < this.outlineWeight && _0xbe4530.strokeText(_0x2f2c85, _0x2e997d, _0x1d5cc9 + _0xf60fb5 * this._lineHeightInPixel), _0xbe4530.fillText(_0x2f2c85, _0x2e997d, _0x1d5cc9 + _0xf60fb5 * this._lineHeightInPixel);
        } else 'center' == this.valign && (_0xf60fb5 += this._lineHeightInPixel / 0x2), 0x0 < this.outlineWeight && _0xbe4530.strokeText(this.text, _0x2e997d, _0xf60fb5), _0xbe4530.fillText(this.text, _0x2e997d, _0xf60fb5);
        _0xbe4530.restore();
      }
    },
    'measureTextWidth': function () {
      var _0x58e15d = ig.system.context;
      _0x58e15d.save(), _0x58e15d.font = this.font, _0x58e15d.textAlign = 'left';
      var _0x2713c8 = _0x58e15d.measureText(this.text);
      return _0x58e15d.restore(), _0x2713c8.width;
    }
  }), ig.MinigameTextField = ig.MinigameGameObject.extend({
    'text': '',
    'font': "48px Arial",
    'color': '#FFFFFF',
    'align': 'start',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'lineSpacing': 0x1,
    'valign': 'top',
    'textRenderer': null,
    'forceDraw': !0x0,
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0.4,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    'zIndex': 0x1b58,
    'init': function (_0x1ebdff, _0x4aad74, _0x2c1775) {
      this.parent(_0x1ebdff, _0x4aad74, _0x2c1775), this.textRenderer = new ig.MinigameTextRenderer();
    },
    'drawObject': function (_0xcd7ccf, _0x202862) {
      this.parent(_0xcd7ccf, _0x202862), this.visible && (this.applyProperties(), this.textRenderer.draw(_0xcd7ccf, _0x202862));
    },
    'applyProperties': function () {
      this.textRenderer.text = this.text, this.textRenderer.font = this.font, this.textRenderer.color = this.color, this.textRenderer.alpha = this.alpha, this.textRenderer.align = this.align, this.textRenderer.offsetX = this.offsetX, this.textRenderer.offsetY = this.offsetY, this.textRenderer.lineSpacing = this.lineSpacing, this.textRenderer.valign = this.valign, this.textRenderer.enableShadow = this.enableShadow, this.textRenderer.shadowAlpha = this.shadowAlpha, this.textRenderer.shadowColor = this.shadowColor, this.textRenderer.shadowOffsetX = this.shadowOffsetX, this.textRenderer.shadowOffsetY = this.shadowOffsetY, this.textRenderer.outlineWeight = this.outlineWeight, this.textRenderer.outlineColor = this.outlineColor, this.textRenderer.outlineCap = this.outlineCap, this.textRenderer.outlineJoin = this.outlineJoin;
    },
    'getTextWidth': function () {
      return this.applyProperties(), this.textRenderer.measureTextWidth();
    }
  }), ig.MinigameSimpleButton = ig.MinigameGameObject.extend({
    'originalX': 0x0,
    'originalY': 0x0,
    'transitionInDelay': 0x0,
    'zIndex': 0x1b58,
    'text': '',
    'font': "48px Arial",
    'textColor': '#FFFFFF',
    'align': 'center',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'anchorX': 0.5,
    'anchorY': 0.5,
    'lineSpacing': 0x1,
    'valign': 'center',
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0.4,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    'normalScale': 0x1,
    'usePressedTween': !0x0,
    'textRenderer': null,
    'forceDraw': !0x0,
    'prevText': '',
    'init': function (_0x25f2b2, _0x4dffe6, _0x4a12e5) {
      this.parent(_0x25f2b2, _0x4dffe6, _0x4a12e5), this.textRenderer = new ig.MinigameTextRenderer(), this.image && (this.width = this.image.width, this.height = this.image.height);
    },
    'update': function () {
      this.parent();
      if (this.usePressedTween && this.enable && this.visible) {
        var _0x1d1e09 = 0.9 * this.normalScale,
          _0x303605 = 0.9 * this.normalScale,
          _0x1d1e09 = this.hasTouchInside ? 0.9 * this.normalScale : this.normalScale,
          _0x303605 = 0x0 > this.scaleX ? -0x1 * _0x1d1e09 : _0x1d1e09,
          _0x1d1e09 = 0x0 > this.scaleY ? -0x1 * _0x1d1e09 : _0x1d1e09;
        this.scaleX += (_0x303605 - this.scaleX) / 0x3, this.scaleY += (_0x1d1e09 - this.scaleY) / 0x3;
      }
    },
    'drawObject': function (_0x3566bf, _0x5da4af) {
      this.parent(_0x3566bf, _0x5da4af);
      if (this.visible) {
        this.textRenderer.text = this.text, this.textRenderer.font = this.font, this.textRenderer.color = this.textColor, this.textRenderer.alpha = this.alpha, this.textRenderer.align = this.align, this.textRenderer.offsetX = this.offsetX, this.textRenderer.offsetY = this.offsetY, this.textRenderer.lineSpacing = this.lineSpacing, this.textRenderer.valign = this.valign, this.textRenderer.enableShadow = this.enableShadow, this.textRenderer.shadowAlpha = this.shadowAlpha, this.textRenderer.shadowColor = this.shadowColor, this.textRenderer.shadowOffsetX = this.shadowOffsetX, this.textRenderer.shadowOffsetY = this.shadowOffsetY, this.textRenderer.outlineWeight = this.outlineWeight, this.textRenderer.outlineColor = this.outlineColor, this.textRenderer.outlineCap = this.outlineCap, this.textRenderer.outlineJoin = this.outlineJoin;
        if (this.prevText != this.text) {
          this.prevText = this.text;
          var _0x4319e9 = ig.system.context;
          _0x4319e9.save(), _0x4319e9.font = this.font;
          var _0x3d79b4 = _0x4319e9.measureText(this.text);
          this.centerYOffset = parseInt(this.font.split('px')[0x0].split(" ").pop()) / 0x2 - _0x3d79b4.actualBoundingBoxAscent, _0x4319e9.restore();
        }
        this.textRenderer.draw(_0x3566bf + this.width / 0x2, _0x5da4af + this.height / 0x2 + this.centerYOffset);
      }
    },
    'onFinishEntering': function () {
      this.inputEnabled = !0x0;
    }
  }), ig.extractHeightFromFontString = function (_0x6a2164) {
    return parseInt(_0x6a2164.split('px')[0x0].split(" ").pop());
  }, ig.hexToRgb = function (_0xa0a5e5) {
    ig.hexToRgbTable || (ig.hexToRgbTable = {});
    if (ig.hexToRgbTable[_0xa0a5e5]) return ig.hexToRgbTable[_0xa0a5e5];
    var _0x5bb8af = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(_0xa0a5e5);
    if (_0x5bb8af) return ig.hexToRgbTable[_0xa0a5e5] = {
      'r': parseInt(_0x5bb8af[0x1], 0x10),
      'g': parseInt(_0x5bb8af[0x2], 0x10),
      'b': parseInt(_0x5bb8af[0x3], 0x10),
      'hex': _0xa0a5e5
    }, ig.hexToRgbTable[_0xa0a5e5];
    return console.log("cannot convert to rgb from hex :", _0xa0a5e5), null;
  }, ig.MinigameSignal = ig.Class.extend({
    'signalListeners': null,
    'id': 0x0,
    'init': function () {
      this.id = ++ig.MinigameSignal._lastId, this.signalListeners = [];
    },
    'addOnce': function (_0xb1cf40, _0x4399a8) {
      this.signalListeners.push({
        'signalListener': _0xb1cf40,
        'signalContext': _0x4399a8,
        'isOnce': !0x0
      });
    },
    'add': function (_0x1a4f9e, _0x27d9b7) {
      this.signalListeners.push({
        'signalListener': _0x1a4f9e,
        'signalContext': _0x27d9b7,
        'isOnce': !0x1
      });
    },
    'dispatch': function () {
      for (var _0x1b1c4f = 0x0; _0x1b1c4f < this.signalListeners.length;) {
        var _0x263f59 = this.signalListeners[_0x1b1c4f];
        _0x263f59.signalListener.apply(_0x263f59.signalContext, arguments), _0x263f59.isOnce ? this.signalListeners.splice(_0x1b1c4f, 0x1) : _0x1b1c4f++;
      }
    },
    'clear': function () {
      this.signalListeners = [];
    }
  }), ig.MinigameSignal._lastId = 0x0, ig.MinigameTouch = {
    'hasInitialized': !0x1,
    'touches': [],
    'mouseX': 0x0,
    'mouseY': 0x0,
    'init': function () {
      ig.ua.touchDevice && (window.navigator.msPointerEnabled && (ig.system.canvas.addEventListener('MSPointerDown', this.touchDown.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerUp', this.touchUp.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerMove', this.touchMove.bind(this), !0x1), ig.system.canvas.style.msContentZooming = 'none', ig.system.canvas.style.msTouchAction = 'none'), ig.system.canvas.addEventListener('touchstart', this.touchDown.bind(this), !0x1), ig.system.canvas.addEventListener('touchend', this.touchUp.bind(this), !0x1), ig.system.canvas.addEventListener('touchmove', this.touchMove.bind(this), !0x1)), ig.system.canvas.addEventListener('mousemove', this.mouseMove.bind(this), !0x1), this.hasInitialized = !0x0;
    },
    'mouseMove': function (_0x1be9c5) {
      var _0xa5a25d = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x1e3905 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
      this.scaleX = ig.system.scale * (_0xa5a25d / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x1e3905 / ig.system.realHeight), _0xa5a25d = {
        'left': 0x0,
        'top': 0x0
      }, ig.system.canvas.getBoundingClientRect && (_0xa5a25d = ig.system.canvas.getBoundingClientRect()), this.mouseX = (_0x1be9c5.clientX - _0xa5a25d.left) / this.scaleX, this.mouseY = (_0x1be9c5.clientY - _0xa5a25d.top) / this.scaleY;
    },
    'touchDown': function (_0x1daa87) {
      this.processTouch(_0x1daa87.touches);
    },
    'touchUp': function (_0x14ef49) {
      this.processTouch(_0x14ef49.touches);
    },
    'touchMove': function (_0x45f322) {
      this.processTouch(_0x45f322.touches);
    },
    'processTouch': function (_0x2d397c) {
      var _0x4074ef = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x17b062 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
      this.scaleX = ig.system.scale * (_0x4074ef / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x17b062 / ig.system.realHeight), _0x4074ef = {
        'left': 0x0,
        'top': 0x0
      }, ig.system.canvas.getBoundingClientRect && (_0x4074ef = ig.system.canvas.getBoundingClientRect()), this.touches = [];
      for (_0x17b062 = 0x0; _0x17b062 < _0x2d397c.length; _0x17b062++) {
        var _0x5ea8fa = _0x2d397c[_0x17b062];
        this.touches.push({
          'x': (_0x5ea8fa.clientX - _0x4074ef.left) / this.scaleX,
          'y': (_0x5ea8fa.clientY - _0x4074ef.top) / this.scaleY
        });
      }
    }
  }, ig.Entity.prototype.delayedCall = function (_0x30bb8a, _0x56fde5, _0x20c0d1) {
    return void 0x0 === _0x20c0d1 && (_0x20c0d1 = !0x0), _0x30bb8a = new ig.Tween(this, {}, _0x30bb8a, {
      'onComplete': _0x56fde5
    }), this.tweens.push(_0x30bb8a), _0x20c0d1 && _0x30bb8a.start(), _0x30bb8a;
  }, ig.MinigameRandom = {
    'chance': function (_0x59f54b) {
      return Math.random() < _0x59f54b;
    },
    'bool': function () {
      return 0.5 > Math.random();
    },
    'int': function (_0x4b4ab4, _0x3546af) {
      return _0x4b4ab4 + Math.floor((_0x3546af - _0x4b4ab4 + 0x1) * Math.random());
    },
    'float': function (_0x1dd7bb, _0xbf745d) {
      return _0x1dd7bb + (_0xbf745d - _0x1dd7bb) * Math.random();
    },
    'string': function (_0x5372e1, _0x44bf2d) {
      void 0x0 === _0x44bf2d && (_0x44bf2d = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');
      for (var _0x2292ac = '', _0x2a8fe8 = 0x0; _0x2a8fe8 < _0x5372e1; _0x2a8fe8++) _0x2292ac += _0x44bf2d.charAt(Random.int(0x0, _0x44bf2d.length - 0x1));
      return _0x2292ac;
    },
    'fromArray': function (_0x3116a0) {
      return null != _0x3116a0 && 0x0 < _0x3116a0.length ? _0x3116a0[this.int(0x0, _0x3116a0.length - 0x1)] : null;
    },
    'shuffle': function (_0x3f589a) {
      if (null != _0x3f589a) for (var _0x187765 = 0x0; _0x187765 < _0x3f589a.length; _0x187765++) {
        var _0x34c485 = this.int(0x0, _0x3f589a.length - 0x1),
          _0x4cdea5 = _0x3f589a[_0x187765];
        _0x3f589a[_0x187765] = _0x3f589a[_0x34c485], _0x3f589a[_0x34c485] = _0x4cdea5;
      }
      return _0x3f589a;
    }
  }, ig.MinigamePRNG = ig.Class.extend({
    'init': function (_0x5d25e2) {
      _0x5d25e2 || (_0x5d25e2 = Math.round(0x186a0 * Math.random())), this._seed = _0x5d25e2 % 0x7fffffff, 0x0 >= this._seed && (this._seed += 0x7ffffffe), _0x5d25e2 = Math.pow(_0x5d25e2 % 0x5, 0x3);
      for (var _0x4faee9 = 0x0; _0x4faee9 < _0x5d25e2 + 0x21; _0x4faee9++) this.nextInt();
    },
    'nextInt': function () {
      return this._seed = 0x41a7 * this._seed % 0x7fffffff;
    },
    'nextIntRange': function (_0x57f9f3, _0x1168bd) {
      return _0x57f9f3 + Math.floor((_0x1168bd - _0x57f9f3 + 0x1) * this.nextFloat());
    },
    'nextFloat': function () {
      return (this.nextInt() - 0x1) / 0x7ffffffe;
    },
    'fromArray': function (_0x553200) {
      return null != _0x553200 && 0x0 < _0x553200.length ? _0x553200[this.nextIntRange(0x0, _0x553200.length - 0x1)] : null;
    },
    'nextString': function (_0x4339e8, _0x553744) {
      _0x4339e8 += _0x4339e8;
      for (var _0x1f89e4 = ''; _0x1f89e4.length < _0x553744;) {
        var _0x1b6b8d = _0x4339e8[Math.floor(this.nextFloat() * _0x4339e8.length)];
        if (0x0 == _0x1f89e4.length || _0x1b6b8d != _0x1f89e4[_0x1f89e4.length - 0x1]) _0x1f89e4 += _0x1b6b8d;
      }
      return _0x1f89e4;
    },
    'shuffle': function (_0x5a4d9c) {
      if (null != _0x5a4d9c) for (var _0x1e7743 = 0x0; _0x1e7743 < _0x5a4d9c.length; _0x1e7743++) {
        var _0xf53c28 = this.nextIntRange(0x0, _0x5a4d9c.length - 0x1),
          _0x49455a = _0x5a4d9c[_0x1e7743];
        _0x5a4d9c[_0x1e7743] = _0x5a4d9c[_0xf53c28], _0x5a4d9c[_0xf53c28] = _0x49455a;
      }
      return _0x5a4d9c;
    }
  }), ig.MinigameRoundedRect = {
    'cache': {},
    'drawShadowedRoundedRect': function (_0x179fa6, _0x28a109, _0x5f4925, _0x3daad0, _0x453575, _0x36eaa7, _0x14bef2, _0x5a899a, _0xfea670) {
      0x0 != _0x3daad0 && 0x0 != _0x453575 && (_0x14bef2 || (_0x14bef2 = '#ffffff'), _0x5a899a || (_0x5a899a = '#666666'), !_0x36eaa7 && 0x0 != _0x36eaa7 && (_0x36eaa7 = 0xa), _0x3daad0 = this.getShadowedRoundedRectCache(_0x3daad0, _0x453575, _0x36eaa7, _0x14bef2, _0x5a899a, _0xfea670), _0x179fa6.drawImage(_0x3daad0, _0x28a109, _0x5f4925));
    },
    'getShadowedRoundedRectCache': function (_0x37c51b, _0x904d60, _0x2d38ce, _0x2f2a9c, _0xed369f, _0x22c8f9) {
      var _0x3d9375 = 'canvasShadowed|' + _0x37c51b + '|' + _0x904d60 + '|' + _0x2d38ce + '|' + _0x2f2a9c + '|' + _0xed369f + '|' + _0x22c8f9;
      if (this.cache[_0x3d9375]) return this.cache[_0x3d9375];
      var _0x3a1efc = ig.$new('canvas');
      _0x3a1efc.width = _0x37c51b, _0x3a1efc.height = _0x904d60;
      var _0xadb233 = _0x3a1efc.getContext('2d');
      return this.drawRoundedRect(_0xadb233, 0x0, _0x2d38ce, _0x37c51b, _0x904d60 - _0x2d38ce, _0x2d38ce, _0xed369f), this.drawRoundedRect(_0xadb233, 0x0, 0x0, _0x37c51b, _0x904d60 - _0x22c8f9, _0x2d38ce, _0x2f2a9c), this.cache[_0x3d9375] = _0x3a1efc;
    },
    'drawRoundedRect': function (_0xd45126, _0x3bd396, _0x3c0864, _0x2a06e4, _0x541015, _0x2a477f, _0x32133d) {
      0x0 != _0x2a06e4 && 0x0 != _0x541015 && (_0x32133d || (_0x32133d = '#ffffff'), _0x2a06e4 = Math.round(_0x2a06e4), _0x541015 = Math.round(_0x541015), _0x2a477f = Math.round(_0x2a477f), _0x2a477f = this.getCache(_0x2a06e4, _0x541015, _0x2a477f, _0x32133d), _0xd45126.drawImage(_0x2a477f, _0x3bd396, _0x3c0864, _0x2a06e4, _0x541015));
    },
    'getCache': function (_0x3a37f9, _0x4147b2, _0x16d805, _0x465602) {
      _0x3a37f9 = Math.round(_0x3a37f9), _0x4147b2 = Math.round(_0x4147b2), _0x16d805 = Math.round(_0x16d805);
      var _0x449a6b = 'canvas|' + _0x3a37f9 + '|' + _0x4147b2 + '|' + _0x16d805 + '|' + _0x465602;
      if (this.cache[_0x449a6b]) return this.cache[_0x449a6b];
      var _0x65aa0c = ig.$new('canvas');
      _0x65aa0c.width = _0x3a37f9, _0x65aa0c.height = _0x4147b2;
      var _0x5c66d4 = _0x65aa0c.getContext('2d');
      return _0x5c66d4.fillStyle = _0x465602, _0x5c66d4.fillRect(_0x16d805, 0x0, _0x3a37f9 - 0x2 * _0x16d805, _0x4147b2), _0x5c66d4.fillRect(0x0, _0x16d805, _0x3a37f9, _0x4147b2 - 0x2 * _0x16d805), _0x5c66d4.beginPath(), _0x5c66d4.arc(_0x16d805, _0x16d805, _0x16d805, 0x0, 0x2 * Math.PI), _0x5c66d4.fill(), _0x5c66d4.closePath(), _0x5c66d4.beginPath(), _0x5c66d4.arc(_0x3a37f9 - _0x16d805, _0x16d805, _0x16d805, 0x0, 0x2 * Math.PI), _0x5c66d4.fill(), _0x5c66d4.closePath(), _0x5c66d4.beginPath(), _0x5c66d4.arc(_0x16d805, _0x4147b2 - _0x16d805, _0x16d805, 0x0, 0x2 * Math.PI), _0x5c66d4.fill(), _0x5c66d4.closePath(), _0x5c66d4.beginPath(), _0x5c66d4.arc(_0x3a37f9 - _0x16d805, _0x4147b2 - _0x16d805, _0x16d805, 0x0, 0x2 * Math.PI), _0x5c66d4.fill(), _0x5c66d4.closePath(), this.cache[_0x449a6b] = _0x65aa0c;
    }
  }, ig.MinigameRoundedButton = ig.MinigameSimpleButton.extend({
    'zIndex': 0x63,
    'entryType': 'fadeIn',
    'exitType': 'fadeOut',
    'radius': 0xa,
    'color': '#555555',
    'shadowColor': '#222222',
    'shadowDistance': 0x5,
    'symbol': 'none',
    'symbolColor': '#ffffff',
    'symbolSize': 0x1e,
    'init': function (_0x1f06dd, _0x4ff4ef, _0x2df673) {
      this.parent(_0x1f06dd, _0x4ff4ef, _0x2df673);
    },
    'exit': function () {
      this.parent();
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent();
    },
    'drawObject': function (_0x1d629b, _0x8f5d70) {
      var _0x27364a = ig.system.context;
      _0x27364a.save(), _0x27364a.globalAlpha = this.alpha;
      if (this.currentAnim) _0x27364a.restore();else {
        if (0x0 < this.shadowDistance ? ig.MinigameRoundedRect.drawShadowedRoundedRect(_0x27364a, _0x1d629b, _0x8f5d70, this.width, this.height, this.radius, this.color, this.shadowColor, this.shadowDistance) : 0x0 > this.shadowDistance || ig.MinigameRoundedRect.drawRoundedRect(_0x27364a, _0x1d629b, _0x8f5d70, this.width, this.height, this.radius, this.color), _0x27364a.restore(), this.symbol && '' != this.symbol) {
          var _0x420aaf = 0x2 * Math.round(0.75 * this.symbolSize),
            _0x2cada1 = _0x1d629b + this.width / 0x2,
            _0x2fe688 = _0x8f5d70 + this.height / 0x2 - this.shadowDistance / 0x2;
          ig.MinigameSymbolCanvas || (ig.MinigameSymbolCanvas = ig.$new('canvas'), ig.MinigameSymbolCanvas.width = 0x3e8, ig.MinigameSymbolCanvas.height = 0x3e8);
          var _0x522199 = ig.MinigameSymbolCanvas.getContext('2d');
          _0x522199.clearRect(0x0, 0x0, _0x420aaf, _0x420aaf), ig.MinigameDrawHelper.drawSymbol(_0x522199, this.symbol, _0x420aaf / 0x2, _0x420aaf / 0x2, this.symbolColor, this.symbolSize) && (_0x27364a.globalAlpha = this.alpha, _0x27364a.drawImage(ig.MinigameSymbolCanvas, 0x1, 0x1, _0x420aaf - 0x2, _0x420aaf - 0x2, _0x2cada1 - _0x420aaf / 0x2, _0x2fe688 - _0x420aaf / 0x2, _0x420aaf, _0x420aaf), _0x27364a.globalAlpha = 0x1);
        }
      }
      this.parent(_0x1d629b, _0x8f5d70);
    }
  }), ig.MinigameDrawHelper = {
    'drawSymbol': function (_0x53549d, _0x2b1bc2, _0x237f8d, _0x4c319e, _0x40edb2, _0x4ac812) {
      switch (_0x2b1bc2) {
        case 'exit':
          _0x53549d.lineWidth = Math.ceil(_0x4ac812 / 0x3), _0x53549d.lineCap = 'square', _0x53549d.strokeStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e - _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x2, _0x4c319e + _0x4ac812 / 0x2), _0x53549d.closePath(), _0x53549d.stroke(), _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e + _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x2, _0x4c319e - _0x4ac812 / 0x2), _0x53549d.closePath(), _0x53549d.stroke();
          break;
        case 'next':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d - _0x4ac812 / 0x3, _0x4c319e - _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d - _0x4ac812 / 0x3, _0x4c319e + _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x2, _0x4c319e), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'prev':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d + _0x4ac812 / 0x3, _0x4c319e - _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x3, _0x4c319e + _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'circle':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d, _0x4c319e, _0x4ac812 / 0x2, 0x0, 0x2 * Math.PI), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'square':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.fillRect(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e - _0x4ac812 / 0x2, _0x4ac812, _0x4ac812);
          break;
        case 'plus':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.fillRect(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e - 0.2 * _0x4ac812, _0x4ac812, 0.4 * _0x4ac812), _0x53549d.fillRect(_0x237f8d - 0.2 * _0x4ac812, _0x4c319e - _0x4ac812 / 0x2, 0.4 * _0x4ac812, _0x4ac812);
          break;
        case 'triangle':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e + 0.43 * _0x4ac812), _0x53549d.lineTo(_0x237f8d, _0x4c319e - 0.43 * _0x4ac812), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x2, _0x4c319e + 0.43 * _0x4ac812), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'up':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e + 0.3 * _0x4ac812), _0x53549d.lineTo(_0x237f8d, _0x4c319e - 0.4 * _0x4ac812), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x2, _0x4c319e + 0.3 * _0x4ac812), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'down':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e - 0.3 * _0x4ac812), _0x53549d.lineTo(_0x237f8d, _0x4c319e + 0.4 * _0x4ac812), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x2, _0x4c319e - 0.3 * _0x4ac812), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'left':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d + 0.3 * _0x4ac812, _0x4c319e - 0.5 * _0x4ac812), _0x53549d.lineTo(_0x237f8d - 0.4 * _0x4ac812, _0x4c319e), _0x53549d.lineTo(_0x237f8d + 0.3 * _0x4ac812, _0x4c319e + 0.5 * _0x4ac812), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'right':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d - 0.3 * _0x4ac812, _0x4c319e - 0.5 * _0x4ac812), _0x53549d.lineTo(_0x237f8d + 0.4 * _0x4ac812, _0x4c319e), _0x53549d.lineTo(_0x237f8d - 0.3 * _0x4ac812, _0x4c319e + 0.5 * _0x4ac812), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'star':
          _0x53549d.fillStyle = _0x40edb2, this.drawStarPath(_0x53549d, _0x237f8d, _0x4c319e, 0x5, _0x4ac812 / 0x2, _0x4ac812 / 0x4), _0x53549d.fill();
          break;
        case 'hexagon':
          _0x53549d.fillStyle = _0x40edb2, this.drawPolygonPath(_0x53549d, _0x237f8d, _0x4c319e, 0x6, _0x4ac812 / 0x2), _0x53549d.fill();
          break;
        case 'diamond':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d, _0x4c319e - _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d - _0x4ac812 / 0x4, _0x4c319e), _0x53549d.lineTo(_0x237f8d, _0x4c319e + _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x4, _0x4c319e), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'squarediamond':
          _0x53549d.fillStyle = _0x40edb2, _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d, _0x4c319e - _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d - _0x4ac812 / 0x2, _0x4c319e), _0x53549d.lineTo(_0x237f8d, _0x4c319e + _0x4ac812 / 0x2), _0x53549d.lineTo(_0x237f8d + _0x4ac812 / 0x2, _0x4c319e), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'flower':
          _0x53549d.fillStyle = _0x40edb2, _0x2b1bc2 = 0.2 * _0x4ac812, _0x40edb2 = 0.3 * _0x4ac812;
          var _0x160e37 = 0x2 * Math.PI;
          _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d, _0x4c319e, _0x2b1bc2, 0x0, _0x160e37), _0x53549d.closePath(), _0x53549d.fill(), _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d, _0x4c319e - _0x40edb2, _0x2b1bc2, 0x0, _0x160e37), _0x53549d.closePath(), _0x53549d.fill(), _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d, _0x4c319e + _0x40edb2, _0x2b1bc2, 0x0, _0x160e37), _0x53549d.closePath(), _0x53549d.fill(), _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d - _0x40edb2, _0x4c319e, _0x2b1bc2, 0x0, _0x160e37), _0x53549d.closePath(), _0x53549d.fill(), _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d + _0x40edb2, _0x4c319e, _0x2b1bc2, 0x0, _0x160e37), _0x53549d.closePath(), _0x53549d.fill();
          break;
        case 'heart':
          _0x53549d.fillStyle = _0x40edb2, _0x2b1bc2 = 0.27 * _0x4ac812, _0x40edb2 = 0.22 * _0x4ac812;
          var _0x59ebc8 = 0.14625 * _0x2b1bc2,
            _0x160e37 = 0x2 * Math.PI;
          _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d - _0x40edb2, _0x4c319e - _0x40edb2 + _0x59ebc8, _0x2b1bc2, 0x0, _0x160e37), _0x53549d.closePath(), _0x53549d.fill(), _0x53549d.beginPath(), _0x53549d.arc(_0x237f8d + _0x40edb2, _0x4c319e - _0x40edb2 + _0x59ebc8, _0x2b1bc2, 0x0, _0x160e37), _0x53549d.closePath(), _0x53549d.fill(), _0x53549d.beginPath(), _0x53549d.moveTo(_0x237f8d, _0x4c319e - 0.3 * _0x4ac812 + _0x59ebc8), _0x53549d.lineTo(_0x237f8d - _0x40edb2 - 0.707 * _0x2b1bc2, _0x4c319e - _0x40edb2 + 0.707 * _0x2b1bc2 + _0x59ebc8), _0x53549d.lineTo(_0x237f8d, _0x4c319e - _0x40edb2 + 2.415 * _0x2b1bc2 + _0x59ebc8), _0x53549d.lineTo(_0x237f8d + _0x40edb2 + 0.707 * _0x2b1bc2, _0x4c319e - _0x40edb2 + 0.707 * _0x2b1bc2 + _0x59ebc8), _0x53549d.closePath(), _0x53549d.fill();
          break;
        default:
          return !0x1;
      }
      return !0x0;
    },
    'drawPolygonPath': function (_0x38f558, _0x503460, _0x5a498b, _0x382fa3, _0x3899fa) {
      _0x38f558.beginPath(), _0x38f558.moveTo(_0x503460 + _0x3899fa * Math.cos(0x0), _0x5a498b + _0x3899fa * Math.sin(0x0));
      for (var _0x237230 = 0x1; _0x237230 < _0x382fa3; _0x237230 += 0x1) _0x38f558.lineTo(_0x503460 + _0x3899fa * Math.cos(0x2 * _0x237230 * Math.PI / _0x382fa3), _0x5a498b + _0x3899fa * Math.sin(0x2 * _0x237230 * Math.PI / _0x382fa3));
      _0x38f558.closePath();
    },
    'drawStarPath': function (_0x47bbc4, _0x3b2410, _0x563357, _0x2a989c, _0x364965, _0x4f3551) {
      _0x4f3551 = Math.floor(_0x4f3551), _0x364965 = Math.floor(_0x364965);
      var _0x385588 = 0x3 * (Math.PI / 0x2),
        _0x5baec9 = 0x0,
        _0x2bf05a = 0x0,
        _0x26d0e8 = Math.PI / _0x2a989c;
      _0x47bbc4.beginPath();
      for (var _0x559508 = 0x0; _0x559508 < _0x2a989c; _0x559508++) _0x5baec9 = Math.round(_0x3b2410 + Math.cos(_0x385588) * _0x364965), _0x2bf05a = Math.round(_0x563357 + Math.sin(_0x385588) * _0x364965), 0x0 == _0x559508 ? _0x47bbc4.moveTo(_0x5baec9, _0x2bf05a) : _0x47bbc4.lineTo(_0x5baec9, _0x2bf05a), _0x385588 += _0x26d0e8, _0x5baec9 = Math.round(_0x3b2410 + Math.cos(_0x385588) * _0x4f3551), _0x2bf05a = Math.round(_0x563357 + Math.sin(_0x385588) * _0x4f3551), _0x47bbc4.lineTo(_0x5baec9, _0x2bf05a), _0x385588 += _0x26d0e8;
      _0x47bbc4.closePath();
    }
  }, ig.MinigameParticleOut = ig.MinigameGameObject.extend({
    'zIndex': 0xf423f,
    'forceDraw': !0x0,
    'targetX': 0x0,
    'targetY': 0x0,
    'hasSpawned': !0x1,
    'fadeAway': !0x1,
    'fillColor': '#ffffff',
    'init': function (_0x331d8c, _0x322c03, _0x3af898) {
      _0x3af898.spreadRadius || (_0x3af898.spreadRadius = 0x64), _0x3af898.particleSize || (_0x3af898.particleSize = 0x1e);
      var _0xab8a4 = _0x3af898.spreadRadius,
        _0x3111e7 = 0x2 * Math.random() * Math.PI,
        _0x17576c = 1.5 * Math.cos(_0x3111e7) * ig.MinigameRandom.int(0.5 * _0xab8a4, 0x2 * _0xab8a4),
        _0xab8a4 = 1.5 * Math.sin(_0x3111e7) * ig.MinigameRandom.int(0.5 * _0xab8a4, 0x2 * _0xab8a4);
      this.parent(_0x331d8c + _0x17576c / 0x2, _0x322c03 + _0xab8a4 / 0x2, _0x3af898), this.targetX = _0x331d8c + _0x17576c, this.targetY = _0x322c03 + _0xab8a4, this.alpha = 0.5, this.width = this.height = ig.MinigameRandom.int(Math.round(_0x3af898.particleSize / 0x2), Math.round(_0x3af898.particleSize));
    },
    'update': function () {
      this.parent();
      if (0x0 < this.delay) this.delay -= ig.system.tick;else {
        this.hasSpawned = !0x0;
        if (ig.responsive) {
          if (this.anchoredPositionX += (this.targetX - this.anchoredPositionX) / 0xa, this.anchoredPositionY += (this.targetY - this.anchoredPositionY) / 0xa, 0xa < Math.abs(this.anchoredPositionX - this.targetX) || 0xa < Math.abs(this.anchoredPositionY - this.targetY)) this.fadeAway = !0x0;
        } else {
          if (this.pos.x += (this.targetX - this.pos.x) / 0xa, this.pos.y += (this.targetY - this.pos.y) / 0xa, 0xa < Math.abs(this.pos.x - this.targetX) || 0xa < Math.abs(this.pos.y - this.targetY)) this.fadeAway = !0x0;
        }
        this.fadeAway && (this.alpha -= ig.system.tick, 0x0 >= this.alpha && this.kill());
      }
    },
    'drawObject': function (_0x2b718b, _0x3c9d01) {
      this.parent(_0x2b718b, _0x3c9d01);
      if (this.hasSpawned) {
        var _0x526686 = ig.system.context,
          _0x16dd85 = ig.hexToRgb(this.fillColor);
        _0x526686.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x16dd85.r + ',' + _0x16dd85.g + ',' + _0x16dd85.b + ',' + this.alpha + ')' : _0x16dd85.hex, _0x526686.beginPath(), _0x526686.arc(_0x2b718b, _0x3c9d01, this.width, 0x0, 0x2 * Math.PI), _0x526686.fill(), _0x526686.closePath();
      }
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.content.minigame-content').requires('plugins.minigame.minigame-utils').defines(function () {
  ig.MinigameContent = ig.MinigameGameObject.extend({
    'members': [],
    'forceDraw': !0x0,
    'onExit': null,
    'onCollectReward': null,
    'offsetTitleY': 0x0,
    'offsetTitleX': 0x0,
    'offsetCloseButton': {
      'x': 0x0,
      'y': 0x0
    },
    'init': function (_0x40248f, _0x5933f0, _0x5a456c) {
      this.parent(_0x40248f, _0x5933f0, _0x5a456c), this.onExit = new ig.MinigameSignal(), this.onCollectReward = new ig.MinigameSignal(), this.roundedRadius = ig.Minigame.gamePopup.roundedRadius, this.bgColor = ig.Minigame.gamePopup.color, this.anchorY = this.anchorX = 0.5, ig.responsive ? (_0x40248f = ig.responsive.originalWidth / 0x2, _0x5933f0 = ig.responsive.originalHeight / 0x2, this.anchoredPositionX = _0x40248f, this.anchoredPositionY = _0x5933f0) : (_0x40248f = ig.system.width / 0x2, _0x5933f0 = ig.system.height / 0x2, this.pos.x = _0x40248f, this.pos.y = _0x5933f0), this.centerX = _0x40248f, this.centerY = _0x5933f0, this.topLimit = _0x5933f0 - this.height / 0x2 + ig.Minigame.gamePopup.padding + ig.extractHeightFromFontString(ig.Minigame.gamePopup.titleText.font), this.bottomLimit = _0x5933f0 + this.height / 0x2 - ig.Minigame.gamePopup.padding, this.leftLimit = _0x40248f - this.width / 0x2 + ig.Minigame.gamePopup.padding, this.rightLimit = _0x40248f + this.width / 0x2 - ig.Minigame.gamePopup.padding, this.spaceWidth = this.rightLimit - this.leftLimit, this.spaceHeight = this.bottomLimit - this.topLimit, this.spaceCenterX = this.leftLimit + this.spaceWidth / 0x2, this.spaceCenterY = this.topLimit + this.spaceHeight / 0x2, this.titleTf = this.addMember(ig.MinigameTextField, _0x40248f + this.offsetTitleX, this.topLimit + this.offsetTitleY, {
        'font': ig.Minigame.gamePopup.titleText.font,
        'color': ig.Minigame.gamePopup.titleText.color,
        'align': 'center',
        'text': ig.Minigame.games[this.minigameId].strings.title
      }), this.closeButton = this.addMember(ig.MinigameRoundedButton, _0x40248f + this.width / 0x2 - ig.Minigame.gamePopup.closeButton.width / 0x2 - ig.Minigame.gamePopup.closeButton.padding + this.offsetCloseButton.x, _0x5933f0 - this.height / 0x2 + ig.Minigame.gamePopup.closeButton.height / 0x2 + ig.Minigame.gamePopup.closeButton.padding + this.offsetCloseButton.y, {
        'width': ig.Minigame.gamePopup.closeButton.width,
        'height': ig.Minigame.gamePopup.closeButton.height,
        'color': ig.Minigame.gamePopup.closeButton.color,
        'shadowColor': ig.Minigame.gamePopup.closeButton.shadowColor,
        'symbol': 'exit',
        'symbolSize': ig.Minigame.gamePopup.closeButton.iconSize,
        'radius': ig.Minigame.gamePopup.closeButton.radius,
        'symbolColor': ig.Minigame.gamePopup.closeButton.iconColor,
        'exitDuration': 0.01,
        'image': ig.Minigame.gamePopup.closeButton.sprite
      }), this.closeButton.onClicked.add(this.onClickClose, this);
    },
    'tweenIn': function (_0x3c696c, _0x338456) {
      var _0x52b145 = _0x3c696c.pos.x,
        _0x42198b = _0x3c696c.pos.y;
      _0x3c696c.pos.y += 0x32, _0x3c696c.alpha = 0.3, _0x3c696c.enable = !0x1, _0x3c696c.tween({
        'pos': {
          'x': _0x52b145,
          'y': _0x42198b
        },
        'alpha': 0x1
      }, 0.4, {
        'easing': ig.Tween.Easing.Exponential.EaseOut,
        'onComplete': function () {
          _0x3c696c.enable = !0x0, _0x338456 && _0x338456();
        }
      }).start();
    },
    'tweenOut': function (_0x88ee9f, _0x1f1c1a) {
      var _0x3c05d2 = _0x88ee9f.pos.x,
        _0x63dda0 = _0x88ee9f.pos.y + 0x32;
      _0x88ee9f.enable = !0x1, _0x88ee9f.tween({
        'pos': {
          'x': _0x3c05d2,
          'y': _0x63dda0
        },
        'alpha': 0x0
      }, 0.3, {
        'easing': ig.Tween.Easing.Exponential.EaseOut,
        'onComplete': function () {
          _0x88ee9f.enable = !0x0, _0x1f1c1a && _0x1f1c1a();
        }
      }).start();
    },
    'onClickClose': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]);
      var _0x2e6f72 = function () {
        this.onExit.dispatch(), this.exit();
      }.bind(this);
      this.tweenOut(this, _0x2e6f72), this.members.forEach(function (_0x1a1e31) {
        this.tweenOut(_0x1a1e31);
      }.bind(this)), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.popup]);
    },
    'spawnRewardParticles': function (_0x588f3a, _0x599bb2, _0x3e3b86) {
      for (var _0x4486f5 = 0x0; _0x4486f5 < _0x3e3b86; _0x4486f5++) ig.game.spawnEntity(ig.MinigameParticleOut, _0x588f3a, _0x599bb2, {
        'delay': 0.003 * _0x4486f5,
        'spreadRadius': this.width / 0x5,
        'particleSize': this.width / 0x19,
        'fillColor': ig.Minigame.gamePopup.particleColor
      });
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      if (this.visible) {
        var _0x323a0c = ig.system.context;
        _0x323a0c.save(), _0x323a0c.fillStyle = ig.Minigame.gamePopup.overlayColor, _0x323a0c.globalAlpha = ig.Minigame.gamePopup.overlayAlpha * this.alpha, _0x323a0c.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x323a0c.globalAlpha = 0x1, _0x323a0c.restore();
      }
      this.parent();
    },
    'drawObject': function (_0x255936, _0x3ff836) {
      var _0x228c1e = ig.system.context;
      this.parent(_0x255936, _0x3ff836), this.image || ig.MinigameRoundedRect.drawRoundedRect(_0x228c1e, _0x255936, _0x3ff836, this.width, this.height, this.roundedRadius, this.bgColor);
    },
    'addMember': function (_0x55e64c, _0x3743c7, _0x34c1bb, _0x4e146a) {
      return _0x4e146a.zIndex || (_0x4e146a.zIndex = this.zIndex + 0x1 + this.members.length), _0x55e64c = ig.game.spawnEntity(_0x55e64c, _0x3743c7, _0x34c1bb, _0x4e146a), this.members.push(_0x55e64c), ig.game.sortEntitiesDeferred(), _0x55e64c;
    },
    'exit': function () {
      this.parent();
      for (var _0x33dd9a = 0x0; _0x33dd9a < this.members.length; _0x33dd9a++) this.members[_0x33dd9a].exit();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.content.minigame-popup').requires('plugins.minigame.content.minigame-content').defines(function () {
  ig.MinigamePopup = ig.MinigameContent.extend({
    'minigameId': 'minigamePopup',
    'offsetCloseButton': {
      'x': 0x0,
      'y': 0x0
    },
    'offsetTitleX': 0x0,
    'init': function (_0x506f78, _0x5689a6, _0x5766e6) {
      _0x5766e6 || (_0x5766e6 = {});
      var _0x6b5235 = ig.system.context;
      _0x6b5235.save(), _0x6b5235.font = ig.Minigame.gamePopup.titleText.font;
      var _0x4ca005 = Math.round(1.1 * _0x6b5235.measureText(ig.Minigame.games.minigamePopup.strings.title).width);
      _0x6b5235.restore(), _0x5766e6.width = ig.responsive ? Math.round(ig.responsive.originalWidth * ig.Minigame.gamePopup.sizeRatio) : Math.round(ig.system.width * ig.Minigame.gamePopup.sizeRatio), _0x5766e6.width = 0x2 * ig.Minigame.gamePopup.padding + Math.max(_0x4ca005, 1.2 * ig.Minigame.startButton.height), _0x5766e6.height = 0x2 * ig.Minigame.gamePopup.padding + ig.extractHeightFromFontString(ig.Minigame.gamePopup.titleText.font) + 1.2 * _0x5766e6.minigameList.length * ig.Minigame.startButton.height, _0x5766e6.image = ig.Minigame.gamePopup.sprite, _0x5766e6.image && (_0x5766e6.width = _0x5766e6.image.width, _0x5766e6.height = _0x5766e6.image.height), this.parent(_0x506f78, _0x5689a6, _0x5766e6), console.log("init minigame popup"), this.onFinishMinigame = new ig.MinigameSignal(), this.startButtons = [], _0x506f78 = 1.2 * ig.Minigame.startButton.height, _0x5689a6 = (0.5 - this.minigameList.length) * _0x506f78 / 0x2 + this.spaceCenterY - this.centerY - 0xf;
      for (_0x5766e6 = 0x0; _0x5766e6 < this.minigameList.length; _0x5766e6++) _0x6b5235 = ig.Minigame.spawnMinigameButton('center', this.minigameList[_0x5766e6], this.zIndex + 0x1, 0x0, _0x5689a6 + (_0x5766e6 + 0.5) * _0x506f78), _0x6b5235.onStartMinigame.add(function () {
        this.hideAllButton();
      }.bind(this)), _0x6b5235.onFinishMinigame.add(function (_0x17ae13, _0x80f2ca) {
        this.cleanUpAndExit(_0x17ae13, _0x80f2ca);
      }.bind(this)), this.startButtons.push(_0x6b5235);
      this.tweenIn(this), this.tweenInObj(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.popup]), ig.game.sortEntitiesDeferred();
    },
    'exit': function () {
      this.parent();
      for (var _0x3d7399 = 0x0; _0x3d7399 < this.startButtons.length; _0x3d7399++) this.startButtons[_0x3d7399].kill();
    },
    'onClickClose': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.tweenOut(this, this.cleanUpAndExit.bind(this)), this.tweenOutObj(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.popup]);
    },
    'cleanUpAndExit': function (_0x58ba6b, _0x1211e1) {
      console.log('cleanUpAndExit', _0x58ba6b), this.onFinishMinigame.dispatch(_0x58ba6b, _0x1211e1), this.exit();
    },
    'tweenInObj': function () {
      this.members.forEach(function (_0x434572) {
        this.tweenIn(_0x434572);
      }.bind(this)), this.startButtons.forEach(function (_0x3d3136) {
        this.tweenIn(_0x3d3136);
      }.bind(this));
    },
    'tweenOutObj': function () {
      this.members.forEach(function (_0x18f573) {
        this.tweenOut(_0x18f573);
      }.bind(this)), this.startButtons.forEach(function (_0x20a428) {
        this.tweenOut(_0x20a428);
      }.bind(this));
    },
    'hideAllButton': function () {
      console.log('hideAllButton'), this.visible = !0x1;
      for (var _0x2f8c40 = 0x0; _0x2f8c40 < this.members.length; _0x2f8c40++) this.members[_0x2f8c40].visible = !0x1;
      for (_0x2f8c40 = 0x0; _0x2f8c40 < this.startButtons.length; _0x2f8c40++) this.startButtons[_0x2f8c40].visible = !0x1;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.content.minigame-guess-the-number').requires('plugins.minigame.content.minigame-content').defines(function () {
  ig.MinigameGuessTheNumber = ig.MinigameContent.extend({
    'gameConfig': null,
    'answerText': '',
    'correctAnswer': '',
    'answerDigits': [],
    'keypadButtons': [],
    'offsetTitleY': -0x14,
    'offsetObjectY': 0x14,
    'offsetCloseButton': {
      'x': 0x0,
      'y': 0x0
    },
    'init': function (_0x2a0256, _0x46e986, _0x43a78d) {
      this.parent(_0x2a0256, _0x46e986, _0x43a78d), this.gameConfig = ig.Minigame.games[this.minigameId], _0x2a0256 = Math.max(this.spaceWidth, this.spaceHeight) / 0x6, this.buttonHeight = _0x46e986 = Math.floor(0.85 * _0x2a0256);
      var _0x50515b = this.spaceCenterX - 1.3 * this.gameConfig.digitLength * _0x2a0256 / 0x2,
        _0x305e06 = this.topLimit + _0x46e986 - 0xa;
      for (_0x43a78d = 0x0; _0x43a78d < this.gameConfig.digitLength; _0x43a78d++) {
        var _0x45afa9 = this.addMember(ig.MinigameRoundedButton, _0x50515b + 1.3 * (_0x43a78d + 0.5) * _0x2a0256, _0x305e06, {
          'width': 1.3 * _0x46e986,
          'height': 1.3 * _0x46e986,
          'font': this.gameConfig.answerDigits.font,
          'textColor': this.gameConfig.answerDigits.textColor,
          'color': this.gameConfig.answerDigits.color,
          'shadowColor': this.gameConfig.answerDigits.color,
          'offsetY': this.gameConfig.answerDigits.textOffsetY,
          'usePressedTween': !0x1,
          'shadowDistance': 0x0,
          'exitDuration': 0.01
        });
        this.answerDigits.push(_0x45afa9);
      }
      _0x2a0256 = Math.max(this.spaceWidth, this.spaceHeight) / 0x8, _0x50515b = this.spaceCenterX - 0x5 * _0x2a0256 / 0x2, _0x305e06 = this.topLimit + 2.7 * _0x2a0256 - 0x1e, _0x46e986 = Math.floor(0.7 * _0x2a0256);
      for (_0x43a78d = 0x1; 0xb > _0x43a78d; _0x43a78d++) _0x45afa9 = this.addMember(ig.MinigameRoundedButton, _0x50515b + ((_0x43a78d - 0x1) % 0x5 + 0.5) * _0x2a0256, _0x305e06 + 0.8 * Math.floor((_0x43a78d - 0x1) / 0x5) * _0x2a0256, {
        'width': _0x46e986,
        'height': _0x46e986,
        'font': this.gameConfig.keypad.font,
        'textColor': this.gameConfig.keypad.textColor,
        'color': this.gameConfig.keypad.color,
        'shadowColor': this.gameConfig.keypad.shadowColor,
        'offsetY': this.gameConfig.keypad.textOffsetY,
        'exitDuration': 0.01,
        'text': 0xa == _0x43a78d ? '0' : '' + _0x43a78d
      }), this.keypadButtons.push(_0x45afa9), _0x45afa9.onClicked.add(this.onClickKeypad, this);
      this.correctAnswer = this.gameConfig.useSeededRandom ? new ig.MinigamePRNG(ig.Minigame.getDaysCountSinceEpoch()).nextString('1234567890', this.gameConfig.digitLength) : new ig.MinigamePRNG().nextString('1234567890', this.gameConfig.digitLength), ig.Minigame.printAnswer && console.log(this.correctAnswer);
    },
    'shrinkAnswerDigit': function () {
      var _0x2fdb60 = Math.max(this.spaceWidth, this.spaceHeight) / 0x6,
        _0x31fc1a = Math.floor(0.85 * _0x2fdb60);
      this.answerDigits.forEach(function (_0xec1693) {
        _0xec1693.width = 0x1 * _0x31fc1a, _0xec1693.height = 0x1 * _0x31fc1a, _0xec1693.pos.y -= 0x24;
      });
    },
    'expandAnswerDigit': function () {
      var _0x872f2d = Math.max(this.spaceWidth, this.spaceHeight) / 0x6,
        _0x46db13 = Math.floor(0.85 * _0x872f2d);
      this.answerDigits.forEach(function (_0x1cab6c) {
        _0x1cab6c.width = 1.3 * _0x46db13, _0x1cab6c.height = 1.3 * _0x46db13, _0x1cab6c.pos.y += 0x24;
      });
    },
    'onClickKeypad': function (_0xa0b0d) {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.answerText += _0xa0b0d.text, this.refreshAnswer();
    },
    'refreshAnswer': function () {
      if (this.answerText.length == this.gameConfig.digitLength) {
        if (this.setKeypadEnabled(!0x1), this.answerText == this.correctAnswer) this.closeButton.visible = !0x1, this.showResult(this.gameConfig.strings.correctGuess, '');else {
          var _0xccf257 = this.gameConfig.strings.wrongGuessHigher;
          parseInt(this.answerText) > parseInt(this.correctAnswer) && (_0xccf257 = this.gameConfig.strings.wrongGuessLower), this.showResult(_0xccf257, this.gameConfig.strings.retryButton);
        }
      }
      for (_0xccf257 = 0x0; _0xccf257 < this.answerDigits.length; _0xccf257++) this.answerDigits[_0xccf257].text = _0xccf257 < this.answerText.length ? this.answerText[_0xccf257] + '' : '';
    },
    'showResult': function (_0x12223d, _0x142edf) {
      var _0x59e4fc = this.topLimit + this.spaceHeight * (0x2 / 0x6) + ig.extractHeightFromFontString(ig.Minigame.gamePopup.bodyText.font) + this.offsetObjectY,
        _0x5db165 = this.topLimit + this.spaceHeight * (0x5 / 0x6) + ig.extractHeightFromFontString(ig.Minigame.gamePopup.bodyText.font);
      this.delayedCall(0.5, function () {
        this.resultTf || (this.resultTf = this.addMember(ig.MinigameTextField, this.spaceCenterX, _0x59e4fc, {
          'font': ig.Minigame.gamePopup.bodyText.font,
          'color': ig.Minigame.gamePopup.bodyText.color,
          'align': 'center',
          'text': _0x12223d
        }), this.resultButton = this.addMember(ig.MinigameRoundedButton, this.spaceCenterX, _0x5db165, {
          'width': Math.floor(0.7 * this.width),
          'height': 0.7 * this.buttonHeight,
          'font': this.gameConfig.keypad.font,
          'textColor': ig.Minigame.startButton.text.color,
          'color': this.gameConfig.keypad.color,
          'shadowColor': this.gameConfig.keypad.shadowColor,
          'image': new ig.Image('media/graphics/ui/minigames/start-btn.png')
        }), this.resultButton.onClicked.add(this.onClickResultButton, this));
        var _0x8d4081 = this.spaceCenterX - 0x14,
          _0x15cd4a = _0x59e4fc + (_0x5db165 - _0x59e4fc - this.buttonHeight / 0x2) / 0x2 + 0x14,
          _0x249741 = 0.25 * this.spaceHeight;
        if (this.answerText == this.correctAnswer) {
          ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.reward]), this.spawnRewardParticles(_0x8d4081, _0x15cd4a, 0x64);
          var _0x4debba = this.addMember(ig.MinigameGameObject, _0x8d4081, _0x15cd4a, {
            'image': this.gameConfig.rewardIcon,
            'exitDuration': 0.01,
            'anchorX': 0x1,
            'anchorY': 0.5
          });
          this.addMember(ig.MinigameTextField, _0x8d4081 + 0.1 * this.gameConfig.rewardIcon.width, _0x15cd4a + 0.3 * this.gameConfig.rewardIcon.height, {
            'font': "50px archivo-black",
            'color': ig.Minigame.startButton.text.color,
            'text': this.gameConfig.reward.toString()
          }).visible = !0x0, _0x4debba.height > _0x249741 && (_0x4debba.scaleX = _0x249741 / _0x4debba.height, _0x4debba.scaleY = _0x4debba.scaleX);
        } else ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.incorrect]);
        this.resultButton.pos.y = _0x5db165 - _0x249741, this.resultTf.visible = !0x0, this.resultButton.visible = !0x0, this.resultTf.text = _0x12223d, this.resultButton.text = _0x142edf;
      }.bind(this)), this.shrinkAnswerDigit();
    },
    'onClickResultButton': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.answerText == this.correctAnswer ? (this.exit(), ig.Minigame.data.lastClaim[this.minigameId] = new Date().getTime(), ig.Minigame.saveData(), this.onCollectReward.dispatch()) : (this.wrongImage && (this.wrongImage.visible = !0x1), this.resultTf.visible = !0x1, this.resultButton.visible = !0x1, this.setKeypadEnabled(!0x0), this.answerText = '', this.refreshAnswer(), this.expandAnswerDigit());
    },
    'setKeypadEnabled': function (_0x4107b9) {
      for (var _0x24218f = 0x0; _0x24218f < this.keypadButtons.length; _0x24218f++) this.keypadButtons[_0x24218f].visible = _0x4107b9;
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.content.minigame-match-the-cards').requires('plugins.minigame.content.minigame-content').defines(function () {
  ig.MinigameMatchTheCards = ig.MinigameContent.extend({
    'gameConfig': null,
    'incorrectAttempts': 0x0,
    'flippingCardCount': 0x0,
    'attemptDisplays': [],
    'offsetCloseButton': {
      'x': 0x0,
      'y': 0x0
    },
    'init': function (_0x1fab02, _0x17f977, _0x546848) {
      this.parent(_0x1fab02, _0x17f977, _0x546848), this.gameConfig = ig.Minigame.games[this.minigameId], this.initAttemptDisplays(), this.initCards(), this.incorrectAttempts = 0x0, this.refreshAttemptDisplay();
    },
    'initAttemptDisplays': function () {
      for (var _0x4770e7 = Math.round(Math.min(0.25 * this.spaceHeight, this.spaceWidth / this.gameConfig.attemptDisplay.maxIncorrectAttempts)), _0x4770e7 = Math.round(0.6 * _0x4770e7), _0x2b0d6a = Math.round(1.2 * _0x4770e7), _0x1c02dc = this.spaceCenterX - this.gameConfig.attemptDisplay.maxIncorrectAttempts * _0x2b0d6a / 0x2, _0x1e9bee = this.topLimit + 0.125 * this.spaceHeight, _0x4e387f = 0x0; _0x4e387f < this.gameConfig.attemptDisplay.maxIncorrectAttempts; _0x4e387f++) {
        var _0x244bbb = this.addMember(ig.MinigameRoundedButton, _0x1c02dc + (_0x4e387f + 0.5) * _0x2b0d6a, _0x1e9bee, {
          'width': _0x4770e7,
          'height': _0x4770e7,
          'color': ig.Minigame.gamePopup.color,
          'shadowColor': ig.Minigame.gamePopup.color,
          'symbol': 'exit',
          'symbolColor': this.gameConfig.attemptDisplay.offColor,
          'symbolSize': Math.floor(0.7 * _0x4770e7),
          'exitDuration': 0.01,
          'shadowDistance': 0x0,
          'usePressedTween': !0x1
        });
        this.attemptDisplays.push(_0x244bbb);
      }
    },
    'initCards': function () {
      var _0x33633e = this.gameConfig.card.row,
        _0x37ca1e = this.gameConfig.card.column;
      0x1 == _0x33633e * _0x37ca1e % 0x2 && console.error("card row multiplied by column must result in even number"), this.cards = [];
      var _0x3c033f = 0.7 * this.spaceHeight / _0x33633e,
        _0x5e0a4c = this.spaceWidth / _0x37ca1e;
      1.6 < _0x3c033f / _0x5e0a4c && (_0x3c033f = 1.6 * _0x5e0a4c);
      var _0x117e9e = Math.round(0.85 * _0x3c033f),
        _0x1ffbf1 = Math.round(0.9 * _0x5e0a4c),
        _0x1566b3 = _0x5e0a4c - _0x1ffbf1,
        _0x5ed003 = _0x3c033f - _0x117e9e;
      _0x1566b3 < _0x5ed003 ? _0x117e9e = _0x3c033f - _0x1566b3 : _0x1ffbf1 = _0x5e0a4c - _0x5ed003, _0x1566b3 = this.spaceCenterX - _0x37ca1e * _0x5e0a4c / 0x2, this.cardStartY = _0x5ed003 = this.bottomLimit - 0.375 * this.spaceHeight - _0x33633e * _0x3c033f / 0x2;
      for (var _0x565b92 = 0x0; _0x565b92 < _0x33633e; _0x565b92++) for (var _0x3309a3 = 0x0; _0x3309a3 < _0x37ca1e; _0x3309a3++) {
        var _0x369e97 = this.addMember(ig.MinigameMatchingCard, _0x1566b3 + (_0x3309a3 + 0.5) * _0x5e0a4c, _0x5ed003 + (_0x565b92 + 0.5) * _0x3c033f, {
          'width': _0x1ffbf1,
          'height': _0x117e9e,
          'iconSymbol': '',
          'iconColor': ''
        });
        _0x369e97.onFlippedUp.add(this.onCardFlippedUp, this), _0x369e97.onFlipUpStart.add(this.onCardFlipUpStart, this), this.cards.push(_0x369e97);
      }
      this.rerollCard();
    },
    'onCardFlipUpStart': function () {
      this.flippingCardCount++, 0x2 == this.flippingCardCount && this.disableCardInputTemporarily(0.5);
    },
    'onCardFlippedUp': function (_0x44f990) {
      this.flippingCardCount--, this.lastCard ? (this.lastCard.iconId == _0x44f990.iconId ? (this.lastCard.match(), _0x44f990.match(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.correct]), this.isAllCardsMatched() && this.delayedCall(0.5, function () {
        this.showResult(!0x0);
      }.bind(this))) : (this.lastCard.flip(0.5), _0x44f990.flip(0.5), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.incorrect]), this.incorrectAttempts++, this.incorrectAttempts < this.gameConfig.attemptDisplay.maxIncorrectAttempts ? this.disableCardInputTemporarily(0.7) : (this.disableCardInputTemporarily(0x2), this.delayedCall(0x1, function () {
        this.hideCards(), this.delayedCall(0.5, function () {
          this.showResult(!0x1);
        }.bind(this));
      }.bind(this))), this.refreshAttemptDisplay()), this.lastCard = null) : this.lastCard = _0x44f990;
    },
    'isAllCardsMatched': function () {
      for (var _0x54de96 = 0x0; _0x54de96 < this.cards.length; _0x54de96++) if (!this.cards[_0x54de96].isMatched) return !0x1;
      return !0x0;
    },
    'hideCards': function () {
      for (var _0x360550 = 0x0; _0x360550 < this.cards.length; _0x360550++) this.cards[_0x360550].hide();
    },
    'disableCardInputTemporarily': function (_0x4d2b6f) {
      for (var _0xb0d072 = 0x0; _0xb0d072 < this.cards.length; _0xb0d072++) {
        var _0x12e1f7 = this.cards[_0xb0d072];
        _0x12e1f7.flipCooldown < _0x4d2b6f && (_0x12e1f7.flipCooldown = _0x4d2b6f);
      }
    },
    'rerollCard': function () {
      this.flippingCardCount = 0x0, this.lastCard = null, this.prng = this.gameConfig.useSeededRandom ? new ig.MinigamePRNG(ig.Minigame.getDaysCountSinceEpoch()) : new ig.MinigamePRNG();
      for (var _0x6f7885 = "square circle triangle plus star heart flower diamond hexagon".split(" "), _0x4a4dd1 = [], _0x4795c9 = 0x0; _0x4795c9 < this.gameConfig.shapeColors.length; _0x4795c9++) _0x4a4dd1.push(this.gameConfig.shapeColors[_0x4795c9]);
      var _0x355a4b = [],
        _0x1e4123 = [],
        _0x3f1180 = this.cards.length / 0x2,
        _0x5bffc4 = 0x0,
        _0x5666af = 0x0;
      this.prng.shuffle(_0x6f7885), this.prng.shuffle(_0x4a4dd1);
      for (_0x4795c9 = 0x0; _0x4795c9 < _0x3f1180; _0x4795c9++) _0x355a4b.push(_0x4a4dd1[_0x5bffc4]), _0x5bffc4++, _0x5bffc4 >= _0x4a4dd1.length && (_0x5bffc4 = 0x0), _0x1e4123.push(_0x6f7885[_0x5666af]), _0x5666af++, _0x5666af >= _0x6f7885.length && (_0x5666af = 0x0);
      do {
        this.prng.shuffle(_0x355a4b), this.prng.shuffle(_0x1e4123), _0x6f7885 = !0x1, _0x4a4dd1 = {};
        for (_0x4795c9 = 0x0; _0x4795c9 < _0x3f1180; _0x4795c9++) {
          _0x5bffc4 = _0x1e4123[_0x4795c9] + _0x355a4b[_0x4795c9];
          if (_0x4a4dd1[_0x5bffc4]) {
            _0x6f7885 = !0x0;
            break;
          }
          _0x4a4dd1[_0x5bffc4] = 0x1;
        }
      } while (_0x6f7885);
      _0x6f7885 = [];
      for (_0x4795c9 = 0x0; _0x4795c9 < _0x3f1180; _0x4795c9++) _0x6f7885.push({
        'shape': _0x1e4123[_0x4795c9],
        'color': _0x355a4b[_0x4795c9]
      }), _0x6f7885.push({
        'shape': _0x1e4123[_0x4795c9],
        'color': _0x355a4b[_0x4795c9]
      });
      this.prng.shuffle(_0x6f7885);
      for (_0x4795c9 = 0x0; _0x4795c9 < this.cards.length; _0x4795c9++) this.cards[_0x4795c9].flipDownAndSwitch(_0x6f7885[_0x4795c9].shape, _0x6f7885[_0x4795c9].color);
    },
    'refreshAttemptDisplay': function () {
      for (var _0x1de93d = 0x0; _0x1de93d < this.attemptDisplays.length; _0x1de93d++) this.attemptDisplays[_0x1de93d].symbolColor = 0x0 == this.incorrectAttempts ? ig.Minigame.gamePopup.color : _0x1de93d < this.incorrectAttempts ? this.gameConfig.attemptDisplay.onColor : this.gameConfig.attemptDisplay.offColor;
    },
    'showResult': function (_0x249772) {
      var _0x33ec19 = Math.floor(0.17 * this.spaceHeight),
        _0xbce861 = this.topLimit + 0.3 * this.spaceHeight + ig.extractHeightFromFontString(ig.Minigame.gamePopup.bodyText.font),
        _0x1085b1 = this.bottomLimit - _0x33ec19 / 0x2;
      this.resultTf || (this.resultTf = this.addMember(ig.MinigameTextField, this.spaceCenterX, _0xbce861, {
        'font': ig.Minigame.gamePopup.bodyText.font,
        'color': ig.Minigame.gamePopup.bodyText.color,
        'align': 'center',
        'text': "Result text here"
      }), this.resultButton = this.addMember(ig.MinigameRoundedButton, this.spaceCenterX, _0x1085b1, {
        'width': Math.floor(0.7 * this.width),
        'height': _0x33ec19,
        'font': this.gameConfig.button.font,
        'textColor': ig.Minigame.startButton.text.color,
        'color': this.gameConfig.button.color,
        'shadowColor': this.gameConfig.button.shadowColor,
        'image': new ig.Image('media/graphics/ui/minigames/start-btn.png')
      }), this.resultButton.onClicked.add(this.onClickResultButton, this));
      var _0x37f3f9 = this.spaceCenterX - 0x14,
        _0x33ec19 = _0xbce861 + (_0x1085b1 - _0xbce861 - _0x33ec19 / 0x2) / 0x2 + 0x14,
        _0xbce861 = 0.25 * this.spaceHeight;
      if (_0x249772) {
        ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.reward]), this.spawnRewardParticles(_0x37f3f9, _0x33ec19, 0x64), this.isWinning = !0x0;
        var _0x47206f = this.addMember(ig.MinigameGameObject, _0x37f3f9, _0x33ec19, {
          'image': this.gameConfig.rewardIcon,
          'exitDuration': 0.01,
          'anchorX': 0x1,
          'anchorY': 0.5
        });
        this.addMember(ig.MinigameTextField, _0x37f3f9 + 0.1 * this.gameConfig.rewardIcon.width, _0x33ec19 + 0.3 * this.gameConfig.rewardIcon.height, {
          'font': "50px archivo-black",
          'color': ig.Minigame.startButton.text.color,
          'text': this.gameConfig.reward.toString()
        }).visible = !0x0, _0x47206f.height > _0xbce861 && (_0x47206f.scaleX = _0xbce861 / _0x47206f.height, _0x47206f.scaleY = _0x47206f.scaleX), this.closeButton.visible = !0x1;
      } else ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.incorrect]), this.isWinning = !0x1;
      this.resultButton.pos.y = _0x1085b1 - _0xbce861, this.resultTf.visible = !0x0, this.resultButton.visible = !0x0, this.resultTf.text = _0x249772 ? this.gameConfig.strings.success : this.gameConfig.strings.failed, this.resultButton.text = _0x249772 ? '' : this.gameConfig.strings.retryButton;
    },
    'onClickResultButton': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.isWinning ? (this.exit(), ig.Minigame.data.lastClaim[this.minigameId] = new Date().getTime(), ig.Minigame.saveData(), this.onCollectReward.dispatch()) : (this.wrongImage && (this.wrongImage.visible = !0x1), this.resultTf.visible = !0x1, this.resultButton.visible = !0x1, this.rerollCard(), this.incorrectAttempts = 0x0, this.refreshAttemptDisplay());
    }
  }), ig.MinigameMatchingCard = ig.MinigameRoundedButton.extend({
    'iconId': '',
    'iconSymbol': '',
    'iconColor': '',
    'isFacingUp': !0x1,
    'isFlipping': !0x1,
    'flippingState': 'none',
    'onFlippedUp': null,
    'onFlipUpStart': null,
    'fgColor': '',
    'bgColor': '',
    'exitDuration': 0.01,
    'shadowDistance': 0x0,
    'isMatched': !0x1,
    'isHidden': !0x1,
    'flipCooldown': 0x0,
    'init': function (_0x193754, _0x379e16, _0x980f95) {
      this.parent(_0x193754, _0x379e16, _0x980f95), this.iconId = this.iconSymbol + this.iconColor, this.onFlippedUp = new ig.MinigameSignal(), this.onFlipUpStart = new ig.MinigameSignal(), this.onClicked.add(this.onClickThis, this), this.symbolSize = 0.8 * this.height, this.bgColor = ig.Minigame.games.matchTheCards.card.bgColor, this.fgColor = ig.Minigame.games.matchTheCards.card.fgColor, this.radius = ig.Minigame.games.matchTheCards.card.roundedRadius;
    },
    'onClickThis': function () {
      if (!this.isFacingUp && !this.isFlipping && !(0x0 < this.flipCooldown || this.isHidden)) this.onFlipUpStart.dispatch(), this.flip(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.flip]);
    },
    'flipDownAndSwitch': function (_0x428e3a, _0x43e10d) {
      this.isFacingUp && !this.isHidden ? (this.isSwitching = !0x0, this.newSymbol = _0x428e3a, this.newColor = _0x43e10d, this.flip()) : (this.isFacingUp = !0x1, this.iconSymbol = _0x428e3a, this.iconColor = _0x43e10d), this.iconId = _0x428e3a + _0x43e10d, this.flipCooldown = 0.7, this.isMatched = !0x1, (0x0 == this.alpha || this.isHidden) && this.show();
    },
    'show': function () {
      this.isHidden = !0x1, this.scaleY = this.scaleX = 0x1, this.tween({
        'alpha': 0x1
      }, 0.2).start();
    },
    'hide': function (_0x461ef9) {
      this.isHidden || (this.isHidden = !0x0, _0x461ef9 ? this.tween({
        'alpha': 0x0,
        'scaleX': 1.5,
        'scaleY': 1.5
      }, 0.2).start() : this.tween({
        'alpha': 0x0,
        'scaleX': 0.1,
        'scaleY': 0.1
      }, 0.2).start());
    },
    'match': function () {
      this.isMatched = !0x0, this.hide(!0x0);
    },
    'flip': function (_0x97c8a8) {
      _0x97c8a8 ? this.flipDelay = _0x97c8a8 : (this.isFlipping = !0x0, this.usePressedTween = !0x1, this.flippingState = 'shrink');
    },
    'onFlipCompleted': function () {
      this.isFlipping = !0x1, this.isFacingUp || (this.usePressedTween = !0x0), this.flippingState = 'none', !this.isMatched && this.isFacingUp && this.onFlippedUp.dispatch(this);
    },
    'update': function () {
      this.parent(), this.isFlipping && ('shrink' == this.flippingState ? (this.anchorY += (0.7 - this.anchorY) / 0x5, this.scaleX += -this.anchorY / 0x5, 0.02 > this.scaleX && (this.flippingState = 'expand', this.isFacingUp = !this.isFacingUp, this.isSwitching && (this.isSwitching = !0x1, this.iconSymbol = this.newSymbol, this.iconColor = this.newColor))) : (this.anchorY += (0.5 - this.anchorY) / 0x5, this.scaleX += (0x1 - this.anchorY) / 0x5, 0.98 < this.scaleX && (this.scaleX = 0x1, this.anchorY = 0.5, this.onFlipCompleted())), this.scaleY += (0x1 - this.scaleY) / 0x5), this.isFacingUp ? (this.shadowColor = this.color = this.fgColor, this.symbol = this.iconSymbol, this.symbolColor = this.iconColor) : (this.shadowColor = this.color = this.bgColor, this.symbol = ''), this.flipCooldown -= ig.system.tick, 0x0 < this.flipDelay && (this.flipDelay -= ig.system.tick, 0x0 >= this.flipDelay && this.flip());
    },
    'drawObject': function (_0x53e6f9, _0x537b7e) {
      this.parent(_0x53e6f9, _0x537b7e);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.content.minigame-simon-says').requires('plugins.minigame.content.minigame-content').defines(function () {
  ig.MinigameSimonSays = ig.MinigameContent.extend({
    'gameConfig': null,
    'roundNumber': 0x0,
    'prng': null,
    'offsetCloseButton': {
      'x': 0x0,
      'y': 0x0
    },
    'init': function (_0x5237c4, _0x43ad4d, _0x129ad4) {
      this.parent(_0x5237c4, _0x43ad4d, _0x129ad4), this.gameConfig = ig.Minigame.games[this.minigameId], this.buttonHeight = Math.floor(0.17 * this.spaceHeight), this.availableShape = "square circle triangle plus star heart flower diamond".split(" "), this.availableColors = [];
      for (_0x5237c4 = 0x0; _0x5237c4 < this.gameConfig.shapeColors.length; _0x5237c4++) this.availableColors.push(this.gameConfig.shapeColors[_0x5237c4]);
      this.prepareStartRound(0x1);
    },
    'prepareStartRound': function (_0x550fa6) {
      this.roundNumber = _0x550fa6, this.roundStartButton || (this.roundStartTf = this.addMember(ig.MinigameTextField, this.spaceCenterX, this.spaceCenterY - 0.15 * this.spaceHeight + ig.extractHeightFromFontString(ig.Minigame.gamePopup.bodyText.font) / 0x2, {
        'font': ig.Minigame.gamePopup.bodyText.font,
        'color': ig.Minigame.gamePopup.bodyText.color,
        'align': 'center',
        'text': "Result text here"
      }), this.roundStartButton = this.addMember(ig.MinigameRoundedButton, this.spaceCenterX, this.spaceCenterY + 0.15 * this.spaceHeight, {
        'width': Math.floor(0.4 * this.width),
        'height': this.buttonHeight,
        'font': this.gameConfig.button.font,
        'textColor': ig.Minigame.startButton.text.color,
        'color': this.gameConfig.button.color,
        'shadowColor': this.gameConfig.button.shadowColor,
        'text': this.gameConfig.strings.start,
        'image': new ig.Image('media/graphics/ui/minigames/start-btn.png')
      }), this.roundStartButton.onClicked.add(this.onClickRoundStartButton, this)), this.playFlipSound(), this.roundStartTf.visible = !0x0, this.roundStartButton.visible = !0x0, this.roundStartTf.text = this.gameConfig.strings.round.replace('[x]', _0x550fa6.toString()), 0x1 == _0x550fa6 && (this.prng = this.gameConfig.useSeededRandom ? new ig.MinigamePRNG(ig.Minigame.getDaysCountSinceEpoch()) : new ig.MinigamePRNG());
    },
    'onClickRoundStartButton': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.roundStartTf.visible = !0x1, this.roundStartButton.visible = !0x1, this.closeButton.visible = !0x1, this.delayedCall(0x1, this.startSequence.bind(this));
    },
    'startSequence': function () {
      var _0x279e2a = this.gameConfig.rounds[this.roundNumber - 0x1].duration;
      this.correctAnswer = this.prng.nextString('01234567', this.gameConfig.rounds[this.roundNumber - 0x1].count), ig.Minigame.printAnswer && console.log(this.correctAnswer);
      for (var _0x4ea883 = 0.5 * Math.min(this.spaceHeight, this.spaceWidth), _0x106411 = 0x0; _0x106411 < this.correctAnswer.length; _0x106411++) {
        var _0x52fef1 = parseInt(this.correctAnswer[_0x106411]);
        ig.game.spawnEntity(ig.MinigameRoundedButton, this.spaceCenterX, this.spaceCenterY, {
          'zIndex': this.zIndex + 0xa,
          'width': 1.2 * _0x4ea883,
          'height': 1.2 * _0x4ea883,
          'symbol': this.availableShape[_0x52fef1],
          'symbolColor': this.availableColors[_0x52fef1],
          'symbolSize': _0x4ea883,
          'entryDuration': 0.1,
          'exitDuration': 0.1,
          'entryType': 'fadeIn',
          'exitType': 'fadeOut',
          'timedLife': _0x279e2a,
          'entryDelay': _0x106411 * (_0x279e2a + 0.5),
          'color': ig.Minigame.gamePopup.color,
          'shadowColor': ig.Minigame.gamePopup.color
        }), this.delayedCall(_0x106411 * (_0x279e2a + 0.5), this.playFlipSound.bind(this));
      }
      this.answerString = '', this.delayedCall(0x1 * this.correctAnswer.length * (_0x279e2a + 0.5) + 0.5, this.showKeypad.bind(this)), ig.game.sortEntitiesDeferred();
    },
    'playFlipSound': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.flip]);
    },
    'showKeypad': function () {
      this.closeButton.visible = !0x0;
      if (!this.keypadButtons) {
        this.keypadButtons = [];
        var _0x46dd92 = Math.round(this.spaceWidth / 0x4),
          _0x42d232 = Math.round(this.spaceHeight / 0x3),
          _0x56d456 = Math.round(0.1 * Math.max(_0x42d232, _0x46dd92)),
          _0x42f69a = _0x46dd92 - _0x56d456,
          _0x56d456 = _0x42d232 - _0x56d456,
          _0x6b1d9d = this.spaceCenterX - 0x4 * _0x46dd92 / 0x2,
          _0x406129 = this.topLimit + 1.5 * _0x42d232;
        this.keypadSymbolSize = Math.floor(0.5 * Math.min(_0x42f69a, _0x56d456));
        for (var _0x1e1365 = 0x0; 0x8 > _0x1e1365; _0x1e1365++) {
          var _0x1951bf = this.addMember(ig.MinigameRoundedButton, _0x6b1d9d + (_0x1e1365 % 0x4 + 0.5) * _0x46dd92, _0x406129 + Math.floor(_0x1e1365 / 0x4) * _0x42d232, {
            'width': _0x42f69a,
            'height': _0x56d456,
            'symbol': this.availableShape[_0x1e1365],
            'symbolColor': this.availableColors[_0x1e1365],
            'symbolSize': this.keypadSymbolSize,
            'color': this.gameConfig.answerButton.color,
            'shadowColor': this.gameConfig.answerButton.shadowColor
          });
          _0x1951bf.answerKey = _0x1e1365.toString(), _0x1951bf.onClicked.add(this.onClickKeypad, this), this.keypadButtons.push(_0x1951bf);
        }
      }
      for (_0x1e1365 = 0x0; _0x1e1365 < this.keypadButtons.length; _0x1e1365++) _0x1951bf = this.keypadButtons[_0x1e1365], _0x1951bf.visible = !0x0;
    },
    'hideKeypad': function () {
      for (var _0x1881b3 = 0x0; _0x1881b3 < this.keypadButtons.length; _0x1881b3++) this.keypadButtons[_0x1881b3].visible = !0x1;
    },
    'onClickKeypad': function (_0x7816e6) {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.answerString += _0x7816e6.answerKey, this.refreshAnswerDisplays(), this.checkAnswer();
    },
    'checkAnswer': function () {
      this.answerString.length == this.correctAnswer.length && (this.hideKeypad(), this.answerString == this.correctAnswer ? (ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.correct]), ig.game.spawnEntity(ig.MinigameTextField, this.spaceCenterX, this.spaceCenterY + ig.extractHeightFromFontString(ig.Minigame.gamePopup.bodyText.font) / 0x2, {
        'font': ig.Minigame.gamePopup.bodyText.font,
        'color': ig.Minigame.gamePopup.bodyText.color,
        'align': 'center',
        'text': this.gameConfig.strings.correctGuess,
        'timedLife': 0x1,
        'zIndex': this.zIndex + 0x1
      }), ig.game.sortEntitiesDeferred(), this.delayedCall(1.5, this.goToNextRound.bind(this))) : this.showResult(!0x1));
    },
    'goToNextRound': function () {
      this.roundNumber == this.gameConfig.rounds.length ? this.showResult(!0x0) : (this.answerString = '', this.refreshAnswerDisplays(), this.prepareStartRound(this.roundNumber + 0x1));
    },
    'refreshAnswerDisplays': function () {
      this.answerDisplays || (this.answerDisplays = []);
      for (var _0x4caf55 = 0x0; _0x4caf55 < this.answerDisplays.length; _0x4caf55++) {
        var _0x5c3973 = this.answerDisplays[_0x4caf55];
        _0x5c3973.visible = !0x1;
      }
      for (var _0xa36461 = 1.4 * this.keypadSymbolSize, _0xc651f = this.spaceCenterX - this.answerString.length * _0xa36461 / 0x2, _0x3513fa = this.topLimit + this.spaceHeight / 0x6, _0x4caf55 = 0x0; _0x4caf55 < this.answerString.length; _0x4caf55++) {
        var _0x393d84 = parseInt(this.answerString[_0x4caf55]),
          _0x3bb741 = _0xc651f + (_0x4caf55 + 0.5) * _0xa36461;
        _0x4caf55 >= this.answerDisplays.length && this.answerDisplays.push(this.addMember(ig.MinigameRoundedButton, _0x3bb741, _0x3513fa, {
          'width': 1.2 * this.keypadSymbolSize,
          'height': 1.2 * this.keypadSymbolSize,
          'symbolSize': this.keypadSymbolSize,
          'color': ig.Minigame.gamePopup.color,
          'shadowColor': ig.Minigame.gamePopup.color,
          'exitDuration': 0.01
        })), _0x5c3973 = this.answerDisplays[_0x4caf55], _0x5c3973.symbol = this.availableShape[_0x393d84], _0x5c3973.symbolColor = this.availableColors[_0x393d84], _0x5c3973.visible = !0x0, ig.responsive ? _0x5c3973.anchoredPositionX = _0x3bb741 : _0x5c3973.pos.x = _0x3bb741;
      }
    },
    'showResult': function (_0x172ac2) {
      var _0x4a791e = this.topLimit + 0.3 * this.spaceHeight + ig.extractHeightFromFontString(ig.Minigame.gamePopup.bodyText.font),
        _0x496e81 = this.bottomLimit - this.buttonHeight / 0x2;
      this.resultTf || (this.resultTf = this.addMember(ig.MinigameTextField, this.spaceCenterX, _0x4a791e, {
        'font': ig.Minigame.gamePopup.bodyText.font,
        'color': ig.Minigame.gamePopup.bodyText.color,
        'align': 'center',
        'text': "Result text here"
      }), this.resultButton = this.addMember(ig.MinigameRoundedButton, this.spaceCenterX, _0x496e81, {
        'width': Math.floor(0.7 * this.width),
        'height': this.buttonHeight,
        'font': this.gameConfig.button.font,
        'textColor': ig.Minigame.startButton.text.color,
        'color': this.gameConfig.button.color,
        'shadowColor': this.gameConfig.button.shadowColor,
        'image': new ig.Image('media/graphics/ui/minigames/start-btn.png')
      }), this.resultButton.onClicked.add(this.onClickResultButton, this));
      var _0x37af71 = this.spaceCenterX - 0x14,
        _0x4a791e = _0x4a791e + (_0x496e81 - _0x4a791e - this.buttonHeight / 0x2) / 0x2 + 0x14,
        _0x5cb62d = 0.25 * this.spaceHeight;
      if (_0x172ac2) {
        ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.reward]), this.spawnRewardParticles(_0x37af71, _0x4a791e, 0x64), this.isWinning = !0x0;
        var _0x3ae3 = this.addMember(ig.MinigameGameObject, _0x37af71, _0x4a791e, {
          'image': this.gameConfig.rewardIcon,
          'exitDuration': 0.01,
          'anchorX': 0x1,
          'anchorY': 0.5
        });
        _0x3ae3.height > _0x5cb62d && (_0x3ae3.scaleX = _0x5cb62d / _0x3ae3.height, _0x3ae3.scaleY = _0x3ae3.scaleX), this.addMember(ig.MinigameTextField, _0x37af71 + 0.1 * this.gameConfig.rewardIcon.width, _0x4a791e + 0.3 * this.gameConfig.rewardIcon.height, {
          'font': "50px archivo-black",
          'color': ig.Minigame.startButton.text.color,
          'text': this.gameConfig.reward.toString()
        }).visible = !0x0, this.closeButton.visible = !0x1;
      } else ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.incorrect]), this.isWinning = !0x1;
      this.resultButton.pos.y = _0x496e81 - _0x5cb62d, this.resultTf.visible = !0x0, this.resultButton.visible = !0x0, this.resultTf.text = _0x172ac2 ? this.gameConfig.strings.success : this.gameConfig.strings.failed, this.resultButton.text = _0x172ac2 ? '' : this.gameConfig.strings.retryButton;
    },
    'onClickResultButton': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.isWinning ? (this.exit(), ig.Minigame.data.lastClaim[this.minigameId] = new Date().getTime(), ig.Minigame.saveData(), this.onCollectReward.dispatch()) : (this.wrongImage && (this.wrongImage.visible = !0x1), this.resultTf.visible = !0x1, this.resultButton.visible = !0x1, this.prepareStartRound(0x1), this.answerString = '', this.refreshAnswerDisplays());
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.content.minigame-maze-challenge').requires('plugins.minigame.content.minigame-content').defines(function () {
  ig.MinigameMazeChallenge = ig.MinigameContent.extend({
    'gameConfig': null,
    'grid': [],
    'cells': [],
    'walker': {
      'x': 0x0,
      'y': 0x0
    },
    'goal': {
      'x': 0x0,
      'y': 0x0
    },
    'sides': ['left', 'right', 'top', 'bottom'],
    'isMazeShown': !0x0,
    'keyActions': {
      'up': 'upKey',
      'down': 'downKey',
      'left': 'leftKey',
      'right': 'rightKey',
      'w': 'wKey',
      's': 'sKey',
      'a': 'aKey',
      'd': 'dKey'
    },
    'offsetTitleY': 0x0,
    'offsetObjectY': 0x14,
    'offsetCloseButton': {
      'x': 0x0,
      'y': 0x0
    },
    'init': function (_0x28ab5f, _0x20da58, _0x2243f3) {
      this.parent(_0x28ab5f, _0x20da58, _0x2243f3), this.gameConfig = ig.Minigame.games[this.minigameId], this.buttonHeight = Math.floor(0.17 * this.spaceHeight), this.resetGrid(), this.showControlButtons(), ig.input.bindings[ig.KEY.W] ? this.keyActions.w = ig.input.bindings[ig.KEY.W] : ig.input.bind(ig.KEY.W, this.keyActions.w), ig.input.bindings[ig.KEY.A] ? this.keyActions.a = ig.input.bindings[ig.KEY.A] : ig.input.bind(ig.KEY.A, this.keyActions.a), ig.input.bindings[ig.KEY.S] ? this.keyActions.s = ig.input.bindings[ig.KEY.S] : ig.input.bind(ig.KEY.S, this.keyActions.s), ig.input.bindings[ig.KEY.D] ? this.keyActions.D = ig.input.bindings[ig.KEY.D] : ig.input.bind(ig.KEY.D, this.keyActions.d), ig.input.bindings[ig.KEY.UP_ARROW] ? this.keyActions.up = ig.input.bindings[ig.KEY.UP_ARROW] : ig.input.bind(ig.KEY.UP_ARROW, this.keyActions.up), ig.input.bindings[ig.KEY.DOWN_ARROW] ? this.keyActions.down = ig.input.bindings[ig.KEY.DOWN_ARROW] : ig.input.bind(ig.KEY.DOWN_ARROW, this.keyActions.down), ig.input.bindings[ig.KEY.LEFT_ARROW] ? this.keyActions.left = ig.input.bindings[ig.KEY.LEFT_ARROW] : ig.input.bind(ig.KEY.LEFT_ARROW, this.keyActions.left), ig.input.bindings[ig.KEY.RIGHT_ARROW] ? this.keyActions.right = ig.input.bindings[ig.KEY.RIGHT_ARROW] : ig.input.bind(ig.KEY.RIGHT_ARROW, this.keyActions.right);
    },
    'showControlButtons': function () {
      if (!this.upButton) {
        var _0x28e11c = Math.round(0.3 * this.spaceHeight);
        this.upButton = this.addControlButton(this.centerX + 0xfa, this.bottomLimit - 0x5a - 0x2 * _0x28e11c, _0x28e11c, 'up'), this.downButton = this.addControlButton(this.centerX + 0xfa, this.bottomLimit - 0x5a, _0x28e11c, 'down'), this.leftButton = this.addControlButton(this.centerX + 0xfa - _0x28e11c, this.bottomLimit - 0x5a - _0x28e11c, _0x28e11c, 'left'), this.rightButton = this.addControlButton(this.centerX + 0xfa + _0x28e11c, this.bottomLimit - 0x5a - _0x28e11c, _0x28e11c, 'right'), this.upButton.onClicked.add(this.moveWalkerUp, this), this.leftButton.onClicked.add(this.moveWalkerLeft, this), this.downButton.onClicked.add(this.moveWalkerDown, this), this.rightButton.onClicked.add(this.moveWalkerRight, this);
      }
      this.allowMove = !0x0, this.upButton.visible = this.downButton.visible = this.leftButton.visible = this.rightButton.visible = !0x0;
    },
    'hideControlButtons': function () {
      this.allowMove = !0x1, this.upButton.visible = this.downButton.visible = this.leftButton.visible = this.rightButton.visible = !0x1;
    },
    'moveWalkerUp': function () {
      this.allowMove && !this.grid[this.walker.y][this.walker.x].walls.top && (0x0 < this.walker.y && this.walker.y--, ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.mazeStep]));
    },
    'moveWalkerLeft': function () {
      this.allowMove && !this.grid[this.walker.y][this.walker.x].walls.left && (0x0 < this.walker.x && this.walker.x--, ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.mazeStep]));
    },
    'moveWalkerDown': function () {
      this.allowMove && !this.grid[this.walker.y][this.walker.x].walls.bottom && (this.walker.y < this.grid.length - 0x1 && this.walker.y++, ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.mazeStep]));
    },
    'moveWalkerRight': function () {
      this.allowMove && !this.grid[this.walker.y][this.walker.x].walls.right && (this.walker.x < this.grid.length - 0x1 && this.walker.x++, ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.mazeStep]));
    },
    'addControlButton': function (_0x43551f, _0x4a7584, _0x5af31e, _0x19fe22) {
      return _0x5af31e = Math.round(0.9 * _0x5af31e), this.addMember(ig.MinigameRoundedButton, _0x43551f, _0x4a7584 + this.offsetObjectY, {
        'width': _0x5af31e,
        'height': _0x5af31e,
        'color': this.gameConfig.button.color,
        'shadowColor': this.gameConfig.button.shadowColor,
        'symbol': _0x19fe22,
        'symbolSize': Math.round(0.5 * _0x5af31e),
        'exitDuration': 0.01
      });
    },
    'resetGrid': function () {
      this.prng = this.gameConfig.useSeededRandom ? new ig.MinigamePRNG(ig.Minigame.getDaysCountSinceEpoch()) : new ig.MinigamePRNG(), this.grid = [], this.cells = [], this.gridSize = this.gameConfig.maze.size;
      for (var _0x4b11ee = 0x0; _0x4b11ee < this.gridSize; _0x4b11ee++) {
        var _0x220ca2 = [];
        this.grid.push(_0x220ca2);
        for (var _0x420b2d = 0x0; _0x420b2d < this.gridSize; _0x420b2d++) {
          var _0x165067 = {
            'x': _0x420b2d,
            'y': _0x4b11ee,
            'walls': {
              'left': !0x0,
              'right': !0x0,
              'top': !0x0,
              'bottom': !0x0
            },
            'neighbours': {
              'left': null,
              'right': null,
              'top': null,
              'bottom': null
            },
            'visited': !0x1,
            'walked': !0x1
          };
          _0x220ca2.push(_0x165067), this.cells.push(_0x165067), 0x0 < _0x420b2d && this.setNeighbour(_0x165067, _0x220ca2[_0x420b2d - 0x1]), 0x0 < _0x4b11ee && this.setNeighbour(_0x165067, this.grid[_0x4b11ee - 0x1][_0x420b2d]);
        }
      }
      this.walkerDraw = null, this.generateMaze(this.grid[0x0][0x0]), this.walker.x = this.walker.y = 0x0, this.goal.x = this.goal.y = this.gridSize - 0x1, this.goalScale = 0x1, this.goalScaleDirection = 'upscale', this.goalReached = !0x1, this.isMazeShown = !0x0;
    },
    'setNeighbour': function (_0x497781, _0x491416) {
      _0x497781.x == _0x491416.x ? _0x497781.y < _0x491416.y ? (_0x497781.neighbours.bottom = _0x491416, _0x491416.neighbours.top = _0x497781) : (_0x497781.neighbours.top = _0x491416, _0x491416.neighbours.bottom = _0x497781) : _0x491416.y == _0x491416.y && (_0x497781.x < _0x491416.x ? (_0x497781.neighbours.right = _0x491416, _0x491416.neighbours.left = _0x497781) : (_0x497781.neighbours.left = _0x491416, _0x491416.neighbours.right = _0x497781));
    },
    'generateMaze': function (_0x203df1) {
      for (_0x203df1.visited = !0x0; this.hasUnvisitedNeighbour(_0x203df1);) {
        var _0x49b5e9 = this.pickRandomUnvisitedNeighbour(_0x203df1);
        this.removeWallsBetweenCells(_0x203df1, _0x49b5e9), this.generateMaze(_0x49b5e9);
      }
    },
    'removeWallsBetweenCells': function (_0xd49261, _0x5c3336) {
      _0xd49261.x == _0x5c3336.x ? _0xd49261.y < _0x5c3336.y ? (_0xd49261.walls.bottom = !0x1, _0x5c3336.walls.top = !0x1) : (_0xd49261.walls.top = !0x1, _0x5c3336.walls.bottom = !0x1) : _0x5c3336.y == _0x5c3336.y && (_0xd49261.x < _0x5c3336.x ? (_0xd49261.walls.right = !0x1, _0x5c3336.walls.left = !0x1) : (_0xd49261.walls.left = !0x1, _0x5c3336.walls.right = !0x1));
    },
    'pickRandomUnvisitedNeighbour': function (_0x9690d1) {
      var _0x7aa797 = [];
      return _0x9690d1.neighbours.left && !_0x9690d1.neighbours.left.visited && _0x7aa797.push(_0x9690d1.neighbours.left), _0x9690d1.neighbours.right && !_0x9690d1.neighbours.right.visited && _0x7aa797.push(_0x9690d1.neighbours.right), _0x9690d1.neighbours.top && !_0x9690d1.neighbours.top.visited && _0x7aa797.push(_0x9690d1.neighbours.top), _0x9690d1.neighbours.bottom && !_0x9690d1.neighbours.bottom.visited && _0x7aa797.push(_0x9690d1.neighbours.bottom), 0x0 == _0x7aa797.length ? null : this.prng.fromArray(_0x7aa797);
    },
    'hasUnvisitedNeighbour': function (_0x271581) {
      return _0x271581.neighbours.left && !_0x271581.neighbours.left.visited || _0x271581.neighbours.right && !_0x271581.neighbours.right.visited || _0x271581.neighbours.top && !_0x271581.neighbours.top.visited || _0x271581.neighbours.bottom && !_0x271581.neighbours.bottom.visited ? !0x0 : !0x1;
    },
    'update': function () {
      this.parent(), this.allowMove && ((ig.input.released(this.keyActions.up) || ig.input.released(this.keyActions.w)) && this.moveWalkerUp(), (ig.input.released(this.keyActions.down) || ig.input.released(this.keyActions.s)) && this.moveWalkerDown(), (ig.input.released(this.keyActions.left) || ig.input.released(this.keyActions.d)) && this.moveWalkerLeft(), (ig.input.released(this.keyActions.right) || ig.input.released(this.keyActions.d)) && this.moveWalkerRight(), this.goal.x == this.walker.x && this.goal.y == this.walker.y && (this.allowMove = !0x1, this.goalReached = !0x0, this.hideControlButtons(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.correct])));
      if (this.goalReached) {
        var _0x3da0bd = 0x0;
        'upscale' == this.goalScaleDirection ? (_0x3da0bd = 0x3, this.goalScale > _0x3da0bd - 0.1 && (this.goalScaleDirection = 'downscale')) : 'downscale' == this.goalScaleDirection && (_0x3da0bd = 0x0, 1.2 > this.goalScale && (this.goalScaleDirection = 'done', this.goalScale = 0x0, this.isMazeShown = !0x1, this.showResult(!0x0))), this.goalScale += (_0x3da0bd - this.goalScale) / 0xf;
      }
    },
    'drawObject': function (_0x42d53f, _0x1fb8ce) {
      this.parent(_0x42d53f, _0x1fb8ce);
      if (this.isMazeShown) {
        var _0x1015a1 = Math.min(this.spaceWidth, Math.floor(0.8 * this.spaceHeight)),
          _0xd78d06 = Math.round(0.96 * _0x1015a1),
          _0x1015a1 = Math.round(_0xd78d06 / this.gameConfig.maze.size),
          _0x47986d = Math.ceil(0.1 * _0x1015a1),
          _0x4dbb12 = Math.ceil(0.7 * _0x1015a1),
          _0x28dac6 = _0x42d53f + this.width / 0x2 - _0xd78d06 / 0x2 - 0xc8,
          _0xd78d06 = _0x1fb8ce + this.height / 0x2 + 0x32 - Math.abs(this.topLimit - this.centerY) + 0.4 * this.spaceHeight - _0xd78d06 / 0x2 + this.offsetObjectY,
          _0x167dd6 = ig.system.context;
        _0x167dd6.save(), _0x167dd6.globalAlpha = this.alpha;
        for (var _0x482f62 = 0x0; _0x482f62 < this.cells.length; _0x482f62++) {
          var _0x287195 = this.cells[_0x482f62];
          _0x287195.walked && (_0x167dd6.fillStyle = this.gameConfig.maze.stepColor, _0x167dd6.fillRect(_0x28dac6 + _0x287195.x * _0x1015a1, _0xd78d06 + _0x287195.y * _0x1015a1, _0x1015a1, _0x1015a1));
        }
        for (_0x482f62 = 0x0; _0x482f62 < this.cells.length; _0x482f62++) _0x287195 = this.cells[_0x482f62], _0x287195.walls.top && this.drawCellWall(_0x167dd6, _0x28dac6 + _0x287195.x * _0x1015a1, _0xd78d06 + _0x287195.y * _0x1015a1, _0x1015a1, _0x47986d, 'right'), _0x287195.walls.left && this.drawCellWall(_0x167dd6, _0x28dac6 + _0x287195.x * _0x1015a1, _0xd78d06 + _0x287195.y * _0x1015a1, _0x1015a1, _0x47986d, 'down'), _0x287195.y == this.gridSize - 0x1 && this.drawCellWall(_0x167dd6, _0x28dac6 + _0x287195.x * _0x1015a1, _0xd78d06 + (_0x287195.y + 0x1) * _0x1015a1, _0x1015a1, _0x47986d, 'right'), _0x287195.x == this.gridSize - 0x1 && this.drawCellWall(_0x167dd6, _0x28dac6 + (_0x287195.x + 0x1) * _0x1015a1, _0xd78d06 + _0x287195.y * _0x1015a1, _0x1015a1, _0x47986d, 'down');
        var _0x47986d = _0x28dac6 + (this.walker.x + 0.5) * _0x1015a1,
          _0x482f62 = _0xd78d06 + (this.walker.y + 0.5) * _0x1015a1,
          _0x287195 = _0x28dac6 + (this.goal.x + 0.5) * _0x1015a1,
          _0x5caa65 = _0xd78d06 + (this.goal.y + 0.5) * _0x1015a1;
        this.walkerDraw || (this.walkerDraw = {
          'x': _0x47986d,
          'y': _0x482f62
        }), this.walkerDraw.x += (_0x47986d - this.walkerDraw.x) / 0x5, this.walkerDraw.y += (_0x482f62 - this.walkerDraw.y) / 0x5, this.grid[Math.floor((this.walkerDraw.y - _0xd78d06) / _0x1015a1)][Math.floor((this.walkerDraw.x - _0x28dac6) / _0x1015a1)].walked = !0x0, ig.MinigameDrawHelper.drawSymbol(_0x167dd6, this.gameConfig.maze.playerSymbol, this.walkerDraw.x, this.walkerDraw.y, this.gameConfig.maze.playerColor, _0x4dbb12), 0x0 < this.goalScale && ig.MinigameDrawHelper.drawSymbol(_0x167dd6, this.gameConfig.maze.goalSymbol, _0x287195, _0x5caa65, this.gameConfig.maze.goalColor, _0x4dbb12 * this.goalScale), _0x167dd6.restore();
      }
    },
    'drawCellWall': function (_0x4374dd, _0x351505, _0x34daa7, _0x5251fb, _0x1ee6a9, _0x104c06) {
      _0x4374dd.strokeStyle = this.gameConfig.maze.wallColor, _0x4374dd.lineWidth = _0x1ee6a9, _0x4374dd.lineCap = 'square', _0x4374dd.beginPath(), _0x4374dd.moveTo(_0x351505, _0x34daa7), 'down' == _0x104c06 && _0x4374dd.lineTo(_0x351505, _0x34daa7 + _0x5251fb), 'right' == _0x104c06 && _0x4374dd.lineTo(_0x351505 + _0x5251fb, _0x34daa7), _0x4374dd.stroke(), _0x4374dd.closePath();
    },
    'showResult': function (_0x51b668) {
      var _0x147b19 = this.topLimit + 0.3 * this.spaceHeight + ig.extractHeightFromFontString(ig.Minigame.gamePopup.bodyText.font),
        _0x53ff0c = this.bottomLimit - this.buttonHeight / 0x2;
      this.resultTf || (this.resultTf = this.addMember(ig.MinigameTextField, this.spaceCenterX, _0x147b19, {
        'font': ig.Minigame.gamePopup.bodyText.font,
        'color': ig.Minigame.gamePopup.bodyText.color,
        'align': 'center',
        'text': "Result text here"
      }), this.resultButton = this.addMember(ig.MinigameRoundedButton, this.spaceCenterX, _0x53ff0c, {
        'width': Math.floor(0.7 * this.width),
        'height': this.buttonHeight,
        'font': "36px archivo-black",
        'textColor': ig.Minigame.startButton.text.color,
        'color': this.gameConfig.button.color,
        'shadowColor': this.gameConfig.button.shadowColor,
        'image': new ig.Image('media/graphics/ui/minigames/start-btn.png')
      }), this.resultButton.onClicked.add(this.onClickResultButton, this));
      var _0x1e61df = this.spaceCenterX - 0x14,
        _0x147b19 = _0x147b19 + (_0x53ff0c - _0x147b19 - this.buttonHeight / 0x2) / 0x2 + 0x14,
        _0x31bf02 = 0.25 * this.spaceHeight;
      if (_0x51b668) {
        ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.reward]), this.spawnRewardParticles(_0x1e61df, _0x147b19, 0x64), this.isWinning = !0x0;
        var _0x20da78 = this.addMember(ig.MinigameGameObject, _0x1e61df, _0x147b19, {
          'image': this.gameConfig.rewardIcon,
          'exitDuration': 0.01,
          'anchorX': 0x1,
          'anchorY': 0.5
        });
        _0x20da78.height > _0x31bf02 && (_0x20da78.scaleX = _0x31bf02 / _0x20da78.height, _0x20da78.scaleY = _0x20da78.scaleX), this.addMember(ig.MinigameTextField, _0x1e61df + 0.1 * this.gameConfig.rewardIcon.width, _0x147b19 + 0.3 * this.gameConfig.rewardIcon.height, {
          'font': "50px archivo-black",
          'color': ig.Minigame.startButton.text.color,
          'text': this.gameConfig.reward.toString()
        }).visible = !0x0, this.closeButton.visible = !0x1;
      } else ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.incorrect]), this.isWinning = !0x1;
      this.resultButton.pos.y = _0x53ff0c - _0x31bf02, this.resultTf.visible = !0x0, this.resultButton.visible = !0x0, this.resultTf.text = _0x51b668 ? this.gameConfig.strings.success : this.gameConfig.strings.failed, this.resultButton.text = _0x51b668 ? '' : this.gameConfig.strings.retryButton;
    },
    'onClickResultButton': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.isWinning ? (this.exit(), ig.Minigame.data.lastClaim[this.minigameId] = new Date().getTime(), ig.Minigame.saveData(), this.onCollectReward.dispatch()) : (this.wrongImage && (this.wrongImage.visible = !0x1), this.resultTf.visible = !0x1, this.resultButton.visible = !0x1, this.prepareStartRound(0x1), this.answerString = '', this.refreshAnswerDisplays());
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.minigame-start-button').requires('plugins.minigame.minigame-utils', 'plugins.minigame.content.minigame-guess-the-number', 'plugins.minigame.content.minigame-match-the-cards', 'plugins.minigame.content.minigame-simon-says', 'plugins.minigame.content.minigame-maze-challenge').defines(function () {
  ig.MinigameStartButton = ig.MinigameRoundedButton.extend({
    'onStartMinigame': null,
    'onFinishMinigame': null,
    'buttonOffsetX': 0x0,
    'buttonOffsetY': 0x0,
    'minigameId': null,
    'minigame': null,
    'subtitleText': '',
    'init': function (_0x2a4d47, _0x3d7c55, _0x33d545) {
      _0x33d545.width = ig.Minigame.startButton.width, _0x33d545.height = ig.Minigame.startButton.height, _0x33d545.text = ig.Minigame.games[_0x33d545.minigameId].strings.title, _0x33d545.font = ig.Minigame.startButton.text.font, _0x33d545.textColor = ig.Minigame.startButton.text.color, _0x33d545.color = ig.Minigame.startButton.color, _0x33d545.shadowColor = ig.Minigame.startButton.shadowColor, _0x33d545.radius = ig.Minigame.startButton.roundedRadius, _0x33d545.offsetY = ig.Minigame.startButton.text.offsetY, _0x33d545.image = ig.Minigame.startButton.sprite, this.parent(_0x2a4d47, _0x3d7c55, _0x33d545), this.subtitleText = ig.Minigame.startButton.subtitleText.strings.available, this.subtitleTextRenderer = new ig.MinigameTextRenderer(), this.subtitleTextRenderer.align = 'center', this.subtitleTextRenderer.font = ig.Minigame.startButton.subtitleText.font, this.subtitleTextRenderer.color = ig.Minigame.startButton.subtitleText.color, this.onStartMinigame = new ig.MinigameSignal(), this.onFinishMinigame = new ig.MinigameSignal(), this.onClicked.add(this.onClickThis, this);
      if (ig.responsive) {
        switch (this.anchorType) {
          case 'top-left':
            this.oriX = -this.width / 0x2, this.oriY = this.height / 0x2 + this.buttonOffsetY, this.destX = this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
            break;
          case 'top-right':
            this.oriX = this.width / 0x2, this.oriY = this.height / 0x2 + this.buttonOffsetY, this.destX = -this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
            break;
          case 'bottom-left':
            this.oriX = -this.width / 0x2, this.oriY = -this.height / 0x2 + this.buttonOffsetY, this.destX = this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
            break;
          case 'bottom-right':
            this.oriX = this.width / 0x2, this.oriY = -this.height / 0x2 + this.buttonOffsetY, this.destX = -this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
          case 'center':
            this.oriX = 0x0, this.oriY = this.buttonOffsetY, this.destX = this.oriX, this.destY = this.oriY;
        }
        this.anchoredPositionX = this.oriX, this.anchoredPositionY = this.oriY;
      } else {
        switch (this.anchorType) {
          case 'top-left':
            this.oriX = -this.width / 0x2, this.oriY = this.height / 0x2 + this.buttonOffsetY, this.destX = this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
            break;
          case 'top-right':
            this.oriX = ig.system.width, this.oriY = this.height / 0x2 + this.buttonOffsetY, this.destX = ig.system.width - this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
            break;
          case 'bottom-left':
            this.oriX = -this.width / 0x2, this.oriY = ig.system.height - this.height / 0x2 + this.buttonOffsetY, this.destX = this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
            break;
          case 'bottom-right':
            this.oriX = ig.system.width + this.width / 0x2, this.oriY = ig.system.height - this.height / 0x2 + this.buttonOffsetY, this.destX = ig.system.width - this.width / 0x2 + this.buttonOffsetX, this.destY = this.oriY;
            break;
          case 'center':
            this.oriX = ig.system.width / 0x2, this.oriY = ig.system.height / 0x2 + this.buttonOffsetY, this.destX = this.oriX, this.destY = this.oriY;
        }
        this.pos.x = this.oriX, this.pos.y = this.oriY;
      }
    },
    'onClickThis': function () {
      if (this.isGameAvailable) {
        ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Minigame.sounds.click]), this.visible = !0x1, this.onStartMinigame.dispatch();
        var _0x2b93e0 = 0x64,
          _0x13bff7 = 0x64;
        ig.responsive ? (_0x2b93e0 = Math.round(ig.responsive.originalWidth * ig.Minigame.gamePopup.sizeRatio), _0x13bff7 = Math.round(ig.responsive.originalHeight * ig.Minigame.gamePopup.sizeRatio)) : (_0x2b93e0 = Math.round(ig.system.width * ig.Minigame.gamePopup.sizeRatio), _0x13bff7 = Math.round(ig.system.height * ig.Minigame.gamePopup.sizeRatio)), _0x2b93e0 = ig.game.spawnEntity(ig.Minigame.games[this.minigameId].contentClass, 0x0, 0x0, {
          'minigameId': this.minigameId,
          'zIndex': this.zIndex + 0x1,
          'width': _0x2b93e0,
          'height': _0x13bff7,
          'image': ig.Minigame.games[this.minigameId].sprite
        }), _0x2b93e0.onExit.addOnce(function () {
          this.onFinishMinigame.dispatch(!0x1), this.visible = !0x0;
        }.bind(this), this), _0x2b93e0.onCollectReward.addOnce(function () {
          this.onFinishMinigame.dispatch(!0x0, this.minigameId), this.visible = !0x0;
        }.bind(this), this), ig.game.sortEntitiesDeferred();
      }
    },
    'update': function () {
      this.parent();
      if (this.visible) {
        var _0x24b332 = new Date().getTime() - ig.Minigame.data.lastClaim[this.minigameId],
          _0x80b84d = 0x36ee80 * ig.Minigame.games[this.minigameId].cooldownHours;
        _0x24b332 < _0x80b84d ? (this.usePressedTween = this.isGameAvailable = !0x1, this.scaleX = this.scaleY = 0x1, this.subtitleText = ig.Minigame.startButton.subtitleText.strings.cooldown.replace('#', this.msToFormattedTime(_0x80b84d - _0x24b332))) : (this.usePressedTween = this.isGameAvailable = !0x0, this.subtitleText = ig.Minigame.startButton.subtitleText.strings.available);
      }
      ig.responsive ? (this.anchoredPositionY += (this.destY - this.anchoredPositionY) / 0xa, this.anchoredPositionX += (this.destX - this.anchoredPositionX) / 0xa) : (this.pos.x += (this.destX - this.pos.x) / 0xa, this.pos.x += (this.destX - this.pos.x) / 0xa);
    },
    'msToFormattedTime': function (_0x19772d) {
      _0x19772d = (_0x19772d - _0x19772d % 0x3e8) / 0x3e8;
      var _0x2d5829 = _0x19772d % 0x3c;
      _0x19772d = (_0x19772d - _0x2d5829) / 0x3c;
      var _0x4cb998 = _0x19772d % 0x3c;
      return _0x19772d = (_0x19772d - _0x4cb998) / 0x3c, 0xa > _0x19772d && (_0x19772d = '0' + _0x19772d), 0xa > _0x4cb998 && (_0x4cb998 = '0' + _0x4cb998), 0xa > _0x2d5829 && (_0x2d5829 = '0' + _0x2d5829), _0x19772d + ':' + _0x4cb998 + ':' + _0x2d5829;
    },
    'drawObject': function (_0x5aeb30, _0x42826b) {
      this.parent(_0x5aeb30, _0x42826b), this.subtitleTextRenderer.alpha = this.alpha, this.subtitleTextRenderer.text = this.subtitleText, this.subtitleTextRenderer.draw(_0x5aeb30 + this.width / 0x2, _0x42826b + this.height / 0x2 + ig.Minigame.startButton.subtitleText.offsetY), this.isGameAvailable && this.drawAlertIcon(_0x5aeb30, _0x42826b);
    },
    'drawAlertIcon': function (_0x566af5, _0x2dd67f) {
      ig.system.context.save(), ig.system.context.globalAlpha = this.alpha, ig.system.context.beginPath(), ig.system.context.fillStyle = 'red', ig.system.context.strokeStyle = '#011B3B', ig.system.context.lineWidth = 0x2, ig.system.context.arc(_0x566af5 + this.width - 0xa, _0x2dd67f + 0xa, 0xe, 0x0, 0x2 * Math.PI), ig.system.context.fill(), ig.system.context.stroke(), ig.system.context.fillStyle = '#ffffff', ig.system.context.font = "19px archivo-black", ig.system.context.textBaseline = 'middle', ig.system.context.fillText('!', _0x566af5 + this.width - 0xa, _0x2dd67f + 0xa), ig.system.context.restore();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.minigame.minigame-plugin').requires('plugins.minigame.minigame-settings', 'plugins.minigame.minigame-utils', 'plugins.minigame.content.minigame-popup', 'plugins.minigame.minigame-start-button').defines(function () {
  ig.Minigame = {
    'data': {
      'lastClaim': {}
    },
    'spawnMinigameButton': function (_0xa9d35c, _0x2af734, _0x3b3f30, _0x2ed5ce, _0x50bf3f) {
      return this.saveName || this.loadData(), _0x3b3f30 || (_0x3b3f30 = 0x270f), _0x2ed5ce || (_0x2ed5ce = 0x0), _0x50bf3f || (_0x50bf3f = 0x0), ig.game.spawnEntity(ig.MinigameStartButton, 0x0, 0x0, {
        'zIndex': _0x3b3f30,
        'anchorType': _0xa9d35c,
        'minigameId': _0x2af734,
        'buttonOffsetX': _0x2ed5ce,
        'buttonOffsetY': _0x50bf3f
      });
    },
    'spawnMinigamePopup': function (_0x202cd1, _0x11fdba) {
      return _0x11fdba || (_0x11fdba = 0x270f), ig.game.spawnEntity(ig.MinigamePopup, 0x0, 0x0, {
        'minigameList': _0x202cd1,
        'zIndex': _0x11fdba
      });
    },
    'getDaysCountSinceEpoch': function () {
      var _0x151321 = Math.abs(new Date() - new Date(0x0));
      return Math.floor(_0x151321 / 0x5265c00);
    },
    'checkAvailableGames': function () {
      var _0x57a82f, _0x250d39, _0x4b3743;
      for (_0x4b3743 in ig.Minigame.games) if (_0x57a82f = new Date().getTime(), _0x250d39 = ig.Minigame.games[_0x4b3743], _0x57a82f -= ig.Minigame.data.lastClaim[_0x250d39.id], _0x250d39 = 0x36ee80 * ig.Minigame.games[_0x250d39.id].cooldownHours, _0x57a82f > _0x250d39) return !0x0;
      return !0x1;
    },
    'clearData': function () {
      this.data = {
        'lastClaim': {}
      };
      for (var _0x208189 in ig.Minigame.games) Object.hasOwnProperty.call(ig.Minigame.games, _0x208189) && (this.data.lastClaim[ig.Minigame.games[_0x208189].id] = 0x0);
      this.saveData();
    },
    'saveData': function () {
      var _0x91fd7f = JSON.stringify(this.data);
      ig.LSMinigame.set(this.saveName, _0x91fd7f);
    },
    'loadData': function () {
      ig.LSMinigame || (ig.LSMinigame = new SecureLS({
        'encodingType': 'aes'
      }), this.saveName = this.hash(ig.game.name + '-mjs-minigame-save-data', '').replace('-', 's'));
      var _0x403391 = ig.LSMinigame.get(this.saveName);
      '' == _0x403391 ? this.clearData() : this.data = JSON.parse(_0x403391);
    },
    'hash': function (_0x3a6a69) {
      var _0x4f3f13 = 0x0,
        _0x5efbf1,
        _0x3d5c61;
      if (0x0 === _0x3a6a69.length) return _0x4f3f13;
      for (_0x5efbf1 = 0x0; _0x5efbf1 < _0x3a6a69.length; _0x5efbf1++) _0x3d5c61 = _0x3a6a69.charCodeAt(_0x5efbf1), _0x4f3f13 = (_0x4f3f13 << 0x5) - _0x4f3f13 + _0x3d5c61, _0x4f3f13 |= 0x0;
      return _0x4f3f13.toString(0x24);
    }
  }, ig.initMinigameSettings(), ig && ig.game && !ig.Minigame.saveName && ig.Minigame.loadData();
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-settings').defines(function () {
  ig.initLootboxSettings = function () {
    ig.Lootbox.isUpgradeMode = !0x0, ig.Lootbox.upgradeRequirements = [0x5, 0xa, 0x14], ig.Lootbox.card = {
      'icons': [new ig.Image('media/graphics/ui/lootbox/icon-1.png'), new ig.Image('media/graphics/ui/lootbox/icon-2.png'), new ig.Image('media/graphics/ui/lootbox/icon-3.png'), new ig.Image('media/graphics/ui/lootbox/icon-4.png'), new ig.Image('media/graphics/ui/lootbox/icon-5.png'), new ig.Image('media/graphics/ui/lootbox/icon-6.png'), new ig.Image('media/graphics/ui/lootbox/icon-7.png'), new ig.Image('media/graphics/ui/lootbox/icon-8.png'), new ig.Image('media/graphics/ui/lootbox/icon-9.png'), new ig.Image('media/graphics/ui/lootbox/icon-10.png'), new ig.Image('media/graphics/ui/lootbox/icon-11.png'), new ig.Image('media/graphics/ui/lootbox/icon-12.png'), new ig.Image('media/graphics/ui/lootbox/icon-13.png'), new ig.Image('media/graphics/ui/lootbox/icon-14.png'), new ig.Image('media/graphics/ui/lootbox/icon-15.png'), new ig.Image('media/graphics/ui/lootbox/icon-16.png'), new ig.Image('media/graphics/ui/lootbox/icon-17.png'), new ig.Image('media/graphics/ui/lootbox/icon-18.png'), new ig.Image('media/graphics/ui/lootbox/icon-19.png'), new ig.Image('media/graphics/ui/lootbox/icon-20.png')],
      'names': _STRINGS.Lootbox.cardNames,
      'description': _STRINGS.Lootbox.cardDesc,
      'font': 'archivo-black',
      'levelPrefix': _STRINGS.Lootbox.levelPrefix,
      'levelMax': 0x3,
      'width': 0xb4,
      'height': 0xdc,
      'roundedRadius': 0xd,
      'barFillColor': '#f3fe2f',
      'barEmptyColor': '#da6d1d',
      'frontColor': '#fbf3e8',
      'frontAccentColor': '#f3fe2f',
      'backColor': '#f3fe2f',
      'backAccentColor': '#fbc614',
      'emptyColor': '#011b3c',
      'selectedColor': '#f3fe2f',
      'textColor': '#011b3c'
    }, ig.Lootbox.sounds = {
      'button': 'button',
      'openFreeChest': 'openFreeChest',
      'openPremiumChest': 'openPremiumChest',
      'assemble': 'openPremiumChest',
      'particleIn': 'charging',
      'particleOut': 'merging'
    }, ig.Lootbox.page = {
      'titleFont': "60px archivo-black",
      'titleFontColor': '#011b3c',
      'row': 0x1,
      'column': 0x4,
      'scrollSpeed': 0x4,
      'button': {
        'font': "40px archivo-black",
        'fontColor': '#011b3c',
        'offsetY': 0x2
      },
      'titleY': 0x8c,
      'backButtonX': 0x3c,
      'backButtonY': 0x3c,
      'myCollection': {
        'messageTextFont': "40px archivo-black",
        'messageTextY': 0x1f4,
        'actionButtonY': 0x23a,
        'titleOffsetY': 0x14
      },
      'assembly': {
        'messageTextFont': "40px archivo-black",
        'messageTextY': 0x30c,
        'actionButtonY': 0x384
      },
      'claim': {
        'messageTextFont': "40px archivo-black",
        'messageTextY': 0x30c,
        'actionButtonY': 0x384,
        'watchButtonOffsetX': 0x14
      }
    }, ig.Lootbox.loot = {
      'actionableCollectionLevel': 0x1,
      'freeBoxCooldownMinutes': 0x1,
      'premiumBoxCooldownMinutes': 0x2,
      'cardRewardLevels': [0x0]
    }, ig.Lootbox.overlay = {
      'color': '#000000',
      'alpha': 0.3
    }, ig.Lootbox.notificationDot = {
      'color': '#ff5555',
      'textColor': '#ffffff',
      'size': 0x1e,
      'font': "21px archivo-black",
      'textOffsetX': -0.5,
      'textOffsetY': 0x1
    }, ig.Lootbox.strings = _STRINGS.Lootbox, ig.Lootbox.images = {
      'back': new ig.Image('media/graphics/ui/common/btn-close.png'),
      'next': new ig.Image('media/graphics/ui/common/btn-right.png'),
      'prev': new ig.Image('media/graphics/ui/common/btn-left.png'),
      'simple': new ig.Image('media/graphics/ui/lootbox/simple-button.png'),
      'container': new ig.Image('media/graphics/ui/lootbox/panel-bg.png'),
      'ad': new ig.Image('media/graphics/ui/lootbox/watch-ad-button.png'),
      'boxFreeClosed': new ig.Image('media/graphics/ui/lootbox/box-free-closed.png'),
      'boxFreeOpen': new ig.Image('media/graphics/ui/lootbox/box-free-open.png'),
      'boxPremiumClosed': new ig.Image('media/graphics/ui/lootbox/box-premium-closed.png'),
      'boxPremiumOpen': new ig.Image('media/graphics/ui/lootbox/box-premium-open.png'),
      'frontCardImage': new ig.Image('media/graphics/ui/lootbox/card-front.png'),
      'backCardImage': new ig.Image('media/graphics/ui/lootbox/card-back.png')
    };
  };
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-game-object').requires('impact.entity').defines(function () {
  ig.LootboxGameObject = ig.Entity.extend({
    'idleSheetInfo': null,
    'singleFrameImage': null,
    'visible': !0x0,
    'alpha': 0x1,
    'zIndex': 0x3e8,
    'drawAsRect': !0x1,
    'drawAsOutline': !0x1,
    'outlineWidth': 0x1,
    'rectColor': '#FFFFFF',
    'outlineColor': '#000000',
    'entryDelay': 0x0,
    'entryDuration': 0.25,
    'entryType': null,
    'exitDelay': 0x0,
    'exitDuration': 0.25,
    'exitType': null,
    'killOnExit': !0x0,
    'scaleX': 0x1,
    'scaleY': 0x1,
    'angle': 0x0,
    'anchorX': 0x0,
    'anchorY': 0x0,
    'forceDraw': !0x1,
    'width': 0x20,
    'height': 0x20,
    'onInputDown': null,
    'onInputUp': null,
    'onClicked': null,
    'hasTouchInside': !0x1,
    'inputEnabled': !0x1,
    'isClicking': !0x1,
    'boundLeft': 0x0,
    'boundRight': 0x0,
    'boundTop': 0x0,
    'boundBottom': 0x0,
    'isFinishEntering': !0x1,
    'fixedOnCamera': !0x1,
    'anchorType': 'default',
    'timedLife': -0x3e7,
    'size': {
      'x': 0x20,
      'y': 0x20
    },
    'init': function (_0x16093c, _0x321349, _0x16920d) {
      ig.LootboxTouch.hasInitialized || ig.LootboxTouch.init(), this.onInputDown = new ig.LootboxSignal(), this.onInputUp = new ig.LootboxSignal(), this.onClicked = new ig.LootboxSignal(), _0x16920d.singleFrameImage ? this.singleFrameImage = _0x16920d.singleFrameImage : _0x16920d.image && (this.image = this.singleFrameImage = _0x16920d.image), null != this.singleFrameImage ? (this.idleSheetInfo = {
        'sheetImage': this.singleFrameImage,
        'sheetX': 0x1,
        'sheetY': 0x1
      }, this.setSpriteSheet('idle'), this.setSize('idle'), this.addAnimation('idle', 'idleSheet', 0x1, [0x0], !0x1, !0x0)) : null != this.idleSheetInfo && (this.setSpriteSheet('idle'), this.setSize('idle')), this.parent(_0x16093c, _0x321349, _0x16920d), !0x1 === _0x16920d.visible && (this.visible = !0x1), this.anchorType = _0x16920d.anchorType ? _0x16920d.anchorType : 'default', this.enter();
    },
    'swapImage': function (_0x36e0a3) {
      this.idleSheetInfo.sheetImage = _0x36e0a3, this.idleSheet.image = _0x36e0a3;
    },
    'onFinishEntering': function () {},
    'enter': function () {
      this.visible = !0x0;
      if (ig.responsive) {
        var _0x40145f = ig.responsive.toAnchor(this.anchoredPositionX, this.anchoredPositionY, this.anchorType);
        this.pos.x = _0x40145f.x, this.pos.y = _0x40145f.y;
      }
      null != this.entryType ? (this[this.entryType](), this.delayedCall(this.entryDelay + this.entryDuration, function () {
        this.onFinishEntering(), this.isFinishEntering = !0x0;
      }.bind(this))) : (this.isFinishEntering = !0x0, this.onFinishEntering());
    },
    'exit': function () {
      if (null != this.exitType) this[this.exitType]();else this.alpha0();
      this.delayedCall(this.exitDuration + this.exitDelay, function () {
        this.checkKill();
      }.bind(this));
    },
    'setSpriteSheet': function (_0x4ebaaf) {
      this[_0x4ebaaf + 'Sheet'] = new ig.AnimationSheet(this[_0x4ebaaf + 'SheetInfo'].sheetImage.path, this[_0x4ebaaf + 'SheetInfo'].sheetImage.width / this[_0x4ebaaf + 'SheetInfo'].sheetX, this[_0x4ebaaf + 'SheetInfo'].sheetImage.height / this[_0x4ebaaf + 'SheetInfo'].sheetY);
    },
    'setSize': function (_0x42b15d) {
      this.width = this[_0x42b15d + 'SheetInfo'].sheetImage.width / this[_0x42b15d + 'SheetInfo'].sheetX, this.height = this[_0x42b15d + 'SheetInfo'].sheetImage.height / this[_0x42b15d + 'SheetInfo'].sheetY;
    },
    'addAnimation': function (_0x520b5a, _0x467a4d, _0xb47216, _0x272d9c, _0x1a918e, _0x378ee5) {
      this[_0x520b5a] = new ig.Animation(this[_0x467a4d], _0xb47216, _0x272d9c, !_0x1a918e), !0x0 == _0x378ee5 && (this.currentAnim = this[_0x520b5a]);
    },
    'makeFramesArray': function (_0xbf474b, _0x506027, _0x44f858) {
      for (var _0x1acbaf = [], _0x163cbc = _0xbf474b; _0x163cbc <= _0x506027; _0x163cbc++) _0x1acbaf.push(_0x163cbc);
      if (_0x44f858) {
        for (_0x163cbc = _0x506027; _0x163cbc >= _0xbf474b; _0x163cbc--) _0x1acbaf.push(_0x163cbc);
      }
      return _0x1acbaf;
    },
    'draw': function () {
      if (this.visible && (this.forceDraw || this.currentAnim || this.drawAsRect || this.drawAsOutline)) {
        var _0xc6f8eb = ig.system.context;
        _0xc6f8eb.save();
        var _0x5b082f = 0x0,
          _0x47bf73 = 0x0;
        this.fixedOnCamera ? (_0x5b082f = ig.system.getDrawPos(this.pos.x.round() - this.offset.x), _0x47bf73 = ig.system.getDrawPos(this.pos.y.round() - this.offset.y)) : (_0x5b082f = ig.system.getDrawPos(this.pos.x.round() - this.offset.x - ig.game.screen.x), _0x47bf73 = ig.system.getDrawPos(this.pos.y.round() - this.offset.y - ig.game.screen.y)), _0xc6f8eb.translate(_0x5b082f, _0x47bf73), (0x1 != this.scaleX || 0x1 != this.scaleY) && _0xc6f8eb.scale(this.scaleX, this.scaleY), _0x5b082f = -this.anchorX * this.width, _0x47bf73 = -this.anchorY * this.height, 0x0 < this.shakeValue && (this.shakeValue -= ig.system.tick * this.shakeReductionMultiplier, _0x5b082f += ig.LootboxRandom.float(-this.shakeValue, this.shakeValue), _0x47bf73 += ig.LootboxRandom.float(-this.shakeValue, this.shakeValue)), this.drawObject(_0x5b082f, _0x47bf73), _0xc6f8eb.restore();
      }
    },
    'drawObject': function (_0x5cabdc, _0x2adda) {
      var _0x1d674f = ig.system.context,
        _0x5c0ed7 = ig.hexToRgb(this.rectColor);
      this.drawAsRect && (_0x1d674f.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x5c0ed7.r + ',' + _0x5c0ed7.g + ',' + _0x5c0ed7.b + ',' + this.alpha + ')' : _0x5c0ed7.hex, _0x1d674f.fillRect(_0x5cabdc, _0x2adda, this.width, this.height)), _0x5c0ed7 = ig.hexToRgb(this.outlineColor), this.drawAsOutline ? (_0x1d674f.lineWidth = this.outlineWidth, _0x1d674f.strokeStyle = 0x1 > this.alpha ? 'rgba(' + _0x5c0ed7.r + ',' + _0x5c0ed7.g + ',' + _0x5c0ed7.b + ',' + this.alpha + ')' : _0x5c0ed7.hex, _0x1d674f.strokeRect(_0x5cabdc, _0x2adda, this.width, this.height)) : null != this.currentAnim && (this.currentAnim.alpha = this.alpha, this.currentAnim.draw(_0x5cabdc, _0x2adda));
    },
    'update': function () {
      ig.game.entities && this.parent();
      if (this.inputEnabled && this.isFinishEntering && this.visible) {
        var _0x124c27 = !0x1;
        this.hasTouchInside = !0x1;
        for (var _0x52fa7e = 0x0; _0x52fa7e < ig.multitouchInput.touches.length; _0x52fa7e++) {
          var _0x124c27 = !0x0,
            _0x1abb2b = ig.multitouchInput.touches[_0x52fa7e];
          this.processInput(_0x1abb2b.x, _0x1abb2b.y);
        }
        for (_0x52fa7e = 0x0; _0x52fa7e < ig.LootboxTouch.touches.length; _0x52fa7e++) _0x124c27 = !0x0, _0x1abb2b = ig.LootboxTouch.touches[_0x52fa7e], this.processInput(_0x1abb2b.x, _0x1abb2b.y);
        !_0x124c27 && ig.input.state('click') && (_0x52fa7e = ig.LootboxTouch.mouseX, _0x1abb2b = ig.LootboxTouch.mouseY, 0x0 != _0x52fa7e && 0x0 != _0x1abb2b && (this.processInput(_0x52fa7e, _0x1abb2b), _0x124c27 = !0x0)), _0x124c27 ? this.hasTouchInside || (this.isClicking = !0x1) : (this.isClicking && (this.onInputUp.dispatch(this), this.onClicked.dispatch(this)), this.isClicking = !0x1);
      }
      -0x3e7 != this.timedLife && this.isFinishEntering && (this.timedLife -= ig.system.tick, 0x0 >= this.timedLife && (this.timedLife = -0x3e7, this.exit()));
    },
    'processInput': function (_0x2eada8, _0x17cb86) {
      this.isInsideBounds(_0x2eada8, _0x17cb86) && (this.hasTouchInside = !0x0, this.isClicking || (this.isClicking = !0x0, this.onInputDown.dispatch(this)));
    },
    'isInsideBounds': function (_0x168559, _0x1b7189) {
      var _0x48977e = this.scaleX * this.width,
        _0x2dad53 = this.scaleY * this.height;
      return this.boundLeft = this.pos.x - _0x48977e * this.anchorX, this.boundTop = this.pos.y - _0x2dad53 * this.anchorY, this.boundRight = this.boundLeft + _0x48977e, this.boundBottom = this.boundTop + _0x2dad53, this.boundLeft > this.boundRight && (_0x48977e = this.boundLeft, this.boundLeft = this.boundRight, this.boundRight = _0x48977e), this.boundTop > this.boundBottom && (_0x48977e = this.boundTop, this.boundTop = this.boundBottom, this.boundBottom = _0x48977e), _0x168559 < this.boundLeft || _0x1b7189 < this.boundTop || _0x168559 > this.boundRight || _0x1b7189 > this.boundBottom ? !0x1 : !0x0;
    },
    'getBounds': function () {
      this._bounds || (this._bounds = {});
      var _0x45a785 = this._bounds,
        _0x30a641 = this.scaleX * this.width,
        _0x615679 = this.scaleY * this.height;
      return _0x45a785.left = this.pos.x - _0x30a641 * this.anchorX, _0x45a785.top = this.pos.y - _0x615679 * this.anchorY, _0x45a785.right = _0x45a785.left + _0x30a641, _0x45a785.bottom = _0x45a785.top + _0x615679, _0x45a785.width = Math.abs(_0x30a641), _0x45a785.height = Math.abs(_0x615679), _0x45a785.left > _0x45a785.right && (_0x30a641 = _0x45a785.left, _0x45a785.left = _0x45a785.right, _0x45a785.right = _0x30a641), _0x45a785.top > _0x45a785.bottom && (_0x30a641 = _0x45a785.top, _0x45a785.top = _0x45a785.bottom, _0x45a785.bottom = _0x30a641), _0x45a785.x = _0x45a785.left, _0x45a785.y = _0x45a785.top, _0x45a785;
    },
    'isCollidingWith': function (_0x265b70) {
      var _0x1d32ba = this.getBounds();
      return _0x265b70 = _0x265b70.getBounds(), _0x1d32ba.right < _0x265b70.left || _0x1d32ba.left > _0x265b70.right || _0x1d32ba.bottom < _0x265b70.top || _0x1d32ba.top > _0x265b70.bottom ? !0x1 : !0x0;
    },
    'shakeValue': 0x0,
    'shakeReductionMultiplier': 0x0,
    'shake': function (_0x188be6, _0x12597a) {
      _0x188be6 || (_0x188be6 = 0x5), _0x12597a || (_0x12597a = 0xa), this.shakeValue = _0x188be6, this.shakeReductionMultiplier = _0x12597a;
    },
    'fadeIn': function () {
      var _0x585894 = this.alpha;
      this.alpha = 0x0, this.tween({
        'alpha': _0x585894
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'fadeOut': function () {
      this.tween({
        'alpha': 0x0
      }, this.exitDuration, {
        'delay': this.exitDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'fadeBotIn': function () {
      var _0x4b9cca = this.alpha;
      this.alpha = 0x0;
      var _0x129a6f = this.pos.y;
      this.pos.y += 0xc8, this.tween({
        'alpha': _0x4b9cca,
        'pos': {
          'y': _0x129a6f
        }
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'fadeBotOut': function () {
      this.tween({
        'alpha': 0x0,
        'pos': {
          'y': this.pos.y + 0xc8
        }
      }, this.entryDuration, {
        'delay': this.entryDelay,
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'alpha0': function () {
      this.alpha = 0x0;
    },
    'alpha1': function () {
      this.alpha = 0x1;
    },
    'checkKill': function () {
      this.killOnExit && this.kill();
    }
  }), ig.LootboxTextRenderer = ig.Class.extend({
    'text': '',
    'font': "48px Arial",
    'color': '#000000',
    'alpha': 0x1,
    'align': 'start',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'lineSpacing': 0x1,
    'valign': 'default',
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0x1,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    '_previousText': '',
    '_multiline': !0x1,
    '_lines': [],
    '_lineHeightInPixel': 0x0,
    'init': function () {},
    'draw': function (_0x32523a, _0x35415f) {
      void 0x0 === _0x32523a && (_0x32523a = 0x0), void 0x0 === _0x35415f && (_0x35415f = 0x0), this.enableShadow && this.drawText(_0x32523a + this.shadowOffsetX, _0x35415f + this.shadowOffsetY, this.shadowAlpha * this.alpha, this.shadowColor, this.shadowColor), this.drawText(_0x32523a, _0x35415f, this.alpha, this.color, this.outlineColor);
    },
    'drawText': function (_0x13af5b, _0x3dcdf1, _0x117cb9, _0x22404e, _0x31a6e3) {
      if (0x0 < this.text.length) {
        this._previousTextString != this.text && (this._previousTextString = this.text, this._lines = this.text.split(/\r?\n/), this._multiline = 0x1 < this._lines.length ? !0x0 : !0x1, this._lineHeightInPixel = parseInt(this.font.split('px')[0x0].split(" ").pop()) * this.lineSpacing, isNaN(this._lineHeightInPixel) && console.error("'" + this.font + "' is a wrong font string format, error when rendering " + this.text));
        var _0x64def8 = ig.system.context;
        _0x64def8.save(), _0x64def8.font = this.font, _0x64def8.textAlign = this.align, _0x64def8.lineWidth = 0x2 * this.outlineWeight, _0x64def8.lineCap = this.outlineCap, _0x64def8.lineJoin = this.outlineJoin, _0x64def8.miterLimit = 0x2 * this.outlineWeight, 0x1 > _0x117cb9 ? (_0x22404e = ig.hexToRgb(_0x22404e), _0x64def8.fillStyle = 'rgba(' + _0x22404e.r + ',' + _0x22404e.g + ',' + _0x22404e.b + ',' + _0x117cb9 + ')', _0x22404e = ig.hexToRgb(_0x31a6e3), _0x64def8.strokeStyle = 'rgba(' + _0x22404e.r + ',' + _0x22404e.g + ',' + _0x22404e.b + ',' + _0x117cb9 + ')') : (_0x64def8.fillStyle = _0x22404e, _0x64def8.strokeStyle = _0x31a6e3), _0x13af5b += this.offsetX, _0x117cb9 = _0x3dcdf1 + this.offsetY;
        if (this._multiline) {
          _0x3dcdf1 = _0x117cb9, 'center' == this.valign && (_0x3dcdf1 = _0x117cb9 - (this._lines.length - 0x1) * this._lineHeightInPixel / 0x2);
          for (_0x117cb9 = 0x0; _0x117cb9 < this._lines.length; _0x117cb9++) _0x31a6e3 = this._lines[_0x117cb9], 0x0 < this.outlineWeight && _0x64def8.strokeText(_0x31a6e3, _0x13af5b, _0x3dcdf1 + _0x117cb9 * this._lineHeightInPixel), _0x64def8.fillText(_0x31a6e3, _0x13af5b, _0x3dcdf1 + _0x117cb9 * this._lineHeightInPixel);
        } else 'center' == this.valign && (_0x117cb9 += this._lineHeightInPixel / 0x2), 0x0 < this.outlineWeight && _0x64def8.strokeText(this.text, _0x13af5b, _0x117cb9), _0x64def8.fillText(this.text, _0x13af5b, _0x117cb9);
        _0x64def8.restore();
      }
    },
    'measureTextWidth': function () {
      var _0x148c3b = ig.system.context;
      _0x148c3b.save(), _0x148c3b.font = this.font, _0x148c3b.textAlign = 'left';
      var _0x3db3b9 = _0x148c3b.measureText(this.text);
      return _0x148c3b.restore(), _0x3db3b9.width;
    }
  }), ig.LootboxTextField = ig.LootboxGameObject.extend({
    'text': '',
    'font': "48px Arial",
    'color': '#FFFFFF',
    'align': 'start',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'lineSpacing': 0x1,
    'valign': 'top',
    'textRenderer': null,
    'forceDraw': !0x0,
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0.4,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    'zIndex': 0x1b58,
    'init': function (_0x50b4cb, _0x5827c0, _0x157b06) {
      this.parent(_0x50b4cb, _0x5827c0, _0x157b06), this.textRenderer = new ig.LootboxTextRenderer();
    },
    'drawObject': function (_0x174c34, _0x3133ad) {
      this.parent(_0x174c34, _0x3133ad), this.visible && (this.applyProperties(), this.textRenderer.draw(_0x174c34, _0x3133ad));
    },
    'updateText': function (_0x2f02ef) {
      this.text = _0x2f02ef;
    },
    'applyProperties': function () {
      this.textRenderer.text = this.text, this.textRenderer.font = this.font, this.textRenderer.color = this.color, this.textRenderer.alpha = this.alpha, this.textRenderer.align = this.align, this.textRenderer.offsetX = this.offsetX, this.textRenderer.offsetY = this.offsetY, this.textRenderer.lineSpacing = this.lineSpacing, this.textRenderer.valign = this.valign, this.textRenderer.enableShadow = this.enableShadow, this.textRenderer.shadowAlpha = this.shadowAlpha, this.textRenderer.shadowColor = this.shadowColor, this.textRenderer.shadowOffsetX = this.shadowOffsetX, this.textRenderer.shadowOffsetY = this.shadowOffsetY, this.textRenderer.outlineWeight = this.outlineWeight, this.textRenderer.outlineColor = this.outlineColor, this.textRenderer.outlineCap = this.outlineCap, this.textRenderer.outlineJoin = this.outlineJoin;
    },
    'getTextWidth': function () {
      return this.applyProperties(), this.textRenderer.measureTextWidth();
    }
  }), ig.LootboxSimpleButton = ig.LootboxGameObject.extend({
    'originalX': 0x0,
    'originalY': 0x0,
    'transitionInDelay': 0x0,
    'zIndex': 0x1b58,
    'text': '',
    'font': "48px Arial",
    'textColor': '#FFFFFF',
    'align': 'center',
    'offsetX': 0x0,
    'offsetY': 0x0,
    'anchorX': 0.5,
    'anchorY': 0.5,
    'lineSpacing': 0x1,
    'valign': 'center',
    'enableShadow': !0x1,
    'shadowColor': '#000000',
    'shadowOffsetX': 0x0,
    'shadowOffsetY': 0x4,
    'shadowAlpha': 0.4,
    'outlineWeight': 0x0,
    'outlineColor': '#000000',
    'outlineCap': 'square',
    'outlineJoin': 'bevel',
    'normalScale': 0x1,
    'usePressedTween': !0x0,
    'textRenderer': null,
    'forceDraw': !0x0,
    'prevText': '',
    'enableNotif': !0x1,
    'init': function (_0x2b482d, _0x480c45, _0x41ec95) {
      this.parent(_0x2b482d, _0x480c45, _0x41ec95), this.textRenderer = new ig.LootboxTextRenderer();
    },
    'update': function () {
      this.parent();
      if (this.usePressedTween && this.visible) {
        var _0x585e3f = 0.9 * this.normalScale,
          _0x1f1afa = 0.9 * this.normalScale,
          _0x585e3f = this.hasTouchInside ? 0.9 * this.normalScale : this.normalScale,
          _0x1f1afa = 0x0 > this.scaleX ? -0x1 * _0x585e3f : _0x585e3f,
          _0x585e3f = 0x0 > this.scaleY ? -0x1 * _0x585e3f : _0x585e3f;
        this.scaleX += (_0x1f1afa - this.scaleX) / 0x3, this.scaleY += (_0x585e3f - this.scaleY) / 0x3;
      }
    },
    'drawObject': function (_0x29631b, _0x31e609) {
      this.parent(_0x29631b, _0x31e609);
      if (this.visible) {
        this.textRenderer.text = this.text, this.textRenderer.font = this.font, this.textRenderer.color = this.textColor, this.textRenderer.alpha = this.alpha, this.textRenderer.align = this.align, this.textRenderer.offsetX = this.offsetX, this.textRenderer.offsetY = this.offsetY, this.textRenderer.lineSpacing = this.lineSpacing, this.textRenderer.valign = this.valign, this.textRenderer.enableShadow = this.enableShadow, this.textRenderer.shadowAlpha = this.shadowAlpha, this.textRenderer.shadowColor = this.shadowColor, this.textRenderer.shadowOffsetX = this.shadowOffsetX, this.textRenderer.shadowOffsetY = this.shadowOffsetY, this.textRenderer.outlineWeight = this.outlineWeight, this.textRenderer.outlineColor = this.outlineColor, this.textRenderer.outlineCap = this.outlineCap, this.textRenderer.outlineJoin = this.outlineJoin;
        if (this.prevText != this.text) {
          this.prevText = this.text;
          var _0x2257fd = ig.system.context;
          _0x2257fd.save(), _0x2257fd.font = this.font;
          var _0x10ac15 = _0x2257fd.measureText(this.text);
          this.centerYOffset = parseInt(this.font.split('px')[0x0].split(" ").pop()) / 0x2 - _0x10ac15.actualBoundingBoxAscent, _0x2257fd.restore();
        }
        this.textRenderer.draw(_0x29631b + this.width / 0x2, _0x31e609 + this.height / 0x2 + this.centerYOffset), this.enableNotif && this.drawAlertIcon(_0x29631b, _0x31e609);
      }
    },
    'drawAlertIcon': function (_0x121154, _0x404f43) {
      ig.system.context.save(), ig.system.context.globalAlpha = this.alpha, ig.system.context.beginPath(), ig.system.context.fillStyle = 'red', ig.system.context.strokeStyle = '#011B3B', ig.system.context.lineWidth = 0x3, ig.system.context.arc(_0x121154 + this.image.width - 0xa, _0x404f43, 0x18, 0x0, 0x2 * Math.PI), ig.system.context.fill(), ig.system.context.stroke(), ig.system.context.fillStyle = '#ffffff', ig.system.context.font = "36px archivo-black", ig.system.context.textBaseline = 'middle', ig.system.context.fillText('!', _0x121154 + this.image.width - 0xa, _0x404f43), ig.system.context.restore();
    },
    'alertVisibility': function (_0x49066f) {
      this.enableNotif = _0x49066f;
    },
    'onFinishEntering': function () {
      this.inputEnabled = !0x0;
    }
  }), ig.LootboxParticleIn = ig.LootboxGameObject.extend({
    'zIndex': 0xf423f,
    'forceDraw': !0x0,
    'targetX': 0x0,
    'targetY': 0x0,
    'hasSpawned': !0x1,
    'fadeAway': !0x1,
    'fillColor': '#ffffff',
    'init': function (_0x13cd75, _0x5d972a, _0x420592) {
      this.parent(_0x13cd75 + 0x2 * ig.LootboxRandom.float(-0xb4, 0xb4), _0x5d972a + 0x2 * ig.LootboxRandom.float(-0xb4, 0xb4), _0x420592), this.targetX = _0x13cd75, this.targetY = _0x5d972a, this.alpha = 0x0, this.width = this.height = ig.LootboxRandom.int(0x14, 0x1e);
    },
    'update': function () {
      this.parent(), 0x0 < this.delay ? this.delay -= ig.system.tick : (this.hasSpawned = !0x0, ig.responsive ? (this.anchoredPositionX += (this.targetX - this.anchoredPositionX) / 0xa, this.anchoredPositionY += (this.targetY - this.anchoredPositionY) / 0xa, 0x64 > Math.abs(this.anchoredPositionX - this.targetX) && 0x64 > Math.abs(this.anchoredPositionY - this.targetY) && (this.fadeAway = !0x0)) : (this.pos.x += (this.targetX - this.pos.x) / 0xa, this.pos.y += (this.targetY - this.pos.y) / 0xa, 0x64 > Math.abs(this.pos.x - this.targetX) && 0x64 > Math.abs(this.pos.y - this.targetY) && (this.fadeAway = !0x0)), this.fadeAway ? (this.alpha -= 0x5 * ig.system.tick, 0x0 >= this.alpha && this.kill()) : this.alpha = 0.5 > this.alpha ? this.alpha + 0xa * ig.system.tick : 0.5);
    },
    'drawObject': function (_0x2d6a37, _0x4b6baa) {
      this.parent(_0x2d6a37, _0x4b6baa);
      if (this.hasSpawned) {
        var _0xef6e3b = ig.system.context,
          _0x51a6db = ig.hexToRgb(this.fillColor);
        _0xef6e3b.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x51a6db.r + ',' + _0x51a6db.g + ',' + _0x51a6db.b + ',' + this.alpha + ')' : _0x51a6db.hex, _0xef6e3b.beginPath(), _0xef6e3b.arc(_0x2d6a37, _0x4b6baa, this.width, 0x0, 0x2 * Math.PI), _0xef6e3b.fill(), _0xef6e3b.closePath();
      }
    }
  }), ig.LootboxParticleOut = ig.LootboxGameObject.extend({
    'zIndex': 0xf423f,
    'forceDraw': !0x0,
    'targetX': 0x0,
    'targetY': 0x0,
    'hasSpawned': !0x1,
    'fadeAway': !0x1,
    'fillColor': '#ffffff',
    'init': function (_0x19e31e, _0x52a0eb, _0x114201) {
      var _0xb45ec0 = 0x2 * Math.random() * Math.PI,
        _0x4dd74e = 1.5 * Math.cos(_0xb45ec0) * ig.LootboxRandom.int(0x5a, 0x168),
        _0xb45ec0 = 1.5 * Math.sin(_0xb45ec0) * ig.LootboxRandom.int(0x5a, 0x168);
      this.parent(_0x19e31e + _0x4dd74e / 0x2, _0x52a0eb + _0xb45ec0 / 0x2, _0x114201), this.targetX = _0x19e31e + _0x4dd74e, this.targetY = _0x52a0eb + _0xb45ec0, this.alpha = 0.5, this.width = this.height = ig.LootboxRandom.int(0x14, 0x1e);
    },
    'update': function () {
      this.parent();
      if (0x0 < this.delay) this.delay -= ig.system.tick;else {
        this.hasSpawned = !0x0;
        if (ig.responsive) {
          if (this.anchoredPositionX += (this.targetX - this.anchoredPositionX) / 0xa, this.anchoredPositionY += (this.targetY - this.anchoredPositionY) / 0xa, 0xa < Math.abs(this.anchoredPositionX - this.targetX) || 0xa < Math.abs(this.anchoredPositionY - this.targetY)) this.fadeAway = !0x0;
        } else {
          if (this.pos.x += (this.targetX - this.pos.x) / 0xa, this.pos.y += (this.targetY - this.pos.y) / 0xa, 0xa < Math.abs(this.pos.x - this.targetX) || 0xa < Math.abs(this.pos.y - this.targetY)) this.fadeAway = !0x0;
        }
        this.fadeAway && (this.alpha -= ig.system.tick, 0x0 >= this.alpha && this.kill());
      }
    },
    'drawObject': function (_0x22d37d, _0x2f9ddf) {
      this.parent(_0x22d37d, _0x2f9ddf);
      if (this.hasSpawned) {
        var _0x2702b3 = ig.system.context,
          _0x14fb0d = ig.hexToRgb(this.fillColor);
        _0x2702b3.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0x14fb0d.r + ',' + _0x14fb0d.g + ',' + _0x14fb0d.b + ',' + this.alpha + ')' : _0x14fb0d.hex, _0x2702b3.beginPath(), _0x2702b3.arc(_0x22d37d, _0x2f9ddf, this.width, 0x0, 0x2 * Math.PI), _0x2702b3.fill(), _0x2702b3.closePath();
      }
    }
  }), ig.hexToRgb = function (_0x276ae8) {
    ig.hexToRgbTable || (ig.hexToRgbTable = {});
    if (ig.hexToRgbTable[_0x276ae8]) return ig.hexToRgbTable[_0x276ae8];
    var _0xde4c8d = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(_0x276ae8);
    if (_0xde4c8d) return ig.hexToRgbTable[_0x276ae8] = {
      'r': parseInt(_0xde4c8d[0x1], 0x10),
      'g': parseInt(_0xde4c8d[0x2], 0x10),
      'b': parseInt(_0xde4c8d[0x3], 0x10),
      'hex': _0x276ae8
    }, ig.hexToRgbTable[_0x276ae8];
    return console.error("cannot convert to rgb from hex :", _0x276ae8), null;
  }, ig.LootboxSignal = ig.Class.extend({
    'signalListeners': null,
    'id': 0x0,
    'init': function () {
      this.id = ++ig.LootboxSignal._lastId, this.signalListeners = [];
    },
    'addOnce': function (_0x28b1e1, _0x48f96e) {
      this.signalListeners.push({
        'signalListener': _0x28b1e1,
        'signalContext': _0x48f96e,
        'isOnce': !0x0
      });
    },
    'add': function (_0x2f83c5, _0x4bdf8b) {
      this.signalListeners.push({
        'signalListener': _0x2f83c5,
        'signalContext': _0x4bdf8b,
        'isOnce': !0x1
      });
    },
    'dispatch': function () {
      for (var _0x533d5f = 0x0; _0x533d5f < this.signalListeners.length;) {
        var _0x3ae79d = this.signalListeners[_0x533d5f];
        _0x3ae79d.signalListener.apply(_0x3ae79d.signalContext, arguments), _0x3ae79d.isOnce ? this.signalListeners.splice(_0x533d5f, 0x1) : _0x533d5f++;
      }
    },
    'clear': function () {
      this.signalListeners = [];
    }
  }), ig.LootboxSignal._lastId = 0x0, ig.LootboxTouch = {
    'hasInitialized': !0x1,
    'touches': [],
    'mouseX': 0x0,
    'mouseY': 0x0,
    'init': function () {
      ig.ua.touchDevice && (window.navigator.msPointerEnabled && (ig.system.canvas.addEventListener('MSPointerDown', this.touchDown.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerUp', this.touchUp.bind(this), !0x1), ig.system.canvas.addEventListener('MSPointerMove', this.touchMove.bind(this), !0x1), ig.system.canvas.style.msContentZooming = 'none', ig.system.canvas.style.msTouchAction = 'none'), ig.system.canvas.addEventListener('touchstart', this.touchDown.bind(this), !0x1), ig.system.canvas.addEventListener('touchend', this.touchUp.bind(this), !0x1), ig.system.canvas.addEventListener('touchmove', this.touchMove.bind(this), !0x1)), ig.system.canvas.addEventListener('mousemove', this.mouseMove.bind(this), !0x1), this.hasInitialized = !0x0;
    },
    'mouseMove': function (_0x54955b) {
      var _0x5394ff = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x2e5dfd = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
      this.scaleX = ig.system.scale * (_0x5394ff / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x2e5dfd / ig.system.realHeight), _0x5394ff = {
        'left': 0x0,
        'top': 0x0
      }, ig.system.canvas.getBoundingClientRect && (_0x5394ff = ig.system.canvas.getBoundingClientRect()), this.mouseX = (_0x54955b.clientX - _0x5394ff.left) / this.scaleX, this.mouseY = (_0x54955b.clientY - _0x5394ff.top) / this.scaleY;
    },
    'touchDown': function (_0x1f3656) {
      this.processTouch(_0x1f3656.touches);
    },
    'touchUp': function (_0x5ae770) {
      this.processTouch(_0x5ae770.touches);
    },
    'touchMove': function (_0x159e6e) {
      this.processTouch(_0x159e6e.touches);
    },
    'processTouch': function (_0x551d7b) {
      var _0x3f145d = parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth,
        _0x33e928 = parseInt(ig.system.canvas.offsetHeight) || ig.system.realHeight;
      this.scaleX = ig.system.scale * (_0x3f145d / ig.system.realWidth), this.scaleY = ig.system.scale * (_0x33e928 / ig.system.realHeight), _0x3f145d = {
        'left': 0x0,
        'top': 0x0
      }, ig.system.canvas.getBoundingClientRect && (_0x3f145d = ig.system.canvas.getBoundingClientRect()), this.touches = [];
      for (_0x33e928 = 0x0; _0x33e928 < _0x551d7b.length; _0x33e928++) {
        var _0x4c285e = _0x551d7b[_0x33e928];
        this.touches.push({
          'x': (_0x4c285e.clientX - _0x3f145d.left) / this.scaleX,
          'y': (_0x4c285e.clientY - _0x3f145d.top) / this.scaleY
        });
      }
    }
  }, ig.Entity.prototype.delayedCall = function (_0x4e7847, _0x1de158, _0x5e7cc0) {
    return void 0x0 === _0x5e7cc0 && (_0x5e7cc0 = !0x0), _0x4e7847 = new ig.Tween(this, {}, _0x4e7847, {
      'onComplete': _0x1de158
    }), this.tweens.push(_0x4e7847), _0x5e7cc0 && _0x4e7847.start(), _0x4e7847;
  }, ig.LootboxRandom = {
    'chance': function (_0x78d211) {
      return Math.random() < _0x78d211;
    },
    'bool': function () {
      return 0.5 > Math.random();
    },
    'int': function (_0x21c8a6, _0x5c6f71) {
      return _0x21c8a6 + Math.floor((_0x5c6f71 - _0x21c8a6 + 0x1) * Math.random());
    },
    'float': function (_0x1054b4, _0x5163a4) {
      return _0x1054b4 + (_0x5163a4 - _0x1054b4) * Math.random();
    },
    'string': function (_0xccc3b9, _0x4cea40) {
      void 0x0 === _0x4cea40 && (_0x4cea40 = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');
      for (var _0x322678 = '', _0x4c6f11 = 0x0; _0x4c6f11 < _0xccc3b9; _0x4c6f11++) _0x322678 += _0x4cea40.charAt(Random.int(0x0, _0x4cea40.length - 0x1));
      return _0x322678;
    },
    'fromArray': function (_0x19080a) {
      return null != _0x19080a && 0x0 < _0x19080a.length ? _0x19080a[this.int(0x0, _0x19080a.length - 0x1)] : null;
    },
    'shuffle': function (_0x52847e) {
      if (null != _0x52847e) for (var _0x237fcb = 0x0; _0x237fcb < _0x52847e.length; _0x237fcb++) {
        var _0x41aced = this.int(0x0, _0x52847e.length - 0x1),
          _0x408609 = _0x52847e[_0x237fcb];
        _0x52847e[_0x237fcb] = _0x52847e[_0x41aced], _0x52847e[_0x41aced] = _0x408609;
      }
      return _0x52847e;
    }
  };
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-card').requires('plugins.lootbox.lootbox-game-object').defines(function () {
  ig.LootboxCard = ig.LootboxGameObject.extend({
    'id': 0x0,
    'zIndex': 0x270e,
    'level': 0x1,
    'faceDown': !0x1,
    'isSelected': !0x1,
    'isCustomCard': !0x1,
    'customName': null,
    'customLevel': null,
    'customImage': null,
    'customDescription': null,
    'isNameOnTop': !0x1,
    'isGreyedOut': !0x1,
    'isMergeable': !0x1,
    'mergeAnimValue': 0x1,
    'mergeAnimValueModifier': 0.05,
    'showExp': !0x0,
    'init': function (_0x24f43f, _0x404be0, _0x184234) {
      this.parent(_0x24f43f, _0x404be0, _0x184234), this.width = ig.Lootbox.card.width, this.height = ig.Lootbox.card.height, this.forceDraw = !0x0, this.description = ig.Lootbox.card.description[this.id], this.frontCardImage = ig.Lootbox.images.frontCardImage || null, this.backCardImage = ig.Lootbox.images.backCardImage || null;
      if (!ig.cardFrontBgCanvas) {
        ig.cardFrontBgCanvas = ig.$new('canvas'), ig.cardFrontBgCanvas.width = 0x2 * ig.Lootbox.card.width, ig.cardFrontBgCanvas.height = 0x2 * ig.Lootbox.card.height, _0x184234 = ig.cardFrontBgCanvas.getContext('2d'), _0x404be0 = _0x24f43f = 0x0, _0x184234.save(), _0x184234.scale(0x2, 0x2);
        var _0x12fdd5 = ig.Lootbox.card.roundedRadius;
        _0x184234.fillStyle = ig.Lootbox.card.frontColor, _0x184234.fillRect(_0x24f43f + _0x12fdd5, _0x404be0, this.width - 0x2 * _0x12fdd5, this.height), _0x184234.fillRect(_0x24f43f, _0x404be0 + _0x12fdd5, this.width, this.height - 0x2 * _0x12fdd5), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + _0x12fdd5, _0x404be0 + _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + this.width - _0x12fdd5, _0x404be0 + _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + _0x12fdd5, _0x404be0 + this.height - _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + this.width - _0x12fdd5, _0x404be0 + this.height - _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.restore();
      }
      ig.greyCanvas || (ig.greyCanvas = ig.$new('canvas'), ig.greyCanvas.width = 0x2 * ig.Lootbox.card.width, ig.greyCanvas.height = 0x2 * ig.Lootbox.card.height, _0x184234 = ig.greyCanvas.getContext('2d'), _0x404be0 = _0x24f43f = 0x0, _0x184234.save(), _0x184234.scale(0x2, 0x2), _0x12fdd5 = ig.Lootbox.card.roundedRadius, _0x184234.fillStyle = '#000000', _0x184234.fillRect(_0x24f43f + _0x12fdd5, _0x404be0, this.width - 0x2 * _0x12fdd5, this.height), _0x184234.fillRect(_0x24f43f, _0x404be0 + _0x12fdd5, this.width, this.height - 0x2 * _0x12fdd5), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + _0x12fdd5, _0x404be0 + _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + this.width - _0x12fdd5, _0x404be0 + _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + _0x12fdd5, _0x404be0 + this.height - _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.beginPath(), _0x184234.arc(_0x24f43f + this.width - _0x12fdd5, _0x404be0 + this.height - _0x12fdd5, _0x12fdd5, 0x0, 0x2 * Math.PI), _0x184234.fill(), _0x184234.closePath(), _0x184234.restore()), ig.game.sortEntitiesDeferred();
    },
    'onClickUpgrade': function () {
      0x1 <= ig.Lootbox.getExpProgress(this.id) && (ig.Lootbox.levelUpCard(this.id), ig.Lootbox.saveData(), this.exp = ig.Lootbox.getExpFromFirstCardWithId(this.id), this.level = ig.Lootbox.getLevelFromFirstCardWithId(this.id), ig.soundHandler.sfxPlayer.play(ig.Lootbox.sounds.button)), this.checkAndSpawnUpgradeButton();
    },
    'hasUpgrade': function () {
      return this.upgradeButton && this.upgradeButton.visible;
    },
    'checkAndSpawnUpgradeButton': function () {
      this.level >= ig.Lootbox.card.levelMax || 0x1 > ig.Lootbox.getExpProgress(this.id) ? (this.upgradeButton && this.upgradeButton.kill(), this.upgradeButton = null) : (this.upgradeButton || (this.upgradeButton = ig.game.spawnEntity(ig.LootboxSimpleButton, 0x0, 0x0, {
        'image': ig.Lootbox.images.simple,
        'font': ig.Lootbox.page.button.font,
        'textColor': ig.Lootbox.page.button.textColor ? ig.Lootbox.page.button.textColor : '#ffffff',
        'offsetY': ig.Lootbox.page.button.offsetY,
        'text': ig.Lootbox.strings.upgradeButton,
        'zIndex': this.zIndex + 0x1
      }), this.usePressedTween = !0x1, this.upgradeButton.onClicked.add(this.onClickUpgrade, this), this.upgradeButton.visible = !0x1), this.upgradeButton.visible = this.level < ig.Lootbox.card.levelMax && 0x1 <= ig.Lootbox.getExpProgress(this.id) ? !0x0 : !0x1);
    },
    'exit': function () {
      this.parent(), this.upgradeButton && this.upgradeButton.exit();
    },
    'update': function () {
      this.parent();
      if (this.upgradeButton && (this.upgradeButton.visible = this.visible, this.upgradeButton.alpha = this.alpha, this.upgradeButton.alertVisibility(this.visible), this.upgradeButton.visible)) {
        ig.responsive ? (this.upgradeButton.anchoredPositionX = this.anchoredPositionX, this.upgradeButton.anchoredPositionY = this.anchoredPositionY, 0x0 == this.anchorX && (this.upgradeButton.anchoredPositionX += 0.5 * this.width * this.scaleX), 0x0 == this.anchorY && (this.upgradeButton.anchoredPositionY += 0.5 * this.height * this.scaleY)) : (this.upgradeButton.pos.x = this.pos.x, this.upgradeButton.pos.y = this.pos.y, 0x0 == this.anchorX && (this.upgradeButton.pos.x += 0.5 * this.width * this.scaleX), 0x0 == this.anchorY && (this.upgradeButton.pos.y += 0.5 * this.height * this.scaleY));
        var _0x23742c = 0.9 * this.width / this.upgradeButton.width * this.scaleX;
        this.upgradeButton.normalScale = _0x23742c, this.upgradeButton.scaleX = _0x23742c, this.upgradeButton.scaleY = _0x23742c;
      }
    },
    'flip': function (_0x3803a3) {
      _0x3803a3 || (_0x3803a3 = 0x0), this.tween({}, _0x3803a3, {
        'onComplete': function () {
          var _0x7d9190 = this.scaleX,
            _0x3b947f = this.anchorY;
          this.tween({
            'scaleX': 0x0,
            'anchorY': _0x3b947f + 0.1
          }, 0.25, {
            'easing': ig.Tween.Easing.Quadratic.EaseOut,
            'onComplete': function () {
              this.faceDown = !this.faceDown, this.tween({
                'scaleX': _0x7d9190,
                'anchorY': _0x3b947f
              }, 0.25, {
                'easing': ig.Tween.Easing.Quadratic.EaseOut,
                'onComplete': function () {}.bind(this)
              }).start();
            }.bind(this)
          }).start();
        }.bind(this)
      }).start();
    },
    'flipSwitch': function (_0x4e4b89, _0x3a66fd, _0x3ea689, _0x4d3804, _0x517b55, _0x1ae715, _0x4aa04d, _0x325c4f) {
      _0x4e4b89 || (_0x4e4b89 = this.id), _0x3a66fd || (_0x3a66fd = ig.Lootbox.getLevelFromFirstCardWithId(this.id)), _0x3ea689 || (_0x3ea689 = !0x1);
      var _0x565bf9 = this.scaleX,
        _0x3e9694 = this.anchorY;
      this.customDescription = '', this.tween({
        'scaleX': 0x0,
        'anchorY': _0x3e9694 + 0.1
      }, 0.15, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': function () {
          this.faceDown = !0x1, this.id = _0x4e4b89, this.level = _0x3a66fd, this.isGreyedOut = _0x3ea689, _0x517b55 && (this.isCustomCard = _0x517b55, this.customName = _0x1ae715, this.customLevel = _0x3a66fd, this.customImage = _0x4aa04d, this.customDescription = _0x325c4f), this.tween({
            'scaleX': _0x565bf9,
            'anchorY': _0x3e9694
          }, 0.15, {
            'easing': ig.Tween.Easing.Quadratic.EaseOut,
            'onComplete': function () {
              _0x4d3804 && _0x4d3804();
            }.bind(this)
          }).start();
        }.bind(this)
      }).start();
    },
    'addExpTo': function (_0x2d83b7, _0x542483) {
      var _0x595bcb = this.id,
        _0x482aa0 = ig.Lootbox.getLevelFromFirstCardWithId(_0x595bcb),
        _0xb769c1 = ig.Lootbox.getExpFromFirstCardWithId(_0x595bcb);
      ig.Lootbox.isCardWithIdAlreadyExist(_0x595bcb) || (ig.Lootbox.addCardData(_0x595bcb, 0x0, 0x0), ig.Lootbox.saveData()), _0x542483 || (_0x542483 = 0.01), this.delayedCall(_0x542483, function () {
        _0x2d83b7.flipSwitch(_0x595bcb, _0x482aa0, !0x1, null, !0x1), this.tween(ig.responsive ? {
          'scaleX': _0x2d83b7.scaleX,
          'scaleY': _0x2d83b7.scaleY,
          'anchoredPositionX': _0x2d83b7.anchoredPositionX,
          'anchoredPositionY': _0x2d83b7.anchoredPositionY
        } : {
          'scaleX': _0x2d83b7.scaleX,
          'scaleY': _0x2d83b7.scaleY,
          'pos': {
            'x': _0x2d83b7.pos.x,
            'y': _0x2d83b7.pos.y
          }
        }, 0.3, {
          'delay': 0.2,
          'easing': ig.Tween.Easing.Quadratic.EaseIn,
          'onComplete': function () {
            for (var _0x41e008 = 0x0; 0x32 > _0x41e008; _0x41e008++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleOut, _0x2d83b7.anchoredPositionX, _0x2d83b7.anchoredPositionY, {
              'delay': 0.002 * _0x41e008,
              'fillColor': '#ffffff'
            }) : ig.game.spawnEntity(ig.LootboxParticleOut, _0x2d83b7.pos.x, _0x2d83b7.pos.y, {
              'delay': 0.002 * _0x41e008,
              'fillColor': '#ffffff'
            });
            ig.soundHandler.sfxPlayer.play(ig.Lootbox.sounds.particleOut), ig.Lootbox.incrementExpOfFirstCardWithId(_0x595bcb, 0x1), ig.Lootbox.saveData(), _0x2d83b7.exp = _0xb769c1 + 0x1, this.exit();
          }.bind(this)
        }).start();
      }.bind(this));
    },
    'drawObject': function (_0xc19ea7, _0x474b02) {
      ig.system.context.globalAlpha = this.alpha, 0x0 > this.id ? this.drawEmpty(_0xc19ea7, _0x474b02) : this.faceDown ? this.drawBack(_0xc19ea7, _0x474b02) : this.drawFront(_0xc19ea7, _0x474b02), ig.system.context.globalAlpha = 0x1;
    },
    'drawFront': function (_0x1240e4, _0x2dffd0) {
      var _0x85937f = ig.system.context,
        _0x50d08c = ig.Lootbox.card.roundedRadius;
      _0x85937f.save();
      if (this.isSelected) {
        _0x85937f.save();
        var _0x1afc9a = Math.floor(0.05 * this.width);
        _0x85937f.lineJoin = 'round', _0x85937f.strokeStyle = ig.Lootbox.card.selectedColor, _0x85937f.lineWidth = Math.floor(0.08 * this.width), _0x85937f.strokeRect(_0x1240e4 + _0x50d08c, _0x2dffd0 - _0x1afc9a, this.width - 0x2 * _0x50d08c, this.height + _0x1afc9a), _0x85937f.strokeRect(_0x1240e4, _0x2dffd0 + _0x50d08c - _0x1afc9a, this.width, this.height - 0x2 * _0x50d08c + _0x1afc9a), _0x85937f.beginPath(), _0x85937f.arc(_0x1240e4 + _0x50d08c, _0x2dffd0 + _0x50d08c - _0x1afc9a, _0x50d08c, 0x0, 0x2 * Math.PI), _0x85937f.stroke(), _0x85937f.closePath(), _0x85937f.beginPath(), _0x85937f.arc(_0x1240e4 + this.width - _0x50d08c, _0x2dffd0 + _0x50d08c - _0x1afc9a, _0x50d08c, 0x0, 0x2 * Math.PI), _0x85937f.stroke(), _0x85937f.closePath(), _0x85937f.beginPath(), _0x85937f.arc(_0x1240e4 + _0x50d08c, _0x2dffd0 + this.height - _0x50d08c, _0x50d08c, 0x0, 0x2 * Math.PI), _0x85937f.stroke(), _0x85937f.closePath(), _0x85937f.beginPath(), _0x85937f.arc(_0x1240e4 + this.width - _0x50d08c, _0x2dffd0 + this.height - _0x50d08c, _0x50d08c, 0x0, 0x2 * Math.PI), _0x85937f.stroke(), _0x85937f.closePath(), _0x85937f.restore(), _0x85937f.fillStyle = ig.Lootbox.card.backAccentColor, _0x85937f.fillRect(_0x1240e4 + _0x50d08c, _0x2dffd0, this.width - 0x2 * _0x50d08c, this.height), _0x85937f.fillRect(_0x1240e4, _0x2dffd0 + _0x50d08c, this.width, this.height - 0x2 * _0x50d08c), _0x85937f.beginPath(), _0x85937f.arc(_0x1240e4 + _0x50d08c, _0x2dffd0 + this.height - _0x50d08c, _0x50d08c, 0x0, 0x2 * Math.PI), _0x85937f.fill(), _0x85937f.closePath(), _0x85937f.beginPath(), _0x85937f.arc(_0x1240e4 + this.width - _0x50d08c, _0x2dffd0 + this.height - _0x50d08c, _0x50d08c, 0x0, 0x2 * Math.PI), _0x85937f.fill(), _0x85937f.closePath(), _0x85937f.translate(0x0, -_0x1afc9a);
      }
      this.frontCardImage ? _0x85937f.drawImage(this.frontCardImage.data, 0x0, 0x0, this.frontCardImage.width, this.frontCardImage.height, _0x1240e4, _0x2dffd0, this.width, this.height) : _0x85937f.drawImage(ig.cardFrontBgCanvas, 0x0, 0x0, 0x2 * ig.Lootbox.card.width, 0x2 * ig.Lootbox.card.height, _0x1240e4, _0x2dffd0, this.width, this.height), _0x1afc9a = ig.Lootbox.card.icons[this.id], this.isCustomCard && (_0x1afc9a = this.customImage);
      var _0x5b5db8 = Math.floor(0.8 * this.width);
      if (this.isMergeable) {
        this.mergeAnimValue += 0xa * ig.system.tick;
        var _0x2dd00f = Math.sin(this.mergeAnimValue) * _0x5b5db8 * this.mergeAnimValueModifier,
          _0x5b5db8 = _0x5b5db8 + _0x2dd00f;
      }
      var _0x2dd00f = Math.floor((this.width - _0x5b5db8) / 0x2),
        _0x20030f = Math.floor((this.height - _0x5b5db8) / 0x2);
      _0x1afc9a && (_0x1afc9a.drawImageCtx ? _0x1afc9a.drawImageCtx(_0x85937f, 0x0, 0x0, _0x1afc9a.width, _0x1afc9a.height, _0x1240e4 + _0x2dd00f, _0x2dffd0 + _0x20030f, _0x5b5db8, _0x5b5db8) : _0x85937f.drawImage(_0x1afc9a.data, 0x0, 0x0, _0x1afc9a.width, _0x1afc9a.height, _0x1240e4 + _0x2dd00f, _0x2dffd0 + _0x20030f, _0x5b5db8, _0x5b5db8));
      var _0x20030f = 0.4 * this.width,
        _0xd4382 = 0.1 * this.height + _0x50d08c,
        _0x5b5db8 = 0xa,
        _0x1afc9a = 0.07 * this.height,
        _0x419257 = Math.floor(0x1 * _0x1afc9a) + 'px',
        _0x167662 = this.isCustomCard ? ig.Lootbox.card.levelPrefix + this.customLevel : ig.Lootbox.card.levelPrefix + this.level,
        _0x2dd00f = !0x0;
      this.isCustomCard && null == this.customLevel && (_0x2dd00f = !0x1), _0x2dd00f && (ig.Lootbox.isUpgradeMode ? (_0x2dd00f = ig.Lootbox.getExpProgress(this.id), 0x1 < _0x2dd00f && (_0x2dd00f = 0x1), this.level == ig.Lootbox.upgradeRequirements.length && (_0x167662 = _STRINGS.Lootbox.levelMax, _0x2dd00f = 0x1), _0xd4382 = _0x50d08c, this.showExp && (_0x85937f.fillStyle = ig.Lootbox.card.frontAccentColor, _0x85937f.font = _0x419257 + " " + ig.Lootbox.card.font, _0x85937f.textAlign = 'center', _0x85937f.fillText(_0x167662, _0x1240e4 + (_0x20030f + 0.7 * _0x1afc9a) / 0x2 + -0x6, _0x2dffd0 + _0xd4382 + 0.4 * _0x1afc9a + _0x5b5db8), _0x85937f.save(), _0x85937f.strokeStyle = ig.Lootbox.card.barEmptyColor, _0x85937f.lineWidth = _0x50d08c, _0x85937f.lineCap = 'round', _0x419257 = _0x1240e4 + _0x20030f + _0x50d08c + -0xc, _0xd4382 = _0x2dffd0 + _0xd4382 + _0x5b5db8, _0x20030f = this.width - _0x20030f - 0x2 * _0x50d08c, _0x167662 = Math.floor(_0x2dd00f * _0x20030f), _0x85937f.beginPath(), _0x85937f.moveTo(_0x419257, _0xd4382), _0x85937f.lineTo(_0x419257 + _0x20030f, _0xd4382), _0x85937f.stroke(), 0x1 > _0x167662 && (_0x167662 = 0x1), _0x85937f.strokeStyle = ig.Lootbox.card.barFillColor, _0x85937f.beginPath(), _0x85937f.moveTo(_0x419257, _0xd4382), _0x85937f.lineTo(_0x419257 + _0x167662, _0xd4382), 0x0 < _0x2dd00f && _0x85937f.stroke(), _0x85937f.restore())) : (_0x85937f.fillStyle = ig.Lootbox.card.frontAccentColor, _0x85937f.beginPath(), _0x85937f.arc(_0x1240e4 + _0x20030f, _0x2dffd0 + _0xd4382, _0x1afc9a, 0x0, 0x2 * Math.PI), _0x85937f.fill(), _0x85937f.closePath(), _0x85937f.fillRect(_0x1240e4, _0x2dffd0 + _0xd4382 - _0x1afc9a, _0x20030f, 0x2 * _0x1afc9a), _0x85937f.fillStyle = ig.Lootbox.card.textColor, _0x85937f.font = _0x419257 + " " + ig.Lootbox.card.font, _0x85937f.textAlign = 'center', _0x85937f.fillText(_0x167662, _0x1240e4 + (_0x20030f + 0.7 * _0x1afc9a) / 0x2, _0x2dffd0 + _0xd4382 + 0.4 * _0x1afc9a))), _0x2dd00f = 0.65 * this.width, _0x20030f = _0x1240e4 + (this.width - _0x2dd00f) / 0x2, _0xd4382 = _0x2dffd0 + 0.95 * this.height - _0x50d08c + -_0x5b5db8, _0x5b5db8 = Math.floor(0x1 * _0x1afc9a) + 'px', _0x419257 = this.isCustomCard ? this.customName : ig.Lootbox.card.names[this.id], _0x167662 = !0x0, this.isNameOnTop && (_0xd4382 = _0x2dffd0 + 0.1 * this.height + _0x50d08c), this.isCustomCard && !this.customName && (_0x167662 = !0x1), _0x167662 && (_0x85937f.fillStyle = ig.Lootbox.card.frontAccentColor, _0x85937f.beginPath(), _0x85937f.arc(_0x20030f, _0xd4382, _0x1afc9a, 0x0, 0x2 * Math.PI), _0x85937f.fill(), _0x85937f.closePath(), _0x85937f.beginPath(), _0x85937f.arc(_0x20030f + _0x2dd00f, _0xd4382, _0x1afc9a, 0x0, 0x2 * Math.PI), _0x85937f.fill(), _0x85937f.closePath(), _0x85937f.fillRect(_0x20030f, _0xd4382 - _0x1afc9a, _0x2dd00f, 0x2 * _0x1afc9a), _0x85937f.fillStyle = ig.Lootbox.card.textColor, _0x85937f.font = _0x5b5db8 + " " + ig.Lootbox.card.font, _0x85937f.textAlign = 'center', _0x85937f.fillText(_0x419257, _0x1240e4 + this.width / 0x2, _0xd4382 + 0.4 * _0x1afc9a));
      if (this.isNameOnTop && this.customDescription) {
        _0x2dd00f = _0x2dffd0 + 0.95 * this.height - _0x50d08c, _0x85937f.fillStyle = ig.Lootbox.card.frontAccentColor, _0x85937f.font = _0x5b5db8 + " " + ig.Lootbox.card.font, _0x85937f.textAlign = 'center', _0x50d08c = this.customDescription.split(/\r?\n/), _0x1afc9a = Math.floor(1.25 * _0x1afc9a), _0x5b5db8 = _0x2dd00f - _0x1afc9a * _0x50d08c.length / 0x2;
        for (_0x2dd00f = 0x0; _0x2dd00f < _0x50d08c.length; _0x2dd00f++) _0x85937f.fillText(_0x50d08c[_0x2dd00f], _0x1240e4 + this.width / 0x2, _0x5b5db8 + _0x1afc9a * _0x2dd00f);
      }
      this.isGreyedOut && this.drawFront && (ig.system.context.globalAlpha = 0.3 * this.alpha, _0x85937f.drawImage(ig.greyCanvas, 0x0, 0x0, 0x2 * ig.Lootbox.card.width, 0x2 * ig.Lootbox.card.height, _0x1240e4, _0x2dffd0, this.width, this.height), ig.system.context.globalAlpha = this.alpha), _0x85937f.restore();
    },
    'drawBack': function (_0x509844, _0x39f675) {
      var _0x360213 = ig.system.context,
        _0xda5e50 = ig.Lootbox.card.roundedRadius;
      if (this.backCardImage) _0x360213.drawImage(this.backCardImage.data, 0x0, 0x0, this.backCardImage.width, this.backCardImage.height, _0x509844, _0x39f675, this.width, this.height);else {
        _0x360213.save(), _0x360213.fillStyle = ig.Lootbox.card.backAccentColor, _0x360213.fillRect(_0x509844 + _0xda5e50, _0x39f675, this.width - 0x2 * _0xda5e50, this.height), _0x360213.fillRect(_0x509844, _0x39f675 + _0xda5e50, this.width, this.height - 0x2 * _0xda5e50), _0x360213.beginPath(), _0x360213.arc(_0x509844 + _0xda5e50, _0x39f675 + _0xda5e50, _0xda5e50, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath(), _0x360213.beginPath(), _0x360213.arc(_0x509844 + this.width - _0xda5e50, _0x39f675 + _0xda5e50, _0xda5e50, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath(), _0x360213.beginPath(), _0x360213.arc(_0x509844 + _0xda5e50, _0x39f675 + this.height - _0xda5e50, _0xda5e50, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath(), _0x360213.beginPath(), _0x360213.arc(_0x509844 + this.width - _0xda5e50, _0x39f675 + this.height - _0xda5e50, _0xda5e50, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath();
        var _0x1000dd = Math.floor(0.07 * this.width);
        _0x360213.fillStyle = ig.Lootbox.card.backColor, _0x360213.fillRect(_0x509844 + _0xda5e50 + _0x1000dd, _0x39f675 + _0x1000dd, this.width - 0x2 * (_0xda5e50 + _0x1000dd), this.height - 0x2 * _0x1000dd), _0x360213.fillRect(_0x509844 + _0x1000dd, _0x39f675 + _0xda5e50 + _0x1000dd, this.width - 0x2 * _0x1000dd, this.height - 0x2 * (_0xda5e50 + _0x1000dd));
        var _0x5ebf68 = (this.width - 0x2 * _0x1000dd - (this.width - 0x2 * (_0xda5e50 + _0x1000dd))) / 0x2;
        _0x360213.beginPath(), _0x360213.arc(_0x509844 + _0x1000dd + _0x5ebf68, _0x39f675 + _0x1000dd + _0x5ebf68, _0x5ebf68, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath(), _0x360213.beginPath(), _0x360213.arc(_0x509844 + this.width - _0x1000dd - _0x5ebf68, _0x39f675 + _0x1000dd + _0x5ebf68, _0x5ebf68, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath(), _0x360213.beginPath(), _0x360213.arc(_0x509844 + _0x1000dd + _0x5ebf68, _0x39f675 + this.height - _0x1000dd - _0x5ebf68, _0xda5e50, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath(), _0x360213.beginPath(), _0x360213.arc(_0x509844 + this.width - _0x1000dd - _0x5ebf68, _0x39f675 + this.height - _0x1000dd - _0x5ebf68, _0x5ebf68, 0x0, 0x2 * Math.PI), _0x360213.fill(), _0x360213.closePath(), _0x360213.restore();
      }
    },
    'drawEmpty': function (_0x11e0fa, _0x5d04a0) {
      var _0x59f415 = ig.system.context,
        _0x346982 = ig.Lootbox.card.roundedRadius;
      _0x59f415.save(), _0x59f415.fillStyle = ig.Lootbox.card.emptyColor, _0x59f415.fillRect(_0x11e0fa + _0x346982, _0x5d04a0, this.width - 0x2 * _0x346982, this.height), _0x59f415.fillRect(_0x11e0fa, _0x5d04a0 + _0x346982, this.width, this.height - 0x2 * _0x346982), _0x59f415.beginPath(), _0x59f415.arc(_0x11e0fa + _0x346982, _0x5d04a0 + _0x346982, _0x346982, 0x0, 0x2 * Math.PI), _0x59f415.fill(), _0x59f415.closePath(), _0x59f415.beginPath(), _0x59f415.arc(_0x11e0fa + this.width - _0x346982, _0x5d04a0 + _0x346982, _0x346982, 0x0, 0x2 * Math.PI), _0x59f415.fill(), _0x59f415.closePath(), _0x59f415.beginPath(), _0x59f415.arc(_0x11e0fa + _0x346982, _0x5d04a0 + this.height - _0x346982, _0x346982, 0x0, 0x2 * Math.PI), _0x59f415.fill(), _0x59f415.closePath(), _0x59f415.beginPath(), _0x59f415.arc(_0x11e0fa + this.width - _0x346982, _0x5d04a0 + this.height - _0x346982, _0x346982, 0x0, 0x2 * Math.PI), _0x59f415.fill(), _0x59f415.closePath(), _0x59f415.restore();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-deck-display').requires('plugins.lootbox.lootbox-card').defines(function () {
  ig.LootboxDeckDisplay = ig.Class.extend({
    'zIndex': 0x270f,
    'members': [],
    'cards': [],
    'isSelectable': !0x0,
    'maxSelection': 0x3,
    'onCardSelected': null,
    'width': 0x0,
    'height': 0x0,
    'nextButton': null,
    'prevButton': null,
    'deckOffsetTarget': 0x0,
    'deckOffset': 0x0,
    'scrollMax': 0x0,
    'nextPrevDelay': 0.3,
    'isExiting': !0x1,
    'init': function (_0x92ee41) {
      this.onCardSelected = new ig.LootboxSignal(), this.scrollSpeed = ig.Lootbox.page.scrollSpeed;
      var _0x567d15 = 0x0,
        _0x3dc134 = 0.06 * ig.Lootbox.card.width,
        _0x2baaab = ig.responsive ? ig.responsive.originalWidth : ig.system.width,
        _0x93acab = ig.responsive ? ig.responsive.originalHeight : ig.system.height,
        _0x1ba850 = ig.Lootbox.page.column * (ig.Lootbox.card.width + _0x3dc134) - _0x3dc134,
        _0x9904c6 = ig.Lootbox.page.row * (ig.Lootbox.card.height + _0x3dc134) - _0x3dc134,
        _0x17cbd1 = (_0x2baaab - _0x1ba850) / 0x2,
        _0x4cc9a9 = 0.46 * (_0x93acab - _0x9904c6);
      this.spacing = _0x3dc134, this.pageW = _0x2baaab, this.pageH = _0x93acab, this.totalW = _0x1ba850, this.totalH = _0x9904c6, this.offsetX = _0x17cbd1, this.offsetY = _0x4cc9a9;
      do {
        for (var _0x5579e = 0x0; _0x5579e < ig.Lootbox.page.row; _0x5579e++) for (var _0x452224 = 0x0; _0x452224 < ig.Lootbox.page.column; _0x452224++) {
          var _0x35fdc5 = _0x452224 * (ig.Lootbox.card.width + _0x3dc134) + _0x17cbd1,
            _0x5c41f2 = _0x5579e * (ig.Lootbox.card.height + _0x3dc134) + _0x4cc9a9,
            _0x4300e6 = null;
          _0x567d15 < _0x92ee41.length ? (_0x4300e6 = _0x92ee41[_0x567d15], _0x4300e6 = this.spawnMember(ig.LootboxCard, _0x35fdc5, _0x5c41f2, {
            'id': _0x4300e6.id,
            'level': _0x4300e6.level,
            'zIndex': 0x1869f,
            'originalX': _0x35fdc5
          }), _0x4300e6.inputEnabled = !0x0, _0x4300e6.onClicked.add(this.onClickCard, this)) : _0x4300e6 = this.spawnMember(ig.LootboxCard, _0x35fdc5, _0x5c41f2, {
            'id': -0x1,
            'level': 0x1,
            'zIndex': 0x1869f,
            'originalX': _0x35fdc5
          }), this.cards.push(_0x4300e6), this.checkCardAlpha(_0x4300e6, !0x0), _0x567d15++;
        }
        _0x17cbd1 += _0x1ba850 + _0x3dc134, _0x567d15 < _0x92ee41.length && (this.scrollMax += ig.Lootbox.page.column);
      } while (_0x567d15 < _0x92ee41.length);
      this.width = _0x1ba850, this.height = _0x9904c6, this.nextButton = this.spawnMember(ig.LootboxSimpleButton, _0x2baaab / 0x2 + _0x1ba850 / 0x2 + _0x3dc134 + ig.Lootbox.images.next.width / 0x2, 0.46 * _0x93acab, {
        'image': ig.Lootbox.images.next,
        'zIndex': 0x1869f,
        'visible': !0x1,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.nextButton.onClicked.add(this.onClickNext, this), this.prevButton = this.spawnMember(ig.LootboxSimpleButton, _0x2baaab / 0x2 - _0x1ba850 / 0x2 - (_0x3dc134 + ig.Lootbox.images.next.width / 0x2), 0.46 * _0x93acab, {
        'image': ig.Lootbox.images.prev,
        'zIndex': 0x1869f,
        'visible': !0x1,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.prevButton.onClicked.add(this.onClickPrev, this), this.nextButton.visible = !0x1, this.prevButton.visible = !0x1, ig.game.sortEntitiesDeferred();
    },
    'enableButtons': function () {
      this.nextButton.inputEnabled = !0x0, this.prevButton.inputEnabled = !0x0, this.cards.forEach(function (_0x2f8c7c) {
        _0x2f8c7c.inputEnabled = !0x0;
        try {
          _0x2f8c7c.upgradeButton.inputEnabled = !0x0;
        } catch (_0x48f8e7) {}
      });
    },
    'disableButtons': function () {
      this.nextButton.inputEnabled = !0x1, this.prevButton.inputEnabled = !0x1, this.cards.forEach(function (_0x4e75a8) {
        _0x4e75a8.inputEnabled = !0x1;
        try {
          _0x4e75a8.upgradeButton.inputEnabled = !0x1;
        } catch (_0x3fe42a) {}
      });
    },
    'onClickPrev': function () {
      var _0x11e513 = this.scrollSpeed * (ig.Lootbox.card.width + this.spacing);
      this.deckOffsetTarget += _0x11e513;
      if (0x0 < this.deckOffsetTarget || _0x11e513 > Math.abs(Math.floor(this.deckOffsetTarget))) this.deckOffsetTarget = 0x0;
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
    },
    'onClickNext': function () {
      this.deckOffsetTarget -= this.scrollSpeed * (ig.Lootbox.card.width + this.spacing);
      var _0x25370f = -this.scrollMax * (ig.Lootbox.card.width + this.spacing);
      this.deckOffsetTarget < _0x25370f && (this.deckOffsetTarget = _0x25370f), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
    },
    'checkCardAlpha': function (_0x57bde6, _0x54add6) {
      var _0x14414a = ig.responsive ? _0x57bde6.anchoredPositionX : _0x57bde6.pos.x;
      _0x14414a < this.offsetX - this.spacing || _0x14414a > this.offsetX + this.totalW - ig.Lootbox.card.width + this.spacing ? (_0x54add6 && (_0x57bde6.alpha = 0x0), _0x57bde6.alpha -= 0.8 * _0x57bde6.alpha, 0.05 > _0x57bde6.alpha && (_0x57bde6.alpha = 0x0)) : (_0x54add6 && (_0x57bde6.alpha = 0x1), _0x57bde6.alpha += 0.8 * (0x1 - _0x57bde6.alpha), 0.95 < _0x57bde6.alpha && (_0x57bde6.alpha = 0x1)), _0x57bde6.visible = 0x0 >= _0x57bde6.alpha ? !0x1 : !0x0;
    },
    'update': function () {
      if (!this.isExiting) {
        this.deckOffset += (this.deckOffsetTarget - this.deckOffset) / 0xa;
        for (var _0x1d1bcc = 0x0; _0x1d1bcc < this.cards.length; _0x1d1bcc++) {
          var _0x419170 = this.cards[_0x1d1bcc];
          ig.responsive ? _0x419170.anchoredPositionX = _0x419170.originalX + this.deckOffset : _0x419170.pos.x = _0x419170.originalX + this.deckOffset, this.checkCardAlpha(_0x419170);
        }
        _0x1d1bcc = -this.scrollMax * (ig.Lootbox.card.width + this.spacing), 0x0 < this.nextPrevDelay ? this.nextPrevDelay -= ig.system.tick : (this.prevButton.visible = 0x0 == this.deckOffsetTarget ? !0x1 : !0x0, this.nextButton.visible = this.deckOffsetTarget == _0x1d1bcc ? !0x1 : !0x0);
      }
    },
    'onClickCard': function (_0x438014) {
      this.isSelectable && !_0x438014.hasUpgrade() && (_0x438014.isSelected ? _0x438014.isSelected = !0x1 : (this.getSelectedCards().length >= this.maxSelection && this.clearSelection(), _0x438014.isSelected = !0x0), this.onCardSelected.dispatch(_0x438014));
    },
    'clearSelection': function () {
      for (var _0x1dd498 = 0x0; _0x1dd498 < this.cards.length; _0x1dd498++) this.cards[_0x1dd498].isSelected = !0x1;
    },
    'getSelectedCards': function () {
      for (var _0xa20dbb = [], _0x2117d9 = 0x0; _0x2117d9 < this.cards.length; _0x2117d9++) {
        var _0x135630 = this.cards[_0x2117d9];
        _0x135630.isSelected && _0xa20dbb.push(_0x135630);
      }
      return _0xa20dbb;
    },
    'spawnMember': function (_0x5cba0f, _0x380012, _0x52760c, _0x44d2ab) {
      return _0x5cba0f = ig.game.spawnEntity(_0x5cba0f, _0x380012, _0x52760c, _0x44d2ab), this.members.push(_0x5cba0f), _0x5cba0f;
    },
    'exit': function () {
      this.isExiting = !0x0;
      for (var _0x26e1c9 = 0x0; _0x26e1c9 < this.members.length; _0x26e1c9++) this.members[_0x26e1c9].exit();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-card-collection').requires('plugins.lootbox.lootbox-game-object').defines(function () {
  ig.LootboxCardCollection = ig.LootboxGameObject.extend({
    'zIndex': 0x270f,
    'onAction': null,
    'onBack': null,
    'deck': null,
    'title': null,
    'actionButton': null,
    'messageTextField': null,
    'entryType': 'fadeBotIn',
    'exitType': 'fadeBotOut',
    'init': function (_0x6abed, _0x323a49, _0xd01520) {
      this.parent(_0x6abed, _0x323a49, _0xd01520), ig.Lootbox.loadData(), this.forceDraw = !0x0, this.onAction = new ig.LootboxSignal(), this.onBack = new ig.LootboxSignal(), this.panel = ig.Lootbox.images.container, ig.Lootbox.Collection = this, _0x323a49 = [];
      for (_0x6abed = 0x0; _0x6abed < ig.Lootbox.data.cards.length; _0x6abed++) {
        _0xd01520 = ig.Lootbox.data.cards[_0x6abed];
        for (var _0x4559fe = !0x1, _0x3707f9 = 0x0; _0x3707f9 < _0x323a49.length; _0x3707f9++) {
          var _0x330216 = _0x323a49[_0x3707f9];
          _0x330216.id == _0xd01520.id && (_0xd01520.level > _0x330216.level && (_0x330216.level = _0xd01520.level), _0x4559fe = !0x0);
        }
        _0x4559fe || _0x323a49.push({
          'id': _0xd01520.id,
          'level': _0xd01520.level
        });
      }
      _0xd01520 = ig.responsive ? ig.responsive.originalWidth : ig.system.width, this.deck = new ig.LootboxDeckDisplay(_0x323a49), this.deck.maxSelection = 0x1, this.deck.isSelectable = !0x0, this.deck.onCardSelected.add(this.onClickCard, this);
      for (_0x6abed = 0x0; _0x6abed < this.deck.cards.length; _0x6abed++) _0x323a49 = this.deck.cards[_0x6abed], ig.Lootbox.isUpgradeMode ? _0x323a49.checkAndSpawnUpgradeButton() : _0x323a49.level >= ig.Lootbox.loot.actionableCollectionLevel && (_0x323a49.isMergeable = !0x0);
      this.title = ig.game.spawnEntity(ig.LootboxTextField, _0xd01520 / 0x2, ig.Lootbox.page.titleY + ig.Lootbox.page.myCollection.titleOffsetY, {
        'font': ig.Lootbox.page.titleFont,
        'text': ig.Lootbox.strings.collectionTitle,
        'align': 'center',
        'color': ig.Lootbox.page.titleFontColor,
        'zIndex': 0x1869f,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.actionButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0xd01520 / 0x2, ig.Lootbox.page.myCollection.actionButtonY, {
        'image': ig.Lootbox.images.simple,
        'font': ig.Lootbox.page.button.font,
        'textColor': ig.Lootbox.page.button.fontColor ? ig.Lootbox.page.button.fontColor : '#ffffff',
        'offsetY': ig.Lootbox.page.button.offsetY,
        'text': ig.Lootbox.strings.collectionActionButton,
        'zIndex': 0x1869f
      }), this.actionButton.onClicked.add(this.onClickAction, this), this.backButton = ig.game.spawnEntity(ig.LootboxSimpleButton, ig.system.width / 0x2 + this.panel.width / 0x2 - 0.4 * ig.Lootbox.images.back.width, ig.system.height / 0x2 - this.panel.height / 0x2 + 0.4 * ig.Lootbox.images.back.height, {
        'image': ig.Lootbox.images.back,
        'zIndex': 0x1869f,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.backButton.onClicked.addOnce(this.onClickBack, this), this.messageTextField = ig.game.spawnEntity(ig.LootboxTextField, _0xd01520 / 0x2, ig.Lootbox.page.myCollection.messageTextY, {
        'font': ig.Lootbox.page.myCollection.messageTextFont,
        'text': '',
        'align': 'center',
        'color': '#ffffff',
        'zIndex': 0x1869f
      }), this.messageTextField2 = ig.game.spawnEntity(ig.LootboxTextField, _0xd01520 / 0x2, 1.15 * ig.Lootbox.page.myCollection.messageTextY, {
        'font': ig.Lootbox.page.myCollection.messageTextFont,
        'text': ig.Lootbox.strings.collectionButtonMessage,
        'align': 'center',
        'color': '#011b3c',
        'zIndex': 0x1869f
      }), ig.responsive && (this.backButton.anchorType = 'top-left'), this.actionButton.visible = !0x1, ig.game.sortEntitiesDeferred();
    },
    'enableButtons': function () {
      this.actionButton.inputEnabled = !0x0, this.backButton.inputEnabled = !0x0, this.deck.enableButtons();
    },
    'disableButtons': function () {
      this.actionButton.inputEnabled = !0x1, this.backButton.inputEnabled = !0x1, this.deck.disableButtons();
    },
    'onClickCard': function () {
      ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
      var _0x32f5f9 = this.deck.getSelectedCards();
      this.messageTextField2.visible = !0x0, 0x0 == _0x32f5f9.length ? (this.actionButton.visible = !0x1, this.messageTextField.updateText('')) : (_0x32f5f9[0x0].level >= ig.Lootbox.loot.actionableCollectionLevel ? (this.actionButton.visible = !0x0, this.messageTextField2.visible = !0x1) : this.actionButton.visible = !0x1, this.messageTextField.updateText(_0x32f5f9[0x0].description));
    },
    'onClickAction': function () {
      var _0x4b463c = this.deck.getSelectedCards()[0x0];
      _0x4b463c && !(_0x4b463c.level < ig.Lootbox.loot.actionableCollectionLevel) && (this.onAction.dispatch(_0x4b463c.id), this.onAction.clear(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]), this.exitAll());
    },
    'onClickBack': function () {
      this.onBack.dispatch(), this.exitAll(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
    },
    'exitAll': function () {
      this.deck.exit(), this.backButton.exit(), this.actionButton.exit(), this.title.exit(), this.messageTextField.exit(), this.messageTextField2.exit(), this.exit(), ig.Lootbox.Collection = null;
    },
    'update': function () {
      this.parent(), this.deck && this.deck.update();
    },
    'draw': function () {
      var _0x34eac0 = ig.system.context;
      _0x34eac0.save(), _0x34eac0.fillStyle = ig.Lootbox.overlay.color, _0x34eac0.globalAlpha = ig.Lootbox.overlay.alpha, _0x34eac0.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x34eac0.globalAlpha = this.alpha, _0x34eac0.drawImage(this.panel.data, ig.system.width / 0x2 - this.panel.width / 0x2 + this.pos.x, ig.system.height / 0x2 - this.panel.height / 0x2 + this.pos.y), _0x34eac0.restore(), this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-claim').requires('plugins.lootbox.lootbox-game-object').defines(function () {
  ig.LootboxClaim = ig.LootboxGameObject.extend({
    'zIndex': 0x270f,
    'onBack': null,
    'deck': null,
    'title': null,
    'actionButton': null,
    'messageTextField': null,
    'entryType': 'fadeBotIn',
    'exitType': 'fadeBotOut',
    'init': function (_0x59c767, _0x13ee82, _0x32a664) {
      this.parent(_0x59c767, _0x13ee82, _0x32a664), ig.Lootbox.loadData(), this.forceDraw = !0x0, this.onBack = new ig.LootboxSignal(), _0x59c767 = ig.responsive ? ig.responsive.originalWidth : ig.system.width, _0x13ee82 = ig.responsive ? ig.responsive.originalHeight : ig.system.height, this.panel = ig.Lootbox.images.container, this.customClaim ? (_0x59c767 = ig.Lootbox.images.boxPremiumClosed, _0x13ee82 = ig.Lootbox.images.boxPremiumOpen, 'free' == this.customClaimBoxType && (_0x59c767 = ig.Lootbox.images.boxFreeClosed, _0x13ee82 = ig.Lootbox.images.boxFreeOpen), this.spawnCustomCards(_0x59c767, _0x13ee82, this.customClaimCardCount)) : (this.title = ig.game.spawnEntity(ig.LootboxTextField, _0x59c767 / 0x2, ig.Lootbox.page.titleY, {
        'font': ig.Lootbox.page.titleFont,
        'text': ig.Lootbox.strings.lootboxTitle,
        'align': 'center',
        'color': ig.Lootbox.page.titleFontColor,
        'zIndex': 0x1869f,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.backButton = ig.game.spawnEntity(ig.LootboxSimpleButton, ig.system.width / 0x2 + this.panel.width / 0x2 - 0.4 * ig.Lootbox.images.back.width, ig.system.height / 0x2 - this.panel.height / 0x2 + 0.4 * ig.Lootbox.images.back.height, {
        'image': ig.Lootbox.images.back,
        'zIndex': 0x1869f,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.backButton.onClicked.addOnce(this.onClickBack, this), ig.responsive && (this.backButton.anchorType = 'top-left'), this.freeCard = ig.game.spawnEntity(ig.LootboxCard, _0x59c767 / 0x2 - 1.15 * ig.Lootbox.card.width, 0.46 * _0x13ee82, {
        'isCustomCard': !0x0,
        'customImage': ig.Lootbox.images.boxFreeClosed,
        'customName': ig.Lootbox.strings.boxFreeName,
        'customDescription': ig.Lootbox.strings.boxFreeDescription,
        'isNameOnTop': !0x0,
        'zIndex': 0x1869f,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'scaleX': 1.6,
        'scaleY': 1.6,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.premiumCard = ig.game.spawnEntity(ig.LootboxCard, _0x59c767 / 0x2 + 1.15 * ig.Lootbox.card.width, 0.46 * _0x13ee82, {
        'isCustomCard': !0x0,
        'customImage': ig.Lootbox.images.boxPremiumClosed,
        'customName': ig.Lootbox.strings.boxPremiumName,
        'customDescription': ig.Lootbox.strings.boxPremiumDescription,
        'isNameOnTop': !0x0,
        'zIndex': 0x1869f,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'scaleX': 1.6,
        'scaleY': 1.6,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.freeButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x59c767 / 0x2 - 1.15 * ig.Lootbox.card.width, 0.79 * _0x13ee82, {
        'image': ig.Lootbox.images.simple,
        'font': ig.Lootbox.page.button.font,
        'text': ig.Lootbox.strings.openButton,
        'textColor': ig.Lootbox.page.button.fontColor ? ig.Lootbox.page.button.fontColor : '#ffffff',
        'offsetY': ig.Lootbox.page.button.offsetY,
        'zIndex': 0x1869f,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.freeButton.onClicked.add(this.onClickFree, this), this.premiumButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x59c767 / 0x2 + 1.15 * ig.Lootbox.card.width, 0.79 * _0x13ee82, {
        'text': ig.Lootbox.strings.watchButton,
        'image': ig.Lootbox.images.ad,
        'textColor': ig.Lootbox.page.button.fontColor ? ig.Lootbox.page.button.fontColor : '#ffffff',
        'offsetX': ig.Lootbox.page.claim.watchButtonOffsetX,
        'offsetY': ig.Lootbox.page.button.offsetY,
        'font': ig.Lootbox.page.button.font,
        'zIndex': 0x1869f,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeBotOut'
      }), this.premiumButton.onClicked.add(this.onClickPremium, this)), ig.game.sortEntitiesDeferred();
    },
    'spawnCustomCards': function (_0x1462e8, _0x374d85, _0x4d91da) {
      var _0x577ed3 = ig.responsive ? ig.responsive.originalWidth : ig.system.width,
        _0x974d86 = ig.responsive ? ig.responsive.originalHeight : ig.system.height;
      this.chestBox = ig.game.spawnEntity(ig.LootboxGameObject, ig.system.width / 0x2, ig.system.height / 0x2, {
        'image': _0x1462e8,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeOut',
        'exitDelay': 0x1,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'zIndex': this.zIndex + 0x1
      }), ig.game.sortEntitiesDeferred(), ig.responsive ? (this.chestBox.setAnchoredPosition(0x0, 0x0), this.chestBox.anchorType = 'center') : (this.chestBox.pos.x = ig.system.width / 0x2, this.chestBox.pos.y = ig.system.height / 0x2), this.chestBox.tween({
        'scaleX': 1.4,
        'scaleY': 1.4
      }, 0.5, {
        'easing': ig.Tween.Easing.Back.EaseOut,
        'onComplete': function () {
          this.chestBox.shake(0x5, 0x2);
          for (var _0x47c1f4 = 0x0; 0x64 > _0x47c1f4; _0x47c1f4++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleIn, 0x0, 0x0, {
            'anchorType': 'center',
            'delay': 0.006 * _0x47c1f4,
            'fillColor': '#fdd600'
          }) : ig.game.spawnEntity(ig.LootboxParticleIn, this.chestBox.pos.x, this.chestBox.pos.y, {
            'delay': 0.006 * _0x47c1f4,
            'fillColor': '#fdd600'
          });
          this.chestBox.tween({
            'scaleX': 1.4,
            'scaleY': 1.4
          }, 0x1, {
            'easing': ig.Tween.Easing.Back.EaseOut,
            'onComplete': function () {
              this.chestBox.shake(0xa, 0xa), this.chestBox.exit();
              for (var _0x14964d = 0x0; 0x64 > _0x14964d; _0x14964d++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleOut, 0x0, 0x0, {
                'anchorType': 'center',
                'delay': 0.002 * _0x14964d,
                'fillColor': '#fdd600'
              }) : ig.game.spawnEntity(ig.LootboxParticleOut, this.chestBox.pos.x, this.chestBox.pos.y, {
                'delay': 0.006 * _0x14964d,
                'fillColor': '#fdd600'
              });
              this.chestBox.swapImage(_0x374d85), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.openPremiumChest]);
              for (var _0x44c3f6 = [], _0x14964d = 0x0; _0x14964d < _0x4d91da; _0x14964d++) _0x44c3f6.push(Math.floor(Math.random() * ig.Lootbox.card.names.length));
              this.customRewards = [];
              for (var _0x4f65cb = Math.ceil(_0x44c3f6.length / 0x2), _0x2f2b1c = ig.Lootbox.card.width, _0x10bbb8 = ig.Lootbox.card.height, _0x560d2d = 0.02 * _0x2f2b1c, _0x4c6f0b = _0x577ed3 / 0x2 - (_0x2f2b1c + _0x560d2d) * _0x4f65cb / 0x2, _0x14964d = 0x0; _0x14964d < _0x44c3f6.length; _0x14964d++) {
                var _0x3b4f8f = _0x44c3f6[_0x14964d],
                  _0x4a5da9 = (_0x10bbb8 + _0x560d2d) / 0x2,
                  _0x4a5da9 = ig.game.spawnEntity(ig.LootboxCard, _0x4c6f0b + (_0x2f2b1c + _0x560d2d) * (_0x14964d % _0x4f65cb + 0.5), _0x974d86 / 0x2 + (_0x14964d >= _0x4f65cb ? _0x4a5da9 : -_0x4a5da9), {
                    'id': _0x3b4f8f,
                    'level': ig.LootboxRandom.fromArray(ig.Lootbox.loot.cardRewardLevels),
                    'showExp': !0x1,
                    'zIndex': 0xf423f,
                    'anchorX': 0.5,
                    'anchorY': 0.5,
                    'scaleX': 0x0,
                    'scaleY': 0x0,
                    'faceDown': !0x0,
                    'exitType': 'fadeOut'
                  });
                this.customRewards.push(_0x4a5da9), ig.Lootbox.isUpgradeMode || ig.Lootbox.addCardData(_0x3b4f8f, _0x4a5da9.level), _0x4a5da9.flip(0x1 + 0.1 * _0x14964d), _0x4a5da9.tween({
                  'scaleX': 0x1,
                  'scaleY': 0x1,
                  'alpha': 0x1
                }, 0.5, {
                  'delay': 0.5,
                  'easing': ig.Tween.Easing.Back.EaseOut
                }).start();
              }
              ig.Lootbox.isUpgradeMode || ig.Lootbox.saveData(), this.collectButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x577ed3 / 0x2, 0.9 * _0x974d86, {
                'image': ig.Lootbox.images.simple,
                'font': ig.Lootbox.page.button.font,
                'text': ig.Lootbox.strings.collectButton,
                'textColor': ig.Lootbox.page.button.textColor ? ig.Lootbox.page.button.textColor : '#ffffff',
                'offsetY': ig.Lootbox.page.button.offsetY,
                'zIndex': 0x1869f,
                'entryType': 'fadeIn',
                'entryDelay': 0x3,
                'exitType': 'fadeOut'
              }), this.collectButton.onClicked.addOnce(function () {
                ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]), this.collectButton.exit(), this.animateUpgradeModeRewards(this.customRewards, function () {
                  for (var _0x1d86e5 = 0x0; _0x1d86e5 < this.customRewards.length; _0x1d86e5++) this.customRewards[_0x1d86e5].exit();
                  this.onBack.dispatch(), this.exit();
                }.bind(this));
              }.bind(this), this);
            }.bind(this)
          }).start();
        }.bind(this)
      }).start();
    },
    'onClickPremium': function () {
      0x0 < ig.Lootbox.getPremiumBoxCollectionTime() || (this.fadeOutAll(), ig.game.spawnEntity(ig.LootboxAd, 0x0, 0x0, {
        'callback': function (_0x153095) {
          _0x153095 ? (console.log("ad success : " + _0x153095), this.spawnPremiumCards()) : this.fadeInAll();
        }.bind(this)
      }), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]));
    },
    'spawnPremiumCards': function () {
      var _0x239b36 = ig.responsive ? ig.responsive.originalWidth : ig.system.width,
        _0x11d3a3 = ig.responsive ? ig.responsive.originalHeight : ig.system.height;
      this.chestBox = ig.game.spawnEntity(ig.LootboxGameObject, ig.system.width / 0x2, ig.system.height / 0x2, {
        'image': ig.Lootbox.images.boxPremiumClosed,
        'entryType': 'fadeBotIn',
        'exitType': 'fadeOut',
        'exitDelay': 0x1,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'zIndex': this.zIndex + 0x1
      }), ig.game.sortEntitiesDeferred(), ig.responsive ? (this.chestBox.setAnchoredPosition(0x0, 0x0), this.chestBox.anchorType = 'center') : (this.chestBox.pos.x = ig.system.width / 0x2, this.chestBox.pos.y = ig.system.height / 0x2), this.chestBox.tween({
        'scaleX': 1.4,
        'scaleY': 1.4
      }, 0.5, {
        'easing': ig.Tween.Easing.Back.EaseOut,
        'onComplete': function () {
          this.chestBox.shake(0x5, 0x2);
          for (var _0x4b4e7b = 0x0; 0x64 > _0x4b4e7b; _0x4b4e7b++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleIn, 0x0, 0x0, {
            'anchorType': 'center',
            'delay': 0.006 * _0x4b4e7b,
            'fillColor': '#fdd600'
          }) : ig.game.spawnEntity(ig.LootboxParticleIn, this.chestBox.pos.x, this.chestBox.pos.y, {
            'delay': 0.006 * _0x4b4e7b,
            'fillColor': '#fdd600'
          });
          ig.soundHandler.sfxPlayer.play(ig.Lootbox.sounds.particleIn), this.chestBox.tween({
            'scaleX': 1.4,
            'scaleY': 1.4
          }, 0x1, {
            'easing': ig.Tween.Easing.Back.EaseOut,
            'onComplete': function () {
              this.chestBox.shake(0xa, 0xa), this.chestBox.exit();
              for (var _0x417f60 = 0x0; 0x64 > _0x417f60; _0x417f60++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleOut, 0x0, 0x0, {
                'anchorType': 'center',
                'delay': 0.002 * _0x417f60,
                'fillColor': '#fdd600'
              }) : ig.game.spawnEntity(ig.LootboxParticleOut, this.chestBox.pos.x, this.chestBox.pos.y, {
                'delay': 0.006 * _0x417f60,
                'fillColor': '#fdd600'
              });
              this.chestBox.swapImage(ig.Lootbox.images.boxPremiumOpen), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.openPremiumChest]);
              var _0x989cb5 = ig.Lootbox.collectPremiumBox();
              this.premiumRewards = [];
              for (var _0x180891 = Math.ceil(_0x989cb5.length / 0x2), _0x1a73b3 = ig.Lootbox.card.width, _0x165da0 = ig.Lootbox.card.height, _0x4f3a4d = 0.02 * _0x1a73b3, _0x48eb36 = _0x239b36 / 0x2 - (_0x1a73b3 + _0x4f3a4d) * _0x180891 / 0x2, _0x417f60 = 0x0; _0x417f60 < _0x989cb5.length; _0x417f60++) {
                var _0x584011 = _0x989cb5[_0x417f60],
                  _0x2e3d2f = (_0x165da0 + _0x4f3a4d) / 0x2,
                  _0x2e3d2f = ig.game.spawnEntity(ig.LootboxCard, _0x48eb36 + (_0x1a73b3 + _0x4f3a4d) * (_0x417f60 % _0x180891 + 0.5), _0x11d3a3 / 0x2 + (_0x417f60 >= _0x180891 ? _0x2e3d2f : -_0x2e3d2f), {
                    'id': _0x584011,
                    'level': ig.LootboxRandom.fromArray(ig.Lootbox.loot.cardRewardLevels),
                    'showExp': !0x1,
                    'zIndex': 0xf423f,
                    'anchorX': 0.5,
                    'anchorY': 0.5,
                    'scaleX': 0x0,
                    'scaleY': 0x0,
                    'faceDown': !0x0,
                    'exitType': 'fadeOut'
                  });
                this.premiumRewards.push(_0x2e3d2f), ig.Lootbox.isUpgradeMode || ig.Lootbox.addCardData(_0x584011, _0x2e3d2f.level), _0x2e3d2f.flip(0x1 + 0.1 * _0x417f60), _0x2e3d2f.tween({
                  'scaleX': 0x1,
                  'scaleY': 0x1,
                  'alpha': 0x1
                }, 0.5, {
                  'delay': 0.5,
                  'easing': ig.Tween.Easing.Back.EaseOut,
                  'onComplete': function () {}.bind(this)
                }).start();
              }
              ig.Lootbox.isUpgradeMode || ig.Lootbox.saveData();
              for (_0x417f60 = 0x0; _0x417f60 < this.premiumRewards.length; _0x417f60++) _0x2e3d2f = this.premiumRewards[_0x417f60], _0x2e3d2f.tween({
                'width': 0.8 * _0x1a73b3,
                'height': 0.8 * _0x165da0,
                'pos': {
                  'x': _0x2e3d2f.pos.x,
                  'y': _0x2e3d2f.pos.y - 0x32
                }
              }, 0.3, {
                'delay': 2.5,
                'easing': ig.Tween.Easing.Back.EaseIn,
                'onComplete': function () {}.bind(this)
              }).start();
              this.collectButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x239b36 / 0x2, 0.79 * _0x11d3a3, {
                'image': ig.Lootbox.images.simple,
                'font': ig.Lootbox.page.button.font,
                'text': ig.Lootbox.strings.collectButton,
                'textColor': ig.Lootbox.page.button.fontColor ? ig.Lootbox.page.button.fontColor : '#ffffff',
                'offsetY': ig.Lootbox.page.button.offsetY,
                'zIndex': 0x1869f,
                'entryType': 'fadeIn',
                'entryDelay': 0x3,
                'exitType': 'fadeOut'
              }), this.collectButton.onClicked.addOnce(function () {
                for (var _0x4f3369 = 0x0; _0x4f3369 < this.premiumRewards.length; _0x4f3369++) this.premiumRewards[_0x4f3369].tween({
                  'scaleX': 0.4,
                  'scaleY': 0.4,
                  'alpha': 0.4,
                  'pos': {
                    'x': 0.2 * _0x239b36 + 0.4 * (0x5 > _0x4f3369 ? _0x4f3369 : _0x4f3369 - 0x5) * _0x1a73b3,
                    'y': 0.6 * _0x11d3a3 + 0.4 * (0x5 > _0x4f3369 ? 0x0 : 0x1) * _0x165da0
                  }
                }, 0.2, {}).start();
                ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]), this.collectButton.exit(), this.animateUpgradeModeRewards(this.premiumRewards, function () {
                  for (var _0x4325aa = 0x0; _0x4325aa < this.premiumRewards.length; _0x4325aa++) this.premiumRewards[_0x4325aa].exit();
                  this.fadeInAll();
                }.bind(this));
              }.bind(this), this);
            }.bind(this)
          }).start();
        }.bind(this)
      }).start();
    },
    'onClickFree': function () {
      result = ig.Lootbox.collectFreeBox();
      if (0x0 < result.length) {
        var _0x31484e = ig.responsive ? ig.responsive.originalWidth : ig.system.width,
          _0x365181 = ig.responsive ? ig.responsive.originalHeight : ig.system.height;
        this.fadeOutAll(), this.chestBox = ig.game.spawnEntity(ig.LootboxGameObject, ig.system.width / 0x2, ig.system.height / 0x2, {
          'image': ig.Lootbox.images.boxFreeClosed,
          'entryType': 'fadeBotIn',
          'exitType': 'fadeOut',
          'exitDelay': 0x1,
          'anchorX': 0.5,
          'anchorY': 0.5,
          'zIndex': this.zIndex + 0x1
        }), ig.game.sortEntitiesDeferred(), ig.responsive ? (this.chestBox.setAnchoredPosition(0x0, 0x0), this.chestBox.anchorType = 'center') : (this.chestBox.pos.x = ig.system.width / 0x2, this.chestBox.pos.y = ig.system.height / 0x2), this.chestBox.tween({
          'scaleX': 1.4,
          'scaleY': 1.4
        }, 0.5, {
          'easing': ig.Tween.Easing.Back.EaseOut,
          'onComplete': function () {
            this.chestBox.shake(0x5, 0x2);
            for (var _0x4c768d = 0x0; 0x64 > _0x4c768d; _0x4c768d++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleIn, 0x0, 0x0, {
              'anchorType': 'center',
              'delay': 0.006 * _0x4c768d
            }) : ig.game.spawnEntity(ig.LootboxParticleIn, this.chestBox.pos.x, this.chestBox.pos.y, {
              'delay': 0.006 * _0x4c768d
            });
            ig.soundHandler.sfxPlayer.play(ig.Lootbox.sounds.particleIn), this.chestBox.tween({
              'scaleX': 1.4,
              'scaleY': 1.4
            }, 0x1, {
              'easing': ig.Tween.Easing.Back.EaseOut,
              'onComplete': function () {
                this.chestBox.shake(0xa, 0xa), this.chestBox.exit();
                for (var _0x161a06 = 0x0; 0x64 > _0x161a06; _0x161a06++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleOut, 0x0, 0x0, {
                  'anchorType': 'center',
                  'delay': 0.002 * _0x161a06
                }) : ig.game.spawnEntity(ig.LootboxParticleOut, this.chestBox.pos.x, this.chestBox.pos.y, {
                  'delay': 0.002 * _0x161a06
                });
                this.chestBox.swapImage(ig.Lootbox.images.boxFreeOpen), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.openFreeChest]), this.freeReward = ig.game.spawnEntity(ig.LootboxCard, _0x31484e / 0x2, _0x365181 / 0x2, {
                  'id': result[0x0],
                  'level': ig.LootboxRandom.fromArray(ig.Lootbox.loot.cardRewardLevels),
                  'showExp': !0x1,
                  'zIndex': 0xf423f,
                  'anchorX': 0.5,
                  'anchorY': 0.5,
                  'scaleX': 0x0,
                  'scaleY': 0x0,
                  'faceDown': !0x0,
                  'exitType': 'fadeOut'
                }), ig.Lootbox.isUpgradeMode || (ig.Lootbox.addCardData(result[0x0], this.freeReward.level), ig.Lootbox.saveData()), this.freeReward.tween({
                  'scaleX': 1.8,
                  'scaleY': 1.8,
                  'alpha': 0x1
                }, 0.5, {
                  'delay': 0.8,
                  'easing': ig.Tween.Easing.Back.EaseOut,
                  'onComplete': function () {
                    this.freeReward.flip(0.5), this.freeReward.tween({
                      'pos': {
                        'y': 0.42 * _0x365181
                      }
                    }, 0.5, {
                      'delay': 0.9
                    }).start(), this.collectButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x31484e / 0x2, 0.78 * _0x365181, {
                      'image': ig.Lootbox.images.simple,
                      'font': ig.Lootbox.page.button.font,
                      'textColor': ig.Lootbox.page.button.fontColor ? ig.Lootbox.page.button.fontColor : '#ffffff',
                      'offsetY': ig.Lootbox.page.button.offsetY,
                      'text': ig.Lootbox.strings.collectButton,
                      'zIndex': 0x1869f,
                      'entryType': 'fadeIn',
                      'entryDelay': 0x1,
                      'exitType': 'fadeOut'
                    }), this.collectButton.onClicked.addOnce(function () {
                      this.freeReward.tween({
                        'pos': {
                          'x': 0.3 * _0x31484e,
                          'y': 0.5 * _0x365181
                        }
                      }, 0.2, {}).start(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]), this.collectButton.exit(), this.animateUpgradeModeRewards([this.freeReward], function () {
                        this.freeReward.exit(), this.fadeInAll();
                      }.bind(this));
                    }.bind(this), this);
                  }.bind(this)
                }).start();
              }.bind(this)
            }).start();
          }.bind(this)
        }).start(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
      }
    },
    'animateUpgradeModeRewards': function (_0xec0127, _0x473899) {
      var _0x4fc5f5 = ig.responsive ? ig.responsive.originalWidth : ig.system.width,
        _0x296602 = ig.responsive ? ig.responsive.originalHeight : ig.system.height;
      if (ig.Lootbox.isUpgradeMode) {
        this.dummyTargetCard = ig.game.spawnEntity(ig.LootboxCard, 0.6 * _0x4fc5f5, _0x296602 / 0x2, {
          'id': 0x0,
          'level': ig.Lootbox.getLevelFromFirstCardWithId(0x0),
          'exp': ig.Lootbox.getExpFromFirstCardWithId(0x0),
          'zIndex': 0x1869f,
          'anchorX': 0.5,
          'anchorY': 0.5,
          'scaleX': 0x0,
          'scaleY': 0x0,
          'faceDown': !0x0,
          'exitType': 'fadeOut'
        }), ig.game.sortEntitiesDeferred(), this.existingCards = [];
        for (var _0x4d9f2f = 0x0; _0x4d9f2f < _0xec0127.length; _0x4d9f2f++) {
          var _0x11fc11 = _0xec0127[_0x4d9f2f];
          0x1 < _0xec0127.length && (_0x11fc11.pos = {
            'x': 0.2 * _0x4fc5f5 + 0.4 * (0x5 > _0x4d9f2f ? _0x4d9f2f : _0x4d9f2f - 0x5) * ig.Lootbox.card.width,
            'y': 0.6 * _0x296602 + 0.4 * (0x5 > _0x4d9f2f ? 0x0 : 0x1) * ig.Lootbox.card.height
          }, _0x11fc11.scaleX = 0.4, _0x11fc11.scaleY = 0.4, _0x11fc11.alpha = 0.4, _0x11fc11.tween({
            'pos': {
              'x': 0.3 * _0x4fc5f5,
              'y': 0.32 * _0x296602
            },
            'scaleX': 1.4,
            'scaleY': 1.4,
            'alpha': 0x1
          }, 0.3, {
            'delay': 0.2 + 0.7 * _0x4d9f2f,
            'onComplete': function () {}.bind(this)
          }).start()), _0x11fc11.addExpTo(this.dummyTargetCard, 0.5 + 0.7 * _0x4d9f2f);
        }
        this.delayedCall(0x1 + 0.72 * _0xec0127.length, function () {
          _0x473899 && _0x473899(), this.dummyTargetCard.exit();
        }.bind(this));
      } else _0x473899 && _0x473899();
    },
    'onClickBack': function () {
      this.onBack.dispatch(), this.exitAll(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
    },
    'fadeOutAll': function () {
      for (var _0x4d0a76 = [this.backButton, this.freeButton, this.premiumButton, this.freeCard, this.premiumCard, this.title], _0x3e78fb = 0x0; _0x3e78fb < _0x4d0a76.length; _0x3e78fb++) _0x4d0a76[_0x3e78fb].visible = !0x1;
    },
    'fadeInAll': function () {
      for (var _0x3c1f98 = [this.backButton, this.freeButton, this.premiumButton, this.freeCard, this.premiumCard, this.title], _0x2ca748 = 0x0; _0x2ca748 < _0x3c1f98.length; _0x2ca748++) _0x3c1f98[_0x2ca748].visible = !0x0;
    },
    'exitAll': function () {
      this.backButton.exit(), this.freeButton.exit(), this.premiumButton.exit(), this.freeCard.exit(), this.premiumCard.exit(), this.title.exit(), this.exit();
    },
    'update': function () {
      this.parent(), this.customClaim || (this.freeButton.text = ig.Lootbox.getFreeBoxText(), this.premiumButton.text = ig.Lootbox.getPremiumBoxText());
      if (this.dummyTargetCard) {
        if (this.dummyTargetCard.scaleX = 0x2, this.dummyTargetCard.scaleY = this.dummyTargetCard.scaleX, ig.responsive) {
          var _0x540018 = ig.responsive.originalWidth / 0x2,
            _0xd1e90a = 0.54 * ig.Lootbox.card.height;
          this.dummyTargetCard.anchoredPositionX += (_0x540018 - this.dummyTargetCard.anchoredPositionX) / 0x2, this.dummyTargetCard.anchoredPositionY += (_0xd1e90a - this.dummyTargetCard.anchoredPositionY) / 0x2;
        } else _0x540018 = 0.7 * ig.system.width, _0xd1e90a = ig.system.height / 0x2, this.dummyTargetCard.pos.x += (_0x540018 - this.dummyTargetCard.pos.x) / 0x2, this.dummyTargetCard.pos.y += (_0xd1e90a - this.dummyTargetCard.pos.y) / 0x2;
      }
    },
    'draw': function () {
      var _0x494482 = ig.system.context;
      _0x494482.save(), _0x494482.fillStyle = ig.Lootbox.overlay.color, _0x494482.globalAlpha = ig.Lootbox.overlay.alpha, _0x494482.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x494482.globalAlpha = this.alpha, _0x494482.drawImage(this.panel.data, ig.system.width / 0x2 - this.panel.width / 0x2 + this.pos.x, ig.system.height / 0x2 - this.panel.height / 0x2 + this.pos.y), _0x494482.restore(), this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-card-assembly').requires('plugins.lootbox.lootbox-game-object').defines(function () {
  ig.LootboxCardAssembly = ig.LootboxGameObject.extend({
    'zIndex': 0x270f,
    'onBack': null,
    'deck': null,
    'title': null,
    'actionButton': null,
    'messageTextField': null,
    'init': function (_0x1a4c68, _0x1ea332, _0x5a9105) {
      this.parent(_0x1a4c68, _0x1ea332, _0x5a9105), ig.Lootbox.loadData(), this.forceDraw = !0x0, this.onAction = new ig.LootboxSignal(), this.onBack = new ig.LootboxSignal(), ig.Lootbox.sortData(), _0x1a4c68 = ig.responsive ? ig.responsive.originalWidth : ig.system.width, this.createDeck(), this.title = ig.game.spawnEntity(ig.LootboxTextField, _0x1a4c68 / 0x2, ig.Lootbox.page.titleY, {
        'font': ig.Lootbox.page.titleFont,
        'text': ig.Lootbox.strings.assemblyTitle,
        'align': 'center',
        'color': '#ffffff',
        'zIndex': 0x1869f
      }), this.actionButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x1a4c68 / 0x2, ig.Lootbox.page.assembly.actionButtonY, {
        'image': ig.Lootbox.images.simple,
        'font': ig.Lootbox.page.button.font,
        'textColor': ig.Lootbox.page.button.textColor ? ig.Lootbox.page.button.textColor : '#ffffff',
        'offsetY': ig.Lootbox.page.button.offsetY,
        'text': ig.Lootbox.strings.assemblyButton,
        'zIndex': 0x1869f
      }), this.actionButton.onClicked.add(this.onClickAction, this), this.backButton = ig.game.spawnEntity(ig.LootboxSimpleButton, ig.Lootbox.page.backButtonX, ig.Lootbox.page.backButtonY, {
        'image': ig.Lootbox.images.back,
        'zIndex': 0x1869f
      }), this.backButton.onClicked.addOnce(this.onClickBack, this), this.messageTextField = ig.game.spawnEntity(ig.LootboxTextField, _0x1a4c68 / 0x2, ig.Lootbox.page.assembly.messageTextY, {
        'font': ig.Lootbox.page.assembly.messageTextFont,
        'text': ig.Lootbox.strings.assemblyMessage,
        'align': 'center',
        'color': '#ffffff',
        'zIndex': 0x1869f
      }), ig.responsive && (this.backButton.anchorType = 'top-left'), this.actionButton.visible = !0x1, ig.game.sortEntitiesDeferred();
    },
    'createDeck': function () {
      for (var _0x321bf7 = [], _0x1e7cb2 = {}, _0x2ff19d = 0x0; _0x2ff19d < ig.Lootbox.data.cards.length; _0x2ff19d++) {
        var _0x108862 = ig.Lootbox.data.cards[_0x2ff19d];
        _0x321bf7.push({
          'id': _0x108862.id,
          'level': _0x108862.level
        }), _0x108862 = _0x108862.id + '-' + _0x108862.level, _0x1e7cb2[_0x108862] || (_0x1e7cb2[_0x108862] = 0x0), _0x1e7cb2[_0x108862]++;
      }
      for (_0x2ff19d = 0x0; _0x2ff19d < _0x321bf7.length; _0x2ff19d++) {
        var _0x20f700 = _0x321bf7[_0x2ff19d],
          _0x108862 = _0x20f700.id + '-' + _0x20f700.level;
        Object.hasOwnProperty.call(_0x1e7cb2, _0x108862) && 0x3 <= _0x1e7cb2[_0x108862] && (_0x20f700.isMergeable = !0x0);
      }
      console.log(_0x321bf7), _0x321bf7.sort(function (_0x470dfb, _0x3db7aa) {
        return _0x470dfb.isMergeable == _0x3db7aa.isMergeable ? 0x0 : _0x470dfb.isMergeable ? -0x1 : _0x3db7aa.isMergeable ? 0x1 : 0x0;
      }), console.log(_0x321bf7), this.deck = new ig.LootboxDeckDisplay(_0x321bf7), this.deck.maxSelection = 0x3, this.deck.isSelectable = !0x0, this.deck.onCardSelected.add(this.onClickCard, this);
    },
    'onClickCard': function () {
      var _0x280033 = this.deck.getSelectedCards();
      0x3 > _0x280033.length ? this.actionButton.visible = !0x1 : _0x280033[0x0].level == _0x280033[0x1].level && _0x280033[0x0].level == _0x280033[0x2].level && _0x280033[0x0].id == _0x280033[0x1].id && _0x280033[0x0].id == _0x280033[0x2].id && (this.actionButton.visible = !0x0), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
    },
    'onClickAction': function () {
      this.backButton.inputEnabled = !0x1, this.backButton.visible = !0x1;
      var _0x15e156 = this.deck.getSelectedCards();
      if (!(0x3 > _0x15e156.length)) {
        this.tweenedCards = [], this.deck.isSelectable = !0x1;
        for (var _0x360779 = 0x0; 0x64 > _0x360779; _0x360779++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleIn, 0x0, 0x0, {
          'anchorType': 'center',
          'delay': 0.006 * _0x360779
        }) : ig.game.spawnEntity(ig.LootboxParticleIn, 0.5 * ig.system.width, 0.5 * ig.system.height, {
          'delay': 0.006 * _0x360779
        });
        for (_0x360779 = 0x0; _0x360779 < _0x15e156.length; _0x360779++) {
          var _0x1324a1 = _0x15e156[_0x360779];
          _0x1324a1.isSelected = !0x1, this.mergedId = _0x1324a1.id, this.mergedLevel = _0x1324a1.level;
          var _0x583b89 = _0x1324a1.pos.x,
            _0x3a833f = _0x1324a1.pos.y;
          _0x1324a1.id = -0x1, ig.responsive && (_0x583b89 = _0x1324a1.anchoredPositionX, _0x3a833f = _0x1324a1.anchoredPositionY), _0x1324a1 = ig.game.spawnEntity(ig.LootboxCard, _0x583b89, _0x3a833f, {
            'id': this.mergedId,
            'level': this.mergedLevel,
            'zIndex': 0xf423f,
            'isSelected': !0x0
          }), _0x1324a1.shake(0x3, 0x2), this.tweenedCards.push(_0x1324a1), ig.responsive ? (_0x583b89 = 0.25 * ig.responsive.originalWidth + 0.25 * _0x360779 * ig.responsive.originalWidth, _0x583b89 = _0x1324a1.tween({
            'anchorX': 0.5,
            'anchorY': 0.5,
            'scaleX': 1.4,
            'scaleY': 1.4,
            'anchoredPositionX': _0x583b89,
            'anchoredPositionY': 0.5 * ig.system.height
          }, 0.3, {
            'easing': ig.Tween.Easing.Quadratic.EaseOut
          }), _0x1324a1 = _0x1324a1.tween({
            'scaleX': 0.3,
            'scaleY': 0.3,
            'anchoredPositionX': 0.5 * ig.responsive.originalWidth,
            'anchoredPositionY': 0.5 * ig.responsive.originalHeight
          }, 0.4, {
            'delay': 0.4,
            'easing': ig.Tween.Easing.Back.EaseIn,
            'onComplete': this.spawnNewCard.bind(this)
          })) : (_0x583b89 = 0.25 * ig.system.width + 0.25 * _0x360779 * ig.system.width, _0x583b89 = _0x1324a1.tween({
            'anchorX': 0.5,
            'anchorY': 0.5,
            'scaleX': 1.4,
            'scaleY': 1.4,
            'pos': {
              'x': _0x583b89,
              'y': 0.5 * ig.system.height
            }
          }, 0.3, {
            'easing': ig.Tween.Easing.Quadratic.EaseOut
          }), _0x1324a1 = _0x1324a1.tween({
            'scaleX': 0.3,
            'scaleY': 0.3,
            'pos': {
              'x': 0.5 * ig.system.width,
              'y': 0.5 * ig.system.height
            }
          }, 0.4, {
            'delay': 0.4,
            'easing': ig.Tween.Easing.Back.EaseIn,
            'onComplete': this.spawnNewCard.bind(this)
          })), _0x583b89.chain(_0x1324a1), _0x583b89.start();
        }
        this.mergedX = _0x15e156[0x0].pos.x, this.mergedY = _0x15e156[0x0].pos.y, ig.responsive && (this.mergedX = _0x15e156[0x0].anchoredPositionX, this.mergedY = _0x15e156[0x0].anchoredPositionY), this.actionButton.visible = !0x1, ig.game.sortEntitiesDeferred(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
      }
    },
    'spawnNewCard': function () {
      if (this.tweenedCards) {
        ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.assemble]);
        for (var _0x30b3d6 = 0x0; _0x30b3d6 < this.tweenedCards.length; _0x30b3d6++) this.tweenedCards[_0x30b3d6].exit();
        var _0x30b3d6 = ig.system.width / 0x2,
          _0x423e29 = ig.system.height / 0x2;
        ig.responsive && (_0x30b3d6 = ig.responsive.originalWidth / 0x2, _0x423e29 = ig.responsive.originalHeight / 0x2);
        var _0x494304 = ig.game.spawnEntity(ig.LootboxCard, _0x30b3d6, _0x423e29, {
          'id': this.mergedId,
          'level': this.mergedLevel + 0x1,
          'zIndex': 0xf423f,
          'isSelected': !0x0,
          'anchorX': 0.5,
          'anchorY': 0.5,
          'scaleX': 0.3,
          'scaleY': 0.3
        });
        _0x494304.shake(0x5, 0x5);
        for (_0x30b3d6 = 0x0; 0x64 > _0x30b3d6; _0x30b3d6++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleOut, 0x0, 0x0, {
          'anchorType': 'center',
          'delay': 0.002 * _0x30b3d6
        }) : ig.game.spawnEntity(ig.LootboxParticleOut, 0.5 * ig.system.width, 0.5 * ig.system.height, {
          'delay': 0.002 * _0x30b3d6
        });
        var _0x30b3d6 = _0x494304.tween({
            'scaleX': 0x2,
            'scaleY': 0x2
          }, 0.3, {
            'easing': ig.Tween.Easing.Quadratic.EaseOut
          }),
          _0x423e29 = ig.responsive ? _0x494304.tween({
            'scaleX': 0x1,
            'scaleY': 0x1,
            'anchorX': 0x0,
            'anchorY': 0x0,
            'anchoredPositionX': this.mergedX,
            'anchoredPositionY': this.mergedY
          }, 0.3, {
            'delay': 0x1,
            'easing': ig.Tween.Easing.Quadratic.EaseOut
          }) : _0x494304.tween({
            'scaleX': 0x1,
            'scaleY': 0x1,
            'anchorX': 0x0,
            'anchorY': 0x0,
            'pos': {
              'x': this.mergedX,
              'y': this.mergedY
            }
          }, 0.3, {
            'delay': 0x1,
            'easing': ig.Tween.Easing.Quadratic.EaseOut
          }),
          _0x229045 = _0x494304.tween({}, 0.1, {
            'onComplete': function () {
              _0x494304.exit(), this.deck.exit(), this.createDeck(), this.backButton.inputEnabled = !0x0, this.backButton.visible = !0x0;
            }.bind(this)
          });
        _0x30b3d6.chain(_0x423e29), _0x423e29.chain(_0x229045), _0x30b3d6.start();
        for (_0x30b3d6 = _0x423e29 = 0x0; _0x30b3d6 < ig.Lootbox.data.cards.length; _0x30b3d6++) _0x229045 = ig.Lootbox.data.cards[_0x30b3d6], _0x229045.id == this.mergedId && _0x229045.level == this.mergedLevel && 0x3 > _0x423e29 && (_0x423e29++, ig.Lootbox.data.cards.splice(_0x30b3d6, 0x1), _0x30b3d6--);
        ig.Lootbox.data.cards.push({
          'id': this.mergedId,
          'level': this.mergedLevel + 0x1
        }), ig.Lootbox.sortData(), ig.Lootbox.saveData(), this.tweenedCards = null;
      }
    },
    'onClickBack': function () {
      this.onBack.dispatch(), this.exitAll(), ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]);
    },
    'exitAll': function () {
      this.deck.exit(), this.backButton.exit(), this.actionButton.exit(), this.title.exit(), this.messageTextField.exit(), this.exit();
    },
    'update': function () {
      this.parent();
      if (this.deck) {
        for (var _0x1482a8 = {}, _0x509a7b = 0x0; _0x509a7b < ig.Lootbox.data.cards.length; _0x509a7b++) {
          var _0x353b06 = ig.Lootbox.data.cards[_0x509a7b],
            _0x5310a2 = _0x353b06.id + '-' + _0x353b06.level;
          _0x1482a8[_0x5310a2] || (_0x1482a8[_0x5310a2] = 0x0), _0x1482a8[_0x5310a2]++;
        }
        for (_0x509a7b = 0x0; _0x509a7b < this.deck.cards.length; _0x509a7b++) _0x353b06 = this.deck.cards[_0x509a7b], _0x5310a2 = _0x353b06.id + '-' + _0x353b06.level, _0x353b06.isMergeable = Object.hasOwnProperty.call(_0x1482a8, _0x5310a2) && 0x3 <= _0x1482a8[_0x5310a2] ? !0x0 : !0x1;
        this.deck.update();
      }
    },
    'draw': function () {
      var _0x47fe50 = ig.system.context;
      _0x47fe50.save(), _0x47fe50.fillStyle = ig.Lootbox.overlay.color, _0x47fe50.globalAlpha = ig.Lootbox.overlay.alpha, _0x47fe50.fillRect(0x0, 0x0, ig.system.width, ig.system.height), _0x47fe50.globalAlpha = 0x1, _0x47fe50.restore(), this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-ad').requires('plugins.lootbox.lootbox-game-object').defines(function () {
  ig.LootboxAd = ig.LootboxSimpleButton.extend({
    'zIndex': 0xf423f,
    'callback': null,
    'text': "Claiming",
    'init': function (_0x14b0d5, _0x53bd46, _0x49aef9) {
      this.parent((ig.responsive ? ig.responsive.originalWidth : ig.system.width) / 0x2, (ig.responsive ? ig.responsive.originalHeight : ig.system.height) / 0x2, _0x49aef9), setTimeout(function () {
        this.text = "claimed";
      }.bind(this), 0x5dc), setTimeout(function () {
        this.adSuccess();
      }.bind(this), 0x7d0), ig.game.sortEntitiesDeferred();
    },
    'adSuccess': function () {
      this.callback(!0x0), this.exit();
    }
  });
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-notification-dot').requires('plugins.lootbox.lootbox-game-object').defines(function () {
  ig.LootboxNotificationDot = ig.LootboxSimpleButton.extend({
    'zIndex': 0xf423f,
    'text': '1',
    'forceDraw': !0x0,
    'dotColor': '#ff7777',
    'textColor': '#ffffff',
    'type': 'assembly',
    'init': function (_0x10e27c, _0x5de010, _0x5b0a11) {
      this.parent(_0x10e27c, _0x5de010, _0x5b0a11), ig.Lootbox.saveName || ig.Lootbox.loadData(), this.dotColor = ig.Lootbox.notificationDot.color, this.textColor = ig.Lootbox.notificationDot.textColor, this.width = this.height = ig.Lootbox.notificationDot.size, this.font = ig.Lootbox.notificationDot.font, this.offsetX = ig.Lootbox.notificationDot.textOffsetX, this.offsetY = ig.Lootbox.notificationDot.textOffsetY;
    },
    'update': function () {
      this.parent();
      if ('assembly' == this.type) {
        for (var _0x4c7bfe = {}, _0x3c72ae = 0x0, _0x2cfdb7 = 0x0; _0x2cfdb7 < ig.Lootbox.data.cards.length; _0x2cfdb7++) {
          var _0x569312 = ig.Lootbox.data.cards[_0x2cfdb7],
            _0x569312 = _0x569312.id + '-' + _0x569312.level;
          _0x4c7bfe[_0x569312] || (_0x4c7bfe[_0x569312] = 0x0), _0x4c7bfe[_0x569312]++;
        }
        for (_0x569312 in _0x4c7bfe) Object.hasOwnProperty.call(_0x4c7bfe, _0x569312) && 0x3 <= _0x4c7bfe[_0x569312] && _0x3c72ae++;
        this.text = '' + _0x3c72ae, this.visible = 0x0 < _0x3c72ae ? !0x0 : !0x1;
      } else {
        if ('lootbox' == this.type) _0x2cfdb7 = 0x0, 0x0 == ig.Lootbox.getFreeBoxCollectionTime() && _0x2cfdb7++, 0x0 == ig.Lootbox.getPremiumBoxCollectionTime() && _0x2cfdb7++, 0x0 < _0x2cfdb7 ? (this.visible = !0x0, this.text = '' + _0x2cfdb7) : this.visible = !0x1;else {
          if ('collection' == this.type) {
            if (ig.Lootbox.isUpgradeMode) {
              0x0 == ig.Lootbox.data.cards.length && (this.visible = !0x1), _0x4c7bfe = {};
              for (_0x2cfdb7 = 0x0; _0x2cfdb7 < ig.Lootbox.data.cards.length; _0x2cfdb7++) _0x569312 = ig.Lootbox.data.cards[_0x2cfdb7], _0x569312.level < ig.Lootbox.card.levelMax && _0x569312.exp >= ig.Lootbox.upgradeRequirements[_0x569312.level] && (_0x4c7bfe[_0x569312.id] = !0x0), _0x569312 = Object.keys(_0x4c7bfe).length, this.text = '' + _0x569312, this.visible = 0x0 < _0x569312 ? !0x0 : !0x1;
            } else {
              _0x4c7bfe = {};
              for (_0x2cfdb7 = 0x0; _0x2cfdb7 < ig.Lootbox.data.cards.length; _0x2cfdb7++) _0x569312 = ig.Lootbox.data.cards[_0x2cfdb7], _0x569312.level >= ig.Lootbox.loot.actionableCollectionLevel && (_0x4c7bfe[_0x569312.id] = !0x0);
              _0x2cfdb7 = Object.keys(_0x4c7bfe).length, this.text = '' + _0x2cfdb7, this.visible = 0x0 < _0x2cfdb7 ? !0x0 : !0x1;
            }
          }
        }
      }
    },
    'drawObject': function (_0xef0322, _0x3f0e4b) {
      var _0x1045a4 = ig.system.context;
      _0x1045a4.save();
      var _0xdb25e0 = ig.hexToRgb(this.dotColor);
      _0x1045a4.fillStyle = 0x1 > this.alpha ? 'rgba(' + _0xdb25e0.r + ',' + _0xdb25e0.g + ',' + _0xdb25e0.b + ',' + this.alpha + ')' : _0xdb25e0.hex, _0x1045a4.beginPath(), _0x1045a4.arc(_0xef0322 + this.width / 0x2, _0x3f0e4b + this.height / 0x2, this.width / 0x2, 0x0, 0x2 * Math.PI), _0x1045a4.fill(), _0x1045a4.closePath(), _0x1045a4.restore(), this.parent(_0xef0322, _0x3f0e4b);
    }
  });
}), ig.baked = !0x0, ig.module('plugins.lootbox.lootbox-plugin').requires('plugins.lootbox.lootbox-settings', 'plugins.lootbox.lootbox-game-object', 'plugins.lootbox.lootbox-card', 'plugins.lootbox.lootbox-deck-display', 'plugins.lootbox.lootbox-card-collection', 'plugins.lootbox.lootbox-claim', 'plugins.lootbox.lootbox-card-assembly', 'plugins.lootbox.lootbox-ad', 'plugins.lootbox.lootbox-notification-dot').defines(function () {
  ig.Lootbox = {
    'data': {
      'cards': [],
      'lastFreeBoxCollectTime': 0x0,
      'lastPremiumBoxCollectTime': 0x0
    },
    'noCooldown': function () {
      ig.Lootbox.loot.freeBoxCooldownMinutes = 0x0, ig.Lootbox.loot.premiumBoxCooldownMinutes = 0x0;
    },
    'addCardData': function (_0x125d62, _0x39dffa, _0x41cf9d) {
      _0x41cf9d || (_0x41cf9d = 0x0), this.data.cards.push({
        'id': _0x125d62,
        'level': _0x39dffa,
        'exp': _0x41cf9d
      });
    },
    'addCardDataThenSave': function (_0x36071b, _0x45ec3f, _0x416d21) {
      this.addCardData(_0x36071b, _0x45ec3f, _0x416d21), this.saveData();
    },
    'levelUpCard': function (_0x4da0e2) {
      if (!(0x1 > this.getExpProgress)) for (var _0x299754 = 0x0; _0x299754 < this.data.cards.length; _0x299754++) {
        var _0x50a223 = this.data.cards[_0x299754];
        if (_0x50a223.id == _0x4da0e2) {
          _0x50a223.exp -= ig.Lootbox.upgradeRequirements[_0x50a223.level], _0x50a223.level++, _0x50a223.level >= ig.Lootbox.card.levelMax && 0xa > _0x4da0e2 && (ig.Lootbox.Collection && (ig.Lootbox.Collection.disableButtons(), this.showKartReward(_0x4da0e2, ig.Lootbox.Collection.enableButtons.bind(ig.Lootbox.Collection))), ig.CarsData.unlockCar(_0x4da0e2 + 0x1));
          break;
        }
      }
    },
    'checkCardUpgrade': function () {
      for (var _0x255697 = 0x0; _0x255697 < this.data.cards.length; _0x255697++) {
        var _0x726275 = this.data.cards[_0x255697];
        if (_0x726275.level < ig.Lootbox.card.levelMax && 0x1 <= ig.Lootbox.getExpProgress(_0x726275.id)) return !0x0;
      }
      return !0x1;
    },
    'MaxExpCard': function (_0x2dcae3) {
      for (var _0x539616 = 0x0; _0x539616 < this.data.cards.length; _0x539616++) {
        var _0x248ea0 = this.data.cards[_0x539616];
        if (_0x248ea0.id == _0x2dcae3) {
          _0x248ea0.exp = 0x23, _0x248ea0.level = 0x0, this.saveData();
          return;
        }
      }
      this.addCardData(_0x2dcae3, ig.Lootbox.card.levelMax);
    },
    'instantCard': function (_0x364751) {
      for (var _0x2bba8a = 0x0; _0x2bba8a < this.data.cards.length; _0x2bba8a++) {
        var _0x2602cf = this.data.cards[_0x2bba8a];
        if (_0x2602cf.id == _0x364751) {
          _0x2602cf.exp = 0x0, _0x2602cf.level = ig.Lootbox.card.levelMax, this.saveData();
          return;
        }
      }
      this.addCardData(_0x364751, ig.Lootbox.card.levelMax);
    },
    'giveFreeCard': function (_0x1d67ee, _0x26f803) {
      for (var _0x626271 = ig.responsive ? ig.responsive.originalWidth : ig.system.width, _0x87ac23 = ig.responsive ? ig.responsive.originalHeight : ig.system.height, _0x34b4a0 = 0x0; _0x34b4a0 < this.data.cards.length; _0x34b4a0++) {
        var _0x37ffea = this.data.cards[_0x34b4a0];
        if (_0x37ffea.id == _0x1d67ee) {
          if (0x3 == _0x37ffea.level) return;
          _0x37ffea.exp = 0x0, _0x37ffea.level = 0x3;
          break;
        }
      }
      this.freeReward = ig.game.spawnEntity(ig.LootboxCard, _0x626271 / 0x2, 0.42 * _0x87ac23, {
        'id': _0x1d67ee,
        'level': 0x3,
        'showExp': !0x1,
        'zIndex': 0xf423f,
        'anchorX': 0.5,
        'anchorY': 0.5,
        'scaleX': 0x0,
        'scaleY': 0x0,
        'faceDown': !0x1,
        'exitType': 'fadeOut'
      });
      for (_0x34b4a0 = 0x0; 0x32 > _0x34b4a0; _0x34b4a0++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleOut, this.freeReward.anchoredPositionX, this.freeReward.anchoredPositionY, {
        'delay': 0.002 * _0x34b4a0,
        'fillColor': '#ffffff'
      }) : ig.game.spawnEntity(ig.LootboxParticleOut, this.freeReward.pos.x, this.freeReward.pos.y, {
        'delay': 0.002 * _0x34b4a0,
        'fillColor': '#ffffff'
      });
      ig.soundHandler.sfxPlayer.play(ig.Lootbox.sounds.particleOut), this.saveData(), this.freeReward.tween({
        'scaleX': 1.8,
        'scaleY': 1.8,
        'alpha': 0x1
      }, 0.5, {
        'easing': ig.Tween.Easing.Back.EaseOut,
        'onComplete': function () {
          this.collectButton = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x626271 / 0x2, 0.78 * _0x87ac23, {
            'image': ig.Lootbox.images.simple,
            'font': ig.Lootbox.page.button.font,
            'textColor': ig.Lootbox.page.button.fontColor ? ig.Lootbox.page.button.fontColor : '#ffffff',
            'offsetY': ig.Lootbox.page.button.offsetY,
            'text': ig.Lootbox.strings.collectButton,
            'zIndex': 0x1869f,
            'entryType': 'fadeIn',
            'entryDelay': 0.5,
            'exitType': 'fadeOut'
          }), this.collectButton.onClicked.addOnce(function () {
            ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]), this.collectButton.exit(), this.freeReward.exit(), _0x26f803 && _0x26f803();
          }.bind(this), this);
        }.bind(this)
      }).start();
    },
    'showKartReward': function (_0x23c628, _0x371ba5) {
      if (ig.CarsData) {
        for (var _0x421519 = ig.responsive ? ig.responsive.originalWidth : ig.system.width, _0x39d993 = ig.responsive ? ig.responsive.originalHeight : ig.system.height, _0x52473e = ig.game.spawnEntity(ig.LootboxGameObject, 0x0, 0x0, {
            'zIndex': 0x1869f,
            'width': ig.system.width,
            'height': ig.system.height,
            'alpha': 0.8,
            'drawAsRect': !0x0,
            'rectColor': '#000000'
          }), _0x4267f6 = ig.game.spawnEntity(ig.LootboxGameObject, _0x421519 / 0x2, 0.5 * _0x39d993, {
            'image': ig.CarsData.getShopImage(_0x23c628 + 0x1),
            'zIndex': 0xf423f,
            'anchorX': 0.5,
            'anchorY': 0.5,
            'scaleX': 0x0,
            'scaleY': 0x0,
            'faceDown': !0x1,
            'exitType': 'fadeOut'
          }), _0x44afe0 = 0x0; 0x32 > _0x44afe0; _0x44afe0++) ig.responsive ? ig.game.spawnEntity(ig.LootboxParticleOut, _0x4267f6.anchoredPositionX, _0x4267f6.anchoredPositionY, {
          'delay': 0.002 * _0x44afe0,
          'fillColor': '#ffffff'
        }) : ig.game.spawnEntity(ig.LootboxParticleOut, _0x4267f6.pos.x, _0x4267f6.pos.y, {
          'delay': 0.002 * _0x44afe0,
          'fillColor': '#ffffff'
        });
        ig.soundHandler.sfxPlayer.play(ig.Lootbox.sounds.particleOut), _0x4267f6.tween({
          'scaleX': 0x1,
          'scaleY': 0x1,
          'alpha': 0x1
        }, 0.5, {
          'easing': ig.Tween.Easing.Back.EaseOut,
          'onComplete': function () {
            var _0x4496fd = ig.game.spawnEntity(ig.LootboxTextField, _0x421519 / 0x2, ig.Lootbox.page.titleY + ig.Lootbox.page.myCollection.titleOffsetY, {
                'font': "60px archivo-black",
                'text': ig.Lootbox.strings.kartReward,
                'align': 'center',
                'color': '#FFFFFF',
                'zIndex': 0x1869f,
                'entryType': 'fadeIn',
                'exitType': 'fadeOut'
              }),
              _0x16b213 = ig.game.spawnEntity(ig.LootboxSimpleButton, _0x421519 / 0x2, 0.78 * _0x39d993, {
                'image': ig.Lootbox.images.simple,
                'font': ig.Lootbox.page.button.font,
                'textColor': ig.Lootbox.page.button.fontColor ? ig.Lootbox.page.button.fontColor : '#ffffff',
                'offsetY': ig.Lootbox.page.button.offsetY,
                'text': ig.Lootbox.strings.collectButton,
                'zIndex': 0x1869f,
                'entryType': 'fadeIn',
                'entryDelay': 0.5,
                'exitType': 'fadeOut'
              });
            _0x16b213.onClicked.addOnce(function () {
              ig.soundHandler.sfxPlayer.play(ig.soundHandler.sfxPlayer.soundList[ig.Lootbox.sounds.button]), _0x16b213.exit(), _0x4267f6.exit(), _0x52473e.exit(), _0x4496fd.exit(), _0x371ba5 && _0x371ba5();
            }.bind(this), this);
          }.bind(this)
        }).start();
      }
    },
    'getExpProgress': function (_0xbc42de) {
      for (var _0x2ab182 = 0x0; _0x2ab182 < this.data.cards.length; _0x2ab182++) {
        var _0x16241f = this.data.cards[_0x2ab182];
        if (_0x16241f.id == _0xbc42de) return _0x16241f.exp / ig.Lootbox.upgradeRequirements[_0x16241f.level];
      }
      return 0x0;
    },
    'getFreeBoxText': function () {
      var _0x27156c = this.getFreeBoxCollectionTime();
      return 0x0 >= _0x27156c ? this.strings.openButton : this.convertTimeText(_0x27156c);
    },
    'getPremiumBoxText': function () {
      var _0x2a0faa = this.getPremiumBoxCollectionTime();
      return 0x0 >= _0x2a0faa ? this.strings.watchButton : this.convertTimeText(_0x2a0faa);
    },
    'checkBoxAvailable': function () {
      return !(0x0 < this.getFreeBoxCollectionTime() && 0x0 < this.getPremiumBoxCollectionTime());
    },
    'convertTimeText': function (_0x1f383b) {
      var _0x259c26 = Math.floor(_0x1f383b / 0xea60);
      return _0x1f383b = Math.floor((_0x1f383b - 0xea60 * _0x259c26) / 0x3e8), 0xa > _0x1f383b && (_0x1f383b = '0' + _0x1f383b), _0x259c26 + ':' + _0x1f383b;
    },
    'getFreeBoxCollectionTime': function () {
      var _0x358dd3 = 0xea60 * this.loot.freeBoxCooldownMinutes,
        _0x5549f1 = new Date().getTime() - this.data.lastFreeBoxCollectTime;
      return _0x5549f1 > _0x358dd3 && (_0x5549f1 = _0x358dd3), _0x358dd3 - _0x5549f1;
    },
    'getPremiumBoxCollectionTime': function () {
      var _0x3cd802 = 0xea60 * this.loot.premiumBoxCooldownMinutes,
        _0x1ae748 = new Date().getTime() - this.data.lastPremiumBoxCollectTime;
      return _0x1ae748 > _0x3cd802 && (_0x1ae748 = _0x3cd802), _0x3cd802 - _0x1ae748;
    },
    'collectFreeBox': function () {
      if (0x0 < this.getFreeBoxCollectionTime()) return [];
      return this.data.lastFreeBoxCollectTime = new Date().getTime(), [Math.floor(Math.random() * this.card.names.length)];
    },
    'collectPremiumBox': function () {
      if (0x0 < this.getPremiumBoxCollectionTime()) return [];
      this.data.lastPremiumBoxCollectTime = new Date().getTime();
      for (var _0x4d48b3 = [], _0x18a93c = 0x0; 0xa > _0x18a93c; _0x18a93c++) _0x4d48b3.push(Math.floor(Math.random() * this.card.names.length));
      return _0x4d48b3;
    },
    'checkData': function () {
      for (var _0x2fd7e1 = 0x0; _0x2fd7e1 < this.data.cards.length; _0x2fd7e1++) {
        var _0x11dbec = this.data.cards[_0x2fd7e1];
        _0x11dbec.level >= ig.Lootbox.card.levelMax && 0xa > _0x11dbec.id && ig.CarsData.unlockCar(_0x11dbec.id + 0x1);
      }
    },
    'clearData': function () {
      this.data = {
        'cards': [],
        'lastFreeBoxCollectTime': 0x0,
        'lastPremiumBoxCollectTime': 0x0
      };
      for (var _0x219d31 = 0x0; _0x219d31 < this.card.icons.length; _0x219d31++) this.addCardData(_0x219d31, 0x0);
      this.saveData();
    },
    'saveData': function () {
      ig.LSLootbox || this.loadData();
      var _0x568933 = JSON.stringify(this.data);
      ig.LSLootbox.set(this.saveName, _0x568933);
    },
    'loadData': function () {
      ig.LSLootbox || (ig.LSLootbox = new SecureLS({
        'encodingType': 'aes'
      }), this.saveName = this.hash(ig.game.name + '-lootbox-save-data', '').replace('-', 's'));
      var _0x3b2ea8 = ig.LSLootbox.get(this.saveName);
      '' == _0x3b2ea8 ? this.clearData() : (this.data = JSON.parse(_0x3b2ea8), this.checkData());
    },
    'isCardActionable': function (_0x337608) {
      for (var _0x5ccc0e = 0x0; _0x5ccc0e < this.data.cards.length; _0x5ccc0e++) {
        var _0x19e906 = this.data.cards[_0x5ccc0e];
        if (_0x19e906.id == _0x337608 && _0x19e906.level >= this.loot.actionableCollectionLevel) return !0x0;
      }
      return !0x1;
    },
    'isCardWithIdAlreadyExist': function (_0xe74c54) {
      for (var _0x4ade18 = 0x0; _0x4ade18 < this.data.cards.length; _0x4ade18++) if (this.data.cards[_0x4ade18].id == _0xe74c54) return !0x0;
      return !0x1;
    },
    'getLevelFromFirstCardWithId': function (_0xa43eee) {
      for (var _0x4ae33c = 0x0; _0x4ae33c < this.data.cards.length; _0x4ae33c++) {
        var _0x423245 = this.data.cards[_0x4ae33c];
        if (_0x423245.id == _0xa43eee) return _0x423245.level;
      }
      return 0x0;
    },
    'getExpFromFirstCardWithId': function (_0x3e4c30) {
      for (var _0x2e4c1d = 0x0; _0x2e4c1d < this.data.cards.length; _0x2e4c1d++) {
        var _0x850e32 = this.data.cards[_0x2e4c1d];
        if (_0x850e32.id == _0x3e4c30) return _0x850e32.exp;
      }
      return 0x0;
    },
    'incrementExpOfFirstCardWithId': function (_0x5240cc, _0x4f559a) {
      for (var _0xe6e9f6 = 0x0; _0xe6e9f6 < this.data.cards.length; _0xe6e9f6++) {
        var _0x32ab54 = this.data.cards[_0xe6e9f6];
        if (_0x32ab54.id == _0x5240cc) return _0x32ab54.exp += _0x4f559a, _0x32ab54.exp;
      }
      return 0x0;
    },
    'sortData': function () {
      this.data.cards.sort(function (_0x320088, _0xd36f5c) {
        var _0x18369c = _0x320088.id - _0xd36f5c.id;
        return 0x0 == _0x18369c ? _0x320088.level - _0xd36f5c.level : _0x18369c;
      });
    },
    'hash': function (_0x5f353c) {
      var _0x7f8ca7 = 0x0,
        _0x35a981,
        _0x1c188f;
      if (0x0 === _0x5f353c.length) return _0x7f8ca7;
      for (_0x35a981 = 0x0; _0x35a981 < _0x5f353c.length; _0x35a981++) _0x1c188f = _0x5f353c.charCodeAt(_0x35a981), _0x7f8ca7 = (_0x7f8ca7 << 0x5) - _0x7f8ca7 + _0x1c188f, _0x7f8ca7 |= 0x0;
      return _0x7f8ca7.toString(0x24);
    }
  }, ig.initLootboxSettings();
}), this.START_BRANDING_SPLASH, ig.baked = !0x0, ig.module('plugins.branding.splash').requires('impact.impact', 'impact.entity').defines(function () {
  ig.BrandingSplash = ig.Class.extend({
    'init': function () {
      ig.game.spawnEntity(EntityBranding, 0x0, 0x0), console.log("spawn branding");
    }
  }), EntityBranding = ig.Entity.extend({
    'autoUpdateScale': !0x1,
    'gravityFactor': 0x0,
    'size': {
      'x': 0x20,
      'y': 0x20
    },
    'splash': new ig.Image('branding/splash1.png'),
    'init': function (_0x19c9cc, _0x527977, _0x5b7b0f) {
      this.parent(_0x19c9cc, _0x527977, _0x5b7b0f), 0x140 >= ig.system.width ? (this.size.x = 0x140, this.size.y = 0xc8) : (this.size.x = 0x1e0, this.size.y = 0xf0), this.pos.x = (ig.system.width - this.size.x) / 0x2, this.pos.y = -this.size.y - 0xc8, this.endPosY = (ig.system.height - this.size.y) / 0x2, _0x19c9cc = this.tween({
        'pos': {
          'y': this.endPosY
        }
      }, 0.5, {
        'easing': ig.Tween.Easing.Bounce.EaseIn
      }), _0x527977 = this.tween({}, 2.5, {
        'onComplete': function () {
          ig.game.director.loadLevel(ig.game.director.currentLevel);
        }
      }), _0x19c9cc.chain(_0x527977), _0x19c9cc.start(), this.currentAnim = this.anims.idle;
    },
    'createClickableLayer': function () {
      console.log("Build clickable layer"), this.checkClickableLayer('branding-splash', _SETTINGS.Branding.Logo.Link, _SETTINGS.Branding.Logo.NewWindow);
    },
    'doesClickableLayerExist': function (_0x349088) {
      for (k in dynamicClickableEntityDivs) if (k == _0x349088) return !0x0;
      return !0x1;
    },
    'checkClickableLayer': function (_0x1e7e41, _0x623c03, _0x1e424d) {
      'undefined' == typeof wm && (this.doesClickableLayerExist(_0x1e7e41) ? (ig.game.showOverlay([_0x1e7e41]), $('#' + _0x1e7e41).find('[href]').attr('href', _0x623c03)) : this.createClickableOutboundLayer(_0x1e7e41, _0x623c03, 'media/graphics/misc/invisible.png', _0x1e424d));
    },
    'createClickableOutboundLayer': function (_0x3bea91, _0x45d654, _0x608fd1, _0x225682) {
      var _0x533dec = ig.$new('div');
      _0x533dec.id = _0x3bea91, document.body.appendChild(_0x533dec), _0x533dec = $('#' + _0x533dec.id), _0x533dec.css('float', 'left'), _0x533dec.css('position', 'absolute');
      if (ig.ua.mobile) {
        var _0x392370 = window.innerHeight / mobileHeight,
          _0x2626b8 = window.innerWidth / mobileWidth;
        _0x533dec.css('left', this.pos.x * _0x2626b8), _0x533dec.css('top', this.pos.y * _0x392370), _0x533dec.css('width', this.size.x * _0x2626b8), _0x533dec.css('height', this.size.y * _0x392370);
      } else _0x392370 = w / 0x2 - destW / 0x2, _0x2626b8 = h / 0x2 - destH / 0x2, console.log(_0x392370, _0x2626b8), _0x533dec.css('left', _0x392370 + this.pos.x * multiplier), _0x533dec.css('top', _0x2626b8 + this.pos.y * multiplier), _0x533dec.css('width', this.size.x * multiplier), _0x533dec.css('height', this.size.y * multiplier);
      _0x225682 ? _0x533dec.html("<a target='_blank' href='" + _0x45d654 + "'><img style='width:100%;height:100%' src='" + _0x608fd1 + "'></a>") : _0x533dec.html("<a href='" + _0x45d654 + "'><img style='width:100%;height:100%' src='" + _0x608fd1 + "'></a>"), dynamicClickableEntityDivs[_0x3bea91] = {}, dynamicClickableEntityDivs[_0x3bea91].width = this.size.x * multiplier, dynamicClickableEntityDivs[_0x3bea91].height = this.size.y * multiplier, dynamicClickableEntityDivs[_0x3bea91].entity_pos_x = this.pos.x, dynamicClickableEntityDivs[_0x3bea91].entity_pos_y = this.pos.y;
    },
    'draw': function () {
      ig.system.context.fillStyle = '#ffffff', ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.system.context.fillStyle = '#000', ig.system.context.font = "12px Arial", ig.system.context.textAlign = 'left', 0x140 >= ig.system.width ? ig.system.context.fillText("powered by MarketJS.com", ig.system.width - 0x96, ig.system.height - 0xf) : ig.system.context.fillText("powered by MarketJS.com", ig.system.width - 0xa0, ig.system.height - 0xf), this.parent(), this.splash && ig.system.context.drawImage(this.splash.data, 0x0, 0x0, this.splash.data.width, this.splash.data.height, this.pos.x, this.pos.y, this.size.x, this.size.y);
    }
  });
}), this.END_BRANDING_SPLASH, ig.baked = !0x0, ig.module('game.entities.buttons.button').requires('impact.entity', 'plugins.data.vector').defines(function () {
  EntityButton = ig.Entity.extend({
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.A,
    'size': new Vector2(0x30, 0x30),
    'fillColor': null,
    'zIndex': 0x17318,
    'init': function (_0x313350, _0x38f575, _0x500892) {
      this.parent(_0x313350, _0x38f575, _0x500892), !ig.global.wm && !isNaN(_0x500892.zIndex) && (this.zIndex = _0x500892.zIndex), _0x313350 = Math.floor(0x100 * Math.random()), _0x38f575 = Math.floor(0x100 * Math.random()), _0x500892 = Math.floor(0x100 * Math.random()), this.fillColor = 'rgba(' + _0x313350 + ',' + _0x500892 + ',' + _0x38f575 + ',1)';
    },
    'clicked': function () {
      throw "no implementation on clicked()";
    },
    'clicking': function () {
      throw "no implementation on clicking()";
    },
    'released': function () {
      throw "no implementation on released()";
    }
  });
}), ig.baked = !0x0, ig.module('plugins.clickable-div-layer').requires('plugins.data.vector').defines(function () {
  ClickableDivLayer = ig.Class.extend({
    'pos': new Vector2(0x0, 0x0),
    'size': new Vector2(0x0, 0x0),
    'identifier': null,
    'invisImagePath': 'media/graphics/misc/invisible.png',
    'init': function (_0x197209) {
      this.pos = new Vector2(_0x197209.pos.x, _0x197209.pos.y), this.size = new Vector2(_0x197209.size.x, _0x197209.size.y);
      var _0x20d146 = 'more-games',
        _0x59c58a = 'www.google.com',
        _0x53d1e3 = !0x1;
      _0x197209.div_layer_name && (_0x20d146 = _0x197209.div_layer_name), _0x197209.link && (_0x59c58a = _0x197209.link), _0x197209.newWindow && (_0x53d1e3 = _0x197209.newWindow), this.createClickableLayer(_0x20d146, _0x59c58a, _0x53d1e3);
    },
    'createClickableLayer': function (_0x42ce48, _0x1b90a2, _0x580177) {
      this.identifier = _0x42ce48;
      var _0x2a2da7 = ig.domHandler.getElementById('#' + _0x42ce48);
      _0x2a2da7 ? (ig.domHandler.show(_0x2a2da7), ig.domHandler.attr(_0x2a2da7, 'href', _0x1b90a2)) : this.createClickableOutboundLayer(_0x42ce48, _0x1b90a2, this.invisImagePath, _0x580177);
    },
    'update': function (_0x5b5b6d, _0x6ac42a) {
      this.pos.x === _0x5b5b6d && this.pos.y === _0x6ac42a || (ig.sizeHandler.dynamicClickableEntityDivs[this.identifier] = {}, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].width = this.size.x, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].height = this.size.y, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].entity_pos_x = this.pos.x, ig.sizeHandler.dynamicClickableEntityDivs[this.identifier].entity_pos_y = this.pos.y);
    },
    'createClickableOutboundLayer': function (_0x447798, _0x56374f, _0x452c21, _0x439f48) {
      var _0xf03ce6 = ig.domHandler.create('div');
      ig.domHandler.attr(_0xf03ce6, 'id', _0x447798);
      var _0x24357a = ig.domHandler.create('a');
      ig.domHandler.addEvent(_0xf03ce6, 'mousedown', function (_0x4eed9e) {
        _0x4eed9e.preventDefault();
      }), _0x439f48 ? (ig.domHandler.attr(_0x24357a, 'href', _0x56374f), ig.domHandler.attr(_0x24357a, 'target', '_blank')) : ig.domHandler.attr(_0x24357a, 'href', _0x56374f), _0x56374f = ig.domHandler.create('img'), ig.domHandler.css(_0x56374f, {
        'width': '100%',
        'height': '100%'
      }), ig.domHandler.attr(_0x56374f, 'src', _0x452c21), _0x452c21 = Math.min(ig.sizeHandler.scaleRatioMultiplier.x, ig.sizeHandler.scaleRatioMultiplier.y);
      if (ig.ua.mobile) {
        _0x439f48 = ig.domHandler.getElementById('#canvas'), _0x439f48 = ig.domHandler.getOffsets(_0x439f48);
        var _0x596771 = _0x439f48.left,
          _0x308bf8 = _0x439f48.top;
        console.log(_0x439f48.left), ig.sizeHandler.disableStretchToFitOnMobileFlag ? (_0x439f48 = Math.floor(_0x596771 + this.pos.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x308bf8 = Math.floor(_0x308bf8 + this.pos.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px', _0x596771 = Math.floor(this.size.x * ig.sizeHandler.scaleRatioMultiplier.x) + 'px', _0x452c21 = Math.floor(this.size.y * ig.sizeHandler.scaleRatioMultiplier.y) + 'px') : (_0x439f48 = Math.floor(this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x308bf8 = Math.floor(this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x596771 = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x452c21 = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px');
      } else _0x439f48 = ig.domHandler.getElementById('#canvas'), _0x439f48 = ig.domHandler.getOffsets(_0x439f48), _0x596771 = _0x439f48.left, _0x308bf8 = _0x439f48.top, ig.sizeHandler.enableStretchToFitOnDesktopFlag ? (_0x439f48 = Math.floor(_0x596771 + this.pos.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x308bf8 = Math.floor(_0x308bf8 + this.pos.y * ig.sizeHandler.sizeRatio.y) + 'px', _0x596771 = Math.floor(this.size.x * ig.sizeHandler.sizeRatio.x) + 'px', _0x452c21 = Math.floor(this.size.y * ig.sizeHandler.sizeRatio.y) + 'px') : (_0x439f48 = Math.floor(_0x596771 + this.pos.x * _0x452c21) + 'px', _0x308bf8 = Math.floor(_0x308bf8 + this.pos.y * _0x452c21) + 'px', _0x596771 = Math.floor(this.size.x * _0x452c21) + 'px', _0x452c21 = Math.floor(this.size.y * _0x452c21) + 'px');
      ig.domHandler.css(_0xf03ce6, {
        'float': 'left',
        'position': 'absolute',
        'left': _0x439f48,
        'top': _0x308bf8,
        'width': _0x596771,
        'height': _0x452c21,
        'z-index': 0x3
      }), ig.domHandler.addEvent(_0xf03ce6, 'mousemove', ig.input.mousemove.bind(ig.input), !0x1), ig.domHandler.appendChild(_0x24357a, _0x56374f), ig.domHandler.appendChild(_0xf03ce6, _0x24357a), ig.domHandler.appendToBody(_0xf03ce6), ig.sizeHandler.dynamicClickableEntityDivs[_0x447798] = {}, ig.sizeHandler.dynamicClickableEntityDivs[_0x447798].width = this.size.x, ig.sizeHandler.dynamicClickableEntityDivs[_0x447798].height = this.size.y, ig.sizeHandler.dynamicClickableEntityDivs[_0x447798].entity_pos_x = this.pos.x, ig.sizeHandler.dynamicClickableEntityDivs[_0x447798].entity_pos_y = this.pos.y;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.buttons.button-branding-logo').requires('game.entities.buttons.button', 'plugins.clickable-div-layer').defines(function () {
  EntityButtonBrandingLogo = EntityButton.extend({
    'type': ig.Entity.TYPE.A,
    'gravityFactor': 0x0,
    'logo': new ig.AnimationSheet('branding/logo.png', _SETTINGS.Branding.Logo.Width, _SETTINGS.Branding.Logo.Height),
    'zIndex': 0x2711,
    'size': {
      'x': 0x40,
      'y': 0x42
    },
    'clickableLayer': null,
    'link': null,
    'newWindow': !0x1,
    'div_layer_name': 'branding-logo',
    'name': 'brandinglogo',
    'init': function (_0x590d19, _0x41b4b4, _0x125f62) {
      this.parent(_0x590d19, _0x41b4b4, _0x125f62);
      if (!ig.global.wm) {
        if ('undefined' == typeof wm) {
          if (_SETTINGS.Branding.Logo.Enabled) this.size.x = _SETTINGS.Branding.Logo.Width, this.size.y = _SETTINGS.Branding.Logo.Height, this.anims.idle = new ig.Animation(this.logo, 0x0, [0x0], !0x0), this.currentAnim = this.anims.idle, _0x125f62 && _0x125f62.centralize && (this.pos.x = ig.system.width / 0x2 - this.size.x / 0x2, console.log("centralize true ... centering branded logo ...")), _SETTINGS.Branding.Logo.LinkEnabled && (this.link = _SETTINGS.Branding.Logo.Link, this.newWindow = _SETTINGS.Branding.Logo.NewWindow, this.clickableLayer = new ClickableDivLayer(this));else {
            this.kill();
            return;
          }
        }
        this.div_layer_name = _0x125f62.div_layer_name ? _0x125f62.div_layer_name : 'branding-logo';
      }
    },
    'show': function () {
      var _0x5945c9 = ig.domHandler.getElementById('#' + this.div_layer_name);
      ig.domHandler.show(_0x5945c9);
    },
    'hide': function () {
      var _0x1d35fa = ig.domHandler.getElementById('#' + this.div_layer_name);
      ig.domHandler.hide(_0x1d35fa);
    },
    'clicked': function () {},
    'clicking': function () {},
    'released': function () {}
  });
}), ig.baked = !0x0, ig.module('game.entities.branding-logo-placeholder').requires('impact.entity', 'game.entities.buttons.button-branding-logo').defines(function () {
  EntityBrandingLogoPlaceholder = ig.Entity.extend({
    'gravityFactor': 0x0,
    'size': {
      'x': 0x20,
      'y': 0x20
    },
    '_wmDrawBox': !0x0,
    '_wmBoxColor': "rgba(0, 0, 255, 0.7)",
    'init': function (_0x27a3a3, _0x111479, _0x41ea29) {
      this.parent(_0x27a3a3, _0x111479, _0x41ea29);
      if (_0x41ea29) switch (console.log("settings found ... using that div layer name"), _0x27a3a3 = _0x41ea29.div_layer_name, console.log('settings.centralize:', _0x41ea29.centralize), _0x41ea29.centralize) {
        case 'true':
          console.log("centralize true"), centralize = !0x0;
          break;
        case 'false':
          console.log("centralize false"), centralize = !0x1;
          break;
        default:
          console.log("default ... centralize false"), centralize = !0x1;
      } else _0x27a3a3 = 'branding-logo', centralize = !0x1;
      if ('undefined' == typeof wm) {
        if (_SETTINGS.Branding.Logo.Enabled) try {
          ig.game.spawnEntity(EntityButtonBrandingLogo, this.pos.x, this.pos.y, {
            'div_layer_name': _0x27a3a3,
            'centralize': centralize
          });
        } catch (_0x39bb88) {
          console.log(_0x39bb88);
        }
        this.kill();
      }
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.buttons.button-generic').requires('impact.entity').defines(function () {
  EntityButtonGeneric = ig.Entity.extend({
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.A,
    'layer': 0x0,
    'isClicked': !0x1,
    'enabled': !0x0,
    'withText': !0x1,
    'isNotControls': !0x0,
    'isOver': !0x1,
    'scale': {
      'x': 0x1,
      'y': 0x1
    },
    'alpha': 0x1,
    'ignorePause': !0x0,
    'icon': null,
    'iconPos': {
      'x': 0x0,
      'y': 0x0
    },
    'visible': !0x0,
    'locked': !0x1,
    'lockIcon': new ig.Image('media/graphics/ui/common/lock.png'),
    'init': function (_0x30fa8e, _0x5f2ff6, _0x5b0372) {
      this.offsetY = this.offsetX = 0x0, this.parent(_0x30fa8e, _0x5f2ff6, _0x5b0372), this.callback = _0x5b0372.callback, this.idleImage = _0x5b0372.idleImage, this.clickImage = _0x5b0372.clickImage, this.overlay = _0x5b0372.overlay, this.currentImage = _0x5b0372.idleImage, this.size.x = this.currentImage.width, this.size.y = this.currentImage.height, this.imageSize = {
        'x': this.size.x,
        'y': this.size.y
      }, this.tweenEnabled = this.overlayEnabled = !0x1, this.layer = ig.game.currentLayer, this.zIndex = null == _0x5b0372.zIndex ? ig.game.currentLayer + 0x3 : _0x5b0372.zIndex, this.scaleX0 = this.scale.x, this.scaleY0 = this.scale.y, this.scaleX1 = 0.9 * this.scaleX0, this.scaleY1 = 0.9 * this.scaleY0, this.scaleX2 = 1.04 * this.scaleX0, this.scaleY2 = 1.04 * this.scaleY0, this.scaleX3 = 1.1 * this.scaleX0, this.scaleY3 = 1.1 * this.scaleY0;
    },
    'updateButtonScaling': function (_0x8a9527) {
      this.scaleY0 = this.scaleX0 = _0x8a9527, this.scaleX1 = 0.9 * this.scaleX0, this.scaleY1 = 0.9 * this.scaleY0, this.scaleX2 = 1.04 * this.scaleX0, this.scaleY2 = 1.04 * this.scaleY0, this.scaleX3 = 1.1 * this.scaleX0, this.scaleY3 = 1.1 * this.scaleY0;
    },
    'updateIdleImage': function (_0x3f057f) {
      this.currentImage = this.idleImage = _0x3f057f, this.size.x = this.currentImage.width, this.size.y = this.currentImage.height;
    },
    'ready': function () {
      this.parent(), this.clickTime = ig.system.clock.delta();
    },
    'clicked': function () {
      var _0x3a5063 = this.clickTime;
      this.clickTime = ig.system.clock.delta(), !(0.1 > this.clickTime - _0x3a5063) && this.enabled && this.visible && !this.locked && ig.game.currentLayer == this.layer && (this.isClicked = !0x0, ig.soundHandler.sfxPlayer.play('button'), null != this.clickImage && (this.currentImage = this.clickImage), this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX1,
          'y': this.scaleY1
        }
      }, 0.025), this.tweenScale.start());
    },
    'clicking': function () {},
    'released': function () {
      this.isClicked && this.enabled && (this.currentImage = this.idleImage, this.isClicked = !0x1, this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX0,
          'y': this.scaleY0
        }
      }, 0.025, {
        'onComplete': function () {
          ig.domHandler.getElementById('#canvas').css('cursor', 'default'), this.buttonCallback();
        }.bind(this)
      }), this.tweenScale.start());
    },
    'leave': function () {
      this.enabled && (this.currentImage = this.idleImage, this.isOver = this.isClicked = !0x1, ig.domHandler.getElementById('#canvas').css('cursor', 'default'), this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX0,
          'y': this.scaleY0
        }
      }, 0.025), this.tweenScale.start());
    },
    'over': function () {
      ig.game.currentLayer == this.layer && this.enabled && this.visible && !this.locked && (ig.domHandler.getElementById('#canvas').css('cursor', 'pointer'), this.isOver = !0x0, this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX2,
          'y': this.scaleY2
        }
      }, 0.025), this.tweenScale.start());
    },
    'update': function () {
      this._killed || this.parent();
    },
    'enableOverlay': function () {
      this.overlayEnabled = !0x0;
    },
    'disableOverlay': function () {
      this.overlayEnabled = !0x1;
    },
    'lock': function () {
      this.locked = !0x0;
    },
    'unlock': function () {
      this.locked = !0x1;
    },
    'updateOverlay': function (_0x4d4348) {
      this.overlay = _0x4d4348;
    },
    'draw': function () {
      if (this.visible) {
        var _0x26582d = ig.system.context;
        _0x26582d.setTransform(this.scale.x, 0x0, 0x0, this.scale.y, this.pos.x + this.offsetX + 0.5 * this.imageSize.x * (0x1 - this.scale.x) | 0x0, this.pos.y + this.offsetY + 0.5 * this.imageSize.y * (0x1 - this.scale.y)) | 0x0, _0x26582d.globalAlpha = this.alpha, this.currentImage && this.currentImage.draw(0x0, 0x0), this.withText && this.drawText(), this.icon && this.icon.draw(this.iconPos.x, this.iconPos.y), this.locked && (_0x26582d.fillStyle = 'rgba(0,0,0,0.7)', _0x26582d.roundRect(0x0, 0x0, this.size.x, this.size.y, 0x15, !0x0, !0x1), this.lockIcon.draw(this.size.x / 0x2 - this.lockIcon.width / 0x2, this.size.y / 0x2 - this.lockIcon.height / 0x2)), this.overlayEnabled && this.overlay.draw(0x0, 0x0), _0x26582d.globalAlpha = 0x1, _0x26582d.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0);
      }
    },
    'addText': function (_0x34721e) {
      this.withText = !0x0, this.updateTextFormat(_0x34721e);
    },
    'updateTextFormat': function (_0x1d8ddb) {
      this.textFormat = {
        'align': _0x1d8ddb.align ? _0x1d8ddb.align : 'center',
        'font': _0x1d8ddb.font ? _0x1d8ddb.font : "34px archivo-black",
        'fillStyle': _0x1d8ddb.fillStyle ? _0x1d8ddb.fillStyle : '#011B3B',
        'text': _0x1d8ddb.text ? _0x1d8ddb.text : 'DEFAULT',
        'lineWidth': _0x1d8ddb.lineWidth ? _0x1d8ddb.lineWidth : 0x2,
        'strokeStyle': _0x1d8ddb.strokeStyle ? _0x1d8ddb.strokeStyle : '#F3FD2E',
        'strokeOffset': _0x1d8ddb.strokeOffset ? _0x1d8ddb.strokeOffset : {
          'x': 0x0,
          'y': 0x0
        },
        'x': 0.5 * this.currentImage.width + (_0x1d8ddb.offset ? _0x1d8ddb.offset.x : 0x0),
        'y': 0.5 * this.currentImage.height + 0x5 + (_0x1d8ddb.offset ? _0x1d8ddb.offset.y : 0x0)
      };
    },
    'drawText': function () {
      ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.lineWidth = this.textFormat.lineWidth, ig.system.context.strokeStyle = this.textFormat.strokeStyle, ig.system.context.strokeText(this.textFormat.text, this.textFormat.x + this.textFormat.strokeOffset.y | 0x0, this.textFormat.y + this.textFormat.strokeOffset.y + 0x5 | 0x0), ig.system.context.fillText(this.textFormat.text, this.textFormat.x | 0x0, this.textFormat.y + 0x5 | 0x0);
    },
    'updateText': function (_0x13151e) {
      null != this.textFormat && (this.textFormat.text = _0x13151e);
    },
    'buttonCallback': function () {
      null != this.callback && this.callback();
    },
    'visibility': function (_0x58fff7) {
      this.visible = _0x58fff7;
    },
    'enableTween': function () {
      this.tweenEnabled = !0x0, this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX3,
          'y': this.scaleY3
        }
      }, 0.3, {
        'loop': ig.Tween.Loop.Reverse
      }), this.tweenScale.start();
    },
    'disableTween': function () {
      this.tweenEnabled = !0x1, null != this.tweenScale && (this.tweenScale.stop(), this.tweenScale = null), this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX0,
          'y': this.scaleY0
        }
      }, 0.1), this.tweenScale.start();
    },
    'enable': function (_0x26fe24) {
      if (!this.enabled || !_0x26fe24) this.enabled = _0x26fe24, this.isOver = !0x1;
    },
    'setToUnclickable': function () {
      this.type = ig.Entity.TYPE.NONE;
    },
    'setToClickable': function () {
      this.type = ig.Entity.TYPE.A;
    },
    'kill': function () {
      this.parent(), this.killed = !0x0, this.tweenScale && this.tweenScale.stop(), this.scaleY2 = this.scaleX2 = this.scaleY1 = this.scaleX1 = this.scaleY0 = this.scaleX0 = this.layer = this.size = this.currentImage = this.clickImage = this.idleImage = this.callback = this.offsetY = this.offsetX = this.tweenScale = null;
    },
    'addIcon': function (_0x371b9c, _0x2d2db1, _0x583cfc) {
      this.icon = _0x371b9c, this.iconPos.x = _0x2d2db1, this.iconPos.y = _0x583cfc;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.buttons.button-more-games').requires('game.entities.buttons.button-generic', 'plugins.clickable-div-layer').defines(function () {
  EntityButtonMoreGames = EntityButtonGeneric.extend({
    'clickableLayer': null,
    'link': null,
    'newWindow': !0x1,
    'div_layer_name': 'more-games',
    'name': 'moregames',
    'init': function (_0x58fe6c, _0x384ea4, _0x4d57f2) {
      this.parent(_0x58fe6c, _0x384ea4, _0x4d57f2), this.pos.x -= 0.5 * this.size.x, this.pos.y -= 0.5 * this.size.y, ig.global.wm || (_0x4d57f2.div_layer_name ? (console.log("settings found ... using that div layer name"), this.div_layer_name = _0x4d57f2.div_layer_name) : this.div_layer_name = 'more-games', _SETTINGS.MoreGames.Enabled ? (_SETTINGS.MoreGames.Link && (this.link = _SETTINGS.MoreGames.Link), _SETTINGS.MoreGames.NewWindow && (this.newWindow = _SETTINGS.MoreGames.NewWindow), this.clickableLayer = new ClickableDivLayer(this)) : this.kill());
    },
    'enable': function (_0x5198ee) {
      _0x5198ee ? this.show() : this.hide();
      if (!this.enabled || !_0x5198ee) this.enabled = _0x5198ee, this.isOver = !0x1;
    },
    'show': function () {
      var _0x3b3263 = ig.domHandler.getElementById('#' + this.div_layer_name);
      _0x3b3263 && ig.domHandler.show(_0x3b3263);
    },
    'hide': function () {
      var _0x509f37 = ig.domHandler.getElementById('#' + this.div_layer_name);
      _0x509f37 && ig.domHandler.hide(_0x509f37);
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.pointer').requires('impact.entity').defines(function () {
  EntityPointer = ig.Entity.extend({
    'checkAgainst': ig.Entity.TYPE.BOTH,
    'size': new Vector2(0x1, 0x1),
    'isFirstPressed': !0x1,
    'isPressed': !0x1,
    'isReleased': !0x1,
    'isHovering': !0x1,
    'hoveringItem': null,
    'objectArray': [],
    'clickedObjectList': [],
    'ignorePause': !0x0,
    'zIndex': 0x157c,
    'check': function (_0x403bf2) {
      this.objectArray.push(_0x403bf2);
    },
    'clickObject': function (_0x310a03) {
      this.isFirstPressed && 'function' == typeof _0x310a03.clicked && (_0x310a03.clicked(), this.addToClickedObjectList(_0x310a03)), this.isPressed && !this.isReleased && 'function' == typeof _0x310a03.clicking && _0x310a03.clicking(), this.isReleased && 'function' == typeof _0x310a03.released && (_0x310a03.released(), this.removeFromClickedObjectList(_0x310a03));
    },
    'refreshPos': function () {
      this.pos = ig.game.io.getClickPos();
    },
    'update': function () {
      this.parent(), this.refreshPos();
      var _0x3cca56 = null,
        _0x2ece21 = -0x1;
      for (a = this.objectArray.length - 0x1; -0x1 < a; a--) this.objectArray[a].zIndex > _0x2ece21 && (_0x2ece21 = this.objectArray[a].zIndex, _0x3cca56 = this.objectArray[a]);
      if (null != _0x3cca56) null != this.hoveringItem ? this.hoveringItem != _0x3cca56 && ('function' == typeof this.hoveringItem.leave && this.hoveringItem.leave(), 'function' == typeof _0x3cca56.over && _0x3cca56.over()) : 'function' == typeof _0x3cca56.over && _0x3cca56.over(), this.hoveringItem = _0x3cca56, this.clickObject(_0x3cca56), this.objectArray = [];else {
        if (null != this.hoveringItem && 'function' == typeof this.hoveringItem.leave && (this.hoveringItem.leave(), this.hoveringItem = null), this.isReleased) {
          for (_0x3cca56 = 0x0; _0x3cca56 < this.clickedObjectList.length; _0x3cca56++) _0x2ece21 = this.clickedObjectList[_0x3cca56], 'function' == typeof _0x2ece21.releasedOutside && _0x2ece21.releasedOutside();
          this.clickedObjectList = [];
        }
      }
      this.isFirstPressed = ig.input.pressed('click'), this.isReleased = ig.input.released('click'), this.isPressed = ig.input.state('click');
    },
    'addToClickedObjectList': function (_0x3b8688) {
      this.clickedObjectList.push(_0x3b8688);
    },
    'removeFromClickedObjectList': function (_0x329831) {
      for (var _0x13dddf = [], _0x13909c = 0x0; _0x13909c < this.clickedObjectList.length; _0x13909c++) {
        var _0x21ae10 = this.clickedObjectList[_0x13909c];
        _0x21ae10 != _0x329831 && _0x13dddf.push(_0x21ae10);
      }
      this.clickedObjectList = _0x13dddf;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.pointer-selector').requires('game.entities.pointer').defines(function () {
  EntityPointerSelector = EntityPointer.extend({
    'zIndex': 0x3e8,
    '_wmDrawBox': !0x0,
    '_wmBoxColor': "rgba(0, 0, 255, 0.7)",
    'size': {
      'x': 0x14,
      'y': 0x14
    },
    'init': function (_0x27afc4, _0x3e9e7d, _0x25f41b) {
      this.parent(_0x27afc4, _0x3e9e7d, _0x25f41b);
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.select').requires('impact.entity').defines(function () {
  EntitySelect = ig.Entity.extend({
    'type': ig.Entity.TYPE.B,
    'checkAgainst': ig.Entity.TYPE.A,
    'collides': ig.Entity.COLLIDES.NEVER,
    'canSelect': !0x1,
    'canSelectTimerDuration': 0.35,
    'zIndex': 0x1869f,
    'isHovering': !0x1,
    'isSelected': !0x1,
    'init': function (_0x3c0080, _0x575575, _0x194f6f) {
      this.parent(_0x3c0080, _0x575575, _0x194f6f), this.canSelectTimer = new ig.Timer(this.canSelectTimerDuration);
    },
    'doesClickableLayerExist': function (_0x4989df) {
      for (k in dynamicClickableEntityDivs) if (k == _0x4989df) return !0x0;
      return !0x1;
    },
    'checkClickableLayer': function (_0x4e13d2, _0x5c5e83, _0x398ff3) {
      'undefined' == typeof wm && (this.doesClickableLayerExist(_0x4e13d2) ? (ig.game.showOverlay([_0x4e13d2]), $('#' + _0x4e13d2).find('[href]').attr('href', _0x5c5e83)) : this.createClickableOutboundLayer(_0x4e13d2, _0x5c5e83, 'media/graphics/misc/invisible.png', _0x398ff3));
    },
    'createClickableOutboundLayer': function (_0x36f889, _0xbe6a3, _0x590a4b, _0x525272) {
      var _0x49470b = ig.$new('div');
      _0x49470b.id = _0x36f889, document.body.appendChild(_0x49470b), $('#' + _0x49470b.id).css('float', 'left'), $('#' + _0x49470b.id).css('width', this.size.x * multiplier), $('#' + _0x49470b.id).css('height', this.size.y * multiplier), $('#' + _0x49470b.id).css('position', 'absolute');
      var _0x5d2700 = w / 0x2 - destW / 0x2,
        _0x18c50e = h / 0x2 - destH / 0x2;
      w == mobileWidth ? ($('#' + _0x49470b.id).css('left', this.pos.x), $('#' + _0x49470b.id).css('top', this.pos.y)) : ($('#' + _0x49470b.id).css('left', _0x5d2700 + this.pos.x * multiplier), $('#' + _0x49470b.id).css('top', _0x18c50e + this.pos.y * multiplier)), _0x525272 ? $('#' + _0x49470b.id).html("<a target='_blank' href='" + _0xbe6a3 + "'><img style='width:100%;height:100%' src='" + _0x590a4b + "'></a>") : $('#' + _0x49470b.id).html("<a href='" + _0xbe6a3 + "'><img style='width:100%;height:100%' src='" + _0x590a4b + "'></a>"), dynamicClickableEntityDivs[_0x36f889] = {}, dynamicClickableEntityDivs[_0x36f889].width = $('#' + _0x49470b.id).width(), dynamicClickableEntityDivs[_0x36f889].height = $('#' + _0x49470b.id).height(), dynamicClickableEntityDivs[_0x36f889].entity_pos_x = this.pos.x, dynamicClickableEntityDivs[_0x36f889].entity_pos_y = this.pos.y;
    },
    'hovered': function () {
      this.isHovering = !0x0, this.dehoverOthers();
    },
    'dehoverOthers': function () {
      var _0x574144 = ig.game.getEntitiesByType(EntitySelect);
      for (i = 0x0; i < _0x574144.length; i++) _0x574144[i] != this && (_0x574144[i].isHovering = !0x1);
    },
    'deselectOthers': function () {
      var _0x591ab7 = ig.game.getEntitiesByType(EntitySelect);
      for (i = 0x0; i < _0x591ab7.length; i++) _0x591ab7[i] != this && (_0x591ab7[i].isSelected = !0x1);
    },
    'update': function () {
      this.parent(), this.canSelectTimer && 0x0 < this.canSelectTimer.delta() && (this.canSelect = !0x0, this.canSelectTimer = null);
    }
  });
}), ig.baked = !0x0, ig.module('game.transitions.grid').defines(function () {
  Grid = ig.Class.extend({
    'init': function () {
      this.gridPos = {
        'x': 0x0,
        'y': 0x0
      }, this.gridHSpeed = -0x64, this.gridVSpeed = 0x14, this.gridWidth = 0x514, this.gridHeight = 0x320, this.prevAlpha = 0x1, this.gradientColorStop1 = '#38AEF8', this.gradientColorStop2 = '#8EDDFE';
    },
    'update': function () {
      this.gridPos.x += ig.system.tick * this.gridHSpeed, this.gridPos.y += ig.system.tick * this.gridVSpeed, this.gridPos.x < -this.gridWidth && (this.gridPos.x += this.gridWidth), this.gridPos.y > this.gridHeight && (this.gridPos.y -= this.gridHeight);
    },
    'draw': function (_0x52783d, _0x5f1369) {
      this.prevAlpha = ig.system.context.globalAlpha, ig.system.context.globalAlpha = _0x52783d, _0x5f1369.draw(this.gridPos.x, this.gridPos.y), _0x5f1369.draw(this.gridPos.x + this.gridWidth, this.gridPos.y), _0x5f1369.draw(this.gridPos.x, this.gridPos.y - this.gridHeight), _0x5f1369.draw(this.gridPos.x + this.gridWidth, this.gridPos.y - this.gridHeight), ig.system.context.globalAlpha = this.prevAlpha;
    }
  });
}), ig.baked = !0x0, ig.module('game.data.level-data').defines(function () {
  LevelData = ig.Class.extend({
    'road': {
      'LENGTH': {
        'NONE': 0x0,
        'SHORT': 0x19,
        'MEDIUM': 0x32,
        'LONG': 0x50
      },
      'HILL': {
        'NONE': 0x0,
        'LOW': 0xa,
        'MEDIUM': 0x14,
        'HIGH': 0x1e
      },
      'CURVE': {
        'NONE': 0x0,
        'EASY': 0x2,
        'MEDIUM': 0x4,
        'HARD': 0x6
      }
    },
    'speedUpSizeOffset': 0.28,
    'levelData': [],
    'enabledTracks': [0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa],
    'track1': [[0xa, 0x0, 0x0], [0x19, 0x0, 0x0], [0x19, -0x4, 0xa], [0x32, 0x4, 0x0], [0x19, 0x4, -0x14], [0x19, -0x4, 0xa], [0x19, 0x4, 0xa], [0x19, -0x4, 0x0], [0x19, -0x4, -0x14], [0x19, 0x4, 0xa], [0x19, 0x0, 0x0]],
    'track2': [[0xa, 0x0, 0x0], [0x19, 0x0, 0x0], [0x32, -0x4, 0x1e], [0x32, 0x4, -0xa], [0x19, 0x0, -0xa], [0x32, -0x2, 0x14], [0x32, 0x6, -0xa], [0x19, 0x2, -0xa], [0x32, -0x4, 0xa], [0x19, 0x4, 0xa], [0x32, -0x2, -0x1e]],
    'track3': [[0xa, 0x0, 0x0], [0x19, 0x0, -0x1e], [0x32, 0x2, 0x1e], [0x32, -0x2, 0x1e], [0x19, -0x2, -0x1e], [0x19, 0x0, -0x1e], [0x19, 0x2, 0x1e], [0x32, -0x2, 0x1e], [0x32, 0x6, -0x1e], [0x19, 0x6, -0x1e], [0x32, -0x6, 0x1e], [0x32, -0x4, 0x14], [0x19, 0x0, -0x1e], [0x32, 0x2, 0xa]],
    'track4': [[0xa, 0x0, 0x0], [0x19, 0x0, -0x1e], [0x19, 0x2, 0x1e], [0x32, 0x4, -0x1e], [0x32, -0x2, 0x1e], [0x32, 0x2, -0x1e], [0x32, -0x6, 0x1e], [0x32, 0x6, -0x1e], [0x32, -0x6, 0x1e], [0x32, -0x4, 0x0], [0x32, 0x6, 0x1e], [0x19, -0x2, -0x1e]],
    'track5': [[0xa, 0x0, 0x0], [0x19, 0x2, 0xa], [0x19, 0x2, 0x1e], [0x32, -0x4, 0x1e], [0x32, 0x4, -0x1e], [0x50, 0x4, -0x1e], [0x32, -0x6, 0x1e], [0x19, -0x6, 0x1e], [0x32, 0x6, -0x1e], [0x19, -0x4, 0x14], [0x32, -0x6, -0x1e], [0x32, 0x2, -0x1e]],
    'track6': [[0xa, 0x0, 0x0], [0x19, -0x2, 0x14], [0x19, -0x6, 0x0], [0x19, -0x6, -0x14], [0x32, 0x6, -0x14], [0x19, 0x4, 0x0], [0x19, -0x6, 0xa], [0x32, 0x6, 0x1e], [0x19, -0x4, -0xa], [0x19, 0x6, -0x14], [0x19, -0x6, 0x0], [0x32, -0x6, -0x14], [0x19, 0x2, 0x1e], [0x32, 0x6, -0xa], [0x19, -0x6, 0xa]],
    'track7': [[0xa, 0x0, 0x0], [0x19, 0x2, 0xa], [0x19, 0x4, 0x14], [0x32, -0x4, 0x0], [0x19, -0x4, -0xa], [0x19, -0x2, -0x1e], [0x19, 0x6, 0x1e], [0x32, 0x4, -0x1e], [0x19, -0x4, 0x0], [0x19, -0x6, 0x0], [0x19, 0x6, 0x0], [0x32, 0x6, -0x14], [0x19, -0x6, 0x1e], [0x19, -0x6, -0x14], [0x19, 0x6, 0x1e], [0x32, -0x4, -0xa]],
    'track8': [[0xa, 0x0, 0x0], [0x19, -0x2, 0x14], [0x19, -0x6, -0x1e], [0x19, -0x6, 0xa], [0x32, 0x6, -0x14], [0x19, 0x4, 0x1e], [0x19, -0x6, -0xa], [0x32, 0x6, 0x1e], [0x19, 0x4, -0x1e], [0x50, -0x6, 0x14], [0x19, 0x4, -0x14], [0x19, -0x6, 0xa], [0x50, 0x6, -0xa], [0x19, -0x6, 0x14], [0x19, -0x6, -0x14]],
    'track9': [[0xa, 0x0, 0x0], [0x19, 0x4, 0x0], [0x32, -0x4, 0x1e], [0x50, 0x6, 0x0], [0x50, -0x6, -0x14], [0x32, 0x6, 0x14], [0x19, -0x4, 0x14], [0x19, -0x6, 0x14], [0x50, 0x6, -0x1e], [0x19, -0x4, 0x0], [0x19, -0x6, -0x14], [0x19, -0x6, -0x14], [0x19, 0x2, 0x14], [0x32, -0x2, -0x14]],
    'track10': [[0xa, 0x0, 0x0], [0x19, -0x6, 0x14], [0x19, 0x4, 0x1e], [0x19, -0x2, 0xa], [0x32, 0x6, -0x1e], [0x19, -0x6, -0x1e], [0x19, -0x4, -0x14], [0x32, -0x6, 0x0], [0x50, 0x6, 0xa], [0x19, -0x6, -0x14], [0x32, 0x6, 0xa], [0x32, -0x6, -0xa], [0x19, -0x6, 0x0], [0x19, 0x6, 0x14], [0x19, 0x4, 0xa]],
    'trackDefault': [[0x19, 0x0, 0x0], [0x19, 0x0, 0x0], [0x19, 0x0, 0x0], [0x19, 0x0, 0x0]],
    'speedUpStartingSegmentSpawnPos': 0x78,
    'speedUpSegmentSpawnDistance': 0x6e,
    'fuelStartingSegmentPos': 0xb4,
    'fuelSegmentSpawnDistance': 0xb4,
    'init': function () {
      this.segmentLength = 0xc8, this.roadRotation = 0x0, this.groundSlice = 0x10, this.groundSliceCount = 0x0, this.initLevels();
    },
    'initLevels': function () {
      for (var _0x14e328 = 0x0; _0x14e328 < this.enabledTracks.length; _0x14e328++) this.initLevel(this.enabledTracks[_0x14e328]);
    },
    'getTotalEnabledTracks': function () {
      return this.enabledTracks.length;
    },
    'resetTempData': function () {
      this.tempSegments = [], this.groundSliceCount = this.roadRotation = 0x0, this.tempEndLineDistance = this.tempEndLineSegment = null, this.tempTrackLength = 0x0;
    },
    'initLevel': function (_0xd4c67) {
      var _0x554b95 = {};
      this.resetTempData(), this.initRoad(_0xd4c67), _0x554b95.segments = this.tempSegments, _0x554b95.endLineSegment = this.tempEndLineSegment, _0x554b95.endLineDistance = this.tempEndLineDistance, _0x554b95.trackLength = this.tempTrackLength, this.levelData.push(_0x554b95);
    },
    'initRoad': function (_0x356704) {
      _0x356704 = this['track' + _0x356704], null == _0x356704 && (_0x356704 = this.trackDefault);
      for (var _0x259911, _0x14d042 = 0x0; _0x14d042 < _0x356704.length; _0x14d042++) _0x259911 = _0x356704[_0x14d042], this.addSegmentData(_0x259911[0x0], _0x259911[0x1], _0x259911[0x2]);
      this.setEndLineSegment(), this.tempTrackLength = this.tempSegments.length * this.segmentLength;
    },
    'initSpeedUp': function () {
      for (var _0x1dff73 = this.speedUpStartingSegmentSpawnPos; _0x1dff73 < this.tempEndLineSegment.index; _0x1dff73 += this.speedUpSegmentSpawnDistance) this.addSpeedUp(_0x1dff73, -0.5 + Math.random(0x64));
    },
    'addSegmentData': function (_0x6b3a76, _0xe14abf, _0x3b6415) {
      this.addRoad(_0x6b3a76, _0x6b3a76, _0x6b3a76, _0xe14abf, _0x3b6415);
    },
    'addStraight': function (_0x4183f2) {
      _0x4183f2 = _0x4183f2 || this.road.LENGTH.MEDIUM, this.addRoad(_0x4183f2, _0x4183f2, _0x4183f2, 0x0);
    },
    'addHillCurve': function (_0x111e37, _0x4f1467, _0x161d1d) {
      _0x111e37 = _0x111e37 || this.road.LENGTH.MEDIUM, _0x4f1467 = _0x4f1467 || this.road.CURVE.MEDIUM, this.addRoad(_0x111e37, _0x111e37, _0x111e37, _0x4f1467, _0x161d1d || 0x0);
    },
    'addHill': function (_0x583052, _0x2bc2f0) {
      _0x583052 = _0x583052 || this.road.LENGTH.MEDIUM, _0x2bc2f0 = _0x2bc2f0 || this.road.HILL.MEDIUM, this.addRoad(_0x583052, _0x583052, _0x583052, 0x0, _0x2bc2f0);
    },
    'addCurve': function (_0x46487e, _0x52a4ef) {
      _0x46487e = _0x46487e || this.road.LENGTH.MEDIUM, _0x52a4ef = _0x52a4ef || this.road.CURVE.MEDIUM, this.addRoad(_0x46487e, _0x46487e, _0x46487e, _0x52a4ef);
    },
    'addDownhillToEnd': function (_0x222fea) {
      _0x222fea = _0x222fea || 0xc8, this.addRoad(_0x222fea, _0x222fea, _0x222fea, -this.road.CURVE.EASY, -this.lastY() / this.segmentLength);
    },
    'addLowRollingHills': function (_0x374357, _0x5b4d41) {
      _0x374357 = _0x374357 || this.road.LENGTH.SHORT, _0x5b4d41 = _0x5b4d41 || this.road.HILL.LOW, this.addRoad(_0x374357, _0x374357, _0x374357, 0x0, _0x5b4d41 / 0x2), this.addRoad(_0x374357, _0x374357, _0x374357, 0x0, -_0x5b4d41), this.addRoad(_0x374357, _0x374357, _0x374357, 0x0, _0x5b4d41), this.addRoad(_0x374357, _0x374357, _0x374357, 0x0, 0x0), this.addRoad(_0x374357, _0x374357, _0x374357, 0x0, _0x5b4d41 / 0x2), this.addRoad(_0x374357, _0x374357, _0x374357, 0x0, 0x0);
    },
    'addSCurves': function () {
      this.addRoad(this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, -this.road.CURVE.EASY), this.addRoad(this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, this.road.CURVE.MEDIUM), this.addRoad(this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, this.road.CURVE.EASY), this.addRoad(this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, -this.road.CURVE.EASY), this.addRoad(this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, this.road.LENGTH.MEDIUM, -this.road.CURVE.MEDIUM);
    },
    'addRoad': function (_0x19c8e7, _0x58ab0c, _0x403b21, _0xb5600, _0x173deb) {
      var _0x16368c = this.lastY();
      _0x173deb = _0x16368c + this.toInt(_0x173deb, 0x0) * this.segmentLength;
      var _0x12fba7,
        _0x5a9908 = _0x19c8e7 + _0x58ab0c + _0x403b21;
      for (_0x12fba7 = 0x0; _0x12fba7 < _0x19c8e7; _0x12fba7++) this.addSegment(this.easeIn(0x0, _0xb5600, _0x12fba7 / _0x19c8e7), this.easeInOut(_0x16368c, _0x173deb, _0x12fba7 / _0x5a9908));
      for (_0x12fba7 = 0x0; _0x12fba7 < _0x58ab0c; _0x12fba7++) this.addSegment(_0xb5600, this.easeInOut(_0x16368c, _0x173deb, (_0x19c8e7 + _0x12fba7) / _0x5a9908));
      for (_0x12fba7 = 0x0; _0x12fba7 < _0x403b21; _0x12fba7++) this.addSegment(this.easeInOut(_0xb5600, 0x0, _0x12fba7 / _0x403b21), this.easeInOut(_0x16368c, _0x173deb, (_0x19c8e7 + _0x58ab0c + _0x12fba7) / _0x5a9908));
    },
    'addSpeedUp': function (_0x23cc8d, _0x24e828) {
      _0x23cc8d -= 0x5;
      if (this.tempSegments.length > _0x23cc8d + 0x3) {
        for (var _0x578e11 = 0x0; 0x5 > _0x578e11; _0x578e11++) this.tempSegments[_0x23cc8d + _0x578e11].speedUpData.enabled = !0x0, this.tempSegments[_0x23cc8d + _0x578e11].speedUpData.sliceCount = 0x4 - _0x578e11, this.tempSegments[_0x23cc8d + _0x578e11].speedUpData.offset = _0x24e828, this.tempSegments[_0x23cc8d + _0x578e11].speedUpData.minOffset = _0x24e828 - this.speedUpSizeOffset, this.tempSegments[_0x23cc8d + _0x578e11].speedUpData.maxOffset = _0x24e828 + this.speedUpSizeOffset;
      }
    },
    'addSpeedUp2': function (_0x1c49b3, _0x57b52e, _0x18912d) {
      _0x1c49b3 -= 0x5;
      for (var _0x497257 = 0x0; 0x5 > _0x497257; _0x497257++) _0x18912d[_0x1c49b3 + _0x497257].speedUpData.enabled = !0x0, _0x18912d[_0x1c49b3 + _0x497257].speedUpData.sliceCount = 0x4 - _0x497257, _0x18912d[_0x1c49b3 + _0x497257].speedUpData.offset = _0x57b52e, _0x18912d[_0x1c49b3 + _0x497257].speedUpData.minOffset = _0x57b52e - this.speedUpSizeOffset, _0x18912d[_0x1c49b3 + _0x497257].speedUpData.maxOffset = _0x57b52e + this.speedUpSizeOffset;
    },
    'addSegment': function (_0x4f0f4f, _0x1686ed) {
      var _0x188a21 = this.tempSegments.length;
      this.roadRotation += 0.24544562015 * _0x4f0f4f, this.tempSegments.push({
        'index': _0x188a21,
        'p1': {
          'world': {
            'y': this.lastY(),
            'z': _0x188a21 * this.segmentLength
          },
          'camera': {},
          'screen': {}
        },
        'p2': {
          'world': {
            'y': _0x1686ed,
            'z': (_0x188a21 + 0x1) * this.segmentLength
          },
          'camera': {},
          'screen': {}
        },
        'sprites': [],
        'cars': [],
        'smokes': [],
        'speedups': [],
        'collectibles': [],
        'curve': _0x4f0f4f,
        'segmentRotation': this.roadRotation,
        'groundSliceCount': this.groundSliceCount,
        'speedUpData': {
          'enabled': !0x1,
          'sliceCount': 0x0,
          'offset': 0x0
        }
      }), this.groundSliceCount--, 0x0 > this.groundSliceCount && (this.groundSliceCount = this.groundSlice - 0x1);
    },
    'setEndLineSegment': function () {
      this.tempEndLineSegment = this.tempSegments[this.tempSegments.length - 0x1], this.tempEndLineDistance = this.tempEndLineSegment.index * this.segmentLength;
    },
    'lastY': function () {
      return 0x0 == this.tempSegments.length ? 0x0 : this.tempSegments[this.tempSegments.length - 0x1].p2.world.y;
    },
    'toInt': function (_0x3678cd, _0x3434f7) {
      if (null !== _0x3678cd) {
        var _0x361f05 = parseInt(_0x3678cd, 0xa);
        if (!isNaN(_0x361f05)) return _0x361f05;
      }
      return this.toInt(_0x3434f7, 0x0);
    },
    'easeIn': function (_0x2408d2, _0x542a32, _0xdb5403) {
      return _0x2408d2 + (_0x542a32 - _0x2408d2) * Math.pow(_0xdb5403, 0x2);
    },
    'easeOut': function (_0x115e2c, _0x4084a0, _0x4178f0) {
      return _0x115e2c + (_0x4084a0 - _0x115e2c) * (0x1 - Math.pow(0x1 - _0x4178f0, 0x2));
    },
    'easeInOut': function (_0x14518b, _0x172e05, _0x5c80b1) {
      return _0x14518b + (_0x172e05 - _0x14518b) * (-Math.cos(_0x5c80b1 * Math.PI) / 0x2 + 0.5);
    },
    'getFixedPRN': function (_0x9dccf1, _0xfbdce6) {
      var _0x4c1b3f = 0x64 * _0x9dccf1 + _0xfbdce6 + 0x6d2b79f5,
        _0x4c1b3f = Math.imul(_0x4c1b3f ^ _0x4c1b3f >>> 0xf, _0x4c1b3f | 0x1),
        _0x4c1b3f = _0x4c1b3f ^ _0x4c1b3f + Math.imul(_0x4c1b3f ^ _0x4c1b3f >>> 0x7, _0x4c1b3f | 0x3d);
      return ((_0x4c1b3f ^ _0x4c1b3f >>> 0xe) >>> 0x0) / 0x100000000;
    },
    'getLevelData': function (_0x32eb41) {
      if (_0x32eb41 <= this.levelData.length && 0x0 < _0x32eb41) {
        _0x32eb41 = this.levelData[_0x32eb41 - 0x1];
        for (var _0x162a13 = {
            'segments': [],
            'endLineSegment': null,
            'endLineDistance': null,
            'trackLength': 0x0
          }, _0x438695 = 0x0; _0x438695 < _0x32eb41.segments.length; _0x438695++) _0x162a13.segments.push({
          'index': _0x438695,
          'p1': {
            'world': {
              'y': _0x32eb41.segments[_0x438695].p1.world.y,
              'z': _0x32eb41.segments[_0x438695].p1.world.z
            },
            'camera': {},
            'screen': {}
          },
          'p2': {
            'world': {
              'y': _0x32eb41.segments[_0x438695].p2.world.y,
              'z': _0x32eb41.segments[_0x438695].p2.world.z
            },
            'camera': {},
            'screen': {}
          },
          'sprites': [],
          'cars': [],
          'smokes': [],
          'speedups': [],
          'collectibles': [],
          'curve': _0x32eb41.segments[_0x438695].curve,
          'segmentRotation': _0x32eb41.segments[_0x438695].segmentRotation,
          'groundSliceCount': _0x32eb41.segments[_0x438695].sliceCount,
          'speedUpData': {
            'enabled': !0x1,
            'sliceCount': 0x0,
            'offset': 0x0
          }
        });
        return _0x162a13.endLineSegment = _0x162a13.segments[_0x162a13.segments.length - 0x1], _0x162a13.endLineDistance = _0x32eb41.endLineDistance, _0x162a13.trackLength = _0x32eb41.trackLength, _0x162a13;
      }
      return null;
    },
    'resetSegments': function (_0x1e760f) {
      for (var _0x5e32ab = 0x0; _0x5e32ab < _0x1e760f.length; _0x5e32ab++) _0x1e760f[_0x5e32ab].sprites = [], _0x1e760f[_0x5e32ab].cars = [], _0x1e760f[_0x5e32ab].smokes = [], _0x1e760f[_0x5e32ab].speedups = [], _0x1e760f[_0x5e32ab].collectibles = [];
    },
    'copyLevel': function (_0x4e095d, _0x243005) {
      var _0xb6e5d8 = {
          'segments': [],
          'endLineSegment': null,
          'endLineDistance': null,
          'trackLength': 0x0
        },
        _0x13a604 = _0x243005.groundSliceCount;
      _0x13a604--, 0x0 > _0x13a604 && (_0x13a604 = this.groundSlice - 0x1);
      for (var _0x32f764 = 0x0; _0x32f764 < _0x4e095d.segments.length; _0x32f764++) _0xb6e5d8.segments.push({
        'index': _0x243005.index + 0x1 + _0x32f764,
        'p1': {
          'world': {
            'y': _0x243005.p2.world.y + _0x4e095d.segments[_0x32f764].p1.world.y,
            'z': _0x243005.p2.world.z + _0x32f764 * this.segmentLength
          },
          'camera': {},
          'screen': {}
        },
        'p2': {
          'world': {
            'y': _0x243005.p2.world.y + _0x4e095d.segments[_0x32f764].p2.world.y,
            'z': _0x243005.p2.world.z + (_0x32f764 + 0x1) * this.segmentLength
          },
          'camera': {},
          'screen': {}
        },
        'sprites': [],
        'cars': [],
        'smokes': [],
        'speedups': [],
        'collectibles': [],
        'curve': _0x4e095d.segments[_0x32f764].curve + _0x243005.curve,
        'segmentRotation': _0x4e095d.segments[_0x32f764].segmentRotation + _0x243005.segmentRotation,
        'groundSliceCount': _0x13a604,
        'speedUpData': {
          'enabled': !0x1,
          'sliceCount': 0x0,
          'offset': 0x0
        }
      });
      return _0xb6e5d8.endLineSegment = _0xb6e5d8.segments[_0xb6e5d8.segments.length - 0x1], _0xb6e5d8.endLineDistance = _0x4e095d.endLineDistance, _0xb6e5d8.trackLength = _0x4e095d.trackLength, _0xb6e5d8;
    },
    'getNextLevel': function (_0xbb38b0, _0x526d45) {
      return this.copyLevel(this.levelData[_0xbb38b0 - 0x1], _0x526d45);
    },
    'initSpeedUpPlatform': function (_0x3e7344, _0x2b4519) {
      for (var _0x1a159a = _0x2b4519; _0x1a159a < _0x3e7344.length; _0x1a159a++) _0x1a159a < this.speedUpStartingSegmentSpawnPos || 0x0 == (_0x1a159a - this.speedUpStartingSegmentSpawnPos) % this.speedUpSegmentSpawnDistance && this.addSpeedUp2(_0x1a159a, -0.5 + Math.random(), _0x3e7344);
    },
    'getFuelSpawnPoints': function (_0x3332a3, _0x19ac9a) {
      return this.getSpawnPoints(_0x3332a3, _0x19ac9a, this.fuelStartingSegmentPos, this.fuelSegmentSpawnDistance);
    },
    'getCoinSpawnPoints': function (_0x45b767, _0x16016d) {
      var _0x344038 = ig.randomInt(0xe6, 0x10e);
      return this.getSpawnPoints(_0x45b767, _0x16016d, _0x344038, this.fuelSegmentSpawnDistance);
    },
    'getSpawnPoints': function (_0x47e555, _0x5b407a, _0xb731ec, _0x223c14) {
      for (var _0x579a0c = []; _0x5b407a < _0x47e555; _0x5b407a++) 0x0 == (_0x5b407a - _0xb731ec) % _0x223c14 && 0x0 <= _0x5b407a - _0xb731ec && _0x579a0c.push(_0x5b407a);
      return _0x579a0c;
    }
  });
}), ig.baked = !0x0, ig.module('game.data.cars-data').requires('plugins.secure-ls').defines(function () {
  CarsData = ig.Class.extend({
    'enemies': [{
      'name': 'kong',
      'price': 0x0
    }],
    'special': [{
      'name': 'mari',
      'price': 0xfa
    }, {
      'name': 'lui',
      'price': 0x1f4
    }, {
      'name': 'shroom',
      'price': 0x2ee
    }, {
      'name': 'princess',
      'price': 0x3e8
    }, {
      'name': 'daisy',
      'price': 0x4e2
    }, {
      'name': 'toadie',
      'price': 0x5dc
    }, {
      'name': 'yosh',
      'price': 0x6d6
    }, {
      'name': 'kboo',
      'price': 0x7d0
    }, {
      'name': 'crawler',
      'price': 0x8ca
    }, {
      'name': 'red2',
      'price': 0x9c4
    }],
    'listCars': [],
    'items': {},
    'listGameImages': [],
    'listShopImages': [],
    'userIndex': 0x1,
    'numUnlockedCars': 0x0,
    'bonusUpgrade': {
      'speed': 0x0,
      'accel': 0x0,
      'fuel': 0x0,
      'handle': 0x0,
      'nitro': 0x0
    },
    'init': function () {
      ig.CarsData = this, this.listCars = this.enemies, 0x0 < this.special.length && (this.listCars = this.enemies.concat(this.special)), this.loadImages(), this.load_data(), this.items.blue = !0x0, this.setPlayerCar(ig.game.load('carID')), setTimeout(this.checkUnlockedItems.bind(this), 0x3e8);
    },
    'loadImages': function () {
      for (var _0x2b1706 = 0x0; _0x2b1706 < this.listCars.length; _0x2b1706++) {
        var _0x46f9e0 = this.listCars[_0x2b1706].name;
        this.listGameImages.push(new ig.Image('media/graphics/game/cars/' + _0x46f9e0 + '.png')), this.listShopImages.push(new ig.Image('media/graphics/ui/shop/' + _0x46f9e0 + '.png'));
      }
    },
    'checkUnlockedItems': function () {
      for (var _0x321a09 = 0x1; _0x321a09 < this.listCars.length; _0x321a09++) this.items[this.listCars[_0x321a09].name] && (this.numUnlockedCars++, ig.Lootbox.instantCard(_0x321a09 - 0x1));
    },
    'setPlayerCar': function (_0x3af179) {
      void 0x0 === _0x3af179 && (_0x3af179 = 0x0), this.userIndex = _0x3af179, ig.game.save('carID', _0x3af179);
    },
    'loadCar': function () {
      this.userIndex = ig.game.load('carID');
    },
    'unlockCar': function (_0x2c860f, _0x1b5f88) {
      !0x0 == this.items[this.getName(_0x2c860f)] ? _0x1b5f88 && _0x1b5f88() : (this.items[this.getName(_0x2c860f)] = !0x0, ig.Lootbox.giveFreeCard(_0x2c860f - 0x1, _0x1b5f88), this.numUnlockedCars++, this.checkAchievement());
    },
    'unlockAllCars': function () {
      for (var _0x1fcd2a = 0x0; _0x1fcd2a < this.listCars.length; _0x1fcd2a++) this.items[this.listCars[_0x1fcd2a].name] = !0x0;
      this.numUnlockedCars = this.getNumCars(), this.checkAchievement();
    },
    'checkAchievement': function () {
      for (var _0x4ae212 = 0x41; 0x4b > _0x4ae212; _0x4ae212++) ig.Achievement.setProgress(_0x4ae212, this.numUnlockedCars);
      this.save_data();
    },
    'setBonusUpgrade': function (_0x51cccf) {
      var _0x2a33aa = 0x0,
        _0x13e672 = 0x0,
        _0x63a067 = 0x0,
        _0x515ce4 = 0x0,
        _0x194196 = 0x0;
      0xa > _0x51cccf ? this.userIndex = _0x51cccf + 0x1 : this.loadCar();
      switch (_0x51cccf) {
        case 0xa:
          _0x13e672 = _0x2a33aa = 0x19;
          break;
        case 0xb:
          _0x63a067 = _0x2a33aa = 0x19;
          break;
        case 0xc:
          _0x13e672 = _0x515ce4 = 0x19;
          break;
        case 0xd:
          _0x194196 = _0x2a33aa = 0x19;
          break;
        case 0xe:
          _0x13e672 = _0x63a067 = 0x19;
          break;
        case 0xf:
          _0x515ce4 = _0x194196 = 0x19;
          break;
        case 0x10:
          _0x515ce4 = _0x2a33aa = 0x19;
          break;
        case 0x11:
          _0x13e672 = _0x194196 = 0x19;
          break;
        case 0x12:
          _0x194196 = _0x63a067 = 0x19;
          break;
        case 0x13:
          _0x515ce4 = _0x63a067 = 0x19;
      }
      this.bonusUpgrade = {
        'speed': _0x2a33aa / 0xa,
        'accel': _0x63a067 / 0xa,
        'fuel': _0x13e672 / 0xa,
        'handle': _0x515ce4 / 0xa,
        'nitro': _0x194196 / 0xa
      };
    },
    'getUpgradeProp': function (_0x5607fc) {
      var _0x34ddea = 0x0;
      switch (_0x5607fc) {
        case 'speed':
        case 'nitro':
          _0x34ddea = 0.1 * ig.advSto.getUpgrade(_0x5607fc);
          break;
        case 'fuel':
          _0x34ddea = 0.3 * ig.advSto.getUpgrade(_0x5607fc);
          break;
        case 'handle':
        case 'accel':
          _0x34ddea = 0.2 * ig.advSto.getUpgrade(_0x5607fc);
      }
      return (_0x34ddea + this.bonusUpgrade[_0x5607fc]) / 0xa;
    },
    'isBuyable': function (_0x53c6b7) {
      return this.listCars[_0x53c6b7].price < ig.game.advStorage.getCoins();
    },
    'isCarLocked': function (_0x5becf2) {
      return this.items[this.listCars[_0x5becf2].name];
    },
    'getPlayerScale': function () {
      return this.listCars[this.userIndex].ps;
    },
    'getEnemyScale': function () {
      return this.listCars[this.userIndex].es;
    },
    'getSideCollision': function () {
      return this.listCars[this.userIndex].xl;
    },
    'getUserLength': function () {
      return this.listCars[this.userIndex].length;
    },
    'getUserWidth': function () {
      return this.listCars[this.userIndex].width;
    },
    'getPrice': function (_0x1b4608) {
      return this.listCars[_0x1b4608].price;
    },
    'getData': function () {
      return this.listCars;
    },
    'getCarData': function (_0x4b4254) {
      return this.listCars[_0x4b4254];
    },
    'getUserIndex': function () {
      return this.userIndex;
    },
    'getEnemySprites': function () {
      for (var _0x35642e = [], _0x488bc5 = 0x0; _0x488bc5 < this.enemies.length; _0x488bc5++) this.enemies[_0x488bc5].name != this.listCars[this.userIndex].name && _0x35642e.push(this.listGameImages[_0x488bc5]);
      return _0x35642e;
    },
    'getShopImage': function (_0x1384b5) {
      return this.listShopImages[_0x1384b5];
    },
    'getListCarsSprite': function () {
      return this.enemies.concat(this.special);
    },
    'getPlayerSprite': function () {
      return this.listGameImages[this.userIndex];
    },
    'getNumCars': function () {
      return this.listCars.length;
    },
    'getName': function (_0x396178) {
      return this.listCars[_0x396178].name;
    },
    'getUserCarName': function () {
      return this.listCars[this.userIndex].name;
    },
    'save_data': function () {
      var _0xccf4d9 = JSON.stringify(this.items);
      ig.ls.set(this.saveName, _0xccf4d9);
    },
    'load_data': function () {
      ig.ls || (ig.ls = new SecureLS({
        'encodingType': 'aes'
      })), this.saveName || (this.saveName = this.hash(ig.game.name + '-cars-data').replace('-', 's'));
      var _0x53c797 = ig.ls.get(this.saveName);
      '' == _0x53c797 ? this.clear_data() : (this.items = JSON.parse(_0x53c797), this.updateData());
    },
    'clear_data': function () {
      for (var _0x1b75dc = 0x0; _0x1b75dc < this.listCars.length; _0x1b75dc++) {
        var _0x3ed5e4 = this.listCars[_0x1b75dc];
        this.items[_0x3ed5e4.name] = !0x1, 0x1 > _0x3ed5e4.price && (this.items[_0x3ed5e4.name] = !0x0);
      }
      this.save_data();
    },
    'updateData': function () {
      for (var _0x4846e9 = 0x0; _0x4846e9 < this.listCars.length; _0x4846e9++) {
        var _0x29be02 = this.listCars[_0x4846e9];
        this.items[_0x29be02.name] || (this.items[_0x29be02.name] = !0x1), 0x1 > _0x29be02.price && (this.items[_0x29be02.name] = !0x0);
      }
    },
    'hash': function (_0x67a555) {
      var _0x11c3c4 = 0x0,
        _0x16d013,
        _0x31da68;
      if (0x0 === _0x67a555.length) return _0x11c3c4;
      for (_0x16d013 = 0x0; _0x16d013 < _0x67a555.length; _0x16d013++) _0x31da68 = _0x67a555.charCodeAt(_0x16d013), _0x11c3c4 = (_0x11c3c4 << 0x5) - _0x11c3c4 + _0x31da68, _0x11c3c4 |= 0x0;
      return _0x11c3c4.toString(0x24);
    }
  });
}), ig.baked = !0x0, ig.module('game.data.advanced-storage').requires('plugins.secure-ls').defines(function () {
  ig.AdvancedStorage = ig.Class.extend({
    'data': {
      'coins': 0x0,
      'totalCoinsCollected': 0x0,
      'totalFuelCollected': 0x0,
      'numPlay': 0x0,
      'cars': {},
      'distance': 0x0,
      'upgrade': {
        'speed': 0x0,
        'accel': 0x0,
        'fuel': 0x0,
        'handle': 0x0,
        'nitro': 0x0
      },
      'maxUpgrade': 0x32
    },
    'saveName': null,
    'currentData': null,
    'init': function () {
      ig.advSto = this, this.load_data();
    },
    'addCoins': function (_0x350900) {
      this.currentData.coins += _0x350900, this.save_data();
    },
    'reduceCoins': function (_0x2d4a80) {
      if (0x0 > this.currentData.coins - _0x2d4a80) return !0x1;
      return this.currentData.coins -= _0x2d4a80, this.save_data(), !0x0;
    },
    'increaseUpgrade': function (_0x456544) {
      this.currentData.upgrade[_0x456544]++, this.save_data();
    },
    'getMaxUpgrade': function () {
      return this.currentData.maxUpgrade;
    },
    'checkUpgradeLimit': function (_0x2a4c33) {
      return this.currentData.upgrade[_0x2a4c33] >= this.currentData.maxUpgrade;
    },
    'getCoins': function () {
      return this.currentData.coins;
    },
    'getUpgrade': function (_0x892f3f) {
      return this.currentData.upgrade[_0x892f3f];
    },
    'checkDistance': function (_0x3cff75) {
      if (!(_0x3cff75 < this.currentData.distance)) {
        this.currentData.distance = _0x3cff75;
        for (_0x3cff75 = 0xf; 0x41 > _0x3cff75; _0x3cff75++) ig.Achievement.setProgress(_0x3cff75, this.currentData.distance);
        this.save_data();
      }
    },
    'coinCollected': function () {
      this.currentData.totalCoinsCollected++;
      for (var _0x2ba5f7 = 0x4b; 0x5a > _0x2ba5f7; _0x2ba5f7++) ig.Achievement.setProgress(_0x2ba5f7, this.currentData.totalCoinsCollected);
      this.save_data(), this.addCoins(0x1);
    },
    'fuelCollected': function () {
      this.currentData.totalFuelCollected++;
      for (var _0x3eaa74 = 0x5a; 0x64 > _0x3eaa74; _0x3eaa74++) ig.Achievement.setProgress(_0x3eaa74, this.currentData.totalFuelCollected);
      this.save_data();
    },
    'increasePlayLog': function () {
      this.currentData.numPlay++;
      for (var _0x37adff = 0x0; 0xf > _0x37adff; _0x37adff++) ig.Achievement.setProgress(_0x37adff, this.currentData.numPlay);
      this.save_data();
    },
    'save_data': function () {
      var _0x5aebd1 = JSON.stringify(this.currentData);
      ig.ls.set(this.saveName, _0x5aebd1);
    },
    'load_data': function () {
      ig.ls || (ig.ls = new SecureLS({
        'encodingType': 'aes'
      })), this.saveName || (this.saveName = this.hash(ig.game.name + '-advanced-storage').replace('-', 's'));
      var _0x5a513e = ig.ls.get(this.saveName);
      '' == _0x5a513e ? this.clear_data() : this.currentData = JSON.parse(_0x5a513e);
    },
    'clear_data': function () {
      this.currentData = this.data, this.save_data();
    },
    'hash': function (_0x362aca) {
      var _0x16ceaa = 0x0,
        _0x3a6413,
        _0x16320e;
      if (0x0 === _0x362aca.length) return _0x16ceaa;
      for (_0x3a6413 = 0x0; _0x3a6413 < _0x362aca.length; _0x3a6413++) _0x16320e = _0x362aca.charCodeAt(_0x3a6413), _0x16ceaa = (_0x16ceaa << 0x5) - _0x16ceaa + _0x16320e, _0x16ceaa |= 0x0;
      return _0x16ceaa.toString(0x24);
    }
  });
}), ig.baked = !0x0, ig.module('game.utilities.name-and-avatar').defines(function () {
  NameAndAvatar = ig.Class.extend({
    'BOT_NAMES': "Adam amanda19 ashley91 Astroboy Ava Bender Brian bubbles C-3PO caroline cody95 DaviD DIANE Dracoola EDI eric108 EVE F3LIX GLaDOS HAL-9000 james07 jeanxo Jessica Johnny5 JoycE julie404 KAT13 KEVIN Kira KITT lisa michael nic0le nich0las REbEcCa rose RuSSeLL scott SHODAN Siri steven Teddy Tedomi THOR tinacook WALL-E Zorro Abe Abraham Abigail Alex Alexander Adelaide Arch Archie Allie Alice Augustus Barbara Bart Bartholomew Becky Cager Bella Isabella Chan Elizabeth Con Cornelius Beth Cuddy Betty Cyrus Richard Derrick Barney Sabrina Robert Carrie Dyer Cassie Cassandra Cindy Cynthia Luciana Fanny Nathaniel Clara Clarinda Fate Cleophas Fred Frederick Connie Constance Eugene Crece Gus August Harold Henry Philadelphia Hamilton Damaris Hank Dolly Dorothy Harry Theodosia Edie Isaac Ellen Eleanor Jack Jackson John Jacob Marietta Jeremy Jerry Gerald Jude Frankie Frances Flora Hezekiah Kit Christopher Larry Lawrence Virginia Malcolm Nate Edwin Edward Harriet Newton Ollie Oliver Hermione Patrick Aquilla Quill Jenny Jane Janet Rias Zachariah Judy Sandy Julie Julia Kate Kathleen Tad Christina Ming Kitty Azariah Ismael Virgil Theo William Angeline Wiley Olive Charlotte Lollie Amanda Mary Margaret Martha Amelia Jemima Mini Anna Agnes Helen Nancy Joan Phil Rana Ratna Monica Irene Cecily Susan Susannah Natalie Zaha Song Dijk Dipsi Lala Karim Paul Whyne Riawan Ridwan Kamil".split(" "),
    'NO_AVAILABLE_NAME': "NO AVAILABLE NAME",
    'init': function () {
      this.resetAvailableNames();
    },
    'resetAvailableNames': function () {
      this.availableNameIndex = [];
      for (var _0x3baa28 = 0x0; _0x3baa28 < this.BOT_NAMES.length; _0x3baa28++) this.availableNameIndex.push(_0x3baa28);
    },
    'getRandomName': function () {
      return this.BOT_NAMES[Math.floor(Math.random() * this.BOT_NAMES.length)];
    },
    'getNonRepeatingRandomName': function () {
      if (0x0 < this.availableNameIndex.length) {
        randomIndex = Math.floor(Math.random() * this.availableNameIndex.length);
        var _0x5b0a9f = this.BOT_NAMES[this.availableNameIndex[randomIndex]];
        return this.availableNameIndex.splice(randomIndex, 0x1), _0x5b0a9f;
      }
      return this.NO_AVAILABLE_NAME;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.opening-marketjs-logo').requires('impact.entity').defines(function () {
  EntityOpeningMarketJSLogo = ig.Entity.extend({
    'objects': [],
    'letterM': null,
    'logoShield': null,
    'text': null,
    'localTweens': [],
    'logoOriX': 0x0,
    'logoOriY': 0x0,
    'textOriX': 0x0,
    'textOriY': 0x0,
    'logoCanvas': null,
    'init': function (_0x1ed8ee, _0x46ff07, _0x363245) {
      this.parent(_0x1ed8ee, _0x46ff07, _0x363245), logoSize = 0x94 / 0x3c0 * Math.min(ig.system.width, ig.system.height), this.text = this.addObject('drawText', 0x0, 0x0, logoSize, logoSize), this.cover = this.addObject('drawCover', 0x0, 0x0, logoSize, logoSize), this.logoShield = this.addObject('drawLogoShield', 0x0, 0x0, logoSize, logoSize), this.letterM = this.addObject('drawLetterM', 0x0, 0x0, logoSize, logoSize), this.logoOriX = 0x0 - 2.2 * logoSize, this.logoOriY = 0x0, this.textOriX = 0x0 - 1.378 * logoSize, this.textOriY = 0x0 - 0.5 * logoSize, this.logoShield.x = 0x0, this.logoShield.y = 0x0, this.logoShield.scaleX = 0x0, this.logoShield.scaleY = 0x0, this.logoShield.alpha = 0x0, this.letterM.x = this.logoShield.x, this.letterM.y = this.logoShield.y, this.letterM.scaleX = 0x0, this.letterM.scaleY = 0x0, this.letterM.alpha = 0x0, this.text.x = 4.6 * -logoSize, this.text.y = this.textOriY, this.cover.x = this.logoShield.x, this.cover.y = 0x0, this.addLocalDelayedCall(0.6, function () {
        this.addLocalTweenTo(this.logoShield, {
          'scaleX': 0x2,
          'scaleY': 0x2
        }, 0.5, this.backOut), this.addLocalTweenTo(this.logoShield, {
          'alpha': 0x1
        }, 0.2, this.quadOut), ig.soundHandler.sfxPlayer.play('logosplash1'), this.addLocalDelayedCall(0.4, function () {
          this.addLocalTweenTo(this.letterM, {
            'scaleX': 0x2,
            'scaleY': 0x2
          }, 0.5, this.backOut), this.addLocalTweenTo(this.letterM, {
            'alpha': 0x1
          }, 0.2, this.quadOut), ig.soundHandler.sfxPlayer.play('logosplash1'), this.addLocalDelayedCall(0.2, function () {
            ig.soundHandler.sfxPlayer.play('logosplash2');
          }.bind(this)), this.addLocalDelayedCall(0.6, function () {
            this.addLocalTweenTo(this.logoShield, {
              'scaleX': 0x1,
              'scaleY': 0x1
            }, 0.4, this.quartOut), this.addLocalTweenTo(this.logoShield, {
              'x': this.logoOriX,
              'y': this.logoOriY
            }, 0.4, this.quadOut), this.addLocalTweenTo(this.letterM, {
              'scaleX': 0x1,
              'scaleY': 0x1
            }, 0.4, this.quartOut), this.addLocalTweenTo(this.letterM, {
              'x': this.logoOriX,
              'y': this.logoOriY
            }, 0.4, this.quadOut), this.addLocalTweenTo(this.text, {
              'x': this.textOriX
            }, 0.8, this.backOut), this.addLocalDelayedCall(0x2, function () {
              this.addLocalTweenTo(this.logoShield, {
                'alpha': 0x0
              }, 0.6, this.quadOut), this.addLocalTweenTo(this.text, {
                'alpha': 0x0
              }, 0.6, this.quadOut), this.addLocalDelayedCall(1.3, function () {
                this.playBgm(), ig.game.director.nextLevel();
              }.bind(this));
            }.bind(this));
          }.bind(this));
        }.bind(this));
      }.bind(this));
    },
    'addObject': function (_0x24182d, _0x5b9357, _0x12253f, _0x2659fd, _0x5ac36a) {
      return _0x24182d = {
        'x': _0x5b9357,
        'y': _0x12253f,
        'width': _0x2659fd,
        'height': _0x5ac36a,
        'scaleX': 0x1,
        'scaleY': 0x1,
        'alpha': 0x1,
        'drawFunctionName': _0x24182d
      }, this.objects.push(_0x24182d), _0x24182d;
    },
    'update': function () {
      this.parent();
      if (!ig.wm) {
        this.unlockWebAudio();
        var _0x362636 = ig.system.tick;
        _0x362636 > 0x1 / 0x3c && (_0x362636 = 0x1 / 0x3c), this.updateLocalTween(_0x362636), this.cover.x = this.logoShield.x, _SETTINGS.DeveloperBranding.Splash.Enabled || (this.playBgm(), ig.game.director.nextLevel(), this.kill());
      }
    },
    'playBgm': function () {
      ig.soundHandler.bgmPlayer.play(ig.soundHandler.bgmPlayer.soundList.background);
    },
    'unlockWebAudio': function () {
      if (ig.input.released('click')) try {
        ig.soundHandler.unlockWebAudio();
      } catch (_0x33ea9a) {}
    },
    'addLocalDelayedCall': function (_0x1e57df, _0xf39831) {
      this.addLocalTweenTo(null, {}, _0x1e57df, this.easeNone, 0x0, _0xf39831);
    },
    'addLocalTweenTo': function (_0x25c30a, _0x452868, _0x410e19, _0x2aec28, _0x1d32a5, _0x2a205e) {
      'undefined' == typeof _0x1d32a5 && (_0x1d32a5 = 0x0), 'undefined' == typeof _0x2aec28 && (_0x2aec28 = this.easeNone), 'undefined' == typeof _0x2a205e && (_0x2a205e = null), _0x410e19 = {
        'obj': _0x25c30a,
        'endProperties': _0x452868,
        'duration': _0x410e19,
        'easing': _0x2aec28,
        'delay': _0x1d32a5,
        'elapsed': 0x0,
        'deltaProperties': {},
        'startProperties': {},
        'onComplete': _0x2a205e
      };
      for (var _0x867fc4 in _0x452868) Object.hasOwnProperty.call(_0x452868, _0x867fc4) && (_0x410e19.startProperties[_0x867fc4] = _0x25c30a[_0x867fc4], _0x410e19.deltaProperties[_0x867fc4] = _0x452868[_0x867fc4] - _0x25c30a[_0x867fc4]);
      this.localTweens.push(_0x410e19);
    },
    'updateLocalTween': function (_0x157ba3) {
      for (var _0x54d4fa = 0x0; _0x54d4fa < this.localTweens.length; _0x54d4fa++) {
        var _0x4ca04c = this.localTweens[_0x54d4fa];
        if (0x0 < _0x4ca04c.delay) _0x4ca04c.delay -= _0x157ba3;else {
          _0x4ca04c.elapsed += _0x157ba3;
          for (var _0x31dd68 in _0x4ca04c.deltaProperties) if (Object.hasOwnProperty.call(_0x4ca04c.deltaProperties, _0x31dd68)) {
            var _0x2a00e4 = _0x4ca04c.deltaProperties[_0x31dd68],
              _0x218412 = _0x4ca04c.startProperties[_0x31dd68],
              _0xada7a3 = _0x4ca04c.easing,
              _0x57ce53 = _0x4ca04c.elapsed / _0x4ca04c.duration;
            0x1 < _0x57ce53 && (_0x57ce53 = 0x1), _0x57ce53 = _0xada7a3(_0x57ce53), _0x4ca04c.obj[_0x31dd68] = _0x218412 + _0x2a00e4 * _0x57ce53;
          }
          if (_0x4ca04c.elapsed >= _0x4ca04c.duration && (this.localTweens.splice(_0x54d4fa, 0x1), _0x54d4fa--, _0x4ca04c.onComplete)) _0x4ca04c.onComplete();
        }
      }
    },
    'quadOut': function (_0x407591) {
      return -_0x407591 * (_0x407591 - 0x2);
    },
    'quartOut': function (_0x19c27e) {
      return -(--_0x19c27e * _0x19c27e * _0x19c27e * _0x19c27e - 0x1);
    },
    'backOut': function (_0x2a4d0c) {
      return (_0x2a4d0c -= 0x1) * _0x2a4d0c * (2.70158 * _0x2a4d0c + 1.70158) + 0x1;
    },
    'easeNone': function (_0x14abf4) {
      return _0x14abf4;
    },
    'draw': function () {
      this.parent();
      if (!ig.global.wm) {
        var _0x3f57ef = ig.system.context;
        _0x3f57ef.fillStyle = '#ffffff', _0x3f57ef.fillRect(0x0, 0x0, ig.system.width, ig.system.height);
        for (_0x3f57ef = 0x0; _0x3f57ef < this.objects.length; _0x3f57ef++) {
          var _0x59499c = this.objects[_0x3f57ef];
          0x1 < _0x59499c.alpha && (_0x59499c.alpha = 0x1);
          if (0x0 != _0x59499c.scaleX && 0x0 != _0x59499c.scaleY && 0x0 < _0x59499c.alpha) this[_0x59499c.drawFunctionName](_0x59499c);
        }
      }
    },
    'drawLogoShield': function (_0x569913) {
      this.logoCanvas || (this.logoCanvas = ig.$new('canvas'), this.logoCanvas.width = 0x2 * Math.max(ig.system.width, ig.system.height), this.logoCanvas.height = 0x2 * Math.max(ig.system.width, ig.system.height));
      var _0x55a4e4 = this.logoCanvas.getContext('2d'),
        _0x58a155 = _0x569913.width * _0x569913.scaleX,
        _0x24a3f = _0x569913.height * _0x569913.scaleY,
        _0x59425f = 0x0,
        _0x2f2a17 = 0x0;
      _0x55a4e4.clearRect(0x0, 0x0, this.logoCanvas.width, this.logoCanvas.height), _0x55a4e4.save(), _0x55a4e4.fillStyle = '#e35026', _0x55a4e4.beginPath(), _0x55a4e4.moveTo(_0x59425f + 0.06 * _0x58a155, _0x2f2a17), _0x55a4e4.lineTo(_0x59425f + 0.94 * _0x58a155, _0x2f2a17), _0x55a4e4.lineTo(_0x59425f + 0.86 * _0x58a155, _0x2f2a17 + 0.89 * _0x24a3f), _0x55a4e4.lineTo(_0x59425f + 0.5 * _0x58a155, _0x2f2a17 + _0x24a3f), _0x55a4e4.lineTo(_0x59425f + 0.14 * _0x58a155, _0x2f2a17 + 0.89 * _0x24a3f), _0x55a4e4.closePath(), _0x55a4e4.fill(), _0x55a4e4.fillStyle = '#ee652b', _0x55a4e4.beginPath(), _0x55a4e4.moveTo(_0x59425f + 0.5 * _0x58a155, _0x2f2a17 + 0.07 * _0x24a3f), _0x55a4e4.lineTo(_0x59425f + 0.86 * _0x58a155, _0x2f2a17 + 0.07 * _0x24a3f), _0x55a4e4.lineTo(_0x59425f + 0.79 * _0x58a155, _0x2f2a17 + 0.84 * _0x24a3f), _0x55a4e4.lineTo(_0x59425f + 0.5 * _0x58a155, _0x2f2a17 + 0.92 * _0x24a3f), _0x55a4e4.closePath(), _0x55a4e4.fill(), _0x55a4e4.restore(), _0x59425f = ig.system.width / 0x2 + _0x569913.x - _0x58a155 / 0x2, _0x2f2a17 = ig.system.height / 0x2 + _0x569913.y - _0x24a3f / 0x2, _0x55a4e4 = ig.system.context, _0x55a4e4.globalAlpha = _0x569913.alpha, _0x55a4e4.drawImage(this.logoCanvas, 0x0, 0x0, _0x58a155, _0x24a3f, _0x59425f, _0x2f2a17, _0x58a155, _0x24a3f), _0x55a4e4.globalAlpha = 0x1;
    },
    'drawLetterM': function (_0x33b580) {
      var _0x2ada09 = ig.system.context,
        _0xaa0fd0 = _0x33b580.width * _0x33b580.scaleX,
        _0x507343 = _0x33b580.height * _0x33b580.scaleY,
        _0x329344 = ig.system.width / 0x2 + _0x33b580.x - _0xaa0fd0 / 0x2,
        _0x291859 = ig.system.height / 0x2 + _0x33b580.y - _0x507343 / 0x2;
      _0x2ada09.save(), _0x2ada09.globalAlpha = _0x33b580.alpha, _0x2ada09.fillStyle = '#ffffff', _0x2ada09.beginPath(), _0x2ada09.moveTo(_0x329344 + 0.25 * _0xaa0fd0, _0x291859 + 0.2 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.4 * _0xaa0fd0, _0x291859 + 0.2 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.5 * _0xaa0fd0, _0x291859 + 0.37 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.6 * _0xaa0fd0, _0x291859 + 0.2 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.75 * _0xaa0fd0, _0x291859 + 0.2 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.75 * _0xaa0fd0, _0x291859 + 0.7 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.6 * _0xaa0fd0, _0x291859 + 0.7 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.6 * _0xaa0fd0, _0x291859 + 0.45 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.5 * _0xaa0fd0, _0x291859 + 0.63 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.4 * _0xaa0fd0, _0x291859 + 0.45 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.4 * _0xaa0fd0, _0x291859 + 0.7 * _0x507343), _0x2ada09.lineTo(_0x329344 + 0.25 * _0xaa0fd0, _0x291859 + 0.7 * _0x507343), _0x2ada09.closePath(), _0x2ada09.fill(), _0x2ada09.globalAlpha = 0x1, _0x2ada09.restore();
    },
    'drawText': function (_0x1dfccd) {
      if (ig.splashLogoFontLoaded) {
        var _0x1c4d85 = ig.system.context,
          _0x17305e = _0x1dfccd.height * _0x1dfccd.scaleY,
          _0x1fd5a7 = ig.system.width / 0x2 + _0x1dfccd.x,
          _0x50ecfc = ig.system.height / 0x2 + _0x1dfccd.y;
        _0x1c4d85.save(), _0x1c4d85.globalAlpha = _0x1dfccd.alpha, _0x1dfccd = Math.round(0x73 / 0x98 * _0x17305e);
        var _0x2e6f66 = Math.round(0x3e / 0x98 * _0x17305e);
        _0x1c4d85.textAlign = 'left', _0x1c4d85.fillStyle = '#316198', _0x1c4d85.font = _0x1dfccd + "px logofont", _0x1c4d85.fillText('MarketJS', _0x1fd5a7 - 0.06 * _0x1dfccd, _0x50ecfc + 0.66 * _0x1dfccd), _0x1c4d85.font = _0x2e6f66 + "px logofont", _0x1c4d85.fillText("HTML5 gaming solutions", _0x1fd5a7 - 0.02 * _0x2e6f66, _0x50ecfc + _0x17305e - 0.1 * _0x2e6f66), _0x1c4d85.globalAlpha = 0x1, _0x1c4d85.restore();
      }
    },
    'drawCover': function (_0x58e45c) {
      var _0x2ac50c = ig.system.context,
        _0x585285 = ig.system.width / 0x2 + _0x58e45c.x;
      _0x2ac50c.save(), _0x2ac50c.globalAlpha = _0x58e45c.alpha, _0x2ac50c.fillStyle = '#ffffff', _0x2ac50c.fillRect(_0x585285 - ig.system.width, 0x0, ig.system.width, ig.system.height), _0x2ac50c.globalAlpha = 0x1, _0x2ac50c.restore();
    }
  });
  if ('undefined' == typeof window.FontFaceObserver) {
    var _0x4e1bc6 = function (_0x5bee73, _0x33cf11) {
        document.addEventListener ? _0x5bee73.addEventListener('scroll', _0x33cf11, !0x1) : _0x5bee73.attachEvent('scroll', _0x33cf11);
      },
      _0x189db5 = function (_0x18a15d) {
        this.a = document.createElement('div'), this.a.setAttribute('aria-hidden', 'true'), this.a.appendChild(document.createTextNode(_0x18a15d)), this.b = document.createElement('span'), this.c = document.createElement('span'), this.h = document.createElement('span'), this.f = document.createElement('span'), this.g = -0x1, this.b.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.c.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.f.style.cssText = 'max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;', this.h.style.cssText = 'display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;', this.b.appendChild(this.h), this.c.appendChild(this.f), this.a.appendChild(this.b), this.a.appendChild(this.c);
      },
      _0x1b9fc8 = function (_0x3da07c, _0x34cd6a) {
        _0x3da07c.a.style.cssText = 'max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:' + _0x34cd6a + ';';
      },
      _0x5c0084 = function (_0x2e7fe5) {
        var _0x566911 = _0x2e7fe5.a.offsetWidth,
          _0x293415 = _0x566911 + 0x64;
        return _0x2e7fe5.f.style.width = _0x293415 + 'px', _0x2e7fe5.c.scrollLeft = _0x293415, _0x2e7fe5.b.scrollLeft = _0x2e7fe5.b.scrollWidth + 0x64, _0x2e7fe5.g !== _0x566911 ? (_0x2e7fe5.g = _0x566911, !0x0) : !0x1;
      },
      _0x2142e9 = function (_0x29f7ec, _0x428986) {
        function _0x4d096a() {
          var _0x2a57ef = _0x210d4e;
          _0x5c0084(_0x2a57ef) && _0x2a57ef.a.parentNode && _0x428986(_0x2a57ef.g);
        }
        var _0x210d4e = _0x29f7ec;
        _0x4e1bc6(_0x29f7ec.b, _0x4d096a), _0x4e1bc6(_0x29f7ec.c, _0x4d096a), _0x5c0084(_0x29f7ec);
      },
      _0x4309f2 = function (_0x3df663, _0x31a816) {
        var _0x3b1299 = _0x31a816 || {};
        this.family = _0x3df663, this.style = _0x3b1299.style || 'normal', this.weight = _0x3b1299.weight || 'normal', this.stretch = _0x3b1299.stretch || 'normal';
      },
      _0x1e0f91 = function () {
        return null === _0x24954e && (_0x24954e = !!document.fonts), _0x24954e;
      },
      _0x36464e = function () {
        if (null === _0x28d7d3) {
          var _0x107fa5 = document.createElement('div');
          try {
            _0x107fa5.style.font = "condensed 100px sans-serif";
          } catch (_0x4bad39) {}
          _0x28d7d3 = '' !== _0x107fa5.style.font;
        }
        return _0x28d7d3;
      },
      _0x3dd1f3 = function (_0xd1b5ed, _0x3aa237) {
        return [_0xd1b5ed.style, _0xd1b5ed.weight, _0x36464e() ? _0xd1b5ed.stretch : '', '100px', _0x3aa237].join(" ");
      },
      _0x478ff3 = null,
      _0x519399 = null,
      _0x28d7d3 = null,
      _0x24954e = null;
    _0x4309f2.prototype.load = function (_0x49bc04, _0x23ed04) {
      var _0x1e001d = this,
        _0xfc8d22 = _0x49bc04 || 'BESbswy',
        _0x49111c = 0x0,
        _0x46b849 = _0x23ed04 || 0xbb8,
        _0x5a3748 = new Date().getTime();
      return new Promise(function (_0x378045, _0x7647a8) {
        var _0x3b6e48;
        if (_0x3b6e48 = _0x1e0f91()) null === _0x519399 && (_0x1e0f91() && /Apple/.test(window.navigator.vendor) ? (_0x3b6e48 = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent), _0x519399 = !!_0x3b6e48 && 0x25b > parseInt(_0x3b6e48[0x1], 0xa)) : _0x519399 = !0x1), _0x3b6e48 = !_0x519399;
        if (_0x3b6e48) {
          _0x3b6e48 = new Promise(function (_0x50f287, _0x1ac673) {
            function _0x104ee8() {
              new Date().getTime() - _0x5a3748 >= _0x46b849 ? _0x1ac673(Error('' + _0x46b849 + "ms timeout exceeded")) : document.fonts.load(_0x3dd1f3(_0x1e001d, "\"" + _0x1e001d.family + "\""), _0xfc8d22).then(function (_0x3bb1ee) {
                0x1 <= _0x3bb1ee.length ? _0x50f287() : setTimeout(_0x104ee8, 0x19);
              }, _0x1ac673);
            }
            _0x104ee8();
          });
          var _0x242bb6 = new Promise(function (_0x301993, _0x2f1a40) {
            _0x49111c = setTimeout(function () {
              _0x2f1a40(Error('' + _0x46b849 + "ms timeout exceeded"));
            }, _0x46b849);
          });
          Promise.race([_0x242bb6, _0x3b6e48]).then(function () {
            clearTimeout(_0x49111c), _0x378045(_0x1e001d);
          }, _0x7647a8);
        } else {
          var _0x54de52 = function () {
            function _0x1c7c48() {
              var _0x6ad5a5;
              if (_0x6ad5a5 = -0x1 != _0x31f501 && -0x1 != _0x1ca02b || -0x1 != _0x31f501 && -0x1 != _0x3ba9bf || -0x1 != _0x1ca02b && -0x1 != _0x3ba9bf) (_0x6ad5a5 = _0x31f501 != _0x1ca02b && _0x31f501 != _0x3ba9bf && _0x1ca02b != _0x3ba9bf) || (null === _0x478ff3 && (_0x6ad5a5 = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent), _0x478ff3 = !!_0x6ad5a5 && (0x218 > parseInt(_0x6ad5a5[0x1], 0xa) || 0x218 === parseInt(_0x6ad5a5[0x1], 0xa) && 0xb >= parseInt(_0x6ad5a5[0x2], 0xa))), _0x6ad5a5 = _0x478ff3 && (_0x31f501 == _0x441577 && _0x1ca02b == _0x441577 && _0x3ba9bf == _0x441577 || _0x31f501 == _0x3b0015 && _0x1ca02b == _0x3b0015 && _0x3ba9bf == _0x3b0015 || _0x31f501 == _0x45fefd && _0x1ca02b == _0x45fefd && _0x3ba9bf == _0x45fefd)), _0x6ad5a5 = !_0x6ad5a5;
              _0x6ad5a5 && (_0x3fc2cc.parentNode && _0x3fc2cc.parentNode.removeChild(_0x3fc2cc), clearTimeout(_0x49111c), _0x378045(_0x1e001d));
            }
            function _0x117e17() {
              if (new Date().getTime() - _0x5a3748 >= _0x46b849) _0x3fc2cc.parentNode && _0x3fc2cc.parentNode.removeChild(_0x3fc2cc), _0x7647a8(Error('' + _0x46b849 + "ms timeout exceeded"));else {
                var _0x470f1b = document.hidden;
                if (!0x0 === _0x470f1b || void 0x0 === _0x470f1b) _0x31f501 = _0x1f9106.a.offsetWidth, _0x1ca02b = _0x51ab39.a.offsetWidth, _0x3ba9bf = _0x5b0be0.a.offsetWidth, _0x1c7c48();
                _0x49111c = setTimeout(_0x117e17, 0x32);
              }
            }
            var _0x1f9106 = new _0x189db5(_0xfc8d22),
              _0x51ab39 = new _0x189db5(_0xfc8d22),
              _0x5b0be0 = new _0x189db5(_0xfc8d22),
              _0x31f501 = -0x1,
              _0x1ca02b = -0x1,
              _0x3ba9bf = -0x1,
              _0x441577 = -0x1,
              _0x3b0015 = -0x1,
              _0x45fefd = -0x1,
              _0x3fc2cc = document.createElement('div');
            _0x3fc2cc.dir = 'ltr', _0x1b9fc8(_0x1f9106, _0x3dd1f3(_0x1e001d, 'sans-serif')), _0x1b9fc8(_0x51ab39, _0x3dd1f3(_0x1e001d, 'serif')), _0x1b9fc8(_0x5b0be0, _0x3dd1f3(_0x1e001d, 'monospace')), _0x3fc2cc.appendChild(_0x1f9106.a), _0x3fc2cc.appendChild(_0x51ab39.a), _0x3fc2cc.appendChild(_0x5b0be0.a), document.body.appendChild(_0x3fc2cc), _0x441577 = _0x1f9106.a.offsetWidth, _0x3b0015 = _0x51ab39.a.offsetWidth, _0x45fefd = _0x5b0be0.a.offsetWidth, _0x117e17(), _0x2142e9(_0x1f9106, function (_0x2f03d8) {
              _0x31f501 = _0x2f03d8, _0x1c7c48();
            }), _0x1b9fc8(_0x1f9106, _0x3dd1f3(_0x1e001d, "\"" + _0x1e001d.family + "\",sans-serif")), _0x2142e9(_0x51ab39, function (_0x4bf11d) {
              _0x1ca02b = _0x4bf11d, _0x1c7c48();
            }), _0x1b9fc8(_0x51ab39, _0x3dd1f3(_0x1e001d, "\"" + _0x1e001d.family + "\",serif")), _0x2142e9(_0x5b0be0, function (_0x212a56) {
              _0x3ba9bf = _0x212a56, _0x1c7c48();
            }), _0x1b9fc8(_0x5b0be0, _0x3dd1f3(_0x1e001d, "\"" + _0x1e001d.family + "\",monospace"));
          };
          document.body ? _0x54de52() : document.addEventListener ? document.addEventListener('DOMContentLoaded', function _0x4bdcf5() {
            document.removeEventListener('DOMContentLoaded', _0x4bdcf5), _0x54de52();
          }) : document.attachEvent('onreadystatechange', function _0x1de985() {
            if ('interactive' == document.readyState || 'complete' == document.readyState) document.detachEvent('onreadystatechange', _0x1de985), _0x54de52();
          });
        }
      });
    }, 'object' === typeof module ? module.exports = _0x4309f2 : (window.FontFaceObserver = _0x4309f2, window.FontFaceObserver.prototype.load = _0x4309f2.prototype.load), console.log("font loader not exist : create new instance of font loader");
  }
  _0x4309f2 = document.createElement('style'), _0x4309f2.type = 'text/css', _0x4309f2.appendChild(document.createTextNode("@font-face {font-family: 'logofont';src: url('media/fonts/logofont.woff2') format('woff2'),url('media/fonts/logofont.woff') format('woff'),url('media/fonts/logofont.ttf') format('truetype')}")), document.head.appendChild(_0x4309f2), ig.splashLogoFontLoaded = !0x1, new FontFaceObserver('logofont').load().then(function () {
    ig.splashLogoFontLoaded = !0x0;
  })['catch'](function () {
    console.log("Splash font failed to load :", 'media/fonts/logofont');
  });
}), ig.baked = !0x0, ig.module('game.levels.opening').requires('impact.image', 'game.entities.opening-marketjs-logo').defines(function () {
  LevelOpening = {
    'entities': [{
      'type': 'EntityOpeningMarketJSLogo',
      'x': 0x208,
      'y': 0xd4
    }],
    'layer': []
  };
}), ig.baked = !0x0, ig.module('game.entities.buttons.button-generic-alert').requires('game.entities.buttons.button-generic').defines(function () {
  EntityButtonGenericAlert = EntityButtonGeneric.extend({
    'alertText': '',
    'init': function (_0x4a3c89, _0x342cc6, _0x1b2044) {
      this.parent(_0x4a3c89, _0x342cc6, _0x1b2044), this.alertSignal = _0x1b2044.alertSignal;
    },
    'update': function () {
      if (!this._killed && (this.parent(), this.alertSignal)) {
        var _0x266393 = this.alertSignal();
        void 0x0 != _0x266393 && (this.alertText = _0x266393.toString());
        if ('true' === this.alertText || '1' === this.alertText) this.alertText = '!';
        if ('0' === this.alertText || 'false' === this.alertText) this.alertText = '';
      }
    },
    'setAlertSignal': function (_0x165bee) {
      this.alertSignal = _0x165bee;
    },
    'draw': function () {
      if (this.visible) {
        var _0x2fd7d3 = ig.system.context;
        _0x2fd7d3.setTransform(this.scale.x, 0x0, 0x0, this.scale.y, this.pos.x + this.offsetX + 0.5 * this.imageSize.x * (0x1 - this.scale.x) | 0x0, this.pos.y + this.offsetY + 0.5 * this.imageSize.y * (0x1 - this.scale.y)) | 0x0, _0x2fd7d3.globalAlpha = this.alpha, this.currentImage && this.currentImage.draw(0x0, 0x0), this.withText && this.drawText(), this.icon && this.icon.draw(this.iconPos.x, this.iconPos.y), this.locked ? (_0x2fd7d3.fillStyle = 'rgba(0,0,0,0.7)', _0x2fd7d3.roundRect(0x0, 0x0, this.size.x, this.size.y, 0x15, !0x0, !0x1), this.lockIcon.draw(this.size.x / 0x2 - this.lockIcon.width / 0x2, this.size.y / 0x2 - this.lockIcon.height / 0x2)) : this.alertText && this.drawAlertIcon(), this.overlayEnabled && this.overlay.draw(0x0, 0x0), _0x2fd7d3.globalAlpha = 0x1, _0x2fd7d3.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0);
      }
    },
    'drawAlertIcon': function () {
      ig.system.context.beginPath(), ig.system.context.fillStyle = 'red', ig.system.context.strokeStyle = '#011B3B', ig.system.context.lineWidth = 0x3, ig.system.context.arc(this.size.x - 0xa, 0xa, 0xe, 0x0, 0x2 * Math.PI), ig.system.context.fill(), ig.system.context.stroke(), ig.system.context.save(), ig.system.context.fillStyle = '#ffffff', ig.system.context.font = 0x16 - 0x3 * this.alertText.length + "px archivo-black", ig.system.context.textBaseline = 'middle', ig.system.context.fillText(this.alertText, this.size.x - 0xa, 0xa), ig.system.context.restore();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.popups.settings').requires('impact.entity', 'game.entities.buttons.button-generic').defines(function () {
  EntitySettings = ig.Entity.extend({
    'container': new ig.Image('media/graphics/ui/common/popup.png'),
    'buttonCloseImage': new ig.Image('media/graphics/ui/common/btn-close.png'),
    'buttonTextImage': new ig.Image('media/graphics/ui/common/button2.png'),
    'buttonTextOverlayImage': new ig.Image('media/graphics/ui/common/button2-overlay.png'),
    'init': function (_0x3420c6, _0x776bc0, _0x3b932f) {
      this.parent(_0x3420c6, _0x776bc0, _0x3b932f), this.callback = _0x3b932f.callback, this.callbackOkay = this.callbackOkay.bind(this), this.callbackBGM = this.callbackBGM.bind(this), this.callbackSFX = this.callbackSFX.bind(this), this.animateInCompleted = this.animateInCompleted.bind(this), this.animateOutCompleted = this.animateOutCompleted.bind(this), this.zIndex = ig.game.entitiesZIndex.Popup + 0xa, this.size = {
        'x': this.container.width,
        'y': this.container.height
      }, this.containerPos = {
        'x': 0.5 * ig.system.width - 0.5 * this.size.x,
        'y': 0.5 * ig.system.height - 0.5 * this.size.y
      }, this.alpha = 0x0, this.killed = !0x1, this.bgmText = _STRINGS.Settings.BGM, this.sfxText = _STRINGS.Settings.SFX, this.textFormat = {
        'align': 'center',
        'font': "52px archivo-black",
        'fillStyle': '#011B3B',
        'text': _STRINGS.Settings.Header,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.2 * this.size.y
      }, this.gradient = ig.system.context.createRadialGradient(0.5 * ig.system.width, 0.5 * ig.system.height, 0.3 * ig.system.height, 0.5 * ig.system.width, 0.5 * ig.system.height, ig.system.height), this.gradient.addColorStop(0x0, "rgba(0, 0, 0, 0)"), this.gradient.addColorStop(0x1, "rgba(0, 0, 0, 0.8)"), this.buttonOkay = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonCloseImage,
        'clickImage': null,
        'callback': this.callbackOkay,
        'zIndex': this.zIndex + 0x2
      }), this.buttonOkay.pos.x = this.containerPos.x + this.size.x - 0.8 * this.buttonOkay.size.x, this.buttonOkay.pos.y = this.containerPos.y - 0.2 * this.buttonOkay.size.y, this.buttonBGM = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonTextImage,
        'overlay': this.buttonTextOverlayImage,
        'clickImage': null,
        'callback': this.callbackBGM,
        'zIndex': this.zIndex + 0x3
      }), this.buttonBGM.addText({
        'text': this.bgmText
      }), this.buttonBGM.pos.x = this.containerPos.x + 0.5 * this.size.x - 0.5 * this.buttonBGM.size.x, this.buttonBGM.pos.y = this.containerPos.y + 0.43 * this.size.y - 0.5 * this.buttonBGM.size.y, this.buttonSFX = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonTextImage,
        'overlay': this.buttonTextOverlayImage,
        'clickImage': null,
        'callback': this.callbackSFX,
        'zIndex': this.zIndex + 0x3
      }), this.buttonSFX.addText({
        'text': this.sfxText
      }), this.buttonSFX.pos.x = this.containerPos.x + 0.5 * this.size.x - 0.5 * this.buttonBGM.size.x, this.buttonSFX.pos.y = this.containerPos.y + 0.67 * this.size.y - 0.5 * this.buttonBGM.size.y, this.buttonOkay.enable(!0x1), this.buttonBGM.enable(!0x1), this.buttonSFX.enable(!0x1), this.updateBGMButtonText(), this.updateSFXButtonText(), ig.game.sortEntitiesDeferred(), this.animateIn();
    },
    'draw': function () {
      this.killed || (ig.system.context.globalAlpha = this.alpha, ig.system.context.fillStyle = this.gradient, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.container.draw(this.pos.x + this.containerPos.x, this.pos.y + this.containerPos.y), this.drawText(), ig.system.context.globalAlpha = 0x1);
    },
    'update': function () {
      this.parent(), this.killed || (this.buttonOkay.offsetY = this.pos.y, this.buttonBGM.offsetY = this.pos.y, this.buttonSFX.offsetY = this.pos.y, this.buttonOkay.alpha = this.alpha, this.buttonBGM.alpha = this.alpha, this.buttonSFX.alpha = this.alpha);
    },
    'drawText': function () {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + this.textFormat.x, this.pos.y + this.textFormat.y), ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.fillText(this.textFormat.text, 0x0, 0x0), ig.system.context.restore();
    },
    'callbackOkay': function () {
      this.disableButtons(), this.animateOut();
    },
    'callbackBGM': function () {
      this.updateBGM();
    },
    'callbackSFX': function () {
      this.updateSFX();
    },
    'updateBGM': function () {
      var _0x1be556;
      _0x1be556 = 0x0 != ig.game.load('music') ? 0x0 : 0.8, ig.game.save('music', _0x1be556), ig.soundHandler.bgmPlayer.volume(_0x1be556), this.updateBGMButtonText();
    },
    'updateSFX': function () {
      var _0x264d95;
      _0x264d95 = 0x0 != ig.game.load('sound') ? 0x0 : 0.8, ig.game.save('sound', _0x264d95), ig.soundHandler.sfxPlayer.volume(_0x264d95), this.updateSFXButtonText();
    },
    'updateBGMButtonText': function () {
      0x0 != ig.game.load('music') ? (this.buttonBGM.updateText(this.bgmText.replace('%i', _STRINGS.Settings.On)), this.buttonBGM.disableOverlay()) : (this.buttonBGM.updateText(this.bgmText.replace('%i', _STRINGS.Settings.Off)), this.buttonBGM.enableOverlay());
    },
    'updateSFXButtonText': function () {
      0x0 != ig.game.load('sound') ? (this.buttonSFX.updateText(this.sfxText.replace('%i', _STRINGS.Settings.On)), this.buttonSFX.disableOverlay()) : (this.buttonSFX.updateText(this.sfxText.replace('%i', _STRINGS.Settings.Off)), this.buttonSFX.enableOverlay());
    },
    'animateIn': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.pos.y = 0x64, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x0
        },
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateInCompleted
      }).start();
    },
    'animateInCompleted': function () {
      this.enableButtons();
    },
    'enableButtons': function () {
      this.buttonOkay.enable(!0x0), this.buttonBGM.enable(!0x0), this.buttonSFX.enable(!0x0);
    },
    'disableButtons': function () {
      this.buttonOkay.enable(!0x1), this.buttonBGM.enable(!0x1), this.buttonSFX.enable(!0x1);
    },
    'animateOut': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'animateOutCompleted': function () {
      this.callback();
    },
    'kill': function () {
      this.killed = !0x0, this.buttonOkay.kill(), this.buttonOkay = null, this.buttonBGM.kill(), this.buttonBGM = null, this.buttonSFX.kill(), this.animateOutCompleted = this.animateInCompleted = this.callbackOkay = this.callback = this.textFormat = this.containerPos = this.size = this.buttonSFX = null, this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.popups.shop').requires('impact.entity', 'game.entities.buttons.button-generic').defines(function () {
  EntityShop = ig.Entity.extend({
    'container': new ig.Image('media/graphics/ui/shop/bg.png'),
    'containerFG': new ig.Image('media/graphics/ui/shop/fg.png'),
    'buttonCloseImage': new ig.Image('media/graphics/ui/common/btn-close.png'),
    'buttonPrevImage': new ig.Image('media/graphics/ui/common/btn-left.png'),
    'buttonNextImage': new ig.Image('media/graphics/ui/common/btn-right.png'),
    'buttonSelectImage': new ig.Image('media/graphics/ui/common/button.png'),
    'totalCars': 0x0,
    'carIndex': 0x0,
    'carTile': 0x0,
    'carOffsetX': 0x0,
    'items': [],
    'init': function (_0x281540, _0x3ce37c, _0x5b12b0) {
      this.parent(_0x281540, _0x3ce37c, _0x5b12b0), this.callback = _0x5b12b0.callback, this.callbackOkay = this.callbackOkay.bind(this), this.animateInCompleted = this.animateInCompleted.bind(this), this.animateOutCompleted = this.animateOutCompleted.bind(this), this.zIndex = ig.game.entitiesZIndex.Popup + 0xa, this.size = {
        'x': this.container.width,
        'y': this.container.height
      }, this.containerPos = {
        'x': 0.5 * ig.system.width - 0.5 * this.size.x,
        'y': 0.5 * ig.system.height - 0.5 * this.size.y
      }, this.alpha = 0x0, this.killed = !0x1, this.textFormat = {
        'align': 'center',
        'font': "52px archivo-black",
        'fillStyle': '#ffffff',
        'text': _STRINGS.Shop.title,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.16 * this.size.y
      }, this.gradient = ig.system.context.createRadialGradient(0.5 * ig.system.width, 0.5 * ig.system.height, 0.3 * ig.system.height, 0.5 * ig.system.width, 0.5 * ig.system.height, ig.system.height), this.gradient.addColorStop(0x0, "rgba(0, 0, 0, 0)"), this.gradient.addColorStop(0x1, "rgba(0, 0, 0, 0.8)"), this.buttonClose = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonCloseImage,
        'clickImage': null,
        'callback': this.callbackOkay,
        'zIndex': this.zIndex + 0x2
      }), this.buttonClose.pos.x = this.containerPos.x + this.size.x - 0.9 * this.buttonClose.size.x, this.buttonClose.pos.y = this.containerPos.y - 0.1 * this.buttonClose.size.y, this.buttonNext = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonNextImage,
        'clickImage': null,
        'callback': this.callbackNext.bind(this),
        'zIndex': this.zIndex + 0x2
      }), this.buttonNext.pos.x = this.containerPos.x + this.size.x - 1.6 * this.buttonNext.size.x, this.buttonNext.pos.y = ig.system.height / 0x2 - this.buttonNext.size.y / 0x2, this.buttonPrev = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonPrevImage,
        'clickImage': null,
        'callback': this.callbackPrev.bind(this),
        'zIndex': this.zIndex + 0x2
      }), this.buttonPrev.pos.x = this.containerPos.x + 0.7 * this.buttonPrev.size.x, this.buttonPrev.pos.y = ig.system.height / 0x2 - this.buttonPrev.size.y / 0x2, this.buttonSelect = ig.game.spawnEntity(EntityButtonBuy, 0x0, 0x0, {
        'idleImage': this.buttonSelectImage,
        'clickImage': null,
        'callback': this.callbackSelect.bind(this),
        'zIndex': this.zIndex + 0x2
      }), this.buttonSelect.pos.x = ig.system.width / 0x2 - 0.5 * this.buttonSelect.size.x, this.buttonSelect.pos.y = ig.system.height / 0x2 - this.buttonSelect.size.y / 0x2 + 0.34 * this.container.height, this.buttonSelect.addText({
        'text': _STRINGS.Shop.select
      }), this.buttonClose.enable(!0x1), this.carIndex = ig.game.load('carID'), this.totalCars = ig.CarsData.getNumCars(), this.spawnItems(), this.updateCar(), ig.CarsData.checkAchievement(), ig.game.sortEntitiesDeferred(), this.animateIn();
    },
    'spawnItems': function () {
      for (var _0x38b994 = 0x0; _0x38b994 < this.totalCars; _0x38b994++) {
        var _0x1be8b8 = ig.game.spawnEntity(EntityShopItem, 0x0, 0x0, {
          'index': _0x38b994,
          'manager': this
        });
        this.items.push(_0x1be8b8);
      }
    },
    'callbackOkay': function () {
      this.disableButtons(), this.animateOut();
    },
    'callbackNext': function () {
      this.carIndex++, this.carIndex > this.totalCars - 0x1 && (this.carIndex = 0x0), this.updateCar(), this.disableButtons(), this.tween({}, 0.6, {
        'onComplete': function () {
          this.enableButtons();
        }.bind(this)
      }).start();
    },
    'callbackPrev': function () {
      this.carIndex--, 0x0 > this.carIndex && (this.carIndex = this.totalCars - 0x1), this.updateCar(), this.disableButtons(), this.tween({}, 0.6, {
        'onComplete': function () {
          this.enableButtons();
        }.bind(this)
      }).start();
    },
    'callbackSelect': function () {
      var _0x59e0cd = ig.CarsData.getCarData(this.carIndex);
      ig.CarsData.isCarLocked(this.carIndex) ? (ig.CarsData.setPlayerCar(this.carIndex), this.buttonSelect.updateText(_STRINGS.Shop.selected), this.callbackOkay()) : ig.game.advStorage.reduceCoins(_0x59e0cd.price) && (this.hideButtons(), ig.CarsData.unlockCar(this.carIndex, this.showButtons.bind(this)), ig.CarsData.setPlayerCar(this.carIndex), this.buttonSelect.enableIcon = !0x1, this.buttonSelect.updateTextFormat({
        'text': _STRINGS.Shop.selected,
        'font': "36px archivo-black"
      }));
    },
    'updateCar': function () {
      this.items.forEach(function (_0x3e35f8) {
        _0x3e35f8.refresh();
      }), this.buttonSelect.checkItem(this.carIndex);
    },
    'draw': function () {
      this.killed || (ig.system.context.globalAlpha = this.alpha, ig.system.context.fillStyle = this.gradient, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.container.draw(this.pos.x + this.containerPos.x, this.pos.y + this.containerPos.y), this.drawVehicle(), this.containerFG.draw(this.pos.x + this.containerPos.x, this.pos.y + this.containerPos.y), this.drawText(), ig.system.context.globalAlpha = 0x1);
    },
    'drawVehicle': function () {
      var _0x143332 = this.getTurn();
      0x3 <= this.items.length && (this.items[_0x143332.nt].drawImage(), this.items[_0x143332.pt].drawImage()), 0x2 <= this.items.length && (this.items[_0x143332.n].drawImage(), this.items[_0x143332.p].drawImage()), 0x1 <= this.items.length && this.items[_0x143332.c].drawImage();
    },
    'update': function () {
      this.parent(), this.killed || (this.buttonClose.offsetY = this.pos.y, this.buttonNext.offsetY = this.pos.y, this.buttonPrev.offsetY = this.pos.y, this.buttonSelect.offsetY = this.pos.y, this.buttonClose.alpha = this.alpha, this.buttonNext.alpha = this.alpha, this.buttonPrev.alpha = this.alpha, this.buttonSelect.alpha = this.alpha, this.items.forEach(function (_0x25cb12) {
        _0x25cb12.offsetY = this.pos.y, 0x1 != this.alpha && (_0x25cb12.alpha = this.alpha);
      }.bind(this)));
    },
    'drawText': function () {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + this.textFormat.x, this.pos.y + this.textFormat.y), ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.fillText(this.textFormat.text, 0x0, 0x0), ig.system.context.restore();
    },
    'animateIn': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.pos.y = 0x64, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x0
        },
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateInCompleted
      }).start();
    },
    'animateInCompleted': function () {
      this.enableButtons();
    },
    'enableButtons': function () {
      this.buttonClose.enable(!0x0), 0x1 >= this.items.length || (this.buttonNext.enable(!0x0), this.buttonPrev.enable(!0x0), this.buttonSelect.enable(!0x0));
    },
    'disableButtons': function () {
      this.buttonClose.enable(!0x1), this.buttonNext.enable(!0x1), this.buttonPrev.enable(!0x1), this.buttonSelect.enable(!0x1);
    },
    'showButtons': function () {
      this.buttonClose.visibility(!0x0), this.buttonNext.visibility(!0x0), this.buttonPrev.visibility(!0x0), this.buttonSelect.visibility(!0x0);
    },
    'hideButtons': function () {
      this.buttonClose.visibility(!0x1), this.buttonNext.visibility(!0x1), this.buttonPrev.visibility(!0x1), this.buttonSelect.visibility(!0x1);
    },
    'animateOut': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'animateOutCompleted': function () {
      this.callback();
    },
    'getTurn': function () {
      var _0x4cfd15 = this.totalCars,
        _0x406b6d = this.carIndex,
        _0x28fdf8 = 0x0 <= _0x406b6d - 0x1 ? _0x406b6d - 0x1 : _0x4cfd15 - 0x1,
        _0x3cbf38 = _0x406b6d + 0x1 < _0x4cfd15 ? _0x406b6d + 0x1 : 0x0;
      return {
        'c': _0x406b6d,
        'p': _0x28fdf8,
        'pt': 0x0 <= _0x28fdf8 - 0x1 ? _0x28fdf8 - 0x1 : _0x4cfd15 - 0x1,
        'n': _0x3cbf38,
        'nt': _0x3cbf38 + 0x1 < _0x4cfd15 ? _0x3cbf38 + 0x1 : 0x0
      };
    },
    'kill': function () {
      this.killed = !0x0, this.buttonClose.kill(), this.buttonClose = null, this.buttonNext.kill(), this.buttonNext = null, this.buttonPrev.kill(), this.buttonPrev = null, this.buttonSelect.kill(), this.buttonSelect = null, this.items.forEach(function (_0x55aec7) {
        _0x55aec7.kill();
      }), this.animateOutCompleted = this.animateInCompleted = this.callbackOkay = this.callback = this.textFormat = this.containerPos = this.size = null, this.parent();
    }
  }), EntityButtonBuy = EntityButtonGeneric.extend({
    'coinIcon': new ig.Image('media/graphics/ui/common/coin.png'),
    'enableIcon': !0x1,
    'checkItem': function (_0x49f56b) {
      var _0x73ae74 = ig.CarsData.getCarData(_0x49f56b),
        _0x5c6e8f = _STRINGS.Shop.select;
      this.enableIcon = !0x1, ig.CarsData.isCarLocked(_0x49f56b) ? (_0x49f56b == ig.CarsData.getUserIndex() && (_0x5c6e8f = _STRINGS.Shop.selected), this.updateTextFormat({
        'font': "36px archivo-black"
      }), this.unlock()) : (_0x5c6e8f = _0x73ae74.price, this.enableIcon = !0x0, _0x73ae74.price <= ig.game.advStorage.getCoins() ? this.unlock() : this.lock(), this.updateTextFormat({
        'font': "50px archivo-black",
        'offset': {
          'x': 0x14,
          'y': 0x5
        }
      })), this.updateText(_0x5c6e8f);
    },
    'drawText': function () {
      this.parent(), this.enableIcon && this.coinIcon.draw(0x14, 0xa);
    }
  }), EntityShopItem = ig.Entity.extend({
    'image': new ig.Image('media/graphics/ui/shop/red2.png'),
    'index': 0x0,
    'alpha': 0x0,
    'scale': 0x0,
    'visible': !0x1,
    'name': 'cars',
    'loadProgress': 0x0,
    'offsetY': 0x0,
    'offsetX': 0x0,
    'init': function (_0x1d49b4, _0x2fe00b, _0x408cb1) {
      this.parent(_0x1d49b4, _0x2fe00b, _0x408cb1), this.image = ig.CarsData.getShopImage(this.index), this.name = ig.CarsData.getName(this.index), this.zIndex = this.manager.zIndex + 0x1, this.containerSize = {
        'x': this.manager.container.width,
        'y': this.manager.container.height
      }, this.killed = !0x1, this.initProp(), this.textFormat = {
        'align': 'center',
        'font': "52px archivo-black",
        'fillStyle': '#ffffff',
        'text': _STRINGS.Shop.title,
        'x': this.pos.x + 0.5 * this.size.x,
        'y': this.pos.y + 0.16 * this.size.y
      }, ig.game.sortEntitiesDeferred();
    },
    'initProp': function () {
      var _0x87e9b5 = this.manager.getTurn();
      _0x87e9b5.c == this.index ? (this.pos = {
        'x': ig.system.width / 0x2,
        'y': ig.system.height / 0x2
      }, this.alpha = this.scale = 0x1, this.visible = !0x0) : _0x87e9b5.p == this.index ? (this.pos = {
        'x': ig.system.width / 0x2 - 0.4 * this.containerSize.x,
        'y': ig.system.height / 0x2 - 0.2 * this.containerSize.y
      }, this.scale = 0.6, this.alpha = 0.5, this.visible = !0x0) : _0x87e9b5.n == this.index ? (this.pos = {
        'x': ig.system.width / 0x2 + 0.4 * this.containerSize.x,
        'y': ig.system.height / 0x2 - 0.2 * this.containerSize.y
      }, this.scale = 0.6, this.alpha = 0.5, this.visible = !0x0) : _0x87e9b5.pt == this.index ? this.pos = {
        'x': ig.system.width / 0x2 - this.containerSize.x,
        'y': ig.system.height / 0x2 - this.containerSize.y
      } : _0x87e9b5.nt == this.index && (this.pos = {
        'x': ig.system.width / 0x2 + this.containerSize.x,
        'y': ig.system.height / 0x2 - this.containerSize.y
      });
    },
    'hideLeft': function () {
      this.tween({
        'pos': {
          'x': ig.system.width / 0x2 - this.containerSize.x,
          'y': ig.system.height / 0x2 - this.containerSize.y
        },
        'alpha': 0x0,
        'scale': 0x0
      }, 0.5, {
        'onComplete': function () {
          this.visible = !0x1;
        }.bind(this)
      }).start();
    },
    'hideRight': function () {
      this.tween({
        'pos': {
          'x': ig.system.width / 0x2 + this.containerSize.x,
          'y': ig.system.height / 0x2 - this.containerSize.y
        },
        'alpha': 0x0,
        'scale': 0x0
      }, 0.5, {
        'onComplete': function () {
          this.visible = !0x1;
        }.bind(this)
      }).start();
    },
    'toLeftSide': function () {
      this.visible = !0x0, this.tween({
        'pos': {
          'x': ig.system.width / 0x2 - 0.4 * this.containerSize.x,
          'y': ig.system.height / 0x2 - 0.2 * this.containerSize.y
        },
        'alpha': 0.5,
        'scale': 0.6
      }, 0.5, {
        'onComplete': function () {}.bind(this)
      }).start();
    },
    'toRightSide': function () {
      this.visible = !0x0, this.tween({
        'pos': {
          'x': ig.system.width / 0x2 + 0.4 * this.containerSize.x,
          'y': ig.system.height / 0x2 - 0.2 * this.containerSize.y
        },
        'alpha': 0.5,
        'scale': 0.6
      }, 0.5, {
        'onComplete': function () {}.bind(this)
      }).start();
    },
    'toCenterSide': function () {
      this.visible = !0x0, this.tween({
        'pos': {
          'x': ig.system.width / 0x2,
          'y': ig.system.height / 0x2
        },
        'alpha': 0x1,
        'scale': 0x1
      }, 0.5, {
        'onComplete': function () {}.bind(this)
      }).start();
    },
    'refresh': function () {
      var _0x53dd19 = this.manager.getTurn();
      _0x53dd19.c == this.index ? this.toCenterSide() : _0x53dd19.p == this.index ? this.toLeftSide() : _0x53dd19.n == this.index ? this.toRightSide() : _0x53dd19.pt == this.index ? this.hideLeft() : _0x53dd19.nt == this.index && this.hideRight();
    },
    'drawImage': function () {
      if (!this.killed && this.visible) {
        ig.system.context.save(), ig.system.context.globalAlpha = this.alpha, ig.system.context.beginPath(), ig.system.context.moveTo(ig.system.width / 0x2 - this.containerSize.x / 0x2, ig.system.height / 0x2 - this.containerSize.y / 0x2), ig.system.context.lineTo(ig.system.width / 0x2 + this.containerSize.x / 0x2, ig.system.height / 0x2 - this.containerSize.y / 0x2), ig.system.context.lineTo(ig.system.width / 0x2 + this.containerSize.x / 0x2, ig.system.height / 0x2 + this.containerSize.y / 0x2), ig.system.context.lineTo(ig.system.width / 0x2 - this.containerSize.x / 0x2, ig.system.height / 0x2 + this.containerSize.y / 0x2), ig.system.context.clip();
        if (this.image.loaded) {
          var _0x15f610 = this.image.width * this.scale,
            _0x1f69c2 = this.image.height * this.scale;
          ig.system.context.drawImage(this.image.data, this.pos.x - _0x15f610 / 0x2 + this.offsetX, this.pos.y - _0x1f69c2 / 0x2 + this.offsetY, _0x15f610, _0x1f69c2);
        } else this.drawReloadImage();
        ig.system.context.restore();
      }
    },
    'drawText': function () {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + this.textFormat.x, this.pos.y + this.textFormat.y), ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.fillText(this.textFormat.text, 0x0, 0x0), ig.system.context.restore();
    },
    'drawReloadImage': function () {
      this.loadProgress += 0.01, 0x1 < this.loadProgress && (this.loadProgress = 0x0), this.drawCircle({
        'center': {
          'x': this.pos.x,
          'y': this.pos.y
        },
        'radius': 0x32,
        'speed': 0x4
      }, this.loadProgress), this.drawCircle({
        'center': {
          'x': this.pos.x,
          'y': this.pos.y
        },
        'radius': 0x1e,
        'speed': 0x2
      }, this.loadProgress);
    },
    'drawCircle': function (_0x2ed8ae, _0x552ecf) {
      ig.system.context.save(), ig.system.context.beginPath();
      var _0x4305ff = this.accelerateInterpolator(_0x552ecf) * _0x2ed8ae.speed,
        _0x162cac = this.decelerateInterpolator(_0x552ecf) * _0x2ed8ae.speed;
      ig.system.context.arc(_0x2ed8ae.center.x, _0x2ed8ae.center.y, _0x2ed8ae.radius, (_0x4305ff - 0.5) * Math.PI, (_0x162cac - 0.5) * Math.PI), ig.system.context.lineWidth = 0xa, ig.system.context.strokeStyle = 'white', ig.system.context.fill(), ig.system.context.stroke(), ig.system.context.restore();
    },
    'accelerateInterpolator': function (_0x19407c) {
      return _0x19407c * _0x19407c;
    },
    'decelerateInterpolator': function (_0x32a561) {
      return 0x1 - (0x1 - _0x32a561) * (0x1 - _0x32a561);
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.ui.coin-indicator').requires('impact.entity').defines(function () {
  EntityCoinIndicator = ig.Entity.extend({
    'coinIcon': new ig.Image('media/graphics/ui/common/coin.png'),
    'maxDisplay': 0xf423f,
    'init': function (_0x206f77, _0x5ede54, _0x3cf658) {
      this.parent(_0x206f77, _0x5ede54, _0x3cf658), this.zIndex = 0x1869f, this.alpha = 0x1;
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent(), this.drawCoins();
    },
    'drawCoins': function () {
      var _0x45d3f6 = ig.game.advStorage.getCoins();
      ig.system.context.globalAlpha = this.alpha, this.coinIcon.draw(0xa, 0xa), ig.system.context.textAlign = 'left', ig.system.context.font = "46px archivo-black", ig.system.context.fillStyle = '#fff', ig.system.context.textBaseline = 'middle', ig.system.context.lineWidth = 0x8, ig.system.context.strokeStyle = '#000', _0x45d3f6 > this.maxDisplay && (_0x45d3f6 = this.maxDisplay, ig.system.context.strokeText('+', 0x4c + ig.system.context.measureText(_0x45d3f6).width, 0x26), ig.system.context.fillText('+', 0x4c + ig.system.context.measureText(_0x45d3f6).width, 0x26)), ig.system.context.strokeText(_0x45d3f6, 0x4c, 0x2a), ig.system.context.fillText(_0x45d3f6, 0x4c, 0x2a), ig.system.context.textBaseline = 'alphabetic', ig.system.context.globalAlpha = 0x1;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.popups.upgrade-shop').requires('impact.entity', 'game.entities.buttons.button-generic').defines(function () {
  EntityUpgradeShop = ig.Entity.extend({
    'container': new ig.Image('media/graphics/ui/upgrade/popup.png'),
    'containerFG': new ig.Image('media/graphics/ui/shop/fg.png'),
    'buttonCloseImage': new ig.Image('media/graphics/ui/common/btn-close.png'),
    'totalCars': 0x0,
    'carIndex': 0x0,
    'carTile': 0x0,
    'carOffsetX': 0x0,
    'itemNames': ['speed', 'accel', 'fuel', 'handle', 'nitro'],
    'itemImages': {
      'speed': new ig.Image('media/graphics/ui/upgrade/speed.png'),
      'accel': new ig.Image('media/graphics/ui/upgrade/accel.png'),
      'fuel': new ig.Image('media/graphics/ui/upgrade/fuel.png'),
      'handle': new ig.Image('media/graphics/ui/upgrade/handle.png'),
      'nitro': new ig.Image('media/graphics/ui/upgrade/nitro.png')
    },
    'items': [],
    'init': function (_0x119cac, _0x4d21bb, _0x2d7d71) {
      this.parent(_0x119cac, _0x4d21bb, _0x2d7d71), this.callback = _0x2d7d71.callback, this.callbackOkay = this.callbackOkay.bind(this), this.animateInCompleted = this.animateInCompleted.bind(this), this.animateOutCompleted = this.animateOutCompleted.bind(this), this.zIndex = ig.game.entitiesZIndex.Popup + 0xa, this.size = {
        'x': this.container.width,
        'y': this.container.height
      }, this.containerPos = {
        'x': 0.5 * ig.system.width - 0.5 * this.size.x,
        'y': 0.5 * ig.system.height - 0.5 * this.size.y
      }, this.alpha = 0x0, this.killed = !0x1, this.textFormat = {
        'align': 'center',
        'font': "46px archivo-black",
        'fillStyle': '#011B3B',
        'text': _STRINGS.Upgrade.title,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.12 * this.size.y
      }, this.gradient = ig.system.context.createRadialGradient(0.5 * ig.system.width, 0.5 * ig.system.height, 0.3 * ig.system.height, 0.5 * ig.system.width, 0.5 * ig.system.height, ig.system.height), this.gradient.addColorStop(0x0, "rgba(0, 0, 0, 0)"), this.gradient.addColorStop(0x1, "rgba(0, 0, 0, 0.8)"), this.buttonClose = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonCloseImage,
        'clickImage': null,
        'callback': this.callbackOkay,
        'zIndex': this.zIndex + 0x2
      }), this.buttonClose.pos.x = this.containerPos.x + this.size.x - 0.9 * this.buttonClose.size.x, this.buttonClose.pos.y = this.containerPos.y, this.buttonClose.enable(!0x1), this.spawnItems(), ig.game.sortEntitiesDeferred(), this.animateIn();
    },
    'spawnItems': function () {
      for (var _0x22fde6 = 0x0; _0x22fde6 < this.itemNames.length; _0x22fde6++) {
        var _0x1f5c58 = ig.game.spawnEntity(EntityUpgradeItem, 0x0, 0x0, {
          'index': _0x22fde6,
          'manager': this,
          'name': this.itemNames[_0x22fde6]
        });
        this.items.push(_0x1f5c58);
      }
    },
    'callbackOkay': function () {
      this.disableButtons(), this.animateOut();
    },
    'draw': function () {
      this.killed || (ig.system.context.globalAlpha = this.alpha, ig.system.context.fillStyle = this.gradient, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.container.draw(this.pos.x + this.containerPos.x, this.pos.y + this.containerPos.y), this.drawText(), ig.system.context.globalAlpha = 0x1);
    },
    'update': function () {
      this.parent(), this.killed || (this.buttonClose.offsetY = this.pos.y, this.buttonClose.alpha = this.alpha);
    },
    'drawText': function () {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + this.textFormat.x, this.pos.y + this.textFormat.y), ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.fillText(this.textFormat.text, 0x0, 0x0), ig.system.context.restore();
    },
    'animateIn': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.pos.y = 0x64, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x0
        },
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateInCompleted
      }).start();
    },
    'animateInCompleted': function () {
      this.enableButtons();
    },
    'enableButtons': function () {
      this.buttonClose.enable(!0x0);
    },
    'disableButtons': function () {
      this.buttonClose.enable(!0x1);
    },
    'animateOut': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'animateOutCompleted': function () {
      this.callback();
    },
    'kill': function () {
      this.killed = !0x0, this.items.forEach(function (_0x2b8256) {
        _0x2b8256.kill();
      }), this.buttonClose.kill(), this.animateOutCompleted = this.animateInCompleted = this.callbackOkay = this.callback = this.textFormat = this.containerPos = this.size = this.buttonClose = null, this.parent();
    }
  }), EntityUpgradeItem = ig.Entity.extend({
    'btnImage': new ig.Image('media/graphics/ui/upgrade/button.png'),
    'bgBar': new ig.Image('media/graphics/ui/upgrade/bg-bar.png'),
    'fillBar': new ig.Image('media/graphics/ui/upgrade/fill-bar.png'),
    'panel': new ig.Image('media/graphics/ui/upgrade/panel.png'),
    'index': 0x0,
    'alpha': 0x0,
    'scale': 0x0,
    'visible': !0x0,
    'name': 'speed',
    'progress': 0x64,
    'fillBarColor': 'red',
    'bgColor': '#c1e5ff',
    'outlineBarColor': '#011b3c',
    'barHeight': 0x1e,
    'barWidth': 0xf0,
    'topY': 0x5a,
    'initX': 0x36,
    'spaceElement': 0x1e,
    'startPrice': 0xf,
    'priceMultiplier': 0xa,
    'currentLevel': 0x0,
    'currentPrice': 0x0,
    'currentPercentage': 0x0,
    'init': function (_0x37806c, _0x3fa378, _0x5dd76f) {
      this.parent(_0x37806c, _0x3fa378, _0x5dd76f), this.icon = this.manager.itemImages[this.name], this.currentLevel = ig.advSto.getUpgrade(this.name), this.zIndex = this.manager.zIndex + 0x1, this.containerSize = {
        'x': this.manager.container.width,
        'y': this.manager.container.height
      }, this.killed = !0x1, this.barWidth = this.fillBar.width, this.button = ig.game.spawnEntity(EntityButtonGeneric, -0x64, -0x64, {
        'idleImage': this.btnImage,
        'clickImage': null,
        'callback': this.onClick.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.button.alpha = 0x0, this.button.addText({
        'text': this.startPrice,
        'font': "28px archivo-black",
        'offset': {
          'x': 0xe,
          'y': -0x2
        }
      }), this.offsetIcon = {
        'x': 0xa,
        'y': 0x4
      }, this.offsetBar = {
        'x': 0.2 * this.panel.width,
        'y': 0.4 * this.panel.height
      }, this.offsetFillBar = {
        'x': this.offsetBar.x + 0x3,
        'y': this.offsetBar.y + 0x3
      }, this.offsetProgressText = {
        'x': 0.46 * this.bgBar.width,
        'y': 0x24
      }, this.textFormat = {
        'align': 'left',
        'font': "18px archivo-black",
        'fillStyle': '#011B3B',
        'text': _STRINGS.Upgrade[this.name],
        'x': 0.2 * this.panel.width,
        'y': 0.32 * this.panel.height
      }, ig.game.sortEntitiesDeferred(), this.checkProgress();
    },
    'checkProgress': function () {
      this.progress = this.barWidth / ig.advSto.getMaxUpgrade() * this.currentLevel, this.currentPrice = this.currentLevel * this.priceMultiplier + this.startPrice, this.currentPercentage = Math.floor(0x3e8 * ig.CarsData.getUpgradeProp(this.name)) / 0xa, this.currentLevel >= ig.advSto.getMaxUpgrade() ? (this.button.updateTextFormat({
        'text': _STRINGS.Upgrade.max,
        'font': "24px archivo-black",
        'offset': {
          'x': 0x10,
          'y': -0x2
        }
      }), this.button.enable(!0x1)) : this.button.updateText(this.currentPrice);
    },
    'onClick': function () {
      ig.advSto.reduceCoins(this.currentPrice) && (ig.advSto.increaseUpgrade(this.name), this.currentLevel++, this.checkProgress());
    },
    'update': function () {
      this.button.alpha = this.manager.alpha, this.updatePos();
    },
    'updatePos': function () {
      this.pos.x = this.initX + this.manager.pos.x + this.manager.containerPos.x, this.pos.y = this.topY + this.manager.pos.y + this.manager.containerPos.y + 1.1 * this.panel.height * this.index, this.button.pos.x = this.pos.x + this.panel.width - 1.04 * this.button.size.x, this.button.pos.y = this.pos.y + this.panel.height / 0x2 - this.button.size.y / 0x2;
    },
    'draw': function () {
      !this.killed && this.visible && (ig.system.context.save(), ig.system.context.globalAlpha = this.manager.alpha, this.panel.draw(this.pos.x, this.pos.y), this.drawBar(), this.drawText(), this.icon && this.icon.draw(this.pos.x + this.offsetIcon.x, this.pos.y + this.offsetIcon.y), ig.system.context.restore());
    },
    'drawBar': function () {
      this.bgBar.draw(this.pos.x + this.offsetBar.x, this.pos.y + this.offsetBar.y), ig.system.context.drawImage(this.fillBar.data, 0x0, 0x0, this.progress, this.fillBar.height, this.pos.x + this.offsetFillBar.x, this.pos.y + this.offsetFillBar.y, this.progress, this.fillBar.height);
    },
    'drawText': function () {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + this.textFormat.x, this.pos.y + this.textFormat.y), ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = '#ffffff', ig.system.context.fillText(this.textFormat.text, 0x0, 0x0), ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.fillText(this.currentPercentage + '%', this.offsetProgressText.x, this.offsetProgressText.y), ig.system.context.restore();
    },
    'kill': function () {
      this.parent(), this.button.kill();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.controllers.title-controller').requires('impact.entity', 'game.entities.buttons.button-generic', 'game.entities.buttons.button-generic-alert', 'game.entities.buttons.button-more-games', 'game.entities.popups.settings', 'game.entities.popups.shop', 'game.entities.ui.coin-indicator', 'game.entities.popups.upgrade-shop').defines(function () {
  EntityTitleController = ig.Entity.extend({
    'titleLogo': new ig.Image('media/graphics/ui/title/title-logo.png'),
    'titleBackground': new ig.Image('media/graphics/ui/title/title-background.png'),
    'titleLoading': new ig.Image('media/graphics/splash/title-loading.png'),
    'loadingBar': new ig.Image('media/graphics/splash/loading-bar.png'),
    'buttonIdleImage': new ig.Image('media/graphics/ui/common/button.png'),
    'btnDailyRewardImage': new ig.Image('media/graphics/ui/common/btn-dailyreward.png'),
    'btnLootboxImage': new ig.Image('media/graphics/ui/common/btn-lootbox.png'),
    'btnTieredRVImage': new ig.Image('media/graphics/ui/common/btn-get-coins.png'),
    'btnMinigamesImage': new ig.Image('media/graphics/ui/common/btn-minigames.png'),
    'btnAchievementImage': new ig.Image('media/graphics/ui/common/btn-achievements.png'),
    'btnSettingsImage': new ig.Image('media/graphics/ui/common/btn-settings.png'),
    'btnUpgradeImage': new ig.Image('media/graphics/ui/common/btn-upgrade.png'),
    'btnShopImage': new ig.Image('media/graphics/ui/common/btn-shop.png'),
    'btnCollectionImage': new ig.Image('media/graphics/ui/common/btn-collection.png'),
    'buttonExpand': new ig.Image('media/graphics/ui/common/btn-expand.png'),
    'buttonShrink': new ig.Image('media/graphics/ui/common/btn-expand.png'),
    'grid': new ig.Image('media/graphics/ui/common/grid.png'),
    'coinIcon': new ig.Image('media/graphics/ui/common/coin.png'),
    'init': function (_0x4f4b5a, _0x8c6e17, _0x41504b) {
      this.parent(_0x4f4b5a, _0x8c6e17, _0x41504b), ig.Achievement.loadData(), ig.Lootbox.loadData(), ig.Minigame.loadData(), ig.Achievement.setNotificationAnimationDrop('top-center'), this.zIndex = ig.game.entitiesZIndex.Controller, this.continueAnimatIn1 = this.continueAnimatIn1.bind(this), this.continueAnimatIn2 = this.continueAnimatIn2.bind(this), this.callbackPlay = this.callbackPlay.bind(this), this.callbackSettings = this.callbackSettings.bind(this), this.continueAnimatOut1 = this.continueAnimatOut1.bind(this), this.continueAnimatOut2 = this.continueAnimatOut2.bind(this), this.continueAnimatOut3 = this.continueAnimatOut3.bind(this), this.callbackRemoveSettings = this.callbackRemoveSettings.bind(this), this.titleLogoPos = {
        'x': 0.34 * ig.system.width - 0.5 * this.titleLogo.width,
        'y': 0.3 * ig.system.height - 0.5 * this.titleLogo.height
      }, this.titleLogoAlpha = 0x0, this.loadingBarAlpha = 0x1, this.trackRotation = -0xa, this.gridAlpha = 0x0, this.buttonPlay = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonIdleImage,
        'clickImage': null,
        'callback': this.callbackPlay,
        'zIndex': this.zIndex + 0x3
      }), this.buttonPlay.pos.x = 0.34 * ig.system.width - 0.5 * this.buttonPlay.size.x, this.buttonPlay.pos.y = 0.5 * ig.system.height - 0.5 * this.buttonPlay.size.y, this.buttonPlay.alpha = 0x0, this.buttonPlay.addText({
        'text': _STRINGS.Title.Play
      }), this.buttonPlay.enable(!0x1), this.buttonSettings = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.btnSettingsImage,
        'clickImage': null,
        'callback': this.callbackSettings,
        'zIndex': this.zIndex + 0x3
      }), this.buttonSettings.pos.x = 0.34 * ig.system.width - 0.5 * this.buttonSettings.size.x, this.buttonSettings.pos.y = 0.8 * ig.system.height - 0.5 * this.buttonSettings.size.y, this.buttonSettings.alpha = 0x0, this.buttonSettings.enable(!0x1), this.buttonTieredRV = ig.game.spawnEntity(EntityButtonGenericAlert, !0x1, !0x0, {
        'idleImage': this.btnTieredRVImage,
        'clickImage': null,
        'callback': this.callbackTieredRV.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonTieredRV.pos.x = 0.26 * ig.system.width - 0.5 * this.buttonTieredRV.size.x, this.buttonTieredRV.pos.y = 0.8 * ig.system.height - 0.5 * this.buttonTieredRV.size.y, this.buttonTieredRV.alpha = 0x0, this.buttonTieredRV.enable(!0x1), this.buttonDailyReward = ig.game.spawnEntity(EntityButtonGenericAlert, 0x0, 0x0, {
        'idleImage': this.btnDailyRewardImage,
        'clickImage': null,
        'callback': this.callbackDailyReward.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonDailyReward.pos.x = 0.3 * ig.system.width - 0.5 * this.buttonDailyReward.size.x, this.buttonDailyReward.pos.y = 0.66 * ig.system.height - this.buttonDailyReward.size.y / 0x2, this.buttonDailyReward.alpha = 0x0, this.buttonDailyReward.enable(!0x1), this.buttonAchievement = ig.game.spawnEntity(EntityButtonGenericAlert, 0x0, 0x0, {
        'idleImage': this.btnAchievementImage,
        'clickImage': null,
        'callback': this.callbackAchievement.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonAchievement.pos.x = 0.22 * ig.system.width - 0.5 * this.buttonAchievement.size.x, this.buttonAchievement.pos.y = 0.66 * ig.system.height - 0.5 * this.buttonAchievement.size.y, this.buttonAchievement.alpha = 0x0, this.buttonAchievement.enable(!0x1), this.buttonLootbox = ig.game.spawnEntity(EntityButtonGenericAlert, 0x0, 0x0, {
        'idleImage': this.btnLootboxImage,
        'clickImage': null,
        'callback': this.callbackLootbox.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonLootbox.pos.x = 0.42 * ig.system.width - 0.5 * this.buttonLootbox.size.x, this.buttonLootbox.pos.y = 0.8 * ig.system.height - 0.5 * this.buttonLootbox.size.y, this.buttonLootbox.alpha = 0x0, this.buttonLootbox.enable(!0x1), this.buttonMinigames = ig.game.spawnEntity(EntityButtonGenericAlert, 0x0, 0x0, {
        'idleImage': this.btnMinigamesImage,
        'clickImage': null,
        'callback': this.callbackMinigames.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonMinigames.pos.x = 0.18 * ig.system.width - 0.5 * this.buttonMinigames.size.x, this.buttonMinigames.pos.y = 0.8 * ig.system.height - 0.5 * this.buttonMinigames.size.y, this.buttonMinigames.alpha = 0x0, this.buttonMinigames.enable(!0x1), this.buttonShop = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.btnShopImage,
        'clickImage': null,
        'callback': this.callbackShop.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonShop.pos.x = 0.38 * ig.system.width - 0.5 * this.buttonShop.size.x, this.buttonShop.pos.y = 0.66 * ig.system.height - 0.5 * this.buttonShop.size.y, this.buttonShop.alpha = 0x0, this.buttonShop.enable(!0x1), this.buttonUpgrade = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.btnUpgradeImage,
        'clickImage': null,
        'callback': this.callbackUpgrade.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonUpgrade.pos.x = 0.46 * ig.system.width - 0.5 * this.buttonUpgrade.size.x, this.buttonUpgrade.pos.y = 0.66 * ig.system.height - 0.5 * this.buttonUpgrade.size.y, this.buttonUpgrade.alpha = 0x0, this.buttonUpgrade.enable(!0x1), this.buttonCollection = ig.game.spawnEntity(EntityButtonGenericAlert, 0x0, 0x0, {
        'idleImage': this.btnCollectionImage,
        'clickImage': null,
        'callback': this.callbackCollection.bind(this),
        'zIndex': this.zIndex + 0x3
      }), this.buttonCollection.pos.x = 0.5 * ig.system.width - 0.5 * this.buttonCollection.size.x, this.buttonCollection.pos.y = 0.8 * ig.system.height - 0.5 * this.buttonCollection.size.y, this.buttonCollection.alpha = 0x0, this.buttonCollection.enable(!0x1), this.grd = ig.system.context.createLinearGradient(0x0, 0x0, 0x0, ig.system.height), this.grd.addColorStop(0x0, ig.game.transitionGrid.gradientColorStop1), this.grd.addColorStop(0x1, ig.game.transitionGrid.gradientColorStop2), this.buttonFullscreen = this.buttonFullscreen = ig.game.spawnEntity(ig.FullscreenButton, ig.system.width - 0xa - this.buttonExpand.width, 0xa, {
        'enterImage': this.buttonExpand,
        'exitImage': this.buttonShrink
      }), this.buttonFullscreen.alpha = 0x0, this.coinIndicator = ig.game.spawnEntity(EntityCoinIndicator, 0x0, 0x0, {}), this.titleLoadingPos = {
        'x': 0.5 * ig.system.width - 0.5 * this.titleLoading.width,
        'y': 0.4 * ig.system.height - 0.5 * this.titleLoading.height
      }, this.loadingBarPos = {
        'x': 0.5 * ig.system.width - 0.5 * this.loadingBar.width,
        'y': 0.7 * ig.system.height - 0.5 * this.loadingBar.height
      }, _SETTINGS.MoreGames.Enabled ? (this.buttonMoreGames = ig.game.spawnEntity(EntityButtonMoreGames, 0.34 * ig.system.width, 0.82 * ig.system.height, {
        'idleImage': this.buttonIdleImage,
        'clickImage': null,
        'zIndex': this.zIndex + 0x3
      }), this.buttonMoreGames.alpha = 0x0, this.buttonMoreGames.addText({
        'text': _STRINGS.Title.MoreGames
      }), this.buttonMoreGames.enable(!0x1)) : (this.buttonPlay.pos.y += 0x3c, this.buttonSettings.pos.y += 0x3c, this.buttonDailyReward.pos.y += 0x3c, this.buttonAchievement.pos.y += 0x3c, this.buttonLootbox.pos.y += 0x3c, this.buttonMinigames.pos.y += 0x3c, this.buttonTieredRV.pos.y += 0x3c, this.buttonShop.pos.y += 0x3c, this.buttonUpgrade.pos.y += 0x3c, this.buttonCollection.pos.y += 0x3c), this.windowRV = ig.game.spawnEntity(ig.TieredRvWindow, 0x0, 0x0, {
        'main': ig.tieredRV,
        'hideCallback': this.enableButtons.bind(this)
      });
      try {
        ig.dailyreward.onPopupClosed.add(this.enableButtons, this);
      } catch (_0x4cda90) {}
      ig.game.gameEnded = !0x1, ig.CarsData.loadCar(), this.buttonAchievement.setAlertSignal(ig.Achievement.getNumUnclaim.bind(ig.Achievement)), this.buttonMinigames.setAlertSignal(ig.Minigame.checkAvailableGames.bind(ig.Minigame)), this.buttonTieredRV.setAlertSignal(ig.tieredRV.getNumActive.bind(ig.tieredRV)), this.buttonLootbox.setAlertSignal(ig.Lootbox.checkBoxAvailable.bind(ig.Lootbox)), this.buttonCollection.setAlertSignal(ig.Lootbox.checkCardUpgrade.bind(ig.Lootbox)), this.buttonDailyReward.setAlertSignal(ig.dailyreward.hasReward.bind(ig.dailyreward));
    },
    'ready': function () {
      this.parent(), this.disableButtons(), ig.game.firstLoad && !_SETTINGS.DeveloperBranding.Splash.Enabled && !_SETTINGS.Branding.Splash.Enabled ? (ig.game.firstLoad = !0x1, this.animateIn()) : (this.titleLogoAlpha = this.loadingBarAlpha = 0x0, this.alternateAnimateIn());
    },
    'update': function () {
      this.parent(), ig.game.transitionGrid.update();
    },
    'draw': function () {
      this.parent(), this.titleBackground.draw(0x0, 0x0), ig.system.context.globalAlpha = 0x1 - this.titleLogoAlpha, 0x0 < this.loadingBarAlpha && (ig.system.context.globalAlpha = this.loadingBarAlpha, this.titleLoading.draw(this.titleLoadingPos.x, this.titleLoadingPos.y), this.loadingBar.draw(this.loadingBarPos.x, this.loadingBarPos.y), ig.system.context.globalAlpha = 0x1), ig.system.context.globalAlpha = this.titleLogoAlpha, this.titleLogo.draw(this.titleLogoPos.x, this.titleLogoPos.y), ig.system.context.globalAlpha = 0x1, ig.system.context.globalAlpha = this.gridAlpha, ig.system.context.fillStyle = this.grd, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.game.transitionGrid.draw(this.gridAlpha, this.grid);
    },
    'drawCoins': function () {
      this.coinIcon.draw(0x10, 0x10), ig.system.context.textAlign = 'left', ig.system.context.font = "40px archivo-black", ig.system.context.fillStyle = '#fff', ig.system.context.textBaseline = 'middle', ig.system.context.lineWidth = 0x8, ig.system.context.strokeStyle = '#000', ig.system.context.strokeText(ig.game.advStorage.getCoins(), 0x52, 0x30), ig.system.context.fillText(ig.game.advStorage.getCoins(), 0x52, 0x30), ig.system.context.textBaseline = 'alphabetic';
    },
    'enableButtons': function () {
      this.buttonPlay.enable(!0x0), this.buttonSettings.enable(!0x0), this.buttonDailyReward.enable(!0x0), this.buttonAchievement.enable(!0x0), this.buttonLootbox.enable(!0x0), this.buttonMinigames.enable(!0x0), this.buttonTieredRV.enable(!0x0), this.buttonShop.enable(!0x0), this.buttonUpgrade.enable(!0x0), this.buttonCollection.enable(!0x0), _SETTINGS.MoreGames.Enabled && this.buttonMoreGames.enable(!0x0);
    },
    'disableButtons': function () {
      this.buttonPlay.enable(!0x1), this.buttonSettings.enable(!0x1), this.buttonDailyReward.enable(!0x1), this.buttonAchievement.enable(!0x1), this.buttonLootbox.enable(!0x1), this.buttonMinigames.enable(!0x1), this.buttonTieredRV.enable(!0x1), this.buttonShop.enable(!0x1), this.buttonCollection.enable(!0x1), this.buttonUpgrade.enable(!0x1), _SETTINGS.MoreGames.Enabled && this.buttonMoreGames.enable(!0x1);
    },
    'animateIn': function () {
      this.animationTween = this.tween({
        'loadingBarAlpha': 0x0,
        'titleLogoAlpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.continueAnimatIn1
      }), this.animationTween.start();
    },
    'alternateAnimateIn': function () {
      this.animationTween = this.tween({
        'titleLogoAlpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.continueAnimatIn1
      }), this.animationTween.start();
    },
    'continueAnimatIn1': function () {
      this.buttonPlay.pos.y += 0x64, this.buttonSettings.pos.y += 0x64, this.buttonDailyReward.pos.y += 0x64, this.buttonAchievement.pos.y += 0x64, this.buttonLootbox.pos.y += 0x64, this.buttonMinigames.pos.y += 0x64, this.buttonTieredRV.pos.y += 0x64, this.buttonShop.pos.y += 0x64, this.buttonUpgrade.pos.y += 0x64, this.buttonCollection.pos.y += 0x64, this.animateButtonPlay(), this.animateButtonFullScreen(), this.tween({}, 0.1, {
        'onComplete': this.animateButtonUpgrade.bind(this)
      }).start(), this.tween({}, 0.15, {
        'onComplete': this.animateButtonAchievement.bind(this)
      }).start(), this.tween({}, 0.2, {
        'onComplete': this.animateButtonShop.bind(this)
      }).start(), this.tween({}, 0.25, {
        'onComplete': this.animateButtonDailyReward.bind(this)
      }).start(), this.tween({}, 0.3, {
        'onComplete': this.animateButtonMinigames.bind(this)
      }).start(), this.tween({}, 0.35, {
        'onComplete': this.animateButtonCollection.bind(this)
      }).start(), this.tween({}, 0.4, {
        'onComplete': this.animateButtonTieredRV.bind(this)
      }).start(), this.tween({}, 0.45, {
        'onComplete': this.animateButtonLootbox.bind(this)
      }).start(), this.tween({}, 0.5, {
        'onComplete': this.animateButtonSettings.bind(this)
      }).start(), _SETTINGS.MoreGames.Enabled && (this.buttonMoreGames.pos.y += 0x64, this.tween({}, 0.5, {
        'onComplete': this.animateButtonMoreGames.bind(this)
      }).start());
    },
    'continueAnimatIn2': function () {
      this.enableButtons();
    },
    'animateButtonFullScreen': function () {
      this.buttonFullscreen.tween({
        'alpha': 0x1
      }, 0.5, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start();
    },
    'animateButtonPlay': function () {
      this.animateButtonIn(this.buttonPlay);
    },
    'animateButtonAchievement': function () {
      this.animateButtonIn(this.buttonAchievement);
    },
    'animateButtonShop': function () {
      this.animateButtonIn(this.buttonShop);
    },
    'animateButtonUpgrade': function () {
      this.animateButtonIn(this.buttonUpgrade);
    },
    'animateButtonCollection': function () {
      this.animateButtonIn(this.buttonCollection);
    },
    'animateButtonMinigames': function () {
      this.animateButtonIn(this.buttonMinigames);
    },
    'animateButtonTieredRV': function () {
      // this.animateButtonIn(this.buttonTieredRV);
    },
    'animateButtonLootbox': function () {
      this.animateButtonIn(this.buttonLootbox);
    },
    'animateButtonDailyReward': function () {
      this.animateButtonIn(this.buttonDailyReward);
    },
    'animateButtonSettings': function () {
      this.animateButtonIn(this.buttonSettings, _SETTINGS.MoreGames.Enabled ? null : this.continueAnimatIn2);
    },
    'animateButtonMoreGames': function () {
      this.animateButtonIn(this.buttonMoreGames, this.continueAnimatIn2);
    },
    'animateOut': function () {
      ig.soundHandler.sfxPlayer.play('screenSwoosh'), this.animationTween = this.tween({
        'titleLogoAlpha': 0x0
      }, 0.6, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }), this.animationTween.start(), this.buttonFullscreen.tween({
        'alpha': 0x0
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }).start(), this.animateButtonOut(this.buttonPlay), this.animateButtonOut(this.buttonSettings), this.animateButtonOut(this.buttonTieredRV), this.animateButtonOut(this.buttonAchievement), this.animateButtonOut(this.buttonMinigames), this.animateButtonOut(this.buttonShop), this.animateButtonOut(this.buttonUpgrade), this.animateButtonOut(this.buttonCollection), this.animateButtonOut(this.buttonLootbox), this.animateButtonOut(this.buttonDailyReward), _SETTINGS.MoreGames.Enabled && this.animateButtonOut(this.buttonMoreGames), this.continueAnimatOut1();
    },
    'continueAnimatOut1': function () {
      this.animationTween = this.tween({
        'gridAlpha': 0x1
      }, 0.6, {
        'onComplete': this.continueAnimatOut2
      }), this.animationTween.start();
    },
    'continueAnimatOut2': function () {
      this.animationTween = this.tween({}, 0.3, {
        'onComplete': this.continueAnimatOut3
      }), this.animationTween.start();
    },
    'continueAnimatOut3': function () {
      ig.game.director.nextLevel();
    },
    'animateButtonIn': function (_0x49a2d6, _0x17381e) {
      this.animateButton(_0x49a2d6, _0x17381e, 0x1, -0x64);
    },
    'animateButtonOut': function (_0x7a6be7, _0x5a7a9a) {
      this.animateButton(_0x7a6be7, _0x5a7a9a, 0x0, 0x1e);
    },
    'animateButton': function (_0x377335, _0x2e3ff9, _0x3d49a2, _0x12fb4a) {
      ig.soundHandler.sfxPlayer.play('buttonSwoosh'), _0x377335.tween({
        'alpha': _0x3d49a2,
        'pos': {
          'x': _0x377335.pos.x,
          'y': _0x377335.pos.y + _0x12fb4a
        }
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': _0x2e3ff9
      }).start();
    },
    'initNextLevel': function () {
      ig.game.director.nextLevel();
    },
    'callbackPlay': function () {
      this.coinIndicator.kill(), this.animateOut(), this.disableButtons(), ig.game.advStorage.increasePlayLog();
    },
    'callbackDailyReward': function () {
      this.disableButtons(), ig.dailyreward.showWindow();
    },
    'callbackLootbox': function () {
      this.disableButtons(), ig.game.spawnEntity(ig.LootboxClaim, 0x0, 0x0, {}).onBack.addOnce(function () {
        this.enableButtons(), ig.soundHandler.sfxPlayer.play('popupSwing');
      }.bind(this)), ig.soundHandler.sfxPlayer.play('popupSwing');
    },
    'callbackShop': function () {
      this.disableButtons(), this.popupShop = ig.game.spawnEntity(EntityShop, 0x0, 0x0, {
        'callback': this.callbackRemoveShop.bind(this)
      });
    },
    'callbackUpgrade': function () {
      this.disableButtons(), this.popupUpgrade = ig.game.spawnEntity(EntityUpgradeShop, 0x0, 0x0, {
        'callback': this.callbackRemoveUpgrade.bind(this)
      });
    },
    'callbackCollection': function () {
      this.disableButtons();
      var _0x8d9952 = ig.game.spawnEntity(ig.LootboxCardCollection, 0x0, 0x0, {});
      _0x8d9952.onAction.addOnce(function (_0x307b40) {
        console.log("take action on card with id:", _0x307b40), ig.CarsData.setBonusUpgrade(_0x307b40), this.enableButtons();
      }.bind(this)), _0x8d9952.onBack.addOnce(function () {
        this.enableButtons(), ig.soundHandler.sfxPlayer.play('popupSwing');
      }.bind(this)), ig.soundHandler.sfxPlayer.play('popupSwing');
    },
    'callbackTieredRV': function () {
      this.disableButtons(), this.windowRV.show();
    },
    'callbackMinigames': function () {
      this.disableButtons(), ig.Minigame.spawnMinigamePopup(['guessTheNumber', 'matchTheCards', 'simonSays', 'mazeChallenge']).onFinishMinigame.add(function (_0x4670ae, _0x5d1d72) {
        this.enableButtons();
        if (_0x4670ae) switch (_0x5d1d72) {
          case 'guessTheNumber':
            ig.game.advStorage && ig.game.advStorage.addCoins(0xa);
            break;
          case 'matchTheCards':
            ig.game.advStorage && ig.game.advStorage.addCoins(0xa);
            break;
          case 'simonSays':
            ig.game.advStorage && ig.game.advStorage.addCoins(0xa);
            break;
          case 'mazeChallenge':
            ig.game.advStorage && ig.game.advStorage.addCoins(0xa);
        }
      }.bind(this));
    },
    'callbackAchievement': function () {
      this.disableButtons(), ig.game.spawnEntity(ig.AchievementPopup, 0x0, 0x0).onBack.addOnce(function () {
        this.enableButtons();
      }.bind(this));
    },
    'callbackSettings': function () {
      this.disableButtons(), this.popupSettings = ig.game.spawnEntity(EntitySettings, 0x0, 0x0, {
        'callback': this.callbackRemoveSettings
      });
    },
    'callbackRemoveSettings': function () {
      this.popupSettings.kill(), this.popupSettings = null, this.enableButtons();
    },
    'callbackRemoveShop': function () {
      this.popupShop.kill(), this.popupShop = null, this.enableButtons();
    },
    'callbackRemoveUpgrade': function () {
      this.popupUpgrade.kill(), this.popupUpgrade = null, this.enableButtons();
    }
  });
}), ig.baked = !0x0, ig.module('game.levels.title').requires('impact.image', 'game.entities.controllers.title-controller', 'game.entities.pointer').defines(function () {
  LevelTitle = {
    'entities': [{
      'type': 'EntityTitleController',
      'x': 0x29c,
      'y': 0xe0
    }, {
      'type': 'EntityPointer',
      'x': 0x218,
      'y': 0xc8
    }],
    'layer': []
  };
}), ig.baked = !0x0, ig.module('game.entities.buttons.slider').requires('impact.entity').defines(function () {
  EntitySlider = ig.Entity.extend({
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.A,
    'layer': 0x0,
    'isClicked': !0x1,
    'enabled': !0x0,
    'withText': !0x1,
    'isNotControls': !0x0,
    'isOver': !0x1,
    'scale': {
      'x': 0x1,
      'y': 0x1
    },
    'alpha': 0x1,
    'ignorePause': !0x0,
    'init': function (_0x342bd5, _0x48b9b5, _0x41c874) {
      this.parent(_0x342bd5, _0x48b9b5, _0x41c874), this.size.x = _0x41c874.width, this.size.y = _0x41c874.height, this.zIndex = _0x41c874.zIndex, this.fillPercent = _0x41c874.percent, this.callbackFillPercentUpdated = _0x41c874.callbackFillPercentUpdated, this.layer = ig.game.currentLayer, this.mainCircle = {
        'radius': 0.5 * this.size.y,
        'x': 0.5 * this.size.y,
        'y': 0.5 * this.size.y,
        'fill': '#0026FF'
      }, this.rect = {
        'x': this.mainCircle.radius,
        'y': 0.1 * this.size.y,
        'width': this.size.x - 0x2 * this.mainCircle.radius,
        'height': 0.8 * this.size.y,
        'fill': '#007F0E'
      }, this.leftCircle = {
        'x': this.rect.x,
        'y': 0.5 * this.size.y,
        'radius': 0.8 * this.mainCircle.radius,
        'fill': '#007F0E'
      }, this.rightCircle = {
        'x': this.rect.x + this.rect.width,
        'y': 0.5 * this.size.y,
        'radius': 0.8 * this.mainCircle.radius,
        'fill': '#007F0E'
      }, this.mainCircle.minX = this.leftCircle.x, this.mainCircle.maxX = this.rightCircle.x, this.clickPos = {
        'x': 0x0,
        'y': 0x0
      }, this.prevClickPos = {
        'x': 0x0,
        'y': 0x0
      }, this.mainCircle.x = this.mainCircle.minX + (this.mainCircle.maxX - this.mainCircle.minX) * this.fillPercent, this.enableSlider = !0x1, this.disableSlider.bind(this), window.addEventListener('mouseout', this.disableSlider);
    },
    'disableSlider': function () {
      this.enableSlider && (this.enableSlider = !0x1, this.callbackUpdateSliderVal());
    },
    'ready': function () {
      this.parent(), this.pointer = ig.game.getEntitiesByType('EntityPointer')[0x0], this.clickTime = ig.system.clock.delta();
    },
    'clicked': function () {
      var _0x5cf773 = this.clickTime;
      this.clickTime = ig.system.clock.delta(), !(0.1 > this.clickTime - _0x5cf773) && this.enabled && ig.game.currentLayer == this.layer && (this.enableSlider = this.isClicked = !0x0, this.updateSliderPos());
    },
    'updateSliderPos': function () {
      this.clickPos.x = this.pointer.pos.x - this.pos.x, this.clickPos.x < this.mainCircle.minX ? this.clickPos.x = this.mainCircle.minX : this.clickPos.x > this.mainCircle.maxX && (this.clickPos.x = this.mainCircle.maxX), this.clickPos.x != this.prevClickPos.x && (this.prevClickPos.x = this.clickPos.x, this.fillPercent = (this.clickPos.x - this.mainCircle.minX) / (this.mainCircle.maxX - this.mainCircle.minX), this.mainCircle.x = this.clickPos.x, this.callbackFillPercentUpdated(this.fillPercent));
    },
    'clicking': function () {},
    'released': function () {
      this.isClicked && this.enabled && (this.enableSlider = this.isClicked = !0x1, ig.domHandler.getElementById('#canvas').css('cursor', 'default'));
    },
    'leave': function () {
      this.enabled && (this.isOver = this.isClicked = !0x1, ig.domHandler.getElementById('#canvas').css('cursor', 'default'));
    },
    'over': function () {
      ig.game.currentLayer == this.layer && this.enabled && (ig.domHandler.getElementById('#canvas').css('cursor', 'pointer'), this.isOver = !0x0);
    },
    'update': function () {
      this._killed || (this.parent(), ig.input.state('click') && this.enableSlider ? this.updateSliderPos() : this.enableSlider && this.disableSlider());
    },
    'draw': function () {
      this.parent();
      var _0x5478ad = ig.system.context;
      _0x5478ad.save(), _0x5478ad.translate(ig.system.getDrawPos(this.pos.x.round()), ig.system.getDrawPos(this.pos.y.round())), ig.system.context.fillStyle = '#000000', ig.system.context.strokeStyle = this.rect.fill, ig.system.context.lineWidth = 0x2, ig.system.context.beginPath(), ig.system.context.arc(this.leftCircle.x, this.leftCircle.y, this.leftCircle.radius, 0.5 * Math.PI, 1.5 * Math.PI), ig.system.context.rect(this.rect.x, this.rect.y, this.rect.width, this.rect.height), ig.system.context.arc(this.rightCircle.x, this.rightCircle.y, this.rightCircle.radius, 1.5 * Math.PI, 2.5 * Math.PI), ig.system.context.stroke(), ig.system.context.fill(), ig.system.context.fillStyle = this.rect.fill, ig.system.context.beginPath(), ig.system.context.arc(this.leftCircle.x, this.leftCircle.y, this.leftCircle.radius, 0.5 * Math.PI, 1.5 * Math.PI), ig.system.context.rect(this.rect.x, this.rect.y, this.rect.width * this.fillPercent, this.rect.height), ig.system.context.fill(), ig.system.context.beginPath(), ig.system.context.fillStyle = this.mainCircle.fill, ig.system.context.strokeStyle = '#000000', ig.system.context.arc(this.mainCircle.x, this.mainCircle.y, this.mainCircle.radius, 0x0, 0x2 * Math.PI), ig.system.context.stroke(), ig.system.context.fill(), _0x5478ad.restore();
    },
    'enable': function (_0x48288a) {
      if (!this.enabled || !_0x48288a) this.enabled = _0x48288a, this.isOver = !0x1;
    },
    'setToUnclickable': function () {
      this.type = ig.Entity.TYPE.NONE;
    },
    'setToClickable': function () {
      this.type = ig.Entity.TYPE.A;
    },
    'kill': function () {
      this.parent(), window.removeEventListener('mouseout', this.disableSlider), this.killed = !0x0, this.tweenScale && this.tweenScale.stop(), this.layer = this.size = this.currentImage = this.clickImage = this.idleImage = this.callback = this.tweenScale = null;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.buttons.debug-slider').requires('impact.entity', 'game.entities.buttons.slider').defines(function () {
  EntityDebugSlider = ig.Entity.extend({
    'init': function (_0x429901, _0x4201d5, _0x40b463) {
      this.parent(_0x429901, _0x4201d5, _0x40b463), this.zIndex = ig.game.entitiesZIndex.Debug + 0x1, this.text = _0x40b463.text, this.minVal = _0x40b463.minVal, this.maxVal = _0x40b463.maxVal, this.currentVal = _0x40b463.initValue, this.range = this.maxVal - this.minVal, this.callbackUpdateDebugVal = _0x40b463.callbackUpdateDebugVal, this.callbackFillPercentUpdated = this.callbackFillPercentUpdated.bind(this), this.callbackUpdateSliderVal = this.callbackUpdateSliderVal.bind(this), this.slider = ig.game.spawnEntity(EntitySlider, this.pos.x + 0x64, this.pos.y, {
        'width': 0xbe,
        'height': 0x12,
        'zIndex': this.zIndex + 0x1,
        'percent': (this.currentVal - this.minVal) / (this.maxVal - this.minVal),
        'callbackFillPercentUpdated': this.callbackFillPercentUpdated,
        'callbackUpdateSliderVal': this.callbackUpdateSliderVal
      }), this.textFormat = {
        'align': 'center',
        'font': "10px archivo-black",
        'fillStyle': '#00ff00',
        'text': this.text,
        'x': 0x32,
        'y': 0x4
      }, this.textFormatVal = {
        'align': 'center',
        'font': "10px archivo-black",
        'fillStyle': '#00ff00',
        'text': '(' + this.currentVal + ')',
        'x': 0x32,
        'y': 0x14
      }, this.callbackUpdateSliderVal();
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent(), ig.system.context.save(), ig.system.context.translate(this.textFormat.x + this.pos.x, this.textFormat.y + this.pos.y), ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.fillText(this.textFormat.text, 0x0, 0x0), ig.system.context.restore(), ig.system.context.save(), ig.system.context.translate(this.textFormatVal.x + this.pos.x, this.textFormatVal.y + this.pos.y), ig.system.context.textAlign = this.textFormatVal.align, ig.system.context.font = this.textFormatVal.font, ig.system.context.fillStyle = this.textFormatVal.fillStyle, ig.system.context.fillText(this.textFormatVal.text, 0x0, 0x0), ig.system.context.restore();
    },
    'callbackFillPercentUpdated': function (_0x525c72) {
      this.currentVal = Math.floor(_0x525c72 * this.range) + this.minVal, this.textFormatVal.text = '(' + this.currentVal + ')';
    },
    'callbackUpdateSliderVal': function () {
      this.callbackUpdateDebugVal(this.currentVal);
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.debug-control').requires('impact.entity', 'game.entities.buttons.debug-slider').defines(function () {
  EntityDebugControl = ig.Entity.extend({
    'init': function (_0x184c31, _0x4af1a3, _0x2d9dd7) {
      this.parent(_0x184c31, _0x4af1a3, _0x2d9dd7), this.zIndex = ig.game.entitiesZIndex.Debug, this.road = _0x2d9dd7.road, this.callbackDebugUpdateRoadWidth = _0x2d9dd7.callbackDebugUpdateRoadWidth, this.callbackDebugUpdateCameraHeight = _0x2d9dd7.callbackDebugUpdateCameraHeight, this.callbackDebugUpdateDrawDistance = _0x2d9dd7.callbackDebugUpdateDrawDistance, this.callbackDebugUpdateFieldOfView = _0x2d9dd7.callbackDebugUpdateFieldOfView, this.callbackDebugUpdateFogDensity = _0x2d9dd7.callbackDebugUpdateFogDensity, this.callbackUpdateSlider1Val = this.callbackUpdateSlider1Val.bind(this), this.callbackUpdateSlider2Val = this.callbackUpdateSlider2Val.bind(this), this.callbackUpdateSlider3Val = this.callbackUpdateSlider3Val.bind(this), this.callbackUpdateSlider4Val = this.callbackUpdateSlider4Val.bind(this), this.callbackUpdateSlider5Val = this.callbackUpdateSlider5Val.bind(this), this.slider1 = ig.game.spawnEntity(EntityDebugSlider, 0x0, 0x1e, {
        'text': "Road Width",
        'minVal': 0x1f4,
        'maxVal': 0xbb8,
        'initValue': this.road.roadWidth,
        'callbackUpdateDebugVal': this.callbackUpdateSlider1Val
      }), this.slider2 = ig.game.spawnEntity(EntityDebugSlider, 0x0, 0x46, {
        'text': "Camera Height",
        'minVal': 0x1f4,
        'maxVal': 0x1388,
        'initValue': this.road.cameraHeight,
        'callbackUpdateDebugVal': this.callbackUpdateSlider2Val
      }), this.slider3 = ig.game.spawnEntity(EntityDebugSlider, 0x0, 0x6e, {
        'text': "Draw Distance",
        'minVal': 0x64,
        'maxVal': 0x1f4,
        'initValue': this.road.drawDistance,
        'callbackUpdateDebugVal': this.callbackUpdateSlider3Val
      }), this.slider4 = ig.game.spawnEntity(EntityDebugSlider, 0x0, 0x96, {
        'text': "Field of View",
        'minVal': 0x50,
        'maxVal': 0x8c,
        'initValue': this.road.fieldOfView,
        'callbackUpdateDebugVal': this.callbackUpdateSlider4Val
      }), this.slider5 = ig.game.spawnEntity(EntityDebugSlider, 0x0, 0xbe, {
        'text': 'Fog',
        'minVal': 0x0,
        'maxVal': 0x32,
        'initValue': this.road.fogDensity,
        'callbackUpdateDebugVal': this.callbackUpdateSlider5Val
      }), this.textFormat = {
        'align': 'left',
        'font': "12px archivo-black",
        'fillStyle': '#00ff00',
        'text': 'DEBUG',
        'x': 0x4,
        'y': 0xe
      };
    },
    'clicked': function () {
      console.log('clicked');
    },
    'clicking': function () {
      console.log('clicking');
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent(), ig.system.context.strokeStyle = '#00ff00', ig.system.context.lineWidth = 0x1, ig.system.context.strokeRect(0x0, 0x0, 0x12c, 0xf0), ig.system.context.fillStyle = '#00000055', ig.system.context.fillRect(0x0, 0x0, 0x12c, 0xf0), ig.system.context.save(), ig.system.context.translate(this.textFormat.x, this.textFormat.y), ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.fillText(this.textFormat.text, 0x0, 0x0), ig.system.context.restore();
    },
    'callbackUpdateSlider1Val': function (_0xc57b1c) {
      this.callbackDebugUpdateRoadWidth(_0xc57b1c);
    },
    'callbackUpdateSlider2Val': function (_0x100884) {
      this.callbackDebugUpdateCameraHeight(_0x100884);
    },
    'callbackUpdateSlider3Val': function (_0x571322) {
      this.callbackDebugUpdateDrawDistance(_0x571322);
    },
    'callbackUpdateSlider4Val': function (_0x15a39e) {
      this.callbackDebugUpdateFieldOfView(_0x15a39e);
    },
    'callbackUpdateSlider5Val': function (_0x17885d) {
      this.callbackDebugUpdateFogDensity(_0x17885d);
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.road').requires('impact.entity').defines(function () {
  EntityRoad = ig.Entity.extend({
    'groundImage': new ig.Image('media/graphics/game/ground.png'),
    'startLineImage': new ig.Image('media/graphics/game/start-line.png'),
    'treesImages': [new ig.Image('media/graphics/game/tree1.png'), new ig.Image('media/graphics/game/tree2.png'), new ig.Image('media/graphics/game/tree3.png'), new ig.Image('media/graphics/game/tree4.png')],
    'mushImages': [new ig.Image('media/graphics/game/mush1.png'), new ig.Image('media/graphics/game/mush2.png'), new ig.Image('media/graphics/game/mush3.png')],
    'tiresAndConesImages': [new ig.Image('media/graphics/game/envi-tire.png'), new ig.Image('media/graphics/game/envi-cone.png')],
    'photographersImages': [new ig.Image('media/graphics/game/envi-people1.png'), new ig.Image('media/graphics/game/envi-people2.png'), new ig.Image('media/graphics/game/envi-people3.png')],
    'flag': new ig.Image('media/graphics/game/envi-flag1.png'),
    'finishBanner': new ig.Image('media/graphics/game/finish-banner.png'),
    'gameBanner': new ig.Image('media/graphics/game/game-banner.png'),
    'horizon': new ig.Image('media/graphics/game/horizon.png'),
    'smoke': new ig.Image('media/graphics/game/smoke.png'),
    'speedupMarker': new ig.Image('media/graphics/game/speedup-marker.png'),
    'init': function (_0x24bf2d, _0x59fdc9, _0x4049d7) {
      this.parent(_0x24bf2d, _0x59fdc9, _0x4049d7), this.callbackDrawPlayer = _0x4049d7.callbackDrawPlayer, this.callbackRoadCurveUpdate = _0x4049d7.callbackRoadCurveUpdate, this.callbackAddedNextTrack = _0x4049d7.callbackAddedNextTrack, this.callbackSpawnCollectibles = _0x4049d7.callbackSpawnCollectibles, this.ctx = _0x4049d7.ctxt;
    },
    'initialize': function () {
      this.initProps(), this.initRoad(), this.initSprites(), this.connectNextTrack(this.endLineSegment);
    },
    'initProps': function () {
      this.fps = 0x3c, this.step = 0x1 / this.fps, this.width = 0x500, this.halfWidth = 0.5 * this.width, this.height = 0x26c, this.halfHeight = 0.5 * this.height, this.segments = [], this.roadWidth = 0x898, this.segmentLength = ig.game.levelData.segmentLength, this.fieldOfView = 0x78, this.cameraHeight = 0x5dc, this.cameraDepth = 0x1 / Math.tan(this.fieldOfView / 0x2 * Math.PI / 0xb4), this.drawDistance = 0x78, this.playerZ = this.cameraHeight * this.cameraDepth, this.fogDensity = 2.5, this.fogDistance = 0xf, this.noFogDistance = this.drawDistance - this.fogDistance, this.maxSpeed = 0.5 * (this.segmentLength / this.step), this.centrifugal = 0.01, this.prodOfHalfWidthAndRoadWidth = this.halfWidth * this.roadWidth, this.maxy = this.height + 0x64, this.systemHalfWidth = 0.5 * ig.system.width, this.groundDrawHeight = 0x1, this.grassFill = '#A8F035', this.horizonFillDrawData = {
        'x': 0x0,
        'y': this.horizon.height,
        'width': this.horizon.width,
        'height': Math.abs(this.horizon.height - ig.system.height)
      }, this.groundSlice = ig.game.levelData.groundSlice, this.groundSliceHeight = this.groundImage.height / this.groundSlice, this.backgroundXPos = this.roadRotation = 0x0, this.laneOffset = [-0.67, 0x0, 0.67], this.raceEnded = !0x1, this.trackEnds = [], this.trackSegmentsLength = [0x0], this.initializedSpriteSegmentLength = 0x0, this.tracks = [];
    },
    'updateTrackCount': function () {
      0x0 == this.tracks.length && (this.tracks = this.tracks.concat(ig.game.levelData.enabledTracks));
      var _0x402f47 = Math.floor(Math.random() * this.tracks.length);
      ig.game.trackCount = this.tracks[_0x402f47], this.tracks.splice(_0x402f47, 0x1);
    },
    'initRoad': function () {
      this.updateTrackCount();
      var _0x1547d3 = ig.game.levelData.getLevelData(ig.game.trackCount);
      this.segments = _0x1547d3.segments, ig.game.levelData.initSpeedUpPlatform(this.segments, 0x0), this.trackLength = _0x1547d3.trackLength, this.callbackSpawnCollectibles(this.segments.length, 0x0), this.endLineSegment = _0x1547d3.endLineSegment, this.trackEnds.push(this.trackLength), this.trackSegmentsLength.push(this.segments.length), this.position = this.initialPosition = 0x9c4;
    },
    'getDistanceTravelledInMeters': function () {
      return Math.floor((this.position - this.initialPosition) / 0x12c);
    },
    'connectNextTrack': function (_0x59ecbf) {
      this.updateTrackCount();
      var _0x51263f = ig.game.levelData.getNextLevel(ig.game.trackCount, _0x59ecbf);
      this.initializedSpriteSegmentLength = this.segments.length, this.segments = this.segments.concat(_0x51263f.segments), ig.game.levelData.initSpeedUpPlatform(this.segments, _0x59ecbf.index), this.trackLength += _0x51263f.trackLength, this.callbackSpawnCollectibles(this.segments.length, _0x59ecbf.index), this.trackEnds.push(this.trackLength), this.trackSegmentsLength.push(this.segments.length), this.endLineSegment = _0x51263f.endLineSegment, this.initSprites();
    },
    'initSprites': function () {
      this.addTrees(), this.addConesAndTires(), this.addPhotographers(), this.addMushrooms(), this.addFlags(), this.addGameBanners();
    },
    'addTrees': function () {
      for (var _0x4e66ff = this.initializedSpriteSegmentLength; _0x4e66ff < this.segments.length - 0x3;) this.addTree(_0x4e66ff, -2.2 - 0x4 * Math.random()), this.addTree(_0x4e66ff + 0x2, 2.2 + 0x4 * Math.random()), _0x4e66ff += 0x4;
    },
    'addMushrooms': function () {
      for (var _0x425295 = this.initializedSpriteSegmentLength; _0x425295 < this.segments.length - 0x11;) {
        var _0x29fb74 = Math.random();
        0.125 >= _0x29fb74 ? (this.addMushroom(_0x425295 + 0x5, -0x2 - 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x8, -0x2 - 0.2 * Math.random())) : 0.25 >= _0x29fb74 ? (this.addMushroom(_0x425295 + 0x5, 0x2 + 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x8, 0x2 + 0.2 * Math.random())) : 0.375 >= _0x29fb74 ? (this.addMushroom(_0x425295 + 0xa, -0x2 - 0.2 * Math.random()), this.addMushroom(_0x425295 + 0xd, -0x2 - 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x10, -0x2 - 0.2 * Math.random())) : 0.5 >= _0x29fb74 ? (this.addMushroom(_0x425295 + 0xa, 0x2 + 0.2 * Math.random()), this.addMushroom(_0x425295 + 0xd, 0x2 + 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x10, 0x2 + 0.2 * Math.random())) : 0.625 >= _0x29fb74 ? (this.addMushroom(_0x425295 + 0x8, -0x2 - 0.2 * Math.random()), this.addMushroom(_0x425295 + 0xc, -0x2 - 0.2 * Math.random())) : 0.75 >= _0x29fb74 ? (this.addMushroom(_0x425295 + 0x8, 0x2 + 0.2 * Math.random()), this.addMushroom(_0x425295 + 0xc, 0x2 + 0.2 * Math.random())) : 0.875 >= _0x29fb74 ? (this.addMushroom(_0x425295 + 0x2, 0x2 + 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x5, 0x2 + 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x8, 0x2 + 0.2 * Math.random())) : 0x1 >= _0x29fb74 && (this.addMushroom(_0x425295 + 0x2, -0x2 - 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x5, -0x2 - 0.2 * Math.random()), this.addMushroom(_0x425295 + 0x8, -0x2 - 0.2 * Math.random())), _0x425295 += 0x14;
      }
    },
    'addMushroom': function (_0xfbd24e, _0x4ae605) {
      this.addSprite(_0xfbd24e, this.getRamdomMushroom(), _0x4ae605, 0x0, 1.3);
    },
    'getRamdomMushroom': function () {
      return this.mushImages[Math.floor(Math.random() * this.mushImages.length)];
    },
    'addTree': function (_0x58d605, _0x3c3c8b) {
      this.addSprite(_0x58d605, this.getRamdomTreeImage(), _0x3c3c8b, 0x0, 1.3);
    },
    'getRamdomTreeImage': function () {
      return this.treesImages[Math.floor(Math.random() * this.treesImages.length)];
    },
    'addConesAndTires': function () {
      for (var _0x1185e3 = this.initializedSpriteSegmentLength + 0xa; _0x1185e3 < this.segments.length - 0xd;) {
        var _0x59ff8d = Math.random();
        0.2 >= _0x59ff8d ? (this.addTireOrCone(_0x1185e3 + 0x3, 0x1, -1.3), this.addTireOrCone(_0x1185e3 + 0x6, 0x1, -1.3), this.addTireOrCone(_0x1185e3 + 0x9, 0x1, -1.3)) : 0.4 >= _0x59ff8d ? (this.addTireOrCone(_0x1185e3 + 0x3, 0x0, 1.3), this.addTireOrCone(_0x1185e3 + 0x9, 0x0, 1.3)) : 0.6 >= _0x59ff8d ? (this.addTireOrCone(_0x1185e3 + 0x3, 0x0, -1.3), this.addTireOrCone(_0x1185e3 + 0x6, 0x0, -1.3), this.addTireOrCone(_0x1185e3 + 0x3, 0x0, 1.3), this.addTireOrCone(_0x1185e3 + 0x9, 0x0, 1.3)) : 0.8 >= _0x59ff8d ? (this.addTireOrCone(_0x1185e3, 0x1, -1.3), this.addTireOrCone(_0x1185e3 + 0x3, 0x1, -1.3), this.addTireOrCone(_0x1185e3 + 0x9, 0x1, -1.3), this.addTireOrCone(_0x1185e3 + 0xc, 0x1, -1.3)) : 0x1 >= _0x59ff8d && (this.addTireOrCone(_0x1185e3, 0x0, 1.3), this.addTireOrCone(_0x1185e3 + 0x3, 0x0, 1.3), this.addTireOrCone(_0x1185e3 + 0x6, 0x0, 1.3), this.addTireOrCone(_0x1185e3 + 0x9, 0x0, 1.3), this.addTireOrCone(_0x1185e3 + 0xc, 0x0, 1.3)), _0x1185e3 += 0x1e;
      }
    },
    'addTireOrCone': function (_0x586178, _0x5eb00b, _0x30ee78) {
      this.addSprite(_0x586178, this.tiresAndConesImages[_0x5eb00b], _0x30ee78, 0.1, 0.7);
    },
    'addPhotographers': function () {
      for (var _0x50d066 = this.initializedSpriteSegmentLength + 0xa; _0x50d066 < this.segments.length - 0x19;) {
        var _0x1a1a2b = Math.random();
        0.2 >= _0x1a1a2b ? (this.addPhotographer(_0x50d066 + 0xf, 0x0, -1.3), this.addPhotographer(_0x50d066 + 0x12, 0x1, -1.3)) : 0.4 >= _0x1a1a2b ? (this.addPhotographer(_0x50d066 + 0x12, 0x2, 1.3), this.addPhotographer(_0x50d066 + 0x18, 0x0, 1.3), this.addPhotographer(_0x50d066 + 0x1b, 0x1, 1.3)) : 0.6 >= _0x1a1a2b ? (this.addPhotographer(_0x50d066 + 0xf, 0x1, -1.3), this.addPhotographer(_0x50d066 + 0x15, 0x2, -1.3), this.addPhotographer(_0x50d066 + 0x12, 0x0, 1.3), this.addPhotographer(_0x50d066 + 0x18, 0x2, 1.3)) : 0.8 >= _0x1a1a2b ? (this.addPhotographer(_0x50d066 + 0xf, 0x0, -1.3), this.addPhotographer(_0x50d066 + 0x12, 0x2, -1.3), this.addPhotographer(_0x50d066 + 0x18, 0x1, -1.3), this.addPhotographer(_0x50d066 + 0x15, 0x0, 1.3)) : 0x1 >= _0x1a1a2b && (this.addPhotographer(_0x50d066 + 0x12, 0x0, -1.3), this.addPhotographer(_0x50d066 + 0xf, 0x1, -1.3), this.addPhotographer(_0x50d066 + 0x12, 0x2, -1.3)), _0x50d066 += 0x1e;
      }
    },
    'addPhotographer': function (_0x24790f, _0x5f5cb3, _0x27b51f) {
      this.addSprite(_0x24790f, this.photographersImages[_0x5f5cb3], _0x27b51f, 0x0, 0.8, 0x0 < _0x27b51f ? !0x0 : !0x1);
    },
    'addFlags': function () {
      for (var _0x476838 = this.initializedSpriteSegmentLength + 0xa; _0x476838 < this.segments.length - 0x10;) {
        var _0x35cc9c = Math.random();
        0.2 >= _0x35cc9c ? (this.addLeftFlag(_0x476838 + 0x2), this.addLeftFlag(_0x476838 + 0xe)) : 0.4 >= _0x35cc9c ? (this.addRightFlag(_0x476838 + 0x2), this.addRightFlag(_0x476838 + 0xf)) : 0.6 >= _0x35cc9c ? (this.addLeftFlag(_0x476838 + 0x5), this.addLeftFlag(_0x476838 + 0xb)) : 0.8 >= _0x35cc9c ? (this.addRightFlag(_0x476838 + 0x5), this.addRightFlag(_0x476838 + 0xb)) : 0x1 >= _0x35cc9c && (this.addRightFlag(_0x476838 + 0xb), this.addLeftFlag(_0x476838 + 0xb)), _0x476838 += 0x1e;
      }
    },
    'addLeftFlag': function (_0x3259fe) {
      this.addSprite(_0x3259fe, this.flag, -1.4, 0x0, 0.9);
    },
    'addRightFlag': function (_0x2bc2c0) {
      this.addSprite(_0x2bc2c0, this.flag, 1.4, 0x0, 0.9, !0x0);
    },
    'addFinishBanner': function () {
      this.addSprite(this.endLineSegment.index, this.finishBanner, 0x0, 0x0, 0.9);
    },
    'addGameBanners': function () {
      for (var _0x292f5b = this.initializedSpriteSegmentLength + 0x3c; _0x292f5b < this.segments.length - 0x1e;) {
        var _0xb9071 = Math.random();
        if (_0x292f5b <= this.endLineSegment.index && _0x292f5b + 0x64 > this.endLineSegment.index) break;
        0.2 >= _0xb9071 ? this.addGameBanner(_0x292f5b + 0x2) : 0.4 >= _0xb9071 ? this.addGameBanner(_0x292f5b + 0xb) : 0.6 >= _0xb9071 ? this.addGameBanner(_0x292f5b + 0x14) : 0.8 >= _0xb9071 && this.addGameBanner(_0x292f5b + 0x1d), _0x292f5b += 0x3c;
      }
    },
    'addGameBanner': function (_0x259e97) {
      0.7 > Math.random() ? this.addSprite(_0x259e97, this.gameBanner, 0x0, 0x0, 0.9) : this.addSprite(_0x259e97, this.finishBanner, 0x0, 0x0, 0.9);
    },
    'addSpeedUps': function () {
      for (var _0x1d0682 = this.initializedSpriteSegmentLength; _0x1d0682 < this.segments.length;) Math.random(), this.addSpeedUp(_0x1d0682), _0x1d0682 += 0xa;
    },
    'addSpeedUp': function (_0xbbc9b4) {
      this.segments[_0xbbc9b4].speedups.push({
        'image': this.speedupMarker,
        'offsetX': 0x0,
        'scale': 0x1
      });
    },
    'addSprite': function (_0x56fa55, _0x1b278e, _0x2969f5, _0x2a362d, _0x5895ce, _0x2b7cae) {
      this.segments[_0x56fa55].sprites.push({
        'image': _0x1b278e,
        'offsetX': _0x2969f5,
        'offsetY': _0x2a362d,
        'scale': _0x5895ce,
        'flip': _0x2b7cae
      });
    },
    'setCharacterProperties': function (_0x24e7b7) {
      this.characterScale = _0x24e7b7, this.spriteScale = this.characterScale * this.prodOfHalfWidthAndRoadWidth;
    },
    'renderRoad': function (_0x428086) {
      var _0x3ce97c = this.findSegment(this.position),
        _0x551758 = this.percentRemaining(this.position);
      this.playerY = this.interpolate(this.playerSegment.p1.world.y, this.playerSegment.p2.world.y, this.playerPercent);
      var _0x509ed8 = -(_0x3ce97c.curve * _0x551758),
        _0x10763e = 0x0,
        _0x38bd20 = this.maxy;
      this.initialCameraX = _0x428086 * this.roadWidth, this.initialCameraY = this.playerY + this.cameraHeight;
      var _0x391689, _0x13740b;
      this.ctx.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), this.drawHorizon();
      for (_0x551758 = 0x0; _0x551758 < this.drawDistance; _0x551758++) _0x391689 = this.segments[(_0x3ce97c.index + _0x551758) % this.segments.length], _0x391689.looped = _0x391689.index < _0x3ce97c.index, _0x391689.fog = this.exponentialFog(_0x551758 / this.drawDistance), _0x391689.clip = _0x38bd20 + 0x1, this.project(_0x391689.p1, this.initialCameraX - _0x10763e, this.initialCameraY, this.position - (_0x391689.looped ? this.trackLength : 0x0)), this.project(_0x391689.p2, this.initialCameraX - _0x10763e - _0x509ed8, this.initialCameraY, this.position - (_0x391689.looped ? this.trackLength : 0x0)), _0x10763e += _0x509ed8, _0x509ed8 += _0x391689.curve, _0x391689.p1.camera.z <= this.cameraDepth || _0x391689.p2.screen.y >= _0x38bd20 || (this.segment(this.ctx, _0x391689.p1.screen.x, _0x391689.p1.screen.y, _0x391689.p1.screen.w, _0x391689.p2.screen.x, _0x391689.p2.screen.y, _0x391689.p2.screen.w, _0x391689.fog, _0x391689.groundSliceCount, _0x391689.speedUpData, this.endLineSegment.index - _0x391689.index), _0x38bd20 = _0x391689.p2.screen.y);
      for (_0x551758 = this.drawDistance - 0x1; 0x0 < _0x551758; _0x551758--) {
        _0x391689 = this.segments[(_0x3ce97c.index + _0x551758) % this.segments.length];
        for (i = 0x0; i < _0x391689.collectibles.length; i++) collectible = _0x391689.collectibles[i], this.project2(collectible.p, this.interpolate(_0x391689.p1.camera.x, _0x391689.p2.camera.x, collectible.percent), this.interpolate(_0x391689.p1.camera.y, _0x391689.p2.camera.y, collectible.percent), this.interpolate(_0x391689.p1.camera.z, _0x391689.p2.camera.z, collectible.percent)), _0x10763e = collectible.p.scale, _0x38bd20 = collectible.p.screenX + _0x10763e * this.prodOfHalfWidthAndRoadWidth * (collectible.offset - 0.08 * (_0x428086 - collectible.offset)), _0x13740b = collectible.p.screenY, this.drawCollectibleShadow(_0x10763e, _0x38bd20, _0x13740b, _0x391689.clip);
      }
      for (_0x551758 = this.drawDistance - 0x1; 0x0 < _0x551758; _0x551758--) {
        _0x391689 = this.segments[(_0x3ce97c.index + _0x551758) % this.segments.length], this.ctx.globalAlpha = _0x391689.fog;
        for (i = 0x0; i < _0x391689.sprites.length; i++) _0x509ed8 = _0x391689.sprites[i], _0x10763e = _0x391689.p1.screen.scale * _0x509ed8.scale, _0x38bd20 = _0x391689.p1.screen.x + _0x391689.p1.screen.scale * _0x509ed8.offsetX * this.prodOfHalfWidthAndRoadWidth, _0x13740b = _0x391689.p1.screen.y, this.drawSprite(_0x509ed8.image, _0x10763e, _0x38bd20, _0x13740b, _0x391689.clip, _0x509ed8.flip);
        for (i = 0x0; i < _0x391689.collectibles.length; i++) collectible = _0x391689.collectibles[i], this.project2(collectible.p, this.interpolate(_0x391689.p1.camera.x, _0x391689.p2.camera.x, collectible.percent), this.interpolate(_0x391689.p1.camera.y, _0x391689.p2.camera.y, collectible.percent), this.interpolate(_0x391689.p1.camera.z, _0x391689.p2.camera.z, collectible.percent)), _0x10763e = collectible.p.scale, _0x38bd20 = collectible.p.screenX + _0x10763e * this.prodOfHalfWidthAndRoadWidth * (collectible.offset - 0.08 * (_0x428086 - collectible.offset)), _0x13740b = collectible.p.screenY - 0x186a0 * _0x10763e, this.drawCollectible(collectible, this.ctx, _0x10763e, _0x38bd20, _0x13740b, _0x391689.clip, _0x391689.fog);
        for (i = 0x0; i < _0x391689.cars.length; i++) car = _0x391689.cars[i], this.project2(car.p, this.interpolate(_0x391689.p1.camera.x, _0x391689.p2.camera.x, car.percent), this.interpolate(_0x391689.p1.camera.y, _0x391689.p2.camera.y, car.percent), this.interpolate(_0x391689.p1.camera.z, _0x391689.p2.camera.z, car.percent)), _0x10763e = car.p.scale, _0x38bd20 = car.p.screenX + _0x10763e * this.prodOfHalfWidthAndRoadWidth * (car.offset - 0.08 * (_0x428086 - car.offset)), _0x13740b = car.p.screenY, this.drawCar(car, this.ctx, _0x10763e, _0x38bd20, _0x13740b, _0x391689.clip, _0x391689.fog);
        _0x391689 == this.playerSegment && this.callbackDrawPlayer();
        for (i = 0x0; i < _0x391689.smokes.length; i++) _0x509ed8 = _0x391689.smokes[i], _0x10763e = _0x391689.p1.screen.scale * _0x509ed8.scale, _0x38bd20 = _0x391689.p1.screen.x + _0x391689.p1.screen.scale * _0x509ed8.offsetX * this.prodOfHalfWidthAndRoadWidth, _0x13740b = _0x391689.p1.screen.y + _0x509ed8.offsetY * _0x391689.p1.screen.scale, this.drawSmoke(_0x509ed8.image, _0x10763e, _0x38bd20, _0x13740b, _0x391689.clip, _0x509ed8.alpha * _0x391689.fog);
        this.ctx.globalAlpha = 0x1;
      }
    },
    'project': function (_0x322863, _0x2500d4, _0x5c303a, _0x1988bf) {
      _0x322863.camera.x = (_0x322863.world.x || 0x0) - _0x2500d4, _0x322863.camera.y = (_0x322863.world.y || 0x0) - _0x5c303a, _0x322863.camera.z = (_0x322863.world.z || 0x0) - _0x1988bf, _0x322863.screen.scale = this.cameraDepth / _0x322863.camera.z, _0x322863.screen.x = Math.round(this.halfWidth + _0x322863.screen.scale * _0x322863.camera.x * this.halfWidth) | 0x0, _0x322863.screen.y = Math.round(this.halfHeight - _0x322863.screen.scale * _0x322863.camera.y * this.halfHeight) | 0x0, _0x322863.screen.w = Math.round(_0x322863.screen.scale * this.prodOfHalfWidthAndRoadWidth) | 0x0;
    },
    'project2': function (_0x48a066, _0x56fa36, _0x389e2b, _0x173423) {
      _0x48a066.scale = this.cameraDepth / _0x173423, _0x48a066.screenX = Math.round(this.halfWidth + _0x48a066.scale * _0x56fa36 * this.halfWidth) | 0x0, _0x48a066.screenY = Math.round(this.halfHeight - _0x48a066.scale * _0x389e2b * this.halfHeight) | 0x0;
    },
    'segment': function (_0x2499a2, _0x572291, _0x31ae85, _0x5b87d1, _0x5d99a1, _0x507038, _0xef0db9, _0xc2a12d, _0x5da9ce, _0x39222d, _0x536160) {
      _0x2499a2.globalAlpha = _0xc2a12d, _0x2499a2.fillStyle = this.grassFill, _0x2499a2.fillRect(0x0, _0x507038, this.width, _0x31ae85 - _0x507038), this.ground(_0x2499a2, _0x572291 - _0x5b87d1, _0x31ae85, _0x572291 + _0x5b87d1, _0x5d99a1 + _0xef0db9, _0x507038, _0x5d99a1 - _0xef0db9, _0x5da9ce, _0x39222d, _0x536160), _0x2499a2.globalAlpha = 0x1;
    },
    'ground': function (_0x1ddffc, _0x1434ec, _0x10ed61, _0x5e0fd0, _0x48ebe1, _0x41a0f7, _0x5268dc, _0x4e3a32, _0x53f9af, _0x554dcc) {
      _0x41a0f7 = _0x10ed61 - _0x41a0f7, _0x5268dc = _0x1434ec - _0x5268dc, _0x48ebe1 = _0x5e0fd0 - _0x48ebe1;
      var _0x3c087c = 0x0;
      _0x4e3a32 = _0x4e3a32 * this.groundSliceHeight | 0x0;
      for (var _0x5b0637, _0x2e9d19, _0x5b3257, _0x43754b = 0x1; _0x43754b <= _0x41a0f7; _0x43754b++) _0x3c087c = _0x43754b / _0x41a0f7, _0x5b0637 = _0x1434ec - _0x5268dc * _0x3c087c | 0x0, _0x2e9d19 = _0x10ed61 - _0x43754b | 0x0, _0x5b3257 = _0x5e0fd0 - _0x48ebe1 * _0x3c087c - _0x5b0637 | 0x0, imageY = this.groundSliceHeight * (0x1 - _0x3c087c), _0x2e9d19 > ig.system.height || (_0x1ddffc.drawImage(this.groundImage.data, 0x0, _0x4e3a32 + imageY | 0x0, this.groundImage.width, 0x1, _0x5b0637, _0x2e9d19, _0x5b3257, this.groundDrawHeight), 0x0 <= _0x554dcc && 0x1 >= _0x554dcc && _0x1ddffc.drawImage(this.startLineImage.data, 0x0, _0x554dcc * this.groundSliceHeight + imageY | 0x0, this.startLineImage.width, 0x1, _0x5b0637, _0x2e9d19, _0x5b3257 * (this.startLineImage.width / this.groundImage.width) | 0x0, this.groundDrawHeight), _0x53f9af.enabled && _0x1ddffc.drawImage(this.speedupMarker.data, 0x0, _0x53f9af.sliceCount * this.groundSliceHeight + imageY | 0x0, this.speedupMarker.width, 0x1, _0x5b0637 + 0.5 * _0x5b3257 * (0x1 + _0x53f9af.offset - this.speedupMarker.width / this.groundImage.width) | 0x0, _0x2e9d19, _0x5b3257 * (this.speedupMarker.width / this.groundImage.width) | 0x0, this.groundDrawHeight));
    },
    'drawSprite': function (_0x545ee5, _0x39dbc1, _0x1636c2, _0x5efd15, _0x3056bc, _0x50e686) {
      _0x39dbc1 *= this.spriteScale;
      var _0x52207d = _0x545ee5.width * _0x39dbc1;
      _0x39dbc1 *= _0x545ee5.height, _0x5efd15 -= _0x39dbc1, _0x3056bc = _0x3056bc ? Math.max(0x0, _0x5efd15 + _0x39dbc1 - _0x3056bc) : 0x0;
      var _0x69e5ef = _0x545ee5.height - _0x545ee5.height * _0x3056bc / _0x39dbc1 | 0x0;
      _0x3056bc < _0x39dbc1 && 0x0 < _0x69e5ef && (this.ctx.setTransform(_0x50e686 ? -0x1 : 0x1, 0x0, 0x0, 0x1, _0x1636c2 | 0x0, _0x5efd15 | 0x0), this.ctx.drawImage(_0x545ee5.data, 0x0, 0x0, _0x545ee5.width, _0x69e5ef, -(0.5 * _0x52207d) | 0x0, 0x0, _0x52207d | 0x0, _0x39dbc1 - _0x3056bc | 0x0));
    },
    'drawCollectibleShadow': function (_0x4568a4, _0x5439cc, _0x41ae6c, _0x58639c) {
      var _0x1c6dd5 = 0x13880 * _0x4568a4;
      _0x4568a4 *= 0x9c40, _0x58639c >= _0x41ae6c && (this.ctx.fillStyle = '#00000022', this.ctx.beginPath(), this.ctx.ellipse(_0x5439cc, _0x41ae6c, _0x1c6dd5, _0x4568a4, 0x0, 0x0, 0x2 * Math.PI), this.ctx.fill(), this.ctx.restore());
    },
    'drawPlayer': function (_0x58cd3b) {
      var _0x15e83d = this.playerSegment;
      this.project2(_0x58cd3b.p, this.interpolate(_0x15e83d.p1.camera.x, _0x15e83d.p2.camera.x, _0x58cd3b.percent), this.interpolate(_0x15e83d.p1.camera.y, _0x15e83d.p2.camera.y, _0x58cd3b.percent), this.interpolate(_0x15e83d.p1.camera.z, _0x15e83d.p2.camera.z, _0x58cd3b.percent)), _0x58cd3b.drawPlayer(_0x58cd3b.p.scale * this.spriteScale / 1.7254901960784312);
    },
    'drawCar': function (_0x1d0797, _0xcf4738, _0x5cf735, _0x2abf23, _0x16bd39, _0x3e1d50) {
      _0x5cf735 *= this.spriteScale;
      var _0x4dd456 = _0x1d0797.scaleSize.x * _0x5cf735;
      _0x5cf735 *= _0x1d0797.scaleSize.y, _0x16bd39 -= 0.94 * _0x5cf735, _0x3e1d50 = _0x3e1d50 ? Math.max(0x0, _0x16bd39 + _0x5cf735 - _0x3e1d50) : 0x0;
      var _0x5456c3 = _0x1d0797.currentFrame % _0x1d0797.spriteColumnCount * _0x1d0797.frameSize.x | 0x0,
        _0x55d9a4 = Math.floor(_0x1d0797.currentFrame / _0x1d0797.spriteColumnCount) * _0x1d0797.frameSize.y | 0x0,
        _0x2d5343 = _0x1d0797.frameSize.x,
        _0x5b9ce9 = _0x1d0797.frameSize.y - _0x1d0797.frameSize.y * _0x3e1d50 / _0x5cf735 | 0x0;
      if (_0x3e1d50 < _0x5cf735 && 0x0 < _0x5b9ce9) {
        var _0x42a1dd = _0x1d0797.shake * (_0x4dd456 / _0x1d0797.frameSize.x);
        this.ctx.setTransform(0x1, 0x0, 0x0, 0x1, _0x2abf23 + _0x42a1dd | 0x0, _0x16bd39 + _0x42a1dd | 0x0), _0xcf4738.drawImage(_0x1d0797.currentSpriteFrame.data, _0x5456c3, _0x55d9a4, _0x2d5343, _0x5b9ce9, -(0.5 * _0x4dd456) | 0x0, 0x0, _0x4dd456 | 0x0, _0x5cf735 - _0x3e1d50 | 0x0);
      }
    },
    'drawCollectible': function (_0x22bdc6, _0x47bc00, _0x372009, _0x234494, _0x5c8d58, _0x5528e1) {
      _0x372009 *= this.spriteScale;
      var _0x4f218b = _0x22bdc6.scaleSize.x * _0x372009;
      _0x372009 *= _0x22bdc6.scaleSize.y, _0x5c8d58 -= _0x372009, _0x5528e1 = _0x5528e1 ? Math.max(0x0, _0x5c8d58 + _0x372009 - _0x5528e1) : 0x0;
      var _0x3ef2b1 = _0x22bdc6.currentFrame % _0x22bdc6.spriteColumnCount * _0x22bdc6.frameSize.x | 0x0,
        _0x250ce9 = Math.floor(_0x22bdc6.currentFrame / _0x22bdc6.spriteColumnCount) * _0x22bdc6.frameSize.y | 0x0,
        _0x16dbde = _0x22bdc6.frameSize.x,
        _0x3d87e7 = _0x22bdc6.frameSize.y - _0x22bdc6.frameSize.y * _0x5528e1 / _0x372009 | 0x0;
      _0x5528e1 < _0x372009 && 0x0 < _0x3d87e7 && (this.ctx.setTransform(0x1, 0x0, 0x0, 0x1, _0x234494 | 0x0, _0x5c8d58 | 0x0), _0x47bc00.drawImage(_0x22bdc6.currentSpriteFrame.data, _0x3ef2b1, _0x250ce9, _0x16dbde, _0x3d87e7, -(0.5 * _0x4f218b) | 0x0, 0x0, _0x4f218b | 0x0, _0x372009 - _0x5528e1 | 0x0));
    },
    'drawSmoke': function (_0x98580, _0x357ebf, _0x5b3a28, _0x2b9ab0, _0x5e7644, _0x5de983) {
      _0x357ebf *= this.spriteScale;
      var _0x35d8ec = _0x98580.width * _0x357ebf;
      _0x357ebf *= _0x98580.height, _0x5e7644 = _0x5e7644 ? Math.max(0x0, _0x2b9ab0 - _0x5e7644) : 0x0;
      var _0x40476f = _0x98580.height - _0x98580.height * _0x5e7644 / _0x357ebf;
      _0x5e7644 < _0x357ebf && 0x0 < _0x40476f && (this.ctx.setTransform(0x1, 0x0, 0x0, 0x1, _0x5b3a28 | 0x0, _0x2b9ab0 - 0.5 * _0x357ebf | 0x0), this.ctx.globalAlpha = _0x5de983, this.ctx.drawImage(_0x98580.data, 0x0, 0x0, _0x98580.width, _0x40476f, 0.5 * -_0x35d8ec, 0.5 * -_0x357ebf, _0x35d8ec, _0x357ebf - _0x5e7644));
    },
    'drawHorizon': function () {
      this.ctx.fillStyle = this.grassFill, this.ctx.fillRect(this.horizonFillDrawData.x, this.horizonFillDrawData.y, this.horizonFillDrawData.width, this.horizonFillDrawData.height);
      var _0x152019 = this.backgroundXPos % this.horizon.width | 0x0;
      this.ctx.drawImage(this.horizon.data, 0x0, 0x0, this.horizon.width, this.horizon.height, _0x152019, 0x0, this.horizon.width, this.horizon.height), this.ctx.drawImage(this.horizon.data, 0x0, 0x0, this.horizon.width, this.horizon.height, _0x152019 + (0x0 > _0x152019 ? this.horizon.width : -this.horizon.width), 0x0, this.horizon.width, this.horizon.height);
    },
    'findSegment': function (_0x3dce0a) {
      return this.segments[(_0x3dce0a / this.segmentLength | 0x0) % this.segments.length];
    },
    'increase': function (_0x4718ac, _0x29258a, _0x316173) {
      for (_0x4718ac += _0x29258a; _0x4718ac >= _0x316173;) _0x4718ac -= _0x316173;
      for (; 0x0 > _0x4718ac;) _0x4718ac += _0x316173;
      return _0x4718ac;
    },
    'updateCharacter': function (_0x57f5e6) {
      var _0xbfc9ad = ig.system.tick * _0x57f5e6.getSpeed();
      this.position = this.increase2(this.position, _0xbfc9ad), _0x57f5e6.z = this.position + this.playerZ, _0x57f5e6.x = this.systemHalfWidth + 0.2 * _0x57f5e6.roadPosX * this.roadWidth, _0x57f5e6.percent = this.percentRemaining(_0x57f5e6.z), this.playerPercent = _0x57f5e6.percent, _0xbfc9ad = this.findSegment(_0x57f5e6.z), this.playerSegment != _0xbfc9ad && (this.playerSegment = _0xbfc9ad, this.backgroundXPos = -(this.getRoadRotation() / 0x168) * this.horizon.width, _0x57f5e6.setFrontSegment(this.getFrontSegment(this.playerSegment)), _0x57f5e6.setRearSegment(this.getRearSegment(this.playerSegment))), this.callbackRoadCurveUpdate(this.playerSegment.curve, this.centrifugal);
    },
    'updateTrack': function () {
      if (this.position >= this.trackEnds[0x0]) {
        this.trackEnds.splice(0x0, 0x1), this.connectNextTrack(this.endLineSegment);
        var _0x27f9c8 = this.trackSegmentsLength[0x0];
        this.trackSegmentsLength.splice(0x0, 0x1), this.callbackAddedNextTrack(_0x27f9c8);
      }
    },
    'checkEndLine': function (_0xa2e913) {
      !this.raceEnded && this.playerSegment.index >= this.endLineSegment.index && (this.raceEnded = !0x0, _0xa2e913.finish());
    },
    'getPlayerSegmentCount': function () {
      return Math.floor((this.position + this.playerZ) / this.segmentLength) % this.segments.length;
    },
    'getPlayerY': function () {
      return this.interpolate(this.playerSegment.p1.world.y, this.playerSegment.p2.world.y, this.playerPercent);
    },
    'getRoadRotation': function () {
      return this.playerSegment.segmentRotation % 0x168;
    },
    'increase': function (_0x2e794f, _0x3d5ffa, _0x13ddf9) {
      for (_0x2e794f += _0x3d5ffa; _0x2e794f >= _0x13ddf9;) _0x2e794f -= _0x13ddf9;
      for (; 0x0 > _0x2e794f;) _0x2e794f += _0x13ddf9;
      return _0x2e794f;
    },
    'increase2': function (_0x2c08f9, _0x349c50) {
      return _0x2c08f9 + _0x349c50;
    },
    'enemyCarUpdate': function (_0x309066) {
      _0x309066.movementUpdate(this.trackLength), _0x309066.percent = this.percentRemaining(_0x309066.z), _0x309066.x = this.systemHalfWidth + 0.2 * _0x309066.offset * this.roadWidth;
      var _0x12695c = this.findSegment(_0x309066.z);
      _0x309066.getSegment() != _0x12695c && (_0x309066.setFrontSegment(this.getFrontSegment(_0x12695c)), _0x309066.setRearSegment(this.getRearSegment(_0x12695c)), _0x309066.updateSegment(_0x12695c));
    },
    'getSegments': function () {
      return this.segments;
    },
    'getSegment': function (_0x3fac9e) {
      return this.segments[_0x3fac9e];
    },
    'getFrontSegment': function (_0x29ece7) {
      return this.getSegment((_0x29ece7.index + 0x2) % this.segments.length);
    },
    'getRearSegment': function (_0x255cd5) {
      return this.getSegment((_0x255cd5.index + 0x1) % this.segments.length);
    },
    'getTrackLength': function () {
      return this.trackLength;
    },
    'getForemostTrackEnd': function () {
      return this.trackEnds[0x0];
    },
    'debugUpdateRoadWidth': function (_0x2ab686) {
      this.updateRoadWidth(_0x2ab686);
    },
    'updateRoadWidth': function (_0x180c18) {
      this.roadWidth = _0x180c18, this.prodOfHalfWidthAndRoadWidth = this.halfWidth * this.roadWidth;
    },
    'debugUpdateCameraHeight': function (_0x4edd8d) {
      this.cameraHeight = _0x4edd8d, this.playerZ = this.cameraHeight * this.cameraDepth;
    },
    'debugUpdateDrawDistance': function (_0x27ce6d) {
      this.drawDistance = _0x27ce6d;
    },
    'debugUpdateFieldofView': function (_0x487a44) {
      this.fieldOfView = _0x487a44, this.cameraDepth = 0x1 / Math.tan(this.fieldOfView / 0x2 * Math.PI / 0xb4), this.playerZ = this.cameraHeight * this.cameraDepth;
    },
    'debugUpdateFogDensity': function (_0x500609) {
      this.fogDensity = _0x500609;
    },
    'rumbleWidth': function (_0x3bde2d, _0x48750b) {
      return _0x3bde2d / Math.max(0x4, 1.5 * _0x48750b);
    },
    'getRoadWidth': function (_0x4ed75b, _0x512f92) {
      return 0x2 * _0x4ed75b / _0x512f92;
    },
    'laneMarkerWidth': function (_0x2dc028, _0x494ced) {
      return _0x2dc028 / Math.max(0x20, 0x8 * _0x494ced);
    },
    'sideMarkerWidth': function (_0x37dfbd, _0x388071) {
      return _0x37dfbd / Math.max(0x20, 0x8 * _0x388071);
    },
    'sideShadowWidth': function (_0x112ad2) {
      return 0.28 * _0x112ad2;
    },
    'exponentialFog': function (_0x4f75b4) {
      return 0x1 / Math.pow(Math.E, _0x4f75b4 * _0x4f75b4 * this.fogDensity);
    },
    'randomChoice': function (_0x155d38) {
      return _0x155d38[this.randomInt(0x0, _0x155d38.length - 0x1)];
    },
    'interpolate': function (_0x3d8e17, _0x43fa0e, _0x586401) {
      return _0x3d8e17 + (_0x43fa0e - _0x3d8e17) * _0x586401;
    },
    'percentRemaining': function (_0xf329a7) {
      return _0xf329a7 % this.segmentLength / this.segmentLength;
    },
    'randomInt': function (_0x401465, _0x5e58e9) {
      return Math.round(this.interpolate(_0x401465, _0x5e58e9, Math.random()));
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.character').requires('impact.entity').defines(function () {
  EntityCharacter = ig.Entity.extend({
    'image': new ig.Image('media/graphics/game/cars/red.png'),
    'smoke': new ig.Image('media/graphics/game/smoke.png'),
    'fuelIcon': new ig.Image('media/graphics/game/fuel.png'),
    'coinIcon': new ig.Image('media/graphics/game/coin.png'),
    'Direction': {
      'STRAIGHT': 0x0,
      'LEFT': 0x1,
      'RIGHT': 0x2
    },
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.B,
    'checkAgainst': ig.Entity.TYPE.B,
    'finished': !0x1,
    'finishTime': null,
    'CollisionSide': {
      'FRONT': 0x0,
      'BACK': 0x1,
      'LEFT': 0x2,
      'RIGHT': 0x3
    },
    'accelerating': !0x1,
    'player': !0x0,
    'name': _STRINGS.Results.Player,
    'currentRank': 0x0,
    'carBoostSFXDuration': 0x1,
    'p': {},
    'init': function (_0x2733f3, _0x646092, _0x5a3e4d) {
      this.parent(_0x2733f3, _0x646092, _0x5a3e4d), this.initProps(_0x5a3e4d), this.speedUpTimer = new ig.Timer(this.speedUpLimit), this.carBoostSFXTimer = new ig.Timer(this.carBoostSFXDuration);
    },
    'initProps': function (_0x1b77df) {
      this.ctx = _0x1b77df.ctxt, this.zIndex = ig.game.entitiesZIndex.Game, this.callbackSpawnSmoke = _0x1b77df.callbackSpawnSmoke, this.callbackShake = _0x1b77df.callbackShake, this.collisionEnabled = !0x1, this.image = ig.CarsData.getPlayerSprite(), this.fuelFrameWidth = 0x104, this.fuelFrameHeight = 0xf4, this.numberOfFuelFrames = 0xc, this.animFuelFrame = this.currentFuelFrame = 0x0, this.fuelAnimeSpeed = 0x14, this.fuelColumnCount = 0x6, this.coinFrameHeight = this.coinFrameWidth = 0xb4, this.numberOfCoinFrames = 0x5, this.animCoinFrame = this.currentCoinFrame = 0x0, this.coinAnimeSpeed = 0xe, this.coinColumnCount = 0x1, this.collectibleFrameWidth = this.fuelFrameWidth, this.collectibleFrameHeight = this.fuelFrameHeight, this.numberOfCollectibleFrames = this.numberOfFuelFrames, this.currentCollectibleFrame = this.currentFuelFrame, this.animCollectibleFrame = this.animFuelFrame, this.collectibleAnimeSpeed = this.fuelAnimeSpeed, this.collectibleColumnCount = this.fuelColumnCount, this.collectibleAnimating = !0x1, this.collectibleAnimationVerticalSpeed = 0xc8, this.collectibleAnimationAlphaOutSpeed = 0x2, this.collectibleAnimationY = this.collectibleAnimationAlpha = 0x0, this.collectibleIcon = this.fuelIcon, this.maxFuel = 0x64, this.fuel = this.maxFuel += this.maxFuel * ig.CarsData.getUpgradeProp('fuel'), this.fuelConsumptionSpeed = 0x2, this.collectibleFuelVal = 0xa, this.rvFuelVal = 0x46, this.frameSize = {
        'x': 0x198,
        'y': 0x16e
      }, this.spriteColumnCount = 0x1, this.sideDifFrame = this.middleFrame = this.currentFrame = 0x2, this.maxFrame = this.middleFrame + this.sideDifFrame, this.currentLap = 0x1, this.baseLength = 0x118, this.baseWidth = 0x64, this.length = this.baseLength, this.width = this.baseWidth, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.size = {
        'x': this.width,
        'y': this.length
      }, this.currentDirection = this.touchControlDirection = this.Direction.STRAIGHT, this.speedUpEnabled = !0x1, this.speedUpSpeedMultiplier = 1.2, this.nitroLimit = this.speedUpLimit = 0x5, this.nitroLimit += this.nitroLimit * ig.CarsData.getUpgradeProp('nitro'), this.gameSpeedMultiplier = 0x1, this.rearSegment = this.frontSegment = null, this.gameWidth = _0x1b77df.gameWidth, this.gameHalfWidth = 0.5 * this.gameWidth, this.gameHeight = _0x1b77df.gameHeight, this.gameResolution = _0x1b77df.gameResolution, this.gameRoadWidth = _0x1b77df.gameRoadWidth, this.gameCameraDepth = _0x1b77df.gameCameraDepth, this.gamePlayerZ = _0x1b77df.gamePlayerZ, this.baseMaxSpeed = _0x1b77df.maxSpeed, this.maxSpeed = this.baseMaxSpeed += this.baseMaxSpeed * ig.CarsData.getUpgradeProp('speed'), this.maxSlowSpeed = 0.3 * this.maxSpeed, this.speedUpAdditionalSpeed = this.baseMaxSpeed * this.speedUpSpeedMultiplier - this.baseMaxSpeed, this.baseAccel = this.baseMaxSpeed / 0x7, this.accel = this.baseAccel += this.baseAccel * ig.CarsData.getUpgradeProp('accel'), this.decel = 0.2 * this.baseMaxSpeed, this.x = this.z = 0x0, this.noFuelDecel = 0.6 * this.baseMaxSpeed, this.currentRank = 0x9, this.currentSpeed = 0x0, this.horizontalPercentMovementSpeed = 0x8, this.horizontalMovementPercent = 0x0, this.horLimit = this.laneLimit = 0.8, this.slowSideLane = 0.96 * this.laneLimit, this.roadPosX = 0.35, this.scale = {
        'x': 0.4,
        'y': 0.4
      }, this.characterScale = 0.3 * (0x1 / (this.frameSize.x * this.scale.x)), this.cameraScale = this.gameCameraDepth / this.gamePlayerZ, this.drawScale = this.gameHalfWidth * this.characterScale * this.gameRoadWidth, this.destScale = this.cameraScale * this.scale.x * this.drawScale, this.initialDestSize = {
        'w': this.frameSize.x * this.destScale | 0x0,
        'h': this.frameSize.y * this.destScale | 0x0,
        'wHalf': 0.5 * this.frameSize.x * this.destScale | 0x0
      }, this.initialDestPos = {
        'x': this.gameHalfWidth,
        'y': this.gameHeight - this.initialDestSize.h
      }, this.smokeDelay = 0.1, this.smokeTimer = new ig.Timer(this.smokeDelay), this.shakeduration = this.shake = 0x0, this.shakeSpeed = 0x78, this.collided = this.onCollision = !0x1, this.currentCollisionSide = null, this.paused = !0x1, ig.soundHandler.sfxPlayer.soundList.carLoop._loop = !0x0;
    },
    'update': function () {
      this.parent(), this.paused || (this.collectibleAnimationUpdate(), this.shakeduration += this.shakeSpeed * ig.system.tick, this.shake = Math.sin(this.shakeduration), this.accelerating && (this.fuelUpdate(), this.horizontalMovementUpdate(), this.speedUpUpdate(), this.accelerationUpdate(), 0x0 < this.smokeTimer.delta() && (this.callbackSpawnSmoke(this.getSmokeOffset()), this.smokeTimer.reset())));
    },
    'fuelUpdate': function () {
      0x0 < this.fuel && (this.fuel -= this.fuelConsumptionSpeed * this.gameSpeedMultiplier * ig.system.tick, 0x0 >= this.fuel && (this.fuel = 0x0), this.callbackFuelPercentUpdate(this.fuel / this.maxFuel));
    },
    'enableCollision': function () {
      this.collisionEnabled = !0x0;
    },
    'touchAndKeyboardControlUpdate': function () {
      if (this.currentDirection != this.Direction.LEFT && (ig.input.pressed('left') || this.touchControlDirection == this.Direction.LEFT)) this.currentDirection = this.Direction.LEFT;else {
        if (this.currentDirection != this.Direction.RIGHT && (ig.input.pressed('right') || this.touchControlDirection == this.Direction.RIGHT)) this.currentDirection = this.Direction.RIGHT;
      }
      this.currentDirection == this.Direction.LEFT && !ig.input.state('left') && this.touchControlDirection != this.Direction.LEFT ? (this.horizontalMovementPercent = -0.7, this.currentDirection = this.Direction.STRAIGHT) : this.currentDirection == this.Direction.RIGHT && !ig.input.state('right') && this.touchControlDirection != this.Direction.RIGHT && (this.horizontalMovementPercent = 0.7, this.currentDirection = this.Direction.STRAIGHT), this.touchControlDirection = this.Direction.STRAIGHT, this.currentDirection == this.Direction.STRAIGHT && 0x0 != this.horizontalMovementPercent ? 0x0 < this.horizontalMovementPercent ? (this.horizontalMovementPercent += -this.horizontalPercentMovementSpeed * ig.system.tick, 0x0 > this.horizontalMovementPercent && (this.horizontalMovementPercent = 0x0)) : (this.horizontalMovementPercent += this.horizontalPercentMovementSpeed * ig.system.tick, 0x0 < this.horizontalMovementPercent && (this.horizontalMovementPercent = 0x0)) : this.currentDirection == this.Direction.LEFT && -0x1 != this.horizontalMovementPercent ? (this.horizontalMovementPercent += -this.horizontalPercentMovementSpeed * ig.system.tick, -0x1 > this.horizontalMovementPercent && (this.horizontalMovementPercent = -0x1)) : this.currentDirection == this.Direction.RIGHT && 0x1 != this.horizontalMovementPercent && (this.horizontalMovementPercent += this.horizontalPercentMovementSpeed * ig.system.tick, 0x1 < this.horizontalMovementPercent && (this.horizontalMovementPercent = 0x1));
    },
    'steeringWheelUpdate': function () {
      ig.steeringWheel.poll(), this.horizontalMovementPercent = ig.steeringWheel.steering, ig.steeringWheel.clearPressed();
    },
    'horizontalMovementUpdate': function () {
      ig.steeringWheel.isSupported ? this.steeringWheelUpdate() : this.touchAndKeyboardControlUpdate(), this.roadPosX += 1.4 * this.horizontalMovementPercent * (this.currentSpeed / this.baseMaxSpeed) * this.gameSpeedMultiplier * ig.system.tick, this.currentFrame = 0x0 == this.horizontalMovementPercent ? this.middleFrame : 0x0 < this.horizontalMovementPercent ? this.middleFrame - Math.floor(Math.abs(this.horizontalMovementPercent) * this.sideDifFrame) : this.middleFrame + Math.floor(Math.abs(this.horizontalMovementPercent) * this.sideDifFrame), this.collided ? (this.currentCollisionSide == this.CollisionSide.LEFT && this.roadPosX < this.horLimit ? (this.roadPosX = this.horLimit, 0x0 > this.horizontalMovementPercent && (this.currentFrame = this.middleFrame + this.sideDifFrame)) : this.currentCollisionSide == this.CollisionSide.RIGHT && this.roadPosX > this.horLimit && (this.roadPosX = this.horLimit, 0x0 < this.horizontalMovementPercent && (this.currentFrame = this.middleFrame - this.sideDifFrame)), this.currentCollisionSide = null) : this.roadPosX < -this.laneLimit ? (this.roadPosX = -this.laneLimit, 0x0 > this.horizontalMovementPercent && (this.currentFrame = this.middleFrame + this.sideDifFrame)) : this.roadPosX > this.laneLimit && (this.roadPosX = this.laneLimit, 0x0 < this.horizontalMovementPercent && (this.currentFrame = this.middleFrame - this.sideDifFrame));
    },
    'speedUpUpdate': function () {
      this.speedUpEnabled && 0x0 <= this.speedUpTimer.delta() && (this.speedUpEnabled = !0x1, this.accel = this.baseAccel), !this.speedUpEnabled && this.maxSpeed != this.baseMaxSpeed && (this.maxSpeed -= 0.01 * this.baseMaxSpeed, this.maxSpeed < this.baseMaxSpeed && (this.maxSpeed = this.baseMaxSpeed));
    },
    'accelerationUpdate': function () {
      0x0 >= this.fuel ? (this.currentSpeed = this.decceleration(this.currentSpeed, this.noFuelDecel, ig.system.tick), this.currentSpeed = this.limit(this.currentSpeed, 0x0, this.maxSpeed)) : this.roadPosX < this.slowSideLane && this.roadPosX > -this.slowSideLane && this.currentCollisionSide != this.CollisionSide.FRONT ? (this.currentSpeed = this.acceleration(this.currentSpeed, this.accel, ig.system.tick), this.currentSpeed = this.limit(this.currentSpeed, 0x0, this.maxSpeed)) : this.currentSpeed > this.maxSlowSpeed ? (this.currentSpeed = this.decceleration(this.currentSpeed, this.decel, ig.system.tick), this.currentSpeed = this.limit(this.currentSpeed, this.maxSlowSpeed, this.maxSpeed)) : this.currentSpeed < this.maxSlowSpeed && (this.currentSpeed = this.acceleration(this.currentSpeed, 0.7 * this.accel, ig.system.tick), this.currentSpeed = this.limit(this.currentSpeed, 0x0, this.maxSlowSpeed)), this.collided ? (this.onCollision = !0x0, this.collided = !0x1) : this.onCollision = !0x1;
    },
    'updateCollisionBox': function (_0x1fa9f7) {
      this.length = this.baseLength * _0x1fa9f7, this.width = this.baseWidth * _0x1fa9f7, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.size = {
        'x': this.width,
        'y': this.length
      };
    },
    'startAcceleration': function () {
      this.accelerating = !0x0, ig.soundHandler.sfxPlayer.play('carLoop');
    },
    'pause': function () {
      this.paused = !0x0, this.speedUpTimer.pause();
    },
    'resume': function () {
      this.paused = !0x1, this.speedUpTimer.unpause();
    },
    'curveUpdate': function (_0x1fcddb, _0x1331de) {
      this.roadPosX -= 0x18 * (_0x1fcddb * _0x1331de * (this.currentSpeed / this.baseMaxSpeed) * ig.system.tick) * this.gameSpeedMultiplier;
    },
    'updateHitbox': function (_0x19138) {
      this.pos.x = this.x - this.halfWidth, this.pos.y = this.z % _0x19138;
    },
    'getSmokeOffset': function () {
      return this.currentFrame == this.middleFrame ? 0x0 : this.currentFrame < this.middleFrame ? 0.06 * -(0x1 - this.currentFrame / this.sideDifFrame) : 0.06 * ((this.currentFrame - this.middleFrame) / this.sideDifFrame);
    },
    'getSegment': function () {
      return this.segment;
    },
    'getSpeed': function () {
      return this.currentSpeed * this.gameSpeedMultiplier;
    },
    'acceleration': function (_0x548093, _0x57a39a, _0x18820f) {
      return _0x548093 + _0x57a39a * _0x18820f;
    },
    'decceleration': function (_0x23afe8, _0x4b5296, _0x11f792) {
      return _0x23afe8 - _0x4b5296 * _0x11f792;
    },
    'limit': function (_0xcd904f, _0x47dc76, _0x4a5c39) {
      return Math.max(_0x47dc76, Math.min(_0xcd904f, _0x4a5c39));
    },
    'drawPlayer': function (_0x372cc7) {
      this.drawSprite(_0x372cc7);
    },
    'drawSprite': function (_0x389e63) {
      this.ctx.setTransform(0x1, 0x0, 0x0, 0x1, this.initialDestPos.x + this.shake | 0x0, (this.initialDestPos.y + this.shake | 0x0) + this.initialDestSize.h), this.ctx.drawImage(this.image.data, this.currentFrame * this.frameSize.x | 0x0, 0x0, this.frameSize.x, this.frameSize.y, -this.initialDestSize.wHalf * _0x389e63, -this.initialDestSize.h * _0x389e63, this.initialDestSize.w * _0x389e63, this.initialDestSize.h * _0x389e63), this.drawCollectibleIcon(_0x389e63);
    },
    'drawCollectibleIcon': function (_0x12b23f) {
      this.collectibleAnimating && (this.ctx.globalAlpha = this.collectibleAnimationAlpha, this.ctx.drawImage(this.collectibleIcon.data, (0x1 < this.collectibleColumnCount ? this.currentCollectibleFrame % this.collectibleColumnCount : this.currentCollectibleFrame) * this.collectibleFrameWidth, (0x1 < this.collectibleColumnCount ? Math.floor(this.currentCollectibleFrame / this.collectibleColumnCount) : 0x0) * this.collectibleFrameHeight, this.collectibleFrameWidth, this.collectibleFrameHeight, 0.25 * -this.collectibleFrameWidth * _0x12b23f, (this.collectibleAnimationY - this.collectibleFrameHeight) * _0x12b23f, 0.5 * this.collectibleFrameWidth * _0x12b23f, 0.5 * this.collectibleFrameHeight * _0x12b23f), this.ctx.globalAlpha = 0x1);
    },
    'moveLeft': function () {
      this.touchControlDirection = this.Direction.LEFT;
    },
    'moveRight': function () {
      this.touchControlDirection = this.Direction.RIGHT;
    },
    'moveStraight': function () {
      this.touchControlDirection = this.Direction.STRAIGHT;
    },
    'check': function (_0x22280b) {
      this.collisionEnabled && (_0x22280b instanceof EntityCollectible ? _0x22280b.isCollected() || _0x22280b.collect() : (this.collided = !0x0, _0x22280b.pos.y > this.pos.y + this.size.y - 0x64 ? (this.slowDown(_0x22280b.currentSpeed), this.currentCollisionSide = this.CollisionSide.FRONT) : _0x22280b.pos.y + _0x22280b.size.y - 0xa < this.pos.y ? this.currentCollisionSide = this.CollisionSide.BACK : _0x22280b.pos.x < this.pos.x ? (this.horLimit = _0x22280b.offset + 0.21, this.currentCollisionSide = this.CollisionSide.LEFT) : (this.horLimit = _0x22280b.offset - 0.21, this.currentCollisionSide = this.CollisionSide.RIGHT), !this.onCollision && this.currentCollisionSide != this.CollisionSide.BACK && (ig.soundHandler.sfxPlayer.play('carBump'), this.callbackShake())));
    },
    'slowDown': function (_0x8e0b7a) {
      this.currentSpeed = 0.84 * _0x8e0b7a;
    },
    'speedUp': function () {
      this.speedUpEnabled || (0x0 < this.carBoostSFXTimer.delta() && (ig.soundHandler.sfxPlayer.play('carBoost'), this.carBoostSFXTimer.reset()), this.speedUpEnabled = !0x0, this.maxSpeed = this.baseMaxSpeed * this.speedUpSpeedMultiplier, this.accel = this.baseAccel * this.speedUpSpeedMultiplier, this.speedUpTimer.set(this.speedUpLimit));
    },
    'nitroActivated': function () {
      ig.soundHandler.sfxPlayer.stop('carBoost'), 0x0 < this.carBoostSFXTimer.delta() && (ig.soundHandler.sfxPlayer.play('carBoost2'), this.carBoostSFXTimer.reset()), this.speedUpEnabled = !0x0, this.maxSpeed = 0x2 * this.baseMaxSpeed * this.speedUpSpeedMultiplier, this.accel = this.baseAccel * this.speedUpSpeedMultiplier, this.speedUpTimer.set(this.nitroLimit);
    },
    'getSpeedUpMaxPercentage': function () {
      return this.currentSpeed <= this.baseMaxSpeed ? 0x0 : (this.currentSpeed - this.baseMaxSpeed) / this.speedUpAdditionalSpeed;
    },
    'setRank': function (_0x800bc7) {
      _0x800bc7 != this.currentRank && (this.currentRank = _0x800bc7);
    },
    'stopCarLoopSFX': function () {
      ig.soundHandler.sfxPlayer.stop('carLoop');
    },
    'resumeCarLoopSFX': function () {
      ig.soundHandler.sfxPlayer.play('carLoop');
    },
    'setFrontSegment': function (_0x3ab35c) {
      this.frontSegment = _0x3ab35c;
    },
    'setRearSegment': function (_0x184c04) {
      this.rearSegment = _0x184c04;
    },
    'getCharacterRank': function () {
      return this.currentRank + 0x1;
    },
    'finish': function () {
      this.finished = !0x0;
    },
    'setFinishTime': function (_0x2e2a80) {
      this.finishTime = _0x2e2a80;
    },
    'getFinishTime': function () {
      return this.finishTime;
    },
    'getSegmentIndex': function () {
      return this.segment.index;
    },
    'addFuel': function () {
      this.fuel += this.collectibleFuelVal, this.fuel > this.maxFuel && (this.fuel = this.maxFuel), this.animateCollectibleIcon('fuel'), ig.game.advStorage.fuelCollected();
    },
    'addRVFuel': function () {
      this.fuel += this.rvFuelVal, this.fuel > this.maxFuel && (this.fuel = this.maxFuel), this.animateCollectibleIcon('fuel');
    },
    'addCoin': function () {
      ig.game.advStorage.coinCollected(), this.animateCollectibleIcon('coin');
    },
    'noFuel': function () {
      return 0x0 == this.fuel;
    },
    'isMoving': function () {
      return 0x0 < this.currentSpeed;
    },
    'animateCollectibleIcon': function (_0x5f54f1) {
      this.collectibleAnimating = !0x0, this.collectibleAnimationAlpha = 0x1, this.collectibleAnimationY = 0x0, this.collectibleAnimationVerticalSpeed = 0xc8, this.collectibleAnimationAlphaOutSpeed = 0x2;
      switch (_0x5f54f1) {
        case 'fuel':
          this.collectibleFrameWidth = this.fuelFrameWidth, this.collectibleFrameHeight = this.fuelFrameHeight, this.numberOfCollectibleFrames = this.numberOfFuelFrames, this.currentCollectibleFrame = this.currentFuelFrame, this.animCollectibleFrame = this.animFuelFrame, this.collectibleAnimeSpeed = this.fuelAnimeSpeed, this.collectibleColumnCount = this.fuelColumnCount, this.collectibleIcon = this.fuelIcon;
          break;
        case 'coin':
          this.collectibleFrameWidth = this.coinFrameWidth, this.collectibleFrameHeight = this.coinFrameHeight, this.numberOfCollectibleFrames = this.numberOfCoinFrames, this.currentCollectibleFrame = this.currentCoinFrame, this.animCollectibleFrame = this.animCoinFrame, this.collectibleAnimeSpeed = this.coinAnimeSpeed, this.collectibleColumnCount = this.coinColumnCount, this.collectibleIcon = this.coinIcon, this.collectibleAnimationAlphaOutSpeed = 1.6;
      }
    },
    'collectibleAnimationUpdate': function () {
      this.collectibleAnimating && (this.animCollectibleFrame += this.collectibleAnimeSpeed * ig.system.tick, this.animCollectibleFrame >= this.numberOfCollectibleFrames && (this.animCollectibleFrame -= this.numberOfCollectibleFrames), this.currentCollectibleFrame = Math.floor(this.animCollectibleFrame), this.collectibleAnimationY -= this.collectibleAnimationVerticalSpeed * ig.system.tick, this.collectibleAnimationAlpha -= this.collectibleAnimationAlphaOutSpeed * ig.system.tick, 0x0 >= this.collectibleAnimationAlpha && (this.collectibleAnimationAlpha = 0x0, this.collectibleAnimating = !0x1));
    },
    'updateGameRoadWidth': function (_0x690f3c) {
      this.gameRoadWidth = _0x690f3c, this.drawScale = this.gameHalfWidth * this.characterScale * this.gameRoadWidth, this.destScale = this.cameraScale * this.scale.x * this.drawScale, this.initialDestSize.w = this.frameSize.x * this.destScale | 0x0, this.initialDestSize.h = this.frameSize.y * this.destScale | 0x0, this.initialDestSize.wHalf = 0.5 * this.initialDestSize.w | 0x0, this.initialDestPos.x = this.gameHalfWidth, this.initialDestPos.y = this.gameHeight - this.initialDestSize.h;
    },
    'interpolate': function (_0x127b12, _0x50bc45, _0x386a83) {
      return _0x127b12 + (_0x50bc45 - _0x127b12) * _0x386a83;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.lens-flare').requires('impact.entity').defines(function () {
  EntityLensFlare = ig.Entity.extend({
    'flareImage1': new ig.Image('media/graphics/game/flare/flare1.png'),
    'flareImage2': new ig.Image('media/graphics/game/flare/flare2.png'),
    'flareImage3': new ig.Image('media/graphics/game/flare/flare3.png'),
    'flareImage4': new ig.Image('media/graphics/game/flare/flare4.png'),
    'flareImage5': new ig.Image('media/graphics/game/flare/flare5.png'),
    'flareImage6': new ig.Image('media/graphics/game/flare/flare6.png'),
    'flareImage7': new ig.Image('media/graphics/game/flare/flare7.png'),
    'init': function (_0x23b636, _0x36f7b1, _0x48b3cb) {
      this.parent(_0x23b636, _0x36f7b1, _0x48b3cb), this.zIndex = ig.game.entitiesZIndex.Game + 0xa, this.baseMainPoint = {
        'x': 0.5 * ig.system.width,
        'y': 0.15 * ig.system.height
      }, this.mainPoint = {
        'x': this.baseMainPoint.x,
        'y': this.baseMainPoint.y
      }, this.rotationOffset = -0x1e + 0x3c * Math.random(), this.baseTargetPoint = {
        'x': 0.45 * ig.system.width,
        'y': 0.8 * ig.system.height
      }, this.targetPoint = {
        'x': this.baseTargetPoint.x,
        'y': this.baseTargetPoint.y
      }, this.mainPointHorLength = 0x32, this.targetHorLength = this.mainPointVerLength = 0xa, this.midPoint = {
        'x': 0.5 * ig.system.width,
        'y': 0.5 * ig.system.height
      }, this.flareRadius = Math.sqrt(Math.pow(this.targetPoint.x - this.mainPoint.x, 0x2) + Math.pow(this.targetPoint.y - this.mainPoint.y, 0x2)), this.newFlareAngle = this.flareAngle = Math.atan2(this.targetPoint.y - this.mainPoint.y, this.targetPoint.x - this.mainPoint.x), this.flares = [{
        'image': this.flareImage1,
        'alpha': 0.5,
        'x': 0xc8,
        'y': -0x8c,
        'p': 0.2,
        'drawX': 0x0,
        'drawY': 0x0
      }, {
        'image': this.flareImage2,
        'alpha': 0.5,
        'x': -0x32,
        'y': -0x8c,
        'p': 0.4,
        'drawX': 0x0,
        'drawY': 0x0
      }, {
        'image': this.flareImage3,
        'alpha': 0.5,
        'x': 0x28,
        'y': 0x28,
        'p': 0.4,
        'drawX': 0x0,
        'drawY': 0x0
      }, {
        'image': this.flareImage4,
        'alpha': 0.5,
        'x': 0x28,
        'y': -0x140,
        'p': 1.2,
        'drawX': 0x0,
        'drawY': 0x0
      }, {
        'image': this.flareImage5,
        'alpha': 0.5,
        'x': -0x1e,
        'y': -0x208,
        'p': 1.6,
        'drawX': 0x0,
        'drawY': 0x0
      }, {
        'image': this.flareImage6,
        'alpha': 0.5,
        'x': -0x1e,
        'y': -0x2d0,
        'p': 2.4,
        'drawX': 0x0,
        'drawY': 0x0
      }, {
        'image': this.flareImage7,
        'alpha': 0.5,
        'x': 0xa0,
        'y': -0x398,
        'p': 2.4,
        'drawX': 0x0,
        'drawY': 0x0
      }], this.cosAngle = Math.cos(this.flareAngle), this.sinAngle = Math.sin(this.flareAngle);
    },
    'update': function () {
      this.parent(), this.newFlareAngle = Math.atan2(this.targetPoint.y - this.mainPoint.y, this.targetPoint.x - this.mainPoint.x), this.flareRadius = Math.sqrt(Math.pow(this.targetPoint.x - this.mainPoint.x, 0x2) + Math.pow(this.targetPoint.y - this.mainPoint.y, 0x2)), this.newFlareAngle != this.flareAngle && (this.flareAngle = this.newFlareAngle, this.cosAngle = Math.cos(this.flareAngle), this.sinAngle = Math.sin(this.flareAngle)), this.updateFlares();
    },
    'updateFlares': function () {
      for (var _0x31c879 = 0x0; _0x31c879 < this.flares.length; _0x31c879++) {
        var _0x4974d2 = this.flares[_0x31c879];
        _0x4974d2.drawX = this.mainPoint.x + this.cosAngle * this.flareRadius * _0x4974d2.p + _0x4974d2.x, _0x4974d2.drawY = this.mainPoint.y + this.sinAngle * this.flareRadius * _0x4974d2.p + _0x4974d2.y;
      }
    },
    'updatePos': function (_0x251fa4, _0x331816, _0x53aa93) {
      this.roadRotation = (_0x53aa93 + this.rotationOffset) * Math.PI / 0xb4, this.mainPoint.x = this.baseMainPoint.x - _0x251fa4 * this.mainPointHorLength - 0x2bc * Math.sin(this.roadRotation), this.mainPoint.y = this.baseMainPoint.y + _0x331816 / 0xbb8 * this.mainPointVerLength - 0xc8 * Math.sin(this.roadRotation), this.targetPoint.x = this.baseTargetPoint.x, this.targetPoint.y = this.baseTargetPoint.y;
    },
    'draw': function () {
      this.parent();
    },
    'parentDraw': function (_0x28e6d9) {
      if (!(0x0 > Math.cos(this.roadRotation))) {
        var _0xfaef9f = 0x0,
          _0xdbc39d = Math.abs(Math.sin(this.roadRotation));
        0.2 > _0xdbc39d && (_0xfaef9f = (0.2 - _0xdbc39d) / 0.2), 0x0 != _0xfaef9f && (_0x28e6d9.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), this.drawFlares(_0x28e6d9, _0xfaef9f), _0x28e6d9.globalAlpha = 0x1);
      }
    },
    'drawFlares': function (_0xae14ff, _0x53e9d9) {
      for (var _0x1b2d0d = 0x0; _0x1b2d0d < this.flares.length; _0x1b2d0d++) {
        var _0x59de27 = this.flares[_0x1b2d0d];
        _0xae14ff.globalAlpha = _0x53e9d9 * _0x59de27.alpha, _0xae14ff.drawImage(_0x59de27.image.data, _0x59de27.drawX - 0.5 * _0x59de27.image.width, _0x59de27.drawY - 0.5 * _0x59de27.image.height);
      }
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.map').requires('impact.entity').defines(function () {
  EntityMap = ig.Entity.extend({
    'mapBG': new ig.Image('media/graphics/ui/game/map-mini.png'),
    'mapBGTop': new ig.Image('media/graphics/ui/game/map-mini-top.png'),
    'arrow': new ig.Image('media/graphics/ui/game/arrow.png'),
    'init': function (_0x152b62, _0x4dd638, _0x44e70b) {
      this.parent(_0x152b62, _0x4dd638, _0x44e70b), this.enemyCars = _0x44e70b.enemyCars, this.zIndex = ig.game.entitiesZIndex.UI, this.size = {
        'x': this.mapBG.width,
        'y': this.mapBG.height
      }, this.roadSegments = _0x44e70b.roadSegments, this.endSegment = _0x44e70b.endSegment, this.mapPoints = [{
        'x': 0x0,
        'y': 0x12c
      }, {
        'x': 0x0,
        'y': 0x0
      }], this.alpha = 0x1, this.prevPos = {
        'x': this.pos.x,
        'y': this.pos.y
      }, this.gridSize = 0x2d, this.gridCount = 0xc, this.gridLength = this.gridSize * this.gridCount, this.gridPosY = this.gridPosX = 0x0, this.gridGradientColorStop1 = '#ffffff40', this.gridGradientColorStop2 = '#0E132300', this.trackFill = '#DBDBDB', this.enemyCarFill = '#A0A0A0', this.enemyCarOutline = '#404040', this.maxY = this.minY = this.maxX = this.minX = 0x0;
      for (_0x152b62 = 0x2; _0x152b62 < this.roadSegments.length; _0x152b62++) _0x4dd638 = this.roadSegments[_0x152b62].segmentRotation * (Math.PI / 0xb4), this.mapPoints.push({
        'x': this.mapPoints[_0x152b62 - 0x1].x + Math.sin(_0x4dd638),
        'y': this.mapPoints[_0x152b62 - 0x1].y - Math.cos(_0x4dd638),
        'rotation': _0x4dd638
      }), this.updateXY(this.mapPoints[_0x152b62]);
      this.horLength = this.maxX - this.minX, this.verLength = this.maxY - this.minY, this.sizeRatio = this.size.x / this.size.y, this.mapRatio = this.horLength / this.verLength, this.mapSizeMultiplier = 0x1, this.mapPos = {
        'x': this.pos.x + 0.5 * this.size.x - (this.minX + 0.5 * this.horLength) * this.mapSizeMultiplier,
        'y': this.pos.y + 0.5 * this.size.y + 0.5 * this.verLength * this.mapSizeMultiplier
      }, this.mapPos = {
        'x': this.pos.x + 0.5 * this.size.x,
        'y': this.pos.y + 0.5 * this.size.y
      }, this.mapSegmentClip = this.charRoadPosX = this.pSegmentCount = 0x0, this.updateGradientAndGridStartingPos();
    },
    'trackUpdate': function (_0x18761f, _0x2b7369) {
      this.roadSegments = _0x18761f, this.mapSegmentClip = _0x2b7369, this.mapPoints = [{
        'x': 0x0,
        'y': 0x12c
      }, {
        'x': 0x0,
        'y': 0x0
      }];
      for (var _0x455e1e = 0x2; _0x455e1e < this.roadSegments.length; _0x455e1e++) {
        var _0x1481f4 = this.roadSegments[_0x455e1e].segmentRotation * (Math.PI / 0xb4);
        this.mapPoints.push({
          'x': this.mapPoints[_0x455e1e - 0x1].x + Math.sin(_0x1481f4),
          'y': this.mapPoints[_0x455e1e - 0x1].y - Math.cos(_0x1481f4),
          'rotation': _0x1481f4
        }), this.updateXY(this.mapPoints[_0x455e1e]);
      }
    },
    'updateXY': function (_0x36c3e4) {
      this.minX > _0x36c3e4.x ? this.minX = _0x36c3e4.x : this.maxX < _0x36c3e4.x && (this.maxX = _0x36c3e4.x), this.minY > _0x36c3e4.y ? this.minY = _0x36c3e4.y : this.maxY < _0x36c3e4.y && (this.maxY = _0x36c3e4.y);
    },
    'update': function () {
      this.parent();
      if (this.prevPos.x != this.pos.x || this.prevPos.y != this.pos.y) this.prevPos.x = this.pos.x, this.prevPos.y = this.pos.y, this.updateGradientAndGridStartingPos();
    },
    'updateGradientAndGridStartingPos': function () {
      this.grd = ig.system.context.createRadialGradient(this.pos.x + 0.5 * this.size.x, this.pos.y + 0.5 * this.size.y, 0x0, this.pos.x + 0.5 * this.size.x, this.pos.y + 0.5 * this.size.y, 0.5 * this.size.x), this.grd.addColorStop(0.4, this.gridGradientColorStop1), this.grd.addColorStop(0.9, this.gridGradientColorStop2), this.gridHorStartingPos = {
        'x': this.pos.x + 0.5 * this.size.x - 0.5 * this.gridLength,
        'y': this.pos.y + 0.5 * this.size.y - 0.5 * this.gridLength + this.gridSize
      }, this.gridVerStartingPos = {
        'x': this.pos.x + 0.5 * this.size.x - 0.5 * this.gridLength + this.gridSize,
        'y': this.pos.y + 0.5 * this.size.y - 0.5 * this.gridLength
      };
    },
    'drawGrid': function () {
      ig.system.context.save(), ig.system.context.lineWidth = 0x2, ig.system.context.strokeStyle = this.grd;
      var _0x27426f = Math.sqrt(Math.pow(this.mapPoints[this.pSegmentCount].x, 0x2) + Math.pow(this.mapPoints[this.pSegmentCount].y, 0x2)),
        _0x2da82d = Math.atan(this.mapPoints[this.pSegmentCount].x / this.mapPoints[this.pSegmentCount].y);
      this.gridPosX = -_0x27426f * Math.sin(0.523599 - _0x2da82d), this.gridPosY = _0x27426f * Math.cos(0.523599 - _0x2da82d), 0x0 < this.mapPoints[this.pSegmentCount].y && (this.gridPosY = -this.gridPosY, this.gridPosX = -this.gridPosX);
      for (_0x27426f = 0x0; _0x27426f < this.gridCount - 0x1; _0x27426f++) ig.system.context.beginPath(), ig.system.context.moveTo(this.gridHorStartingPos.x + this.gridPosX % this.gridSize, this.gridHorStartingPos.y + _0x27426f * this.gridSize + this.gridPosY % this.gridSize), ig.system.context.lineTo(this.gridHorStartingPos.x + this.gridLength + this.gridPosX % this.gridSize, this.gridHorStartingPos.y + _0x27426f * this.gridSize + this.gridPosY % this.gridSize), ig.system.context.stroke(), ig.system.context.closePath(), ig.system.context.beginPath(), ig.system.context.moveTo(this.gridVerStartingPos.x + _0x27426f * this.gridSize + this.gridPosX % this.gridSize, this.gridVerStartingPos.y + this.gridPosY % this.gridSize), ig.system.context.lineTo(this.gridVerStartingPos.x + _0x27426f * this.gridSize + this.gridPosX % this.gridSize, this.gridVerStartingPos.y + this.gridLength + this.gridPosY % this.gridSize), ig.system.context.stroke(), ig.system.context.closePath();
      ig.system.context.restore();
    },
    'updateCarPos': function (_0x257acb, _0x4a0867) {
      this.pSegmentCount = _0x257acb, this.charRoadPosX = _0x4a0867;
    },
    'draw': function () {
      this.parent(), ig.system.context.save(), ig.system.context.globalAlpha = this.alpha, this.mapBG.draw(this.pos.x, this.pos.y), this.drawGrid(), ig.system.context.beginPath(), ig.system.context.moveTo(this.pos.x, this.pos.y), ig.system.context.lineTo(this.pos.x + 0x118, this.pos.y), ig.system.context.lineTo(this.pos.x + 0x118, this.pos.y + 0x118), ig.system.context.lineTo(this.pos.x + 0x24, this.pos.y + 0x118), ig.system.context.lineTo(this.pos.x, this.pos.y + 0xf4), ig.system.context.clip(), ig.system.context.translate(this.mapPos.x, this.mapPos.y), ig.system.context.rotate(0.523599), ig.system.context.translate(-this.mapPos.x, -this.mapPos.y), ig.system.context.translate(this.mapPos.x - this.mapPoints[this.pSegmentCount].x, this.mapPos.y - this.mapPoints[this.pSegmentCount].y), ig.system.context.strokeStyle = this.trackFill, ig.system.context.lineWidth = 0x16 * this.mapSizeMultiplier, ig.system.context.beginPath(), ig.system.context.moveTo(this.mapPoints[this.mapSegmentClip].x, this.mapPoints[this.mapSegmentClip].y);
      for (_0x5ee3df = this.mapSegmentClip + 0x1; _0x5ee3df < this.mapPoints.length - 0x2; _0x5ee3df++) ig.system.context.lineTo(this.mapPoints[_0x5ee3df].x * this.mapSizeMultiplier, this.mapPoints[_0x5ee3df].y * this.mapSizeMultiplier);
      ig.system.context.stroke();
      for (var _0x5ee3df = 0x0; _0x5ee3df < this.enemyCars.length; _0x5ee3df++) {
        var _0x4b6f2b = this.enemyCars[_0x5ee3df],
          _0x374765 = _0x4b6f2b.getSegmentIndex();
        _0x374765 < this.mapSegmentClip || (_0x374765 = this.mapPoints[_0x374765], ig.system.context.globalAlpha = this.alpha * _0x4b6f2b.alpha, ig.system.context.fillStyle = this.enemyCarFill, ig.system.context.strokeStyle = this.enemyCarOutline, ig.system.context.lineWidth = 0x2, ig.system.context.beginPath(), ig.system.context.arc(_0x374765.x * this.mapSizeMultiplier + 0xc * Math.cos(_0x374765.rotation) * _0x4b6f2b.offset, _0x374765.y * this.mapSizeMultiplier + 0xc * Math.sin(_0x374765.rotation) * _0x4b6f2b.offset, 0x7 * this.mapSizeMultiplier, 0x0, 0x2 * Math.PI), ig.system.context.fill(), ig.system.context.stroke());
      }
      ig.system.context.globalAlpha = this.alpha, ig.system.context.translate(this.mapPoints[this.pSegmentCount].x * this.mapSizeMultiplier + 0xc * Math.cos(this.mapPoints[this.pSegmentCount].rotation) * this.charRoadPosX, this.mapPoints[this.pSegmentCount].y * this.mapSizeMultiplier + 0xc * Math.sin(this.mapPoints[this.pSegmentCount].rotation) * this.charRoadPosX), ig.system.context.rotate(this.mapPoints[this.pSegmentCount].rotation), this.arrow.draw(0.5 * -this.arrow.width, 0.5 * -this.arrow.height), ig.system.context.restore(), ig.system.context.globalAlpha = this.alpha, this.mapBGTop.draw(this.pos.x, this.pos.y), ig.system.context.globalAlpha = 0x1;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.enemy').requires('impact.entity').defines(function () {
  EntityEnemy = ig.Entity.extend({
    'cars': [new ig.Image('media/graphics/game/cars/green.png'), new ig.Image('media/graphics/game/cars/blue.png'), new ig.Image('media/graphics/game/cars/white.png'), new ig.Image('media/graphics/game/cars/yellow.png'), new ig.Image('media/graphics/game/cars/red.png')],
    'Direction': {
      'STRAIGHT': 0x0,
      'LEFT': 0x1,
      'RIGHT': 0x2
    },
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.B,
    'checkAgainst': ig.Entity.TYPE.B,
    'accelerating': !0x1,
    'finished': !0x1,
    'finishTime': null,
    'p': {},
    'CollisionSide': {
      'FRONT': 0x0,
      'BACK': 0x1,
      'LEFT': 0x2,
      'RIGHT': 0x3
    },
    'player': !0x1,
    'init': function (_0x2a4b3d, _0x374bac, _0x2248b5) {
      this.parent(_0x2a4b3d, _0x374bac, _0x2248b5), 0x0 == ig.CarsData.getUserIndex() && this.cars.pop(), this.initProps(_0x2248b5), this.speedUpTimer = new ig.Timer(this.speedUpLimit);
    },
    'initProps': function (_0x578fa9) {
      this.ctx = _0x578fa9.ctxt, this.callbackSpawnSmoke = _0x578fa9.callbackSpawnSmoke, this.carCount = _0x578fa9.carCount, this.repositionCarToTheFront = _0x578fa9.repositionCarToTheFront, this.continueAlphaAnimation = this.continueAlphaAnimation.bind(this), this.alphaAnimationCompleted = this.alphaAnimationCompleted.bind(this), this.name = _0x578fa9.name, this.animatingAlpha = !0x1, this.currentLap = this.alpha = 0x1, this.totalLaps = _0x578fa9.totalLaps, this.currentSpriteFrame = this.cars[this.carCount % this.cars.length], this.zIndex = ig.game.entitiesZIndex.Game, this.size = {
        'x': 0x198,
        'y': 0x150
      }, this.frameSize = {
        'x': 0x198,
        'y': 0x150
      }, this.spriteColumnCount = 0x3, this.currentFrame = 0x0, this.frameCount = 0x2, this.rearSegment = this.frontSegment = this.currentSegment = null, this.speedUpEnabled = !0x1, this.speedUpSpeedMultiplier = 1.1, this.speedUpLimit = 0x3, this.gameSpeedMultiplier = 0x1, this.currentCollisionSide = null, this.baseLength = 0x118, this.baseWidth = 0x64, this.length = this.baseLength, this.width = this.baseWidth, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.playerX = 0x0, this.size = {
        'x': this.width,
        'y': this.length
      }, this.currentDirection = this.Direction.STRAIGHT, this.z = _0x578fa9.z, this.smokeZDistance = 0xa, this.smokeZ = this.z + this.smokeZDistance, this.offset = _0x578fa9.offset, this.offsetLimit = 0.6, this.targetOffset = this.offset, this.percent = 0x0, this.scale = 0.4, this.scaleSize = {
        'x': this.frameSize.x * this.scale,
        'y': this.frameSize.y * this.scale
      }, this.maxSpeed = this.baseMaxSpeed = _0x578fa9.maxSpeed, this.accel = this.baseAccel = this.baseMaxSpeed / 0x6, this.decel = 0.5 * this.baseMaxSpeed, this.currentSpeed = 0x0, this.horizontalPercentMovementSpeed = 0xa, this.horizontalMovementPercent = 0x0, this.smokeDelay = 0.1, this.smokeTimer = new ig.Timer(this.smokeDelay), this.shakeduration = this.shake = this.roadPosX = 0x0, this.shakeSpeed = 0x78, this.paused = this.collided = this.slowedDown = !0x1, this.loop = 0x0, this.laneChangeMinDelay = 0x1, this.laneChangeMaxDelay = 0x3, this.currentLaneChangeDelay = 0x0, this.horSpeed = 0.2, this.changingLane = !0x1, this.updateLaneChangeDelay(), this.changeLaneTimer = new ig.Timer(this.currentLaneChangeDelay);
    },
    'updateCollisionBox': function (_0x42a8f2) {
      this.length = this.baseLength * _0x42a8f2, this.width = this.baseWidth * _0x42a8f2, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.size = {
        'x': this.width,
        'y': this.length
      };
    },
    'startAcceleration': function () {
      this.accelerating = !0x0;
    },
    'updateLaneChangeDelay': function () {
      this.currentLaneChangeDelay = this.laneChangeMinDelay + Math.random() * (this.laneChangeMaxDelay - this.laneChangeMinDelay);
    },
    'pause': function () {
      this.animationTween && this.animationTween.pause(), this.paused = !0x0;
    },
    'resume': function () {
      this.animationTween && this.animationTween.resume(), this.paused = !0x1;
    },
    'smokeUpdate': function () {
      0x0 < this.smokeTimer.delta() && (this.callbackSpawnSmoke(this.z - 0x64, this.offset + this.getSmokeOffset()), this.smokeTimer.reset());
    },
    'getSmokeOffset': function () {
      return 0x0;
    },
    'speedUpUpdate': function () {
      this.speedUpEnabled && 0x0 <= this.speedUpTimer.delta() && (this.speedUpEnabled = !0x1, this.accel = this.baseAccel), !this.speedUpEnabled && this.maxSpeed != this.baseMaxSpeed && (this.maxSpeed -= 0.05 * this.baseMaxSpeed, this.maxSpeed < this.baseMaxSpeed && (this.maxSpeed = this.baseMaxSpeed));
    },
    'movementUpdate': function () {
      this.speedUpUpdate(), this.z = this.increase(this.z, ig.system.tick * this.getSpeed());
    },
    'curveUpdate': function (_0x1361e3, _0x3bb5c2) {
      this.roadPosX -= _0x1361e3 * _0x3bb5c2 * (this.currentSpeed / this.baseMaxSpeed);
    },
    'updateHitbox': function (_0xab7c4c) {
      this.pos.x = this.x - this.halfWidth, this.pos.y = this.z % _0xab7c4c, !this.finished && Math.floor(this.z / _0xab7c4c) > this.currentLap && (this.currentLap = Math.floor(this.z / _0xab7c4c), this.currentLap > this.totalLaps && this.finish());
    },
    'update': function () {
      this.parent(), this.paused || (this.shakeduration += this.shakeSpeed * ig.system.tick, this.shake = Math.sin(this.shakeduration), this.accelerating && (this.changeLaneCheck(), this.changeLaneUpdate(), this.accelerationUpdate(), this.smokeUpdate()));
    },
    'changeLaneCheck': function () {
      !this.changingLane && 0x0 <= this.changeLaneTimer.delta() && (this.changingLane = !0x0, 0.4 >= Math.random() ? (this.targetOffset = this.playerX, this.targetOffset < -this.offsetLimit ? this.targetOffset = -this.offsetLimit : this.targetOffset > this.offsetLimit && (this.targetOffset = this.offsetLimit)) : this.targetOffset = -this.offsetLimit + 0x2 * Math.random() * this.offsetLimit);
    },
    'changeLaneUpdate': function () {
      if (this.changingLane && this.offset != this.targetOffset) {
        var _0x63c798 = this.currentSpeed / this.baseMaxSpeed * ig.system.tick * this.horSpeed * this.gameSpeedMultiplier;
        this.offset < this.targetOffset ? (this.offset += _0x63c798, this.offset > this.targetOffset && (this.offset = this.targetOffset, this.resetChangeLaneHandler())) : (this.offset -= _0x63c798, this.offset < this.targetOffset && (this.offset = this.targetOffset, this.resetChangeLaneHandler()));
      }
    },
    'resetChangeLaneHandler': function () {
      this.updateLaneChangeDelay(), this.changeLaneTimer.set(this.currentLaneChangeDelay), this.changingLane = !0x1;
    },
    'getCurrentSpeed': function () {},
    'getSpeed': function () {
      return this.currentSpeed * this.gameSpeedMultiplier;
    },
    'accelerationUpdate': function () {
      this.slowedDown ? this.slowedDown = !0x1 : this.currentSpeed < this.maxSpeed ? (this.currentSpeed = this.acceleration(this.currentSpeed, this.accel, ig.system.tick), this.currentSpeed = this.limit(this.currentSpeed, 0x0, this.maxSpeed)) : this.currentSpeed > this.maxSpeed && (this.currentSpeed = this.acceleration(this.currentSpeed, 0.5 * -this.accel, ig.system.tick)), this.collided = !0x1;
    },
    'slowDown': function (_0x7dc6b4) {
      this.currentSpeed = 0.9 * _0x7dc6b4;
    },
    'acceleration': function (_0x54e41e, _0x4923d0, _0x193aac) {
      return _0x54e41e + _0x4923d0 * _0x193aac;
    },
    'limit': function (_0x3251a7, _0x2ef737, _0x4bbb52) {
      return Math.max(_0x2ef737, Math.min(_0x3251a7, _0x4bbb52));
    },
    'updateSpriteFrame': function (_0x2b6fd6) {
      this.playerX = _0x2b6fd6, _0x2b6fd6 = (this.offset - _0x2b6fd6) / 0.8, 0x1 < _0x2b6fd6 ? _0x2b6fd6 = 0x1 : -0x1 > _0x2b6fd6 && (_0x2b6fd6 = -0x1), this.currentFrame = 0x0 == _0x2b6fd6 ? 0x5 : 0x0 > _0x2b6fd6 ? 0x5 - Math.floor(0x4 * Math.abs(_0x2b6fd6)) : 0x5 + Math.floor(0x4 * Math.abs(_0x2b6fd6)), this.offset < this.targetOffset ? (this.currentFrame -= 0x1, 0x0 > this.currentFrame && (this.currentFrame = 0x0)) : this.offset > this.targetOffset && (this.currentFrame += 0x1, 0xa < this.currentFrame && (this.currentFrame = 0xa));
    },
    'draw': function () {
      this.parent();
    },
    'check': function (_0x117afc) {
      _0x117afc instanceof EntityCollectible || (this.collided = !0x0, _0x117afc.pos.y > this.pos.y + this.size.y - 0x64 ? (this.slowDown(_0x117afc.currentSpeed), this.currentCollisionSide = this.CollisionSide.FRONT) : _0x117afc.pos.y + _0x117afc.size.y - 0xa < this.pos.y ? this.currentCollisionSide = this.CollisionSide.BACK : this.horizontalCollision());
    },
    'horizontalCollision': function () {
      this.changingLane && (this.targetOffset = this.offset, this.resetChangeLaneHandler());
    },
    'increase': function (_0x3504b2, _0x1527b9) {
      return _0x3504b2 + _0x1527b9;
    },
    'speedUp': function () {
      this.speedUpEnabled = !0x0, this.maxSpeed = this.baseMaxSpeed * this.speedUpSpeedMultiplier, this.accel = this.baseAccel * this.speedUpSpeedMultiplier, this.speedUpTimer.reset();
    },
    'getSegment': function () {
      return this.currentSegment;
    },
    'setSegment': function (_0x39b75c) {
      this.currentSegment = _0x39b75c, this.currentSegment.cars.push(this);
    },
    'updateSegment': function (_0x556110) {
      this.currentSegment.cars.splice(this.currentSegment.cars.indexOf(this), 0x1), this.currentSegment = _0x556110, this.currentSegment.cars.push(this);
    },
    'setFrontSegment': function (_0x1318c6) {
      this.frontSegment = _0x1318c6;
    },
    'setRearSegment': function (_0x12b034) {
      this.rearSegment = _0x12b034;
    },
    'getSegmentIndex': function () {
      return this.currentSegment.index;
    },
    'finish': function () {
      this.finished = !0x0;
    },
    'setFinishTime': function (_0x2acdc4) {
      this.finishTime = _0x2acdc4;
    },
    'getFinishTime': function () {
      return this.finishTime;
    },
    'startAlphaAnimation': function () {
      this.animatingAlpha = !0x0, this.animationTween && this.animationTween.stop(), this.animationTween = this.tween({
        'alpha': 0x0
      }, 0.6, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.continueAlphaAnimation
      }), this.animationTween.start();
    },
    'continueAlphaAnimation': function () {
      this.repositionCarToTheFront(this), this.animationTween = this.tween({
        'alpha': 0x1
      }, 0.6, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.alphaAnimationCompleted
      }), this.animationTween.start();
    },
    'alphaAnimationCompleted': function () {
      this.animationTween && this.animationTween.stop(), this.animationTween = null, this.animatingAlpha = !0x1;
    },
    'isAnimating': function () {
      return this.animatingAlpha;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.smoke').requires('impact.entity').defines(function () {
  EntitySmoke = ig.Entity.extend({
    'image': new ig.Image('media/graphics/game/smoke.png'),
    'init': function (_0x69e5c3, _0xa67881, _0x153d7c) {
      this.parent(_0x69e5c3, _0xa67881, _0x153d7c), this.initProps(_0x153d7c);
    },
    'initProps': function (_0x43d4e3) {
      this.ctx = _0x43d4e3.ctxt, this.zIndex = ig.game.entitiesZIndex.Game, this.size = {
        'x': this.image.width,
        'y': this.image.height
      }, this.z = _0x43d4e3.z, this.offsetX = _0x43d4e3.offset, this.offsetY = -0x1fbd0, this.percent = 0x0, this.alpha = this.scale = 0.5, this.duration = 0.2, this.smokeTimer = new ig.Timer(this.duration), this.maxSpeed = this.baseMaxSpeed = _0x43d4e3.maxSpeed, this.animating = !0x0, this.paused = !0x1;
    },
    'reset': function (_0x459eb5, _0x197ee) {
      this.z = _0x459eb5, this.offsetX = _0x197ee, this.alpha = 0.5, this.animating = !0x0, this.smokeTimer.reset(), this.paused = !0x1;
    },
    'movementUpdate': function () {
      this.z += ig.system.tick * this.maxSpeed;
    },
    'curveUpdate': function (_0x3075fe, _0x3cebbd) {
      this.roadPosX -= _0x3075fe * _0x3cebbd * (this.currentSpeed / this.baseMaxSpeed);
    },
    'update': function () {
      this.parent(), this.animating && (0x0 > this.smokeTimer.delta() ? this.alpha = 0.5 * (-this.smokeTimer.delta() / this.duration) : (this.alpha = 0x0, this.stop()));
    },
    'stop': function () {
      this.animating = !0x1, this.callbackReturnSmoke(this);
    },
    'getCurrentSpeed': function () {},
    'getSpeed': function () {
      return this.currentSpeed;
    },
    'accelerationUpdate': function () {
      this.currentSpeed < this.maxSpeed ? (this.currentSpeed = this.acceleration(this.currentSpeed, this.accel, ig.system.tick), this.currentSpeed = this.limit(this.currentSpeed, 0x0, this.maxSpeed)) : this.currentSpeed > this.maxSpeed && (this.currentSpeed = this.acceleration(this.currentSpeed, 0.5 * -this.accel, ig.system.tick));
    },
    'acceleration': function (_0x4f7810, _0x1df059, _0x3db450) {
      return _0x4f7810 + _0x1df059 * _0x3db450;
    },
    'limit': function (_0xb34916, _0x2e5177, _0x12455e) {
      return Math.max(_0x2e5177, Math.min(_0xb34916, _0x12455e));
    },
    'updateSpriteFrame': function (_0x8eaac1) {
      _0x8eaac1 = (this.offset - _0x8eaac1) / 0.8, 0x1 < _0x8eaac1 ? _0x8eaac1 = 0x1 : -0x1 > _0x8eaac1 && (_0x8eaac1 = -0x1), this.currentFrame = 0x0 == _0x8eaac1 ? 0x5 : 0x0 > _0x8eaac1 ? 0x5 - Math.floor(0x4 * Math.abs(_0x8eaac1)) : 0x5 + Math.floor(0x4 * Math.abs(_0x8eaac1));
    },
    'draw': function () {
      this.parent();
    },
    'pause': function () {
      this.paused = !0x0, this.smokeTimer.pause();
    },
    'resume': function () {
      this.paused = !0x1, this.smokeTimer.unpause();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.popups.pause').requires('impact.entity', 'game.entities.popups.settings', 'game.entities.buttons.button-generic').defines(function () {
  EntityPause = EntitySettings.extend({
    'buttonHomeImage': new ig.Image('media/graphics/ui/common/btn-home.png'),
    'buttonResumeImage': new ig.Image('media/graphics/ui/common/btn-resume.png'),
    'buttonRetryImage': new ig.Image('media/graphics/ui/common/btn-retry.png'),
    'grid': new ig.Image('media/graphics/ui/common/grid.png'),
    'PauseInputs': {
      'RESUME': 0x0,
      'RETRY': 0x1,
      'HOME': 0x2
    },
    'init': function (_0x61266, _0x34f590, _0x42bd6b) {
      this.parent(_0x61266, _0x34f590, _0x42bd6b), this.currentPauseInput = null, this.callbackHome = this.callbackHome.bind(this), this.callbackRetry = this.callbackRetry.bind(this), this.buttonOkay.updateIdleImage(this.buttonResumeImage), this.buttonOkay.pos.x = this.containerPos.x + 0.5 * this.size.x - 0.5 * this.buttonOkay.size.x, this.buttonOkay.pos.y = this.containerPos.y + 0.84 * this.size.y - 0.5 * this.buttonOkay.size.y, this.buttonHome = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonHomeImage,
        'clickImage': null,
        'callback': this.callbackHome,
        'zIndex': this.zIndex + 0x2
      }), this.buttonHome.pos.x = this.containerPos.x + 0.75 * this.size.x - 0.5 * this.buttonHome.size.x, this.buttonHome.pos.y = this.containerPos.y + 0.84 * this.size.y - 0.5 * this.buttonHome.size.y, this.buttonRetry = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonRetryImage,
        'clickImage': null,
        'callback': this.callbackRetry,
        'zIndex': this.zIndex + 0x2
      }), this.buttonRetry.pos.x = this.containerPos.x + 0.25 * this.size.x - 0.5 * this.buttonRetry.size.x, this.buttonRetry.pos.y = this.containerPos.y + 0.84 * this.size.y - 0.5 * this.buttonRetry.size.y, this.buttonHome.enable(!0x1), this.buttonRetry.enable(!0x1), this.buttonBGM.pos.x = this.containerPos.x + 0.5 * this.size.x - 0.5 * this.buttonBGM.size.x, this.buttonBGM.pos.y = this.containerPos.y + 0.36 * this.size.y - 0.5 * this.buttonBGM.size.y, this.buttonSFX.pos.x = this.containerPos.x + 0.5 * this.size.x - 0.5 * this.buttonBGM.size.x, this.buttonSFX.pos.y = this.containerPos.y + 0.6 * this.size.y - 0.5 * this.buttonBGM.size.y, this.transition = !0x1, this.transitionAlpha = 0x0, this.transitionGrd = ig.system.context.createLinearGradient(0x0, 0x0, 0x0, ig.system.height), this.transitionGrd.addColorStop(0x0, ig.game.transitionGrid.gradientColorStop1), this.transitionGrd.addColorStop(0x1, ig.game.transitionGrid.gradientColorStop2);
    },
    'update': function () {
      this.transition && ig.game.transitionGrid.update(), this.killed || (this.buttonHome.offsetY = this.pos.y, this.buttonRetry.offsetY = this.pos.y, this.buttonHome.alpha = this.alpha, this.buttonRetry.alpha = this.alpha), this.parent();
    },
    'draw': function () {
      this.killed || (ig.system.context.globalAlpha = this.alpha, ig.system.context.fillStyle = this.gradient, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.transition && (ig.system.context.globalAlpha = this.transitionAlpha, ig.system.context.fillStyle = this.transitionGrd, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.game.transitionGrid.draw(this.transitionGrd, this.grid), ig.system.context.globalAlpha = this.alpha), this.container.draw(this.pos.x + this.containerPos.x, this.pos.y + this.containerPos.y), this.drawText(), ig.system.context.globalAlpha = 0x1);
    },
    'enableButtons': function () {
      this.parent(), this.buttonHome.enable(!0x0), this.buttonRetry.enable(!0x0);
    },
    'disableButtons': function () {
      this.parent(), this.buttonHome.enable(!0x1), this.buttonRetry.enable(!0x1);
    },
    'callbackOkay': function () {
      this.currentPauseInput = this.PauseInputs.RESUME, this.parent();
    },
    'callbackHome': function () {
      this.currentPauseInput = this.PauseInputs.HOME, this.disableButtons(), this.animateOut();
    },
    'callbackRetry': function () {
      this.currentPauseInput = this.PauseInputs.RETRY, this.disableButtons(), this.animateTransition();
    },
    'animateOutCompleted': function () {
      this.currentPauseInput == this.PauseInputs.RESUME ? this.callback() : this.currentPauseInput == this.PauseInputs.RETRY ? ig.game.director.reloadLevel() : ig.game.director.jumpTo(LevelTitle);
    },
    'animateTransition': function () {
      this.transition = !0x0, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0,
        'transitionAlpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.tween({}, 0.6, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'kill': function () {
      this.buttonRetry.kill(), this.buttonRetry = null, this.buttonHome.kill(), this.buttonHome = null, this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.speedup-lines').requires('impact.entity').defines(function () {
  EntitySpeedupLines = ig.Entity.extend({
    'init': function (_0x3d1ece, _0x2f0635, _0x475566) {
      this.parent(_0x3d1ece, _0x2f0635, _0x475566), this.initProps();
    },
    'initProps': function () {
      this.enabled = !0x0, this.paused = !0x1, this.alpha = 0x1, this.isNitro = !0x1, this.cw = ig.system.width, this.ch = ig.system.height, this.numberOfLines = 0x1e, this.minLife = 0x1f4, this.maxLife = 0x384, this.minSpeed = 0x2, this.maxSpeed = 0x4, this.minAlpha = 0.25, this.maxAlpha = 0x1, this.minSize = 0x14, this.maxSize = 0x28, this.minInRad = 0xc8, this.maxInRad = 0x190, this.fillColor = "rgb(255, 255, 255)", this.nitroColor = 'blue', this.lines = [];
      for (var _0x4f493e = 0x0; _0x4f493e < this.numberOfLines; _0x4f493e++) {
        var _0x155aaa = this.createLineObject();
        _0x155aaa.xx = Math.cos(_0x155aaa.angle), _0x155aaa.xy = Math.sin(_0x155aaa.angle), this.lines.push(_0x155aaa);
      }
      this.midPoint = {
        'x': 0.5 * this.cw,
        'y': 0.5 * this.ch
      };
    },
    'update': function () {
      this.parent();
      for (var _0x478576 = 0x0; _0x478576 < this.lines.length; _0x478576++) this.updateLine(this.lines[_0x478576]), 0.1 > this.lines[_0x478576].alpha && this.resetLine(this.lines[_0x478576]);
    },
    'draw': function () {
      this.parent();
      if (this.enabled) {
        var _0x3ce820 = ig.system.context;
        _0x3ce820.fillStyle = this.fillColor;
        for (var _0x1700ea = 0x0; _0x1700ea < this.lines.length; _0x1700ea++) this.drawLine(_0x3ce820, this.lines[_0x1700ea]);
        _0x3ce820.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), _0x3ce820.globalAlpha = 0x1;
      }
    },
    'updateLine': function (_0x4c9cf0) {
      this.paused || (_0x4c9cf0.curLife -= _0x4c9cf0.speed, _0x4c9cf0.inRadius += 0x4 * _0x4c9cf0.speed, _0x4c9cf0.alpha *= _0x4c9cf0.curLife / _0x4c9cf0.life, _0x4c9cf0.size *= _0x4c9cf0.curLife / _0x4c9cf0.life);
    },
    'drawLine': function (_0x363012, _0x579531) {
      _0x363012.setTransform(_0x579531.xx, _0x579531.xy, -_0x579531.xy, _0x579531.xx, this.midPoint.x, this.midPoint.y), _0x363012.beginPath(), _0x363012.moveTo(0x0, _0x579531.inRadius), _0x363012.lineTo(_0x579531.size, _0x579531.outRadius), _0x363012.lineTo(-_0x579531.size, _0x579531.outRadius), _0x363012.globalAlpha = _0x579531.alpha * this.alpha, _0x363012.fill(), this.isNitro && (_0x363012.strokeStyle = '#8000ff', _0x363012.stroke());
    },
    'rand': function (_0xd350b7, _0x3d1729) {
      return _0xd350b7 + Math.random() * (_0x3d1729 - _0xd350b7);
    },
    'createLineObject': function () {
      var _0x16a02e = this.rand(this.minLife, this.maxLife);
      return {
        'speed': this.rand(this.minSpeed, this.maxSpeed),
        'life': _0x16a02e,
        'curLife': _0x16a02e,
        'alpha': this.rand(this.minAlpha, this.maxAlpha),
        'angle': Math.PI * this.rand(0x0, 0x2),
        'size': this.rand(this.minSize, this.maxSize),
        'inRadius': this.rand(this.minInRad, this.maxInRad),
        'outRadius': this.cw
      };
    },
    'resetLine': function (_0x557192) {
      var _0x3a1034 = this.rand(this.minLife, this.maxLife);
      _0x557192.speed = this.rand(this.minSpeed, this.maxSpeed), _0x557192.life = _0x3a1034, _0x557192.curLife = _0x3a1034, _0x557192.alpha = this.rand(this.minAlpha, this.maxAlpha), _0x557192.angle = Math.PI * this.rand(0x0, 0x2), _0x557192.size = this.rand(this.minSize, this.maxSize), _0x557192.inRadius = this.rand(this.minInRad, this.maxInRad), _0x557192.outRadius = this.cw, _0x557192.xx = Math.cos(_0x557192.angle), _0x557192.xy = Math.sin(_0x557192.angle);
    },
    'enable': function () {
      this.enabled = !0x0;
    },
    'disable': function () {
      this.isNitro = this.enabled = !0x1;
    },
    'pause': function () {
      this.paused = !0x0;
    },
    'resume': function () {
      this.paused = !0x1;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.buttons.interactive-box').requires('impact.entity').defines(function () {
  EntityInteractiveBox = ig.Entity.extend({
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.A,
    'layer': 0x0,
    'enabled': !0x0,
    'scale': {
      'x': 0x1,
      'y': 0x1
    },
    'alpha': 0x1,
    'init': function (_0x2696fd, _0x38e200, _0x1e9fbd) {
      this.parent(_0x2696fd, _0x38e200, _0x1e9fbd), _0x1e9fbd.callbackPressed && (this.callbackPressed = _0x1e9fbd.callbackPressed), this.size = _0x1e9fbd.size;
    },
    'setIgnorePause': function (_0x551a06) {
      this.ignorePause = _0x551a06;
    },
    'ready': function () {
      this.parent();
    },
    'clicked': function () {
      this.callbackPressed();
    },
    'clicking': function () {
      this.callbackPressed();
    },
    'released': function () {},
    'leave': function () {},
    'over': function () {},
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent();
    },
    'callback': function () {},
    'disable': function () {
      this.type = ig.Entity.TYPE.NONE;
    },
    'enable': function () {
      this.type = ig.Entity.TYPE.A;
    },
    'kill': function () {
      this.layer = this.size = this.callback = null, this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.tutorial').requires('impact.entity').defines(function () {
  EntityTutorial = ig.Entity.extend({
    'image': new ig.Image('media/graphics/ui/game/ctrl-asset.png'),
    'init': function (_0x2cdd7f, _0x5ac53f, _0x4648be) {
      this.parent(_0x2cdd7f, _0x5ac53f, _0x4648be), this.callbackRemoveTutorial = _0x4648be.callbackRemoveTutorial, this.zIndex = ig.game.entitiesZIndex.UI, this.scale = 0.5, this.alpha = 0x1, this.rotation = 0.02 * -Math.PI, this.size = {
        'x': this.image.width,
        'y': this.image.height
      }, this.halfSize = {
        'x': 0.5 * this.image.width | 0x0,
        'y': 0.5 * this.image.height | 0x0
      };
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent();
      if (!(ig.ua.mobile || 0x0 == this.alpha)) {
        var _0x1c5ad6 = Math.cos(this.rotation) * this.scale,
          _0x30d657 = Math.sin(this.rotation) * this.scale;
        ig.system.context.globalAlpha = this.alpha, ig.system.context.setTransform(_0x1c5ad6, _0x30d657, -_0x30d657, _0x1c5ad6, this.pos.x + this.halfSize.x | 0x0, this.pos.y + this.halfSize.y | 0x0), this.image.draw(-this.halfSize.x, -this.halfSize.y), ig.system.context.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), ig.system.context.globalAlpha = 0x1;
      }
    },
    'animate': function () {
      this.tween({
        'alpha': 0x1,
        'scale': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.tweenAnim = this.tween({
        'rotation': 0.02 * Math.PI
      }, 0.2, {
        'loop': 0x2,
        'loopCount': 0xc,
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOut.bind(this)
      }), this.tweenAnim.start();
    },
    'animateOut': function () {
      this.tweenAnim = this.tween({
        'alpha': 0x0,
        'scale': 0.5
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.callbackRemoveTutorial
      }), this.tweenAnim.start();
    },
    'pause': function () {
      this.tweenAnim && this.tweenAnim.pause();
    },
    'resume': function () {
      this.tweenAnim && this.tweenAnim.resume();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.ready-set-go-indicator').requires('impact.entity').defines(function () {
  EntityReadySetGoIndicator = ig.Entity.extend({
    'init': function (_0x16be9a, _0x2bf26b, _0x5f0861) {
      this.parent(_0x16be9a, _0x2bf26b, _0x5f0861), this.zIndex = ig.game.entitiesZIndex.UI, this.scale = 0.5, this.alpha = 0x0, this.callbackReadySetGoAnimationCompleted = _0x5f0861.callbackReadySetGoAnimationCompleted, this.initProps();
    },
    'startCountdownAnimation': function () {
      ig.soundHandler.sfxPlayer.play('rev1'), this.animationTween = this.tween({
        'scale': 0x1,
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.continueCountdownAnimation1.bind(this)
      }), this.animationTween.start();
    },
    'continueCountdownAnimation1': function () {
      this.animationTween = this.tween({
        'scale': 0.5,
        'alpha': 0x0
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseIn,
        'onComplete': this.continueCountdownAnimation2.bind(this),
        'delay': 0.45
      }), this.animationTween.start();
    },
    'continueCountdownAnimation2': function () {
      ig.soundHandler.sfxPlayer.play('rev2'), this.textFormatShadow.text = _STRINGS.Game.Set, this.textFormat.text = _STRINGS.Game.Set, this.animationTween = this.tween({
        'scale': 0x1,
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.continueCountdownAnimation3.bind(this)
      }), this.animationTween.start();
    },
    'continueCountdownAnimation3': function () {
      ig.soundHandler.sfxPlayer.play('rev4'), this.animationTween = this.tween({
        'scale': 0.5,
        'alpha': 0x0
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseIn,
        'onComplete': this.continueCountdownAnimation4.bind(this),
        'delay': 0.45
      }), this.animationTween.start();
    },
    'continueCountdownAnimation4': function () {
      this.textFormat.text = _STRINGS.Game.Go, this.textFormatShadow.text = _STRINGS.Game.Go, ig.soundHandler.sfxPlayer.play('rev3'), this.animationTween = this.tween({
        'scale': 0x1,
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.continueCountdownAnimation5.bind(this)
      }), this.animationTween.start();
    },
    'continueCountdownAnimation5': function () {
      this.callbackReadySetGoAnimationCompleted(), this.animationTween = this.tween({}, 0.5, {
        'onComplete': this.continueCountdownAnimation6.bind(this)
      }), this.animationTween.start();
    },
    'continueCountdownAnimation6': function () {
      this.animationTween = this.tween({
        'scale': 0.5,
        'alpha': 0x0
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseIn
      }), this.animationTween.start();
    },
    'initProps': function () {
      this.textFormatShadow = {
        'align': 'center',
        'font': "140px infinite-justice",
        'fillStyle': '#ffffff',
        'text': _STRINGS.Game.Ready,
        'x': 0x0,
        'y': 0x3c,
        'lineWidth': 0x14,
        'strokeStyle': '#011B3B',
        'strokeOffset': {
          'x': 0x0,
          'y': 0x0
        }
      }, this.textFormat = {
        'align': 'center',
        'font': "140px infinite-justice",
        'fillStyle': '#053AEC',
        'text': _STRINGS.Game.Ready,
        'x': 0x0,
        'y': 0x3c,
        'lineWidth': 0x10,
        'strokeStyle': '#ffffff',
        'strokeOffset': {
          'x': 0x0,
          'y': 0x0
        }
      };
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent(), 0x0 != this.alpha && (ig.system.context.globalAlpha = this.alpha, ig.system.context.setTransform(this.scale, 0x0, 0x0, this.scale, this.pos.x + this.textFormat.x | 0x0, this.pos.y + this.textFormat.y | 0x0), this.drawText(this.textFormatShadow), this.drawText(this.textFormat), ig.system.context.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), ig.system.context.globalAlpha = 0x1);
    },
    'drawText': function (_0x483e7d) {
      ig.system.context.textAlign = _0x483e7d.align, ig.system.context.font = _0x483e7d.font, ig.system.context.fillStyle = _0x483e7d.fillStyle, ig.system.context.lineWidth = _0x483e7d.lineWidth, ig.system.context.strokeStyle = _0x483e7d.strokeStyle, ig.system.context.strokeText(_0x483e7d.text, _0x483e7d.strokeOffset.y | 0x0, _0x483e7d.strokeOffset.y | 0x0), ig.system.context.fillText(_0x483e7d.text, 0x0, 0x0);
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.fuel-indicator').requires('impact.entity').defines(function () {
  EntityFuelIndicator = ig.Entity.extend({
    'fuelBar': new ig.Image('media/graphics/ui/game/fuel-bar.png'),
    'fuelFill': new ig.Image('media/graphics/ui/game/fuel-fill.png'),
    'init': function (_0x3ab633, _0x3bb42a, _0x28d276) {
      this.parent(_0x3ab633, _0x3bb42a, _0x28d276), this.zIndex = ig.game.entitiesZIndex.UI, this.alpha = this.scale = 0x1, this.size.x = this.fuelBar.width, this.size.y = this.fuelBar.height, this.animPercent = this.percent = 0x1, this.animSpeed = 0.3;
    },
    'update': function () {
      this.parent(), this.percent < this.animPercent ? (this.animPercent -= this.animSpeed * ig.system.tick, this.percent > this.animPercent && (this.animPercent = this.percent)) : this.percent > this.animPercent && (this.animPercent += this.animSpeed * ig.system.tick, this.percent < this.animPercent && (this.animPercent = this.percent));
    },
    'draw': function () {
      this.parent(), ig.system.context.save(), ig.system.context.globalAlpha = this.alpha, this.fuelBar.draw(this.pos.x, this.pos.y), ig.system.context.rect(this.pos.x + 0x49, this.pos.y + 0x17, 0x114 * this.animPercent, 0x1f), ig.system.context.clip(), this.fuelFill.draw(this.pos.x, this.pos.y), ig.system.context.restore();
    },
    'updatePercent': function (_0x45b2d1) {
      this.percent = _0x45b2d1;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.nitro-indicator').requires('impact.entity').defines(function () {
  EntityNitroIndicator = ig.Entity.extend({
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.A,
    'nitroBar': new ig.Image('media/graphics/ui/game/nitro-bar.png'),
    'nitroFill': new ig.Image('media/graphics/ui/game/nitro-fill.png'),
    'pointer': new ig.Image('media/graphics/ui/game/nitro-bar-needle.png'),
    'paused': !0x0,
    'enabled': !0x0,
    'textAlpha': 0x0,
    'showTutorial': !0x1,
    'isFull': !0x1,
    'manualControl': !0x0,
    'init': function (_0x32e6b8, _0x47f7f8, _0x4b14ff) {
      this.parent(_0x32e6b8, _0x47f7f8, _0x4b14ff), this.zIndex = ig.game.entitiesZIndex.UI, this.alpha = this.scale = 0x1, this.size.x = this.nitroBar.width, this.size.y = this.nitroBar.height, this.progress = 0x0, this.goalTime = 0xf, this.cooldown = 0x5, this.minPointerDegree = -0xa4, this.maxPointerDegree = 0x1a, this.pointerRatio = (this.maxPointerDegree - this.minPointerDegree) / this.goalTime, this.pointerRotation = 0x0, this.lastPointerDegree = -0x5, this.updatePointer(), this.tutorialText = ig.ua.mobile ? _STRINGS.Game.nitroTutorial2 : _STRINGS.Game.nitroTutorial, this.car && (this.cooldown = this.car.nitroLimit);
    },
    'update': function () {
      this.parent();
      if (!this.paused) {
        if (this.progress += ig.system.tick, this.enabled) {
          if (this.updatePointer(), this.progress >= this.goalTime) this.onFull();
        } else this.progress >= this.cooldown && this.enable();
      }
    },
    'updatePointer': function () {
      var _0x3b9c26 = this.progress * this.pointerRatio + this.minPointerDegree;
      this.lastPointerDegree = _0x3b9c26, this.pointerRotation = _0x3b9c26 * Math.PI / 0xb4;
    },
    'clicked': function () {
      this.manualControl && (this.paused || this.isFull && this.activate());
    },
    'onFull': function () {
      this.manualControl ? ig.input.pressed('space') ? this.activate() : this.isFull || (this.isFull = !0x0, ig.game.firstTime && (this.tutorialRotation = -0.05, this.tween({
        'tutorialRotation': 0.05
      }, 0.3, {
        'loop': ig.Tween.Loop.Reverse
      }).start(), this.showTutorial = !0x0), this.textBar = _STRINGS.Game.Ready, this.tween({
        'textAlpha': 0x1
      }, 0.4, {
        'loop': ig.Tween.Loop.Reverse
      }).start()) : this.activate();
    },
    'activate': function () {
      this.progress = 0x0, this.isFull = !0x1, this.showTutorial = ig.game.firstTime = !0x1, this.updatePointer(), this.enabled = !0x1, this.car.nitroActivated(), this.stopTweens(), this.textBar = _STRINGS.Game.cooldown, this.textAlpha = 0x0, this.tween({
        'textAlpha': 0x1
      }, 0.4, {
        'loop': ig.Tween.Loop.Reverse
      }).start();
    },
    'enable': function () {
      this.enabled = !0x0, this.textAlpha = this.progress = 0x0, this.stopTweens();
    },
    'getWidthFillBar': function () {
      return 0x114 / this.goalTime * this.progress;
    },
    'pause': function () {
      this.paused = !0x0;
    },
    'resume': function () {
      this.paused = !0x1;
    },
    'draw': function () {
      this.parent(), ig.system.context.save(), ig.system.context.globalAlpha = this.alpha, this.nitroBar.draw(this.pos.x, this.pos.y), this.drawPointer(this.pos.x, this.pos.y), this.showTutorial && this.drawTutorialText(this.pos.x + 0xf6, this.pos.y - 0x6), this.enabled && (ig.system.context.rect(this.pos.x + 0x6e, this.pos.y + 0x17, this.getWidthFillBar(), 0x1f), ig.system.context.clip(), this.nitroFill.draw(this.pos.x, this.pos.y)), this.paused || this.drawTextBar(this.pos.x + 0xf6, this.pos.y + 0x2b), ig.system.context.restore();
    },
    'drawPointer': function (_0x4cccb0, _0x43807c) {
      var _0x133de3 = this.pointer.width,
        _0x11a848 = this.pointer.height;
      ig.system.context.translate(_0x4cccb0 + 0x47, _0x43807c + 0x27), ig.system.context.rotate(this.pointerRotation), this.pointer.draw(-_0x133de3 / 0x2, -_0x11a848 / 0x2), ig.system.context.resetTransform();
    },
    'drawTextBar': function (_0x375ef7, _0x1c3151) {
      ig.system.context.globalAlpha = this.textAlpha, ig.system.context.textAlign = 'center', ig.system.context.font = "24px archivo-black", ig.system.context.fillStyle = '#ffffff', ig.system.context.textBaseline = 'middle', ig.system.context.lineWidth = 0x8, ig.system.context.strokeStyle = '#000', ig.system.context.strokeText(this.textBar, _0x375ef7, _0x1c3151), ig.system.context.fillText(this.textBar, _0x375ef7, _0x1c3151);
    },
    'drawTutorialText': function (_0x36b7d3, _0x108d2a) {
      this.paused || (ig.system.context.globalAlpha = this.alpha, ig.system.context.textAlign = 'center', ig.system.context.lineJoin = 'round', ig.system.context.font = "12px archivo-black", ig.system.context.fillStyle = '#ffffff', ig.system.context.textBaseline = 'middle', ig.system.context.lineWidth = 0x8, ig.system.context.strokeStyle = '#000', ig.system.context.translate(_0x36b7d3, _0x108d2a), ig.system.context.rotate(this.tutorialRotation), ig.system.context.strokeText(this.tutorialText, 0x0, 0x0), ig.system.context.fillText(this.tutorialText, 0x0, 0x0), ig.system.context.resetTransform());
    },
    'updatePercent': function (_0xb55699) {
      this.percent = _0xb55699;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.popups.game-over').requires('impact.entity', 'game.entities.buttons.button-generic').defines(function () {
  EntityGameOver = ig.Entity.extend({
    'container': new ig.Image('media/graphics/ui/common/popup.png'),
    'buttonResumeImage': new ig.Image('media/graphics/ui/common/btn-retry.png'),
    'buttonHomeImage': new ig.Image('media/graphics/ui/common/btn-home.png'),
    'grid': new ig.Image('media/graphics/ui/common/grid.png'),
    'GameOverInputs': {
      'RETRY': 0x0,
      'HOME': 0x1
    },
    'init': function (_0x2420e9, _0x550500, _0x24d159) {
      this.parent(_0x2420e9, _0x550500, _0x24d159), this.score = _0x24d159.score, this.callbackRetry = this.callbackRetry.bind(this), this.callbackHome = this.callbackHome.bind(this), this.animateInCompleted = this.animateInCompleted.bind(this), this.animateOutCompleted = this.animateOutCompleted.bind(this), this.highScore = ig.game.load('highScore');
      if (null == this.highScore || this.highScore < this.score) this.highScore = this.score, ig.game.save('highScore', this.highScore);
      ig.game.advStorage.checkDistance(this.highScore), this.currentGameOverInput = null, this.zIndex = ig.game.entitiesZIndex.Popup + 0xa, this.size = {
        'x': this.container.width,
        'y': this.container.height
      }, this.containerPos = {
        'x': 0.5 * ig.system.width - 0.5 * this.size.x,
        'y': 0.5 * ig.system.height - 0.5 * this.size.y
      }, this.alpha = 0x0, this.transition = this.killed = !0x1, this.transitionAlpha = 0x0, this.transitionGrd = ig.system.context.createLinearGradient(0x0, 0x0, 0x0, ig.system.height), this.transitionGrd.addColorStop(0x0, ig.game.transitionGrid.gradientColorStop1), this.transitionGrd.addColorStop(0x1, ig.game.transitionGrid.gradientColorStop2), this.textFormat = {
        'align': 'center',
        'font': "56px archivo-black",
        'fillStyle': '#011B3B',
        'text': _STRINGS.Results.GameOver,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.2 * this.size.y
      }, this.scoreTextFormat = {
        'align': 'center',
        'font': "34px archivo-black",
        'fillStyle': '#ffffff',
        'text': _STRINGS.Results.Score,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.34 * this.size.y
      }, this.scoreValTextFormat = {
        'align': 'center',
        'font': "58px archivo-black",
        'fillStyle': '#011B3B',
        'text': this.score,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.47 * this.size.y
      }, this.bestTextFormat = {
        'align': 'center',
        'font': "34px archivo-black",
        'fillStyle': '#ffffff',
        'text': _STRINGS.Results.Best,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.58 * this.size.y
      }, this.bestValTextFormat = {
        'align': 'center',
        'font': "44px archivo-black",
        'fillStyle': '#011B3B',
        'text': this.highScore,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.68 * this.size.y
      }, this.gradient = ig.system.context.createRadialGradient(0.5 * ig.system.width, 0.5 * ig.system.height, 0.3 * ig.system.height, 0.5 * ig.system.width, 0.5 * ig.system.height, ig.system.height), this.gradient.addColorStop(0x0, "rgba(0, 0, 0, 0)"), this.gradient.addColorStop(0x1, "rgba(0, 0, 0, 0.8)"), this.buttonRetry = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonResumeImage,
        'clickImage': null,
        'callback': this.callbackRetry,
        'zIndex': this.zIndex + 0x2
      }), this.buttonRetry.pos.x = this.containerPos.x + 0.3 * this.size.x - 0.5 * this.buttonRetry.size.x, this.buttonRetry.pos.y = this.containerPos.y + 0.84 * this.size.y - 0.5 * this.buttonRetry.size.y, this.buttonHome = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonHomeImage,
        'clickImage': null,
        'callback': this.callbackHome,
        'zIndex': this.zIndex + 0x2
      }), this.buttonHome.pos.x = this.containerPos.x + 0.7 * this.size.x - 0.5 * this.buttonHome.size.x, this.buttonHome.pos.y = this.containerPos.y + 0.84 * this.size.y - 0.5 * this.buttonHome.size.y, this.buttonRetry.enable(!0x1), this.buttonHome.enable(!0x1), ig.game.sortEntitiesDeferred(), this.animateIn();
    },
    'draw': function () {
      this.killed || (ig.system.context.globalAlpha = this.alpha, ig.system.context.fillStyle = this.gradient, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.container.draw(this.pos.x + this.containerPos.x, this.pos.y + this.containerPos.y), this.drawText(this.textFormat), this.drawText(this.scoreTextFormat), this.drawText(this.bestTextFormat), this.drawText(this.scoreValTextFormat), this.drawText(this.bestValTextFormat), this.transition && (ig.system.context.globalAlpha = this.transitionAlpha, ig.system.context.fillStyle = this.transitionGrd, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.game.transitionGrid.draw(this.transitionGrd, this.grid), ig.system.context.globalAlpha = this.alpha), ig.system.context.globalAlpha = 0x1);
    },
    'update': function () {
      this.parent(), this.killed || (this.transition && ig.game.transitionGrid.update(), this.buttonRetry.offsetY = this.pos.y, this.buttonRetry.alpha = this.alpha, this.buttonHome.offsetY = this.pos.y, this.buttonHome.alpha = this.alpha);
    },
    'drawText': function (_0x24964e) {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + _0x24964e.x, this.pos.y + _0x24964e.y), ig.system.context.textAlign = _0x24964e.align, ig.system.context.font = _0x24964e.font, ig.system.context.fillStyle = _0x24964e.fillStyle, ig.system.context.fillText(_0x24964e.text, 0x0, 0x0), ig.system.context.restore();
    },
    'callbackOkay': function () {
      this.disableButtons(), this.animateOut();
    },
    'animateIn': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.pos.y = 0x64, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x0
        },
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateInCompleted
      }).start();
    },
    'animateInCompleted': function () {
      this.enableButtons();
    },
    'enableButtons': function () {
      this.buttonRetry.enable(!0x0), this.buttonHome.enable(!0x0);
    },
    'disableButtons': function () {
      this.buttonRetry.enable(!0x1), this.buttonHome.enable(!0x1);
    },
    'animateOut': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'animateOutCompleted': function () {
      this.currentGameOverInput == this.GameOverInputs.RETRY ? ig.game.director.reloadLevel() : ig.game.director.jumpTo(LevelTitle);
    },
    'kill': function () {
      this.killed = !0x0, this.buttonRetry.kill(), this.buttonRetry = null, this.buttonHome.kill(), this.animateOutCompleted = this.animateInCompleted = this.callbackOkay = this.callback = this.textFormat = this.containerPos = this.size = this.buttonHome = null, this.parent();
    },
    'animateTransition': function () {
      this.transition = !0x0, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0,
        'transitionAlpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.tween({}, 0.6, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'callbackRetry': function () {
      this.currentGameOverInput = this.GameOverInputs.RETRY, this.disableButtons(), this.animateTransition();
    },
    'callbackHome': function () {
      this.currentGameOverInput = this.GameOverInputs.HOME, this.disableButtons(), this.animateOut();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.collectible').requires('impact.entity').defines(function () {
  EntityCollectible = ig.Entity.extend({
    'collectibleImage': new ig.Image('media/graphics/game/fuel.png'),
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.B,
    'checkAgainst': ig.Entity.TYPE.B,
    'p': {},
    'sfxType': 'fuel',
    'init': function (_0x3b520c, _0xba57ec, _0x52af26) {
      this.parent(_0x3b520c, _0xba57ec, _0x52af26), this.initProps(_0x52af26), this.speedUpTimer = new ig.Timer(this.speedUpLimit);
    },
    'initProps': function (_0x2f3351) {
      this.ctx = _0x2f3351.ctxt, this.collected = !0x1, this.currentSpriteFrame = this.collectibleImage, this.zIndex = ig.game.entitiesZIndex.Game, this.frameSize = {
        'x': 0x104,
        'y': 0xf4
      }, this.spriteColumnCount = 0x6, this.animFrame = this.currentFrame = 0x0, this.animSpeed = 0xa, this.maxFrame = 0xc, this.currentSegment = null, this.baseLength = 0x64, this.baseWidth = 0x1e, this.length = this.baseLength, this.width = this.baseWidth, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.size = {
        'x': this.width,
        'y': this.length
      }, this.z = _0x2f3351.z, this.percent = 0.5, this.scale = 0.4, this.scaleSize = {
        'x': this.frameSize.x * this.scale,
        'y': this.frameSize.y * this.scale
      }, this.paused = !0x1;
    },
    'updateCollisionBox': function (_0x5e32d1) {
      this.length = this.baseLength * _0x5e32d1, this.width = this.baseWidth * _0x5e32d1, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.size = {
        'x': this.width,
        'y': this.length
      };
    },
    'pause': function () {
      this.paused = !0x0;
    },
    'resume': function () {
      this.paused = !0x1;
    },
    'updateHitbox': function (_0xc4da47) {
      this.pos.x = this.x - this.halfWidth, this.pos.y = this.z % _0xc4da47;
    },
    'update': function () {
      this.parent(), !this.collected && !this.paused && (this.animFrame += this.animSpeed * ig.system.tick, this.animFrame >= this.maxFrame && (this.animFrame -= this.maxFrame), this.currentFrame = Math.floor(this.animFrame));
    },
    'getSegment': function () {
      return this.currentSegment;
    },
    'setSegment': function (_0x13d30c) {
      this.currentSegment = _0x13d30c, this.currentSegment.collectibles.push(this);
    },
    'updateSegment': function (_0x1e3683) {
      this.currentSegment.cars.splice(this.currentSegment.cars.indexOf(this), 0x1), this.currentSegment = _0x1e3683, this.currentSegment.cars.push(this);
    },
    'getSegmentIndex': function () {
      return this.currentSegment.index;
    },
    'collect': function () {
      this.collected = !0x0, ig.soundHandler.sfxPlayer.play(this.sfxType), this.currentSegment.collectibles.splice(this.currentSegment.collectibles.indexOf(this), 0x1), this.callbackCollectibleCollected(this);
    },
    'isCollected': function () {
      return this.collected;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.distance-indicator').requires('impact.entity').defines(function () {
  EntityDistanceIndicator = ig.Entity.extend({
    'container': new ig.Image('media/graphics/ui/game/speedometer.png'),
    'arrow': new ig.Image('media/graphics/ui/game/speedometer-needle.png'),
    'init': function (_0x3f061b, _0x44954b, _0x37e576) {
      this.parent(_0x3f061b, _0x44954b, _0x37e576), this.zIndex = ig.game.entitiesZIndex.UI, this.alpha = this.scale = 0x1, this.lastPointerDegree = this.currentDistance = 0x0, this.initProps(_0x37e576.initialCharRank), this.manager = ig.game.gameController;
    },
    'initProps': function () {
      this.textFormat = {
        'align': 'right',
        'fontSize': 0x1e,
        'fontType': 'archivo-black',
        'fillStyle': '#0E1323',
        'text': _STRINGS.Game.Meters.replace('%i', this.currentDistance),
        'x': 0x8c,
        'y': 0xa,
        'lineWidth': 0x3,
        'strokeStyle': '#ffffff',
        'strokeOffset': {
          'x': 0x0,
          'y': 0x0
        }
      };
    },
    'update': function () {
      this.parent(), this.updateMaxPointer();
    },
    'updateMaxPointer': function () {
      if (this.car) {
        this.maxSpeed = 0x2 * this.car.baseMaxSpeed * this.car.speedUpSpeedMultiplier;
        var _0x29770f = this.car.currentSpeed * (0x10e / this.maxSpeed) + -0xc0;
        _0x29770f == this.lastPointerDegree && -0xc0 != _0x29770f && 0x0 != this.manager.currentState && (_0x29770f += ig.randomInt(0x5, 0xa)), this.lastPointerDegree = _0x29770f, this.pointerRotation = _0x29770f * Math.PI / 0xb4;
      }
    },
    'draw': function () {
      this.parent(), ig.system.context.globalAlpha = this.alpha, this.container.draw(this.pos.x - this.container.width / 0x2, this.pos.y - this.container.height / 0x2), this.drawArrow(this.pos.x - this.container.width / 0x2, this.pos.y - this.container.height / 0x2), this.drawText(this.textFormat), ig.system.context.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), ig.system.context.globalAlpha = 0x1;
    },
    'drawArrow': function (_0x2308ae, _0x4a4339) {
      var _0x1d5d77 = this.arrow.width,
        _0x3c3cf1 = this.arrow.height;
      ig.system.context.translate(_0x2308ae + 0x2e, _0x4a4339 + this.container.height / 0x2), ig.system.context.rotate(this.pointerRotation), this.arrow.draw(-_0x1d5d77 / 0x2, -_0x3c3cf1 / 0x2);
    },
    'drawText': function (_0x2bb5f5) {
      ig.system.context.setTransform(this.scale, 0x0, 0x0, this.scale, this.pos.x + this.offset.x + _0x2bb5f5.x | 0x0, this.pos.y + this.offset.y + _0x2bb5f5.y | 0x0), ig.system.context.textAlign = _0x2bb5f5.align, ig.system.context.font = _0x2bb5f5.fontSize + "px " + _0x2bb5f5.fontType, ig.system.context.fillStyle = _0x2bb5f5.fillStyle, ig.system.context.lineWidth = _0x2bb5f5.lineWidth, this.updateFontSize(this.textFormat), ig.system.context.strokeStyle = _0x2bb5f5.strokeStyle, ig.system.context.strokeText(_0x2bb5f5.text, _0x2bb5f5.strokeOffset.y | 0x0, _0x2bb5f5.strokeOffset.y | 0x0), ig.system.context.fillText(_0x2bb5f5.text, 0x0, 0x0);
    },
    'updateFontSize': function (_0x483c5c) {
      var _0x2570c4 = ig.system.context.measureText(_0x483c5c.text).width;
      if (!(0xdc > _0x2570c4)) {
        for (; 0xdc < _0x2570c4;) _0x483c5c.fontSize -= 0x4, ig.system.context.font = _0x483c5c.fontSize + "px " + _0x483c5c.fontType, _0x2570c4 = ig.system.context.measureText(_0x483c5c.text);
        ig.system.context.font = _0x483c5c.fontSize + "px " + _0x483c5c.fontType;
      }
    },
    'updateDistance': function (_0x188ad8) {
      _0x188ad8 != this.currentDistance && (this.currentDistance = _0x188ad8, this.textFormat.text = _STRINGS.Game.Meters.replace('%i', this.currentDistance), 0x0 == this.currentDistance % 0x64 && (this.scale = 1.1, this.animationTween = this.tween({
        'scale': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut
      }), this.animationTween.start()));
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.popups.rv-prompt').requires('impact.entity', 'game.entities.buttons.button-generic').defines(function () {
  EntityRVPrompt = ig.Entity.extend({
    'container': new ig.Image('media/graphics/ui/common/popup-mini.png'),
    'buttonImage': new ig.Image('media/graphics/ui/common/button2.png'),
    'grid': new ig.Image('media/graphics/ui/common/grid.png'),
    'rvIcon': new ig.Image('media/graphics/ui/common/rv-icon.png'),
    'GameOverInputs': {
      'YES': 0x0,
      'NO': 0x1
    },
    'init': function (_0x77cf83, _0x223adf, _0x392775) {
      this.parent(_0x77cf83, _0x223adf, _0x392775), this.callbackRVPrompt = _0x392775.callbackRVPrompt, this.callbackYes = this.callbackYes.bind(this), this.callbackNo = this.callbackNo.bind(this), this.animateInCompleted = this.animateInCompleted.bind(this), this.animateOutCompleted = this.animateOutCompleted.bind(this), this.currentGameOverInput = null, this.zIndex = ig.game.entitiesZIndex.Popup + 0xa, this.size = {
        'x': this.container.width,
        'y': this.container.height
      }, this.containerPos = {
        'x': 0.5 * ig.system.width - 0.5 * this.size.x,
        'y': 0.5 * ig.system.height - 0.5 * this.size.y
      }, this.alpha = 0x0, this.transition = this.killed = !0x1, this.transitionAlpha = 0x0, this.transitionGrd = ig.system.context.createLinearGradient(0x0, 0x0, 0x0, ig.system.height), this.transitionGrd.addColorStop(0x0, ig.game.transitionGrid.gradientColorStop1), this.transitionGrd.addColorStop(0x1, ig.game.transitionGrid.gradientColorStop2), this.textFormat = {
        'align': 'center',
        'font': "56px archivo-black",
        'fillStyle': '#011B3B',
        'text': _STRINGS.RewardedVideo.MoreFuel,
        'x': this.containerPos.x + 0.5 * this.size.x,
        'y': this.containerPos.y + 0.26 * this.size.y
      }, this.gradient = ig.system.context.createRadialGradient(0.5 * ig.system.width, 0.5 * ig.system.height, 0.3 * ig.system.height, 0.5 * ig.system.width, 0.5 * ig.system.height, ig.system.height), this.gradient.addColorStop(0x0, "rgba(0, 0, 0, 0)"), this.gradient.addColorStop(0x1, "rgba(0, 0, 0, 0.8)"), this.buttonYes = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonImage,
        'clickImage': null,
        'callback': this.callbackYes,
        'zIndex': this.zIndex + 0x2
      }), this.buttonYes.pos.x = this.containerPos.x + 0.5 * this.size.x - 0.5 * this.buttonYes.size.x, this.buttonYes.pos.y = this.containerPos.y + 0.46 * this.size.y - 0.5 * this.buttonYes.size.y, this.buttonYes.addText({
        'text': _STRINGS.RewardedVideo.Yes
      }), this.buttonYes.addIcon(this.rvIcon, -0x14, 0xc), this.buttonNo = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonImage,
        'clickImage': null,
        'callback': this.callbackNo,
        'zIndex': this.zIndex + 0x2
      }), this.buttonNo.pos.x = this.containerPos.x + 0.5 * this.size.x - 0.5 * this.buttonNo.size.x, this.buttonNo.pos.y = this.containerPos.y + 0.76 * this.size.y - 0.5 * this.buttonNo.size.y, this.buttonNo.addText({
        'text': _STRINGS.RewardedVideo.No
      }), this.buttonYes.enable(!0x1), this.buttonNo.enable(!0x1), ig.game.sortEntitiesDeferred(), this.animateIn();
    },
    'draw': function () {
      this.killed || (ig.system.context.globalAlpha = this.alpha, ig.system.context.fillStyle = this.gradient, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.container.draw(this.pos.x + this.containerPos.x, this.pos.y + this.containerPos.y), this.drawText(this.textFormat), this.transition && (ig.system.context.globalAlpha = this.transitionAlpha, ig.system.context.fillStyle = this.transitionGrd, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.game.transitionGrid.draw(this.transitionGrd, this.grid), ig.system.context.globalAlpha = this.alpha), ig.system.context.globalAlpha = 0x1);
    },
    'update': function () {
      this.parent(), this.killed || (this.transition && ig.game.transitionGrid.update(), this.buttonYes.offsetY = this.pos.y, this.buttonYes.alpha = this.alpha, this.buttonNo.offsetY = this.pos.y, this.buttonNo.alpha = this.alpha);
    },
    'drawText': function (_0x146e26) {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + _0x146e26.x, this.pos.y + _0x146e26.y), ig.system.context.textAlign = _0x146e26.align, ig.system.context.font = _0x146e26.font, ig.system.context.fillStyle = _0x146e26.fillStyle, ig.system.context.fillText(_0x146e26.text, 0x0, 0x0), ig.system.context.restore();
    },
    'callbackOkay': function () {
      this.disableButtons(), this.animateOut();
    },
    'animateIn': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.pos.y = 0x64, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x0
        },
        'alpha': 0x1
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateInCompleted
      }).start();
    },
    'animateInCompleted': function () {
      this.enableButtons();
    },
    'enableButtons': function () {
      this.buttonYes.enable(!0x0), this.buttonNo.enable(!0x0);
    },
    'disableButtons': function () {
      this.buttonYes.enable(!0x1), this.buttonNo.enable(!0x1);
    },
    'animateOut': function () {
      ig.soundHandler.sfxPlayer.play('popupSwing'), this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0
      }, 0.2, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'animateOutCompleted': function () {
      this.callbackRVPrompt(this.currentGameOverInput == this.GameOverInputs.YES);
    },
    'kill': function () {
      this.killed = !0x0, this.buttonYes.kill(), this.buttonYes = null, this.buttonNo.kill(), this.animateOutCompleted = this.animateInCompleted = this.callbackOkay = this.callback = this.textFormat = this.containerPos = this.size = this.buttonNo = null, this.parent();
    },
    'animateTransition': function () {
      this.transition = !0x0, this.tween({
        'pos': {
          'x': 0x0,
          'y': 0x64
        },
        'alpha': 0x0,
        'transitionAlpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.tween({}, 0.6, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted
      }).start();
    },
    'callbackYes': function () {
      this.currentGameOverInput = this.GameOverInputs.YES, this.disableButtons(), this.animateOut();
    },
    'callbackNo': function () {
      this.currentGameOverInput = this.GameOverInputs.NO, this.disableButtons(), this.animateOut();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.popups.rv-message').requires('impact.entity', 'game.entities.buttons.button-generic').defines(function () {
  EntityRVMessage = ig.Entity.extend({
    'init': function (_0x2a476b, _0x117183, _0x176191) {
      this.parent(_0x2a476b, _0x117183, _0x176191), this.zIndex = ig.game.entitiesZIndex.RVMessage, this.callbackRVMessage = _0x176191.callbackRVMessage, this.animateInCompleted = this.animateInCompleted.bind(this), this.animateOutCompleted = this.animateOutCompleted.bind(this), this.successful = _0x176191.successful, this.animateOutDelay = 0x2, this.textFormat = {
        'align': 'center',
        'font': "36px archivo-black",
        'fillStyle': '#053AEC',
        'text': this.successful ? _STRINGS.RewardedVideo.Successful : _STRINGS.RewardedVideo.NotAvailable,
        'x': 0.5 * ig.system.width,
        'y': 0.5 * ig.system.height,
        'lineWidth': 0x3,
        'strokeStyle': '#ffffff',
        'strokeOffset': {
          'x': 0x0,
          'y': 0x0
        }
      }, this.alpha = 0x0, ig.game.sortEntitiesDeferred(), this.animateIn();
    },
    'draw': function () {
      this.killed || (ig.system.context.globalAlpha = this.alpha, ig.system.context.fillStyle = "rgba(0, 0, 0, 0.2)", ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), this.drawText(this.textFormat), ig.system.context.globalAlpha = 0x1);
    },
    'update': function () {
      this.parent();
    },
    'drawText': function (_0x4ae6dd) {
      ig.system.context.save(), ig.system.context.translate(this.pos.x + _0x4ae6dd.x, this.pos.y + _0x4ae6dd.y), ig.system.context.textAlign = _0x4ae6dd.align, ig.system.context.font = _0x4ae6dd.font, ig.system.context.fillStyle = _0x4ae6dd.fillStyle, ig.system.context.lineWidth = _0x4ae6dd.lineWidth, ig.system.context.strokeStyle = _0x4ae6dd.strokeStyle, ig.system.context.strokeText(_0x4ae6dd.text, _0x4ae6dd.strokeOffset.y | 0x0, _0x4ae6dd.strokeOffset.y | 0x0), ig.system.context.fillText(_0x4ae6dd.text, 0x0, 0x0), ig.system.context.restore();
    },
    'callbackOkay': function () {
      this.disableButtons(), this.animateOut();
    },
    'animateIn': function () {
      this.tween({
        'alpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateInCompleted
      }).start();
    },
    'animateInCompleted': function () {
      this.animateOut();
    },
    'animateOut': function () {
      this.tween({
        'alpha': 0x0
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.animateOutCompleted,
        'delay': this.animateOutDelay
      }).start();
    },
    'animateOutCompleted': function () {
      this.callbackRVMessage(this.successful);
    },
    'kill': function () {
      this.killed = !0x0, this.animateOutCompleted = this.animateInCompleted = this.callbackOkay = this.callback = this.textFormat = this.size = null, this.parent();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.low-fuel-indicator').requires('impact.entity').defines(function () {
  EntityLowFuelIndicator = ig.Entity.extend({
    'init': function (_0x3c55f9, _0x25a7f0, _0x303934) {
      this.parent(_0x3c55f9, _0x25a7f0, _0x303934), this.zIndex = ig.game.entitiesZIndex.UI, this.scale = 0x1, this.alpha = 0x0, this.startBlinkAnim = this.startBlinkAnim.bind(this), this.continueBlinkAnim1 = this.continueBlinkAnim1.bind(this), this.continueBlinkAnim2 = this.continueBlinkAnim2.bind(this), this.textFormat = {
        'align': 'center',
        'font': "22px archivo-black",
        'fillStyle': '#ffffff',
        'text': _STRINGS.Game.LowFuel,
        'x': 0x0,
        'y': 0x0,
        'lineWidth': 0x3,
        'strokeStyle': '#0E1323',
        'strokeOffset': {
          'x': 0x0,
          'y': 0x0
        }
      }, this.blinkAnimationEnabled = !0x1;
    },
    'update': function () {
      this.parent();
    },
    'draw': function () {
      this.parent(), this.drawText(this.textFormat);
    },
    'drawText': function (_0x2ad076) {
      ig.system.context.setTransform(this.scale, 0x0, 0x0, this.scale, this.pos.x + this.offset.x + _0x2ad076.x | 0x0, this.pos.y + this.offset.y + _0x2ad076.y | 0x0), ig.system.context.globalAlpha = this.alpha, ig.system.context.textAlign = _0x2ad076.align, ig.system.context.font = _0x2ad076.font, ig.system.context.fillStyle = _0x2ad076.fillStyle, ig.system.context.lineWidth = _0x2ad076.lineWidth, ig.system.context.strokeStyle = _0x2ad076.strokeStyle, ig.system.context.strokeText(_0x2ad076.text, _0x2ad076.x + _0x2ad076.strokeOffset.y | 0x0, _0x2ad076.y + _0x2ad076.strokeOffset.y | 0x0), ig.system.context.fillText(_0x2ad076.text, 0x0, 0x0), ig.system.context.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), ig.system.context.globalAlpha = 0x1;
    },
    'isAnimating': function () {
      return this.blinkAnimationEnabled;
    },
    'startBlinkAnim': function () {
      this.blinkAnimationEnabled = !0x0, this.textFormat.text = _STRINGS.Game.LowFuel, this.alpha = 0x0, this.continueBlinkAnim1();
    },
    'continueBlinkAnim1': function () {
      this.alphaTweenAnim = this.tween({
        'alpha': 0x1
      }, 0.3, {
        'onComplete': this.continueBlinkAnim2
      }), this.alphaTweenAnim.start();
    },
    'continueBlinkAnim2': function () {
      this.alphaTweenAnim = this.tween({
        'alpha': 0x0
      }, 0.3, {
        'onComplete': this.continueBlinkAnim1,
        'delay': 0.6
      }), this.alphaTweenAnim.start();
    },
    'stopBlinkAnim': function () {
      this.blinkAnimationEnabled = !0x1, this.alphaTweenAnim && this.alphaTweenAnim.stop(), 0x0 != this.alpha && (this.alphaTweenAnim = this.tween({
        'alpha': 0x0
      }, 0.3, {}), this.alphaTweenAnim.start());
    },
    'showEmptyFuel': function () {
      this.blinkAnimationEnabled = !0x1, this.alphaTweenAnim && this.alphaTweenAnim.stop(), this.alphaTweenAnim = null, this.textFormat.text = _STRINGS.Game.FuelEmpty, this.alpha = 0x1;
    },
    'pause': function () {
      this.alphaTweenAnim && this.alphaTweenAnim.pause();
    },
    'resume': function () {
      this.alphaTweenAnim && this.alphaTweenAnim.resume();
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.collectible-fuel').requires('impact.entity', 'game.entities.game.collectible').defines(function () {
  EntityCollectibleFuel = EntityCollectible.extend({
    'collectibleImage': new ig.Image('media/graphics/game/fuel.png'),
    'init': function (_0x544759, _0x5326a0, _0x2cafae) {
      this.parent(_0x544759, _0x5326a0, _0x2cafae);
    },
    'initProps': function (_0x572d05) {
      this.parent(_0x572d05), this.frameSize = {
        'x': 0x104,
        'y': 0xf4
      }, this.spriteColumnCount = 0x6, this.animFrame = this.currentFrame = 0x0, this.animSpeed = 0xa, this.maxFrame = 0xc, this.baseLength = 0x64, this.baseWidth = 0x1e, this.length = this.baseLength, this.width = this.baseWidth, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.size = {
        'x': this.width,
        'y': this.length
      }, this.scaleSize = {
        'x': this.frameSize.x * this.scale,
        'y': this.frameSize.y * this.scale
      };
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.game.collectible-coin').requires('impact.entity', 'game.entities.game.collectible').defines(function () {
  EntityCollectibleCoin = EntityCollectible.extend({
    'collectibleImage': new ig.Image('media/graphics/game/coin.png'),
    'sfxType': 'coin',
    'init': function (_0x2f06ca, _0x693c5f, _0x5a12f9) {
      this.parent(_0x2f06ca, _0x693c5f, _0x5a12f9);
    },
    'initProps': function (_0x568bdf) {
      this.parent(_0x568bdf), this.frameSize = {
        'x': 0xb4,
        'y': 0xb4
      }, this.spriteColumnCount = 0x5, this.animFrame = this.currentFrame = 0x0, this.animSpeed = 0x8, this.maxFrame = 0x5, this.baseLength = 0x64, this.baseWidth = 0x1e, this.length = this.baseLength, this.width = this.baseWidth, this.halfLength = 0.5 * this.length, this.halfWidth = 0.5 * this.width, this.size = {
        'x': this.width,
        'y': this.length
      }, this.scaleSize = {
        'x': this.frameSize.x * this.scale,
        'y': this.frameSize.y * this.scale
      };
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.controllers.game-controller').requires('impact.entity', 'game.entities.debug-control', 'game.entities.game.road', 'game.entities.game.character', 'game.entities.game.lens-flare', 'game.entities.game.map', 'game.entities.game.enemy', 'game.entities.game.smoke', 'game.entities.buttons.button-generic', 'game.entities.popups.pause', 'game.entities.game.speedup-lines', 'game.entities.buttons.interactive-box', 'game.entities.game.tutorial', 'game.entities.game.ready-set-go-indicator', 'game.entities.game.fuel-indicator', 'game.entities.game.nitro-indicator', 'game.entities.popups.game-over', 'game.entities.game.collectible', 'game.entities.game.distance-indicator', 'game.entities.popups.rv-prompt', 'game.entities.popups.rv-message', 'game.entities.game.low-fuel-indicator', 'game.entities.game.collectible-fuel', 'game.entities.game.collectible-coin').defines(function () {
  EntityGameController = ig.Entity.extend({
    'buttonPauseImage': new ig.Image('media/graphics/ui/common/btn-pause.png'),
    'grid': new ig.Image('media/graphics/ui/common/grid.png'),
    'GameState': {
      'PAUSE': 0x0,
      'PLAYING': 0x1,
      'RACEENDED': 0x2
    },
    'init': function (_0x46ade6, _0x572b2f, _0x419174) {
      this.parent(_0x46ade6, _0x572b2f, _0x419174), ig.game.gameController = this, this.bindFunctions(), this.initProps(), this.initGameCanvas(), this.initEntities(), ig.Achievement.setNotificationAnimationDrop('bottom-center'), this.gameTimer = new ig.Timer(0x0);
    },
    'initProps': function () {
      ig.game.gameEnded = !0x1, this.debugControlEnabled = ig.game.rewardPrompted = !0x1, this.zIndex = ig.game.entitiesZIndex.Controller, this.currentState = this.GameState.PLAYING, this.numberOfLaps = 0x1, this.rotation = 0x0, this.overlayAlpha = 0x1, this.shaking = !0x1, this.shakeDuration = 0.6, this.shakeCount = 0xe, this.shakeIntensity = this.currentShakeTweenVal = 0x0, this.minShakeIntensityLimit = 0x2, this.currentShakeIntensitylimit = this.maxShakeIntensityLimit = 0x8, this.zoomAnimEnabled = !0x1, this.additionalRoadWidth = 0x0, this.gameSpeedMultiplier = 0x1, this.fakeFinishTimeBase = 0x32, this.fakeFinishTimeRange = 0x28a, this.stretchLength = 0x32, this.canvasRotationPoint = {
        'x': ig.system.halfWidth,
        'y': 0x2bc
      }, this.enemyCarStartingZ = 0x1770, this.enemyCarZIncrement = 0x1388, this.enemyCarDistanceAllowanceToRespawn = 0x61a8, this.collectibles = [], this.leftCanvasStretchData = {
        'x': -this.canvasRotationPoint.x - this.stretchLength + 0x1,
        'y': -this.canvasRotationPoint.y,
        'width': this.stretchLength,
        'height': ig.system.height
      }, this.rightCanvasStretchData = {
        'x': ig.system.width - 0x1 - this.canvasRotationPoint.x,
        'y': -this.canvasRotationPoint.y,
        'width': ig.system.width + this.stretchLength,
        'height': ig.system.height,
        'sx': ig.system.width - 0x1
      }, this.bottomCanvasStretchData = {
        'x': -this.canvasRotationPoint.x,
        'y': ig.system.height - 0x1 - this.canvasRotationPoint.y,
        'width': ig.system.width,
        'height': this.stretchLength,
        'sy': ig.system.height - 0x1
      }, this.topCanvasStretchData = {
        'x': -this.canvasRotationPoint.x,
        'y': -this.stretchLength + 0x1 - this.canvasRotationPoint.y,
        'width': ig.system.width,
        'height': this.stretchLength
      }, this.grd = ig.system.context.createLinearGradient(0x0, 0x0, 0x0, ig.system.height), this.grd.addColorStop(0x0, ig.game.transitionGrid.gradientColorStop1), this.grd.addColorStop(0x1, ig.game.transitionGrid.gradientColorStop2);
    },
    'bindFunctions': function () {
      this.continueAnimatIn1 = this.continueAnimatIn1.bind(this), this.callbackSpawnSmoke = this.callbackSpawnSmoke.bind(this), this.callbackSpawnCharacterSmoke = this.callbackSpawnCharacterSmoke.bind(this), this.callbackReturnSmoke = this.callbackReturnSmoke.bind(this), this.callbackDrawPlayer = this.callbackDrawPlayer.bind(this), this.callbackPause = this.callbackPause.bind(this), this.callbackRemovePause = this.callbackRemovePause.bind(this), this.callbackShake = this.callbackShake.bind(this), this.callbackShakeAnimationCompleted = this.callbackShakeAnimationCompleted.bind(this), this.callbackReadySetGoAnimationCompleted = this.callbackReadySetGoAnimationCompleted.bind(this), this.callbackFuelPercentUpdate = this.callbackFuelPercentUpdate.bind(this), this.callbackCollectibleFuelCollected = this.callbackCollectibleFuelCollected.bind(this), this.callbackAddedNextTrack = this.callbackAddedNextTrack.bind(this), this.callbackSpawnCollectibles = this.callbackSpawnCollectibles.bind(this), this.repositionCarToTheFront = this.repositionCarToTheFront.bind(this), this.callbackRVPrompt = this.callbackRVPrompt.bind(this), this.callbackRVMessage = this.callbackRVMessage.bind(this);
    },
    'initGameCanvas': function () {
      this.cvst = document.createElement('canvas'), this.cvst.width = ig.system.width, this.cvst.height = ig.system.height, this.ctxt = this.cvst.getContext('2d');
    },
    'initEntities': function () {
      this.road = ig.game.spawnEntity(EntityRoad, 0x0, 0x0, {
        'callbackRoadCurveUpdate': this.callbackRoadCurveUpdate.bind(this),
        'callbackDrawPlayer': this.callbackDrawPlayer,
        'ctxt': this.ctxt,
        'callbackAddedNextTrack': this.callbackAddedNextTrack,
        'callbackSpawnCollectibles': this.callbackSpawnCollectibles
      }), this.road.initialize(), this.initCars(), this.road.setCharacterProperties(this.character.characterScale), this.road.updateCharacter(this.character), this.buttonPause = ig.game.spawnEntity(EntityButtonGeneric, 0x0, 0x0, {
        'idleImage': this.buttonPauseImage,
        'clickImage': null,
        'callback': this.callbackPause,
        'zIndex': this.zIndex + 0x3
      }), this.buttonPausePos = {
        'x': 0xe,
        'y': 0xe
      }, this.buttonPause.pos.x = this.buttonPausePos.x, this.buttonPause.pos.y = this.buttonPausePos.y, this.buttonPause.alpha = 0x0, this.screenButton = ig.game.spawnEntity(EntityInteractiveBox, 0x0, 0x0, {
        'size': {
          'x': ig.system.width,
          'y': ig.system.height
        },
        'callbackPressed': this.callbackPressed.bind(this)
      }), this.screenButton.disable(), this.map = ig.game.spawnEntity(EntityMap, ig.system.width - 0x12c, 0x14, {
        'roadSegments': this.road.getSegments(),
        'endSegment': this.road.endLineSegment,
        'enemyCars': this.enemyCars
      }), this.map.alpha = 0x0, this.lensFlare = ig.game.spawnEntity(EntityLensFlare, 0x0, 0x0), this.speedUpLines = ig.game.spawnEntity(EntitySpeedupLines, 0x0, 0x0, {
        'zIndex': ig.game.entitiesZIndex.Game + 0xb
      }), this.speedUpLines.disable(), this.fuelIndicator = ig.game.spawnEntity(EntityFuelIndicator, 0x0, 0x0), this.fuelIndicator.pos.x = 0.09 * ig.system.width, this.fuelIndicator.pos.y = 0x16, this.fuelIndicator.alpha = 0x0, this.nitroIndicator = ig.game.spawnEntity(EntityNitroIndicator, 0x0, 0x0, {
        'car': this.character
      }), this.nitroIndicator.pos.x = 0xa, this.nitroIndicator.pos.y = 0.88 * ig.system.height, this.nitroIndicator.alpha = 0x0, this.distanceIndicator = ig.game.spawnEntity(EntityDistanceIndicator, 0x0, 0x0, {
        'car': this.character
      }), this.distanceIndicator.pos.x = 0.5 * ig.system.width, this.distanceIndicator.pos.y = 0x3c, this.distanceIndicator.alpha = 0x0, this.readySetGoIndicator = ig.game.spawnEntity(EntityReadySetGoIndicator, 0x0, 0x0, {
        'callbackReadySetGoAnimationCompleted': this.callbackReadySetGoAnimationCompleted
      }), this.readySetGoIndicator.pos.x = 0.5 * ig.system.width, this.readySetGoIndicator.pos.y = 0.5 * ig.system.height, this.tutorial = ig.game.spawnEntity(EntityTutorial, 0x0, 0x0, {
        'callbackRemoveTutorial': this.callbackRemoveTutorial.bind(this)
      }), this.tutorial.pos.x = 0.8 * ig.system.width - 0.5 * this.tutorial.size.x, this.tutorial.pos.y = 0.78 * ig.system.height - 0.5 * this.tutorial.size.y, this.tutorial.alpha = 0x0, this.lowFuelIndicator = ig.game.spawnEntity(EntityLowFuelIndicator, 0x0, 0x0), this.lowFuelIndicator.pos.x = 0.26 * ig.system.width, this.lowFuelIndicator.pos.y = 0.095 * ig.system.height, this.disableButtons(), this.debugControlEnabled && (this.debug = ig.game.spawnEntity(EntityDebugControl, 0x0, 0x0, {
        'callbackDebugUpdateRoadWidth': this.callbackDebugUpdateRoadWidth.bind(this),
        'callbackDebugUpdateCameraHeight': this.callbackDebugUpdateCameraHeight.bind(this),
        'callbackDebugUpdateDrawDistance': this.callbackDebugUpdateDrawDistance.bind(this),
        'callbackDebugUpdateFieldOfView': this.callbackDebugUpdateFieldOfView.bind(this),
        'callbackDebugUpdateFogDensity': this.callbackDebugUpdateFogDensity.bind(this),
        'road': this.road
      }));
    },
    'initCars': function () {
      this.smokes = [], this.freeSmokes = [], this.cars = [], this.character = ig.game.spawnEntity(EntityCharacter, 0x0, 0x0, {
        'gameWidth': this.road.width,
        'gameHeight': this.road.height,
        'gameResolution': this.road.resolution,
        'gameRoadWidth': this.road.roadWidth,
        'gameCameraDepth': this.road.cameraDepth,
        'gamePlayerZ': this.road.playerZ,
        'maxSpeed': this.road.maxSpeed,
        'ctxt': this.ctxt,
        'callbackSpawnSmoke': this.callbackSpawnCharacterSmoke,
        'callbackShake': this.callbackShake,
        'callbackFuelPercentUpdate': this.callbackFuelPercentUpdate
      }), this.initEnemyCars(), this.initCarRankings();
    },
    'initEnemyCars': function () {
      this.numberOfEnemyCars = 0xe, this.currentCarNumber = this.numberOfEnemyCars + 0x1, this.enemyCars = [];
      for (var _0x45b0c2 = [], _0x45f99c = this.enemyCarStartingZ, _0x2babba = this.enemyCarZIncrement, _0xe5b0d3 = 0.95 * this.road.maxSpeed, _0x1791b4 = 0x0; _0x1791b4 < this.numberOfEnemyCars; _0x1791b4++) _0x45b0c2.push(_0x1791b4 + 0x1);
      for (_0x1791b4 = 0x0; _0x1791b4 < this.numberOfEnemyCars; _0x1791b4++) {
        var _0x67830e = Math.floor(Math.random() * _0x45b0c2.length),
          _0x67830e = _0x45b0c2.splice(_0x67830e, 0x1)[0x0],
          _0x67830e = ig.game.spawnEntity(EntityEnemy, 0x0, 0x0, {
            'z': _0x45f99c + _0x1791b4 * _0x2babba,
            'callbackSpawnSmoke': this.callbackSpawnSmoke,
            'maxSpeed': _0xe5b0d3 + 0x0 * _0x1791b4,
            'offset': 0x0 == _0x1791b4 % 0x2 ? -0.35 : 0.35,
            'carCount': _0x67830e,
            'repositionCarToTheFront': this.repositionCarToTheFront,
            'name': " ",
            'totalLaps': 0x0
          });
        _0x67830e.setSegment(this.road.findSegment(_0x67830e.z)), _0x67830e.setFrontSegment(this.road.getFrontSegment(_0x67830e.getSegment())), _0x67830e.setRearSegment(this.road.getRearSegment(_0x67830e.getSegment())), this.enemyCars.push(_0x67830e);
      }
    },
    'spawnFuel': function (_0x4b367a) {
      var _0x194ca3 = -0.5 + Math.random(),
        _0x507da0 = ig.game.spawnEntity(EntityCollectibleFuel, 0x0, 0x0, {
          'z': _0x4b367a * this.road.segmentLength,
          'offset': _0x194ca3,
          'callbackCollectibleCollected': this.callbackCollectibleFuelCollected
        });
      _0x507da0.setSegment(this.road.findSegment(_0x507da0.z)), _0x507da0.x = 0.5 * ig.system.width + 0.2 * _0x507da0.offset * this.road.roadWidth, _0x507da0.updateHitbox(this.road.trackLength), this.collectibles.push(_0x507da0), 0.31 > Math.random() && 0.2 <= Math.abs(_0x194ca3) && this.spawnCoin(_0x4b367a, -_0x194ca3);
    },
    'spawnCoin': function (_0x2a2b90, _0x57ca9e) {
      var _0x186449 = ig.game.spawnEntity(EntityCollectibleCoin, 0x0, 0x0, {
        'z': _0x2a2b90 * this.road.segmentLength,
        'offset': _0x57ca9e,
        'callbackCollectibleCollected': this.callbackCollectibleCoinCollected.bind(this)
      });
      _0x186449.setSegment(this.road.findSegment(_0x186449.z)), _0x186449.x = 0.5 * ig.system.width + 0.2 * _0x186449.offset * this.road.roadWidth, _0x186449.updateHitbox(this.road.trackLength), this.collectibles.push(_0x186449);
    },
    'initCarRankings': function () {
      this.carRankings = [];
      for (var _0x12e8fa = 0x0; _0x12e8fa < this.enemyCars.length; _0x12e8fa++) this.carRankings.push(this.enemyCars[_0x12e8fa]);
      this.carRankings.push(this.character);
    },
    'ready': function () {
      this.parent(), this.animateIn();
    },
    'startRace': function () {
      this.enableButtons(), this.character.startAcceleration(), this.character.enableCollision(), this.startEnemyCarsAcceleration(), this.gameTimer.reset(), this.nitroIndicator.resume();
    },
    'startEnemyCarsAcceleration': function () {
      for (var _0x4c3312 = 0x0; _0x4c3312 < this.enemyCars.length; _0x4c3312++) this.enemyCars[_0x4c3312].startAcceleration();
    },
    'pauseSmokes': function () {
      for (var _0x34d4b4 = 0x0; _0x34d4b4 < this.smokes.length; _0x34d4b4++) this.smokes[_0x34d4b4].pause();
    },
    'resumeSmokes': function () {
      for (var _0x35f934 = 0x0; _0x35f934 < this.smokes.length; _0x35f934++) this.smokes[_0x35f934].resume();
    },
    'pauseEnemyCars': function () {
      for (var _0xfefe45 = 0x0; _0xfefe45 < this.enemyCars.length; _0xfefe45++) this.enemyCars[_0xfefe45].pause();
    },
    'resumeEnemyCars': function () {
      for (var _0x149815 = 0x0; _0x149815 < this.enemyCars.length; _0x149815++) this.enemyCars[_0x149815].resume();
    },
    'pauseCollectibles': function () {
      for (var _0x504ef3 = 0x0; _0x504ef3 < this.collectibles.length; _0x504ef3++) this.collectibles[_0x504ef3].pause();
    },
    'resumeCollectibles': function () {
      for (var _0x261b2a = 0x0; _0x261b2a < this.collectibles.length; _0x261b2a++) this.collectibles[_0x261b2a].resume();
    },
    'checkCollision': function () {
      this.character.updateHitbox(this.road.trackLength);
      for (var _0x5f4654 = this.enemyCars.length - 0x1; 0x0 <= _0x5f4654; _0x5f4654--) this.enemyCars[_0x5f4654].updateHitbox(this.road.trackLength);
      if (!ig.game.gameEnded) {
        (this.checkSpeedUpCollision(this.character.frontSegment.speedUpData, this.character.roadPosX) || this.checkSpeedUpCollision(this.character.rearSegment.speedUpData, this.character.roadPosX)) && this.character.speedUp();
        for (_0x5f4654 = this.enemyCars.length - 0x1; 0x0 <= _0x5f4654; _0x5f4654--) {
          var _0x547a0b = this.enemyCars[_0x5f4654];
          (this.checkSpeedUpCollision(_0x547a0b.frontSegment.speedUpData, _0x547a0b.offset) || this.checkSpeedUpCollision(_0x547a0b.rearSegment.speedUpData, _0x547a0b.offset)) && _0x547a0b.speedUp();
        }
      }
    },
    'checkSpeedUpCollision': function (_0x33ec51, _0x4b5744) {
      return _0x33ec51.enabled && _0x33ec51.minOffset <= _0x4b5744 && _0x33ec51.maxOffset >= _0x4b5744 ? !0x0 : !0x1;
    },
    'spawnSmoke': function (_0x343c7b, _0x2927aa) {
      var _0x59d393;
      0x0 > _0x343c7b || (0x0 == this.freeSmokes.length ? _0x59d393 = ig.game.spawnEntity(EntitySmoke, 0x0, 0x0, {
        'z': _0x343c7b,
        'offset': _0x2927aa,
        'callbackReturnSmoke': this.callbackReturnSmoke
      }) : (_0x59d393 = this.freeSmokes.pop(), _0x59d393.reset(_0x343c7b, _0x2927aa)), this.road.findSegment(_0x59d393.z).smokes.push(_0x59d393), this.smokes.push(_0x59d393));
    },
    'animateZoom': function () {
      this.zoomAnimEnabled = !0x0, this.animationTween = this.tween({
        'additionalRoadWidth': 0x3e8,
        'gameSpeedMultiplier': 0.2
      }, 1.8, {
        'easing': ig.Tween.Easing.Quadratic.EaseOut,
        'onComplete': this.continueAnimateZoom1.bind(this)
      }), this.animationTween.start();
    },
    'continueAnimateZoom1': function () {
      this.animationTween = this.tween({
        'additionalRoadWidth': 0x0,
        'gameSpeedMultiplier': 0x1
      }, 1.8, {
        'easing': ig.Tween.Easing.Quadratic.EaseIn,
        'onComplete': this.continueAnimateZoom2.bind(this)
      }), this.animationTween.start();
    },
    'continueAnimateZoom2': function () {
      this.zoomAnimEnabled = !0x1;
    },
    'callbackSpawnSmoke': function (_0x4835b4, _0x27a934) {
      this.spawnSmoke(_0x4835b4, _0x27a934 + 0.05), this.spawnSmoke(_0x4835b4, _0x27a934 - 0.05);
    },
    'callbackSpawnCharacterSmoke': function (_0x52dd45) {
      this.spawnSmoke(this.road.position + 0x320, this.character.roadPosX + _0x52dd45 + 0.05), this.spawnSmoke(this.road.position + 0x320, this.character.roadPosX + _0x52dd45 - 0.05);
    },
    'callbackReturnSmoke': function (_0x4b01e9) {
      var _0x95c80b = this.smokes.indexOf(_0x4b01e9);
      -0x1 != _0x95c80b && this.smokes.splice(_0x95c80b, 0x1);
      var _0x5311ed = this.road.findSegment(_0x4b01e9.z),
        _0x95c80b = _0x5311ed.smokes.indexOf(_0x4b01e9);
      -0x1 != _0x95c80b && _0x5311ed.smokes.splice(_0x95c80b, 0x1), this.freeSmokes.push(_0x4b01e9);
    },
    'update': function () {
      this.parent(), 0x0 != this.overlayAlpha && ig.game.transitionGrid.update(), this.currentState == this.GameState.PLAYING && (this.shaking && (this.shakeIntensity = this.currentShakeIntensitylimit * Math.sin(this.currentShakeTweenVal)), this.carRankingUpdate(), this.road.updateCharacter(this.character), this.road.updateTrack(), this.updateDistance(), this.updateEnemyCars(), this.map.updateCarPos(this.road.getPlayerSegmentCount(), this.character.roadPosX), this.lensFlare.updatePos(this.character.roadPosX, this.road.getPlayerY(), this.road.getRoadRotation()), this.checkCollision(), this.speedupLinesUpdate(), this.charFuelCheck());
    },
    'charFuelCheck': function () {
      this.character.noFuel() && !this.character.isMoving() && this.endRace(!0x0);
    },
    'updateDistance': function () {
      this.distanceIndicator.updateDistance(this.road.getDistanceTravelledInMeters());
    },
    'carRankingUpdate': function () {
      ig.game.gameEnded || (this.carRankings.sort(function (_0x665593, _0x575e81) {
        return _0x575e81.z + this.road.trackLength - (_0x665593.z + this.road.trackLength);
      }.bind(this)), this.character.setRank(this.carRankings.indexOf(this.character)));
    },
    'updateEnemyCars': function () {
      for (var _0x40afc5 = this.enemyCars.length - 0x1; 0x0 <= _0x40afc5; _0x40afc5--) {
        var _0x312d1f = this.enemyCars[_0x40afc5];
        this.road.enemyCarUpdate(_0x312d1f), _0x312d1f.updateSpriteFrame(this.character.roadPosX), !_0x312d1f.isAnimating() && _0x312d1f.z < this.character.z - this.enemyCarDistanceAllowanceToRespawn && _0x312d1f.startAlphaAnimation();
      }
    },
    'repositionCarToTheFront': function (_0x184d3d) {
      _0x184d3d.z = this.carRankings[0x0].z + this.enemyCarZIncrement;
    },
    'speedupLinesUpdate': function () {
      var _0x48d753 = this.character.getSpeedUpMaxPercentage();
      this.speedUpLines.isNitro = !this.nitroIndicator.enabled, 0x0 == _0x48d753 && this.speedUpLines.enabled ? this.speedUpLines.disable() : 0x0 < _0x48d753 && (this.speedUpLines.enabled || this.speedUpLines.enable(), this.speedUpLines.alpha = _0x48d753);
    },
    'callbackDrawPlayer': function () {
      this.road.drawPlayer(this.character);
    },
    'draw': function () {
      this.parent(), this.ctxt.clearRect(0x0, 0x0, this.cvst.width, this.cvst.height), this.road.renderRoad(this.character.roadPosX), this.lensFlare.parentDraw(this.ctxt), this.drawGameCanvas();
    },
    'drawGameCanvas': function () {
      var _0x4e6c02 = Math.cos(this.rotation),
        _0x357cd4 = Math.sin(this.rotation);
      ig.system.context.setTransform(_0x4e6c02, _0x357cd4, -_0x357cd4, _0x4e6c02, this.canvasRotationPoint.x + this.shakeIntensity, this.canvasRotationPoint.y + this.shakeIntensity), ig.system.context.drawImage(this.cvst, 0x0, 0x0, 0x1, ig.system.height, this.leftCanvasStretchData.x, this.leftCanvasStretchData.y, this.leftCanvasStretchData.width, this.leftCanvasStretchData.height), ig.system.context.drawImage(this.cvst, this.rightCanvasStretchData.sx, 0x0, 0x1, ig.system.height, this.rightCanvasStretchData.x, this.rightCanvasStretchData.y, this.rightCanvasStretchData.width, this.rightCanvasStretchData.height), ig.system.context.drawImage(this.cvst, 0x0, 0x1, ig.system.width, 0x1, this.topCanvasStretchData.x, this.topCanvasStretchData.y, this.topCanvasStretchData.width, this.topCanvasStretchData.height), ig.system.context.drawImage(this.cvst, 0x0, this.bottomCanvasStretchData.sy, ig.system.width, 0x1, this.bottomCanvasStretchData.x, this.bottomCanvasStretchData.y, this.bottomCanvasStretchData.width, this.bottomCanvasStretchData.height), this.shaking && (ig.system.context.drawImage(this.cvst, 0x0, 0x0, 0x1, 0x1, this.leftCanvasStretchData.x, this.topCanvasStretchData.y, this.leftCanvasStretchData.width, this.topCanvasStretchData.height), ig.system.context.drawImage(this.cvst, this.rightCanvasStretchData.sx, 0x0, 0x1, 0x1, this.rightCanvasStretchData.x, this.topCanvasStretchData.y, this.rightCanvasStretchData.width, this.topCanvasStretchData.height), ig.system.context.drawImage(this.cvst, 0x0, this.bottomCanvasStretchData.sy, 0x1, 0x1, this.leftCanvasStretchData.x, this.bottomCanvasStretchData.y, this.leftCanvasStretchData.width, this.bottomCanvasStretchData.height), ig.system.context.drawImage(this.cvst, this.rightCanvasStretchData.sx, this.bottomCanvasStretchData.sy, 0x1, 0x1, this.rightCanvasStretchData.x, this.bottomCanvasStretchData.y, this.rightCanvasStretchData.width, this.bottomCanvasStretchData.height)), ig.system.context.drawImage(this.cvst, -this.canvasRotationPoint.x, -this.canvasRotationPoint.y), ig.system.context.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0), 0x0 != this.overlayAlpha && (ig.system.context.globalAlpha = this.overlayAlpha, ig.system.context.fillStyle = this.grd, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.game.transitionGrid.draw(this.overlayAlpha, this.grid), ig.system.context.globalAlpha = 0x1);
    },
    'animateIn': function () {
      this.animationTween = this.tween({
        'overlayAlpha': 0x0
      }, 0x1, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut,
        'onComplete': this.continueAnimatIn1
      }), this.animationTween.start();
    },
    'enableButtons': function () {
      this.buttonPause.enable(!0x0), this.screenButton.enable();
    },
    'disableButtons': function () {
      this.buttonPause.enable(!0x1), this.screenButton.disable();
    },
    'continueAnimatIn1': function () {
      ig.soundHandler.sfxPlayer.play('readySetGo'), this.buttonPause.tween({
        'alpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.map.tween({
        'alpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.fuelIndicator.tween({
        'alpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.nitroIndicator.tween({
        'alpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.distanceIndicator.tween({
        'alpha': 0x1
      }, 0.3, {
        'easing': ig.Tween.Easing.Quadratic.EaseInOut
      }).start(), this.tutorial.animate(), this.readySetGoIndicator.startCountdownAnimation();
    },
    'callbackDebugUpdateRoadWidth': function (_0x4e142a) {
      this.road.debugUpdateRoadWidth(_0x4e142a), this.character.gameRoadWidth = this.road.roadWidth, this.character.updateCollisionBox(this.road.roadWidth / this.road.baseRoadWidth);
      for (_0x4e142a = 0x0; _0x4e142a < this.enemyCars.length; _0x4e142a++) this.enemyCars[_0x4e142a].updateCollisionBox(this.road.roadWidth / this.road.baseRoadWidth);
    },
    'callbackDebugUpdateCameraHeight': function (_0x3392e5) {
      this.road.debugUpdateCameraHeight(_0x3392e5), this.character.gamePlayerZ = this.road.playerZ;
    },
    'callbackDebugUpdateDrawDistance': function (_0x3af262) {
      this.road.debugUpdateDrawDistance(_0x3af262);
    },
    'callbackDebugUpdateFieldOfView': function (_0x187919) {
      this.road.debugUpdateFieldofView(_0x187919);
    },
    'callbackDebugUpdateFogDensity': function (_0x55e529) {
      this.road.debugUpdateFogDensity(_0x55e529);
    },
    'callbackRoadCurveUpdate': function (_0x2d0dce, _0x278e7b) {
      this.character.curveUpdate(_0x2d0dce, _0x278e7b), this.rotation = Math.PI * (0.01 * _0x2d0dce + 0.02 * this.character.horizontalMovementPercent), 0.06 < this.rotation ? this.rotation = 0.06 : -0.06 > this.rotation && (this.rotation = -0.06);
    },
    'endRace': function (_0x825c41) {
      ig.game.gameEnded || (this.currentState = this.GameState.RACEENDED, ig.game.gameEnded = !0x0, this.character.stopCarLoopSFX(), this.disableButtons(), this.pause(), _0x825c41 ? this.spawnGameOverScreen() : _SETTINGS.RewardedVideo.Enabled && !ig.game.rewardPrompted && this.spawnRVPrompt());
    },
    'callbackRVPrompt': function (_0x569ad2) {
      this.popupRVPrompt.kill(), this.popupRVPrompt = null, _0x569ad2 ? ig.game.showRewardedVideo() : (ig.game.gameEnded = !0x1, this.resume());
    },
    'callbackRVMessage': function (_0x1eace9) {
      this.popupRVMessage.kill(), this.popupRVMessage = null, _0x1eace9 ? this.grantRVReward() : this.spawnGameOverScreen();
    },
    'grantRVReward': function () {
      this.character.addRVFuel(), ig.soundHandler.sfxPlayer.play('fuel'), this.lowFuelIndicator.stopBlinkAnim(), ig.game.gameEnded = !0x1, this.resume();
    },
    'showRVSuccessfulMessage': function () {
      this.popupRVMessage = ig.game.spawnEntity(EntityRVMessage, 0x0, 0x0, {
        'successful': !0x0,
        'callbackRVMessage': this.callbackRVMessage
      });
    },
    'showRVNotAvailableMessage': function () {
      this.popupRVMessage = ig.game.spawnEntity(EntityRVMessage, 0x0, 0x0, {
        'successful': !0x1,
        'callbackRVMessage': this.callbackRVMessage
      });
    },
    'spawnRVPrompt': function () {
      ig.soundHandler.sfxPlayer.play('postgame'), ig.game.rewardPrompted = !0x0, this.popupRVPrompt = ig.game.spawnEntity(EntityRVPrompt, 0x0, 0x0, {
        'callbackRVPrompt': this.callbackRVPrompt
      });
    },
    'spawnGameOverScreen': function () {
      ig.soundHandler.sfxPlayer.play('finish'), this.popupGameOver = ig.game.spawnEntity(EntityGameOver, 0x0, 0x0, {
        'score': this.road.getDistanceTravelledInMeters()
      });
    },
    'updateCarsWithoutTime': function () {
      for (var _0x3647f7 = this.carRankings[0x0].getFinishTime(), _0x1269df, _0x19f3ff = (this.numberOfLaps + 0x1) * this.road.trackLength, _0xa5c2b7 = 0x1; _0xa5c2b7 < this.carRankings.length; _0xa5c2b7++) _0x1269df = this.carRankings[_0xa5c2b7].getFinishTime(), null == _0x1269df ? (_0x1269df = _0x3647f7 + (_0x19f3ff - this.carRankings[_0xa5c2b7].z) / 0x5dc, this.carRankings[_0xa5c2b7].setFinishTime(_0x1269df)) : _0x3647f7 = _0x1269df;
    },
    'callbackShake': function () {
      this.shake();
    },
    'shake': function () {
      this.shaking || (this.shaking = !0x0, this.currentShakeTweenVal = 0x0, this.currentShakeIntensitylimit = this.maxShakeIntensityLimit, this.shakeTween = this.tween({
        'currentShakeTweenVal': this.shakeCount * Math.PI,
        'currentShakeIntensitylimit': this.minShakeIntensityLimit
      }, this.shakeDuration, {
        'easing': ig.Tween.Easing.Cubic.EaseOut,
        'onComplete': this.callbackShakeAnimationCompleted
      }), this.shakeTween.start());
    },
    'callbackShakeAnimationCompleted': function () {
      this.shaking = !0x1, this.shakeTween = null;
    },
    'callbackRemoveTutorial': function () {
      this.tutorial.kill(), this.tutorial = null;
    },
    'callbackReadySetGoAnimationCompleted': function () {
      this.startRace();
    },
    'callbackPressed': function () {
      ig.game.io.getClickPos().x <= 0.5 * ig.system.width ? this.character.moveLeft() : this.character.moveRight();
    },
    'pause': function () {
      this.gameTimer.pause(), this.character.stopCarLoopSFX(), null != this.shakeTween && this.shakeTween.pause(), this.disableButtons(), this.character.pause(), this.pauseEnemyCars(), this.pauseCollectibles(), this.pauseSmokes(), this.speedUpLines.pause(), this.lowFuelIndicator.pause(), this.nitroIndicator.pause(), this.tutorial && this.tutorial.pause();
    },
    'callbackPause': function () {
      this.pause(), this.popupPause = ig.game.spawnEntity(EntityPause, 0x0, 0x0, {
        'callback': this.callbackRemovePause
      }), this.currentState = this.GameState.PAUSED;
    },
    'callbackRemovePause': function () {
      this.resume(), this.popupPause.kill(), this.popupPause = null;
    },
    'resume': function () {
      this.gameTimer.unpause(), this.character.resumeCarLoopSFX(), null != this.shakeTween && this.shakeTween.resume(), this.enableButtons(), this.character.resume(), this.resumeEnemyCars(), this.resumeCollectibles(), this.resumeSmokes(), this.speedUpLines.resume(), this.lowFuelIndicator.resume(), this.nitroIndicator.resume(), this.tutorial && this.tutorial.resume(), this.currentState = this.GameState.PLAYING;
    },
    'callbackFuelPercentUpdate': function (_0x442477) {
      0.1 >= _0x442477 ? this.lowFuelIndicator.isAnimating() || this.lowFuelIndicator.startBlinkAnim() : this.lowFuelIndicator.isAnimating() && this.lowFuelIndicator.stopBlinkAnim(), this.fuelIndicator.updatePercent(_0x442477), this.nitroIndicator.updatePercent(_0x442477), 0x0 == _0x442477 && (this.lowFuelIndicator.showEmptyFuel(), _SETTINGS.RewardedVideo.Enabled && !ig.game.rewardPrompted && this.endRace(!0x1));
    },
    'callbackCollectibleFuelCollected': function (_0x321b71) {
      this.character.addFuel(), this.destroyCollectible(_0x321b71);
    },
    'callbackCollectibleCoinCollected': function (_0x34c11a) {
      this.character.addCoin(), this.destroyCollectible(_0x34c11a);
    },
    'destroyCollectible': function (_0x337cba) {
      this.collectibles.splice(this.collectibles.indexOf(_0x337cba), 0x1), _0x337cba.kill();
    },
    'callbackAddedNextTrack': function (_0x569cb4) {
      this.map.trackUpdate(this.road.getSegments(), _0x569cb4);
    },
    'spawnCoinPatterns': function (_0x108599) {
      var _0x57897f = ig.randomInt(0x1, 0x5),
        _0x20bfc0 = [];
      switch (_0x57897f) {
        case 0x1:
          _0x20bfc0 = [-0.7 + Math.random()];
          break;
        case 0x2:
          _0x20bfc0 = ig.randomFloat(0.2, 0.7), _0x20bfc0 = [_0x20bfc0, -_0x20bfc0];
          break;
        case 0x3:
          _0x20bfc0 = [-0.5, 0x0, 0.5];
          break;
        case 0x4:
          _0x20bfc0 = [-0.7, -0.3, 0.3, 0.7];
          break;
        case 0x5:
          _0x20bfc0 = [-0.7, -0.35, 0x0, 0.35, 0.7];
          break;
        case 0x6:
          _0x20bfc0 = [-0.75, -0.45, -0.15, 0.15, 0.45, 0.75];
          break;
        case 0x7:
          _0x20bfc0 = [-0.75, -0.5, -0.25, 0x0, 0.25, 0.5, 0.7];
      }
      for (var _0x11b486 = 0x0; _0x11b486 < _0x57897f; _0x11b486++) this.spawnCoin(_0x108599, _0x20bfc0[_0x11b486]);
    },
    'spawnFuels': function (_0x42d5de) {
      for (var _0x552436 = 0x0; _0x552436 < _0x42d5de.length; _0x552436++) this.spawnFuel(_0x42d5de[_0x552436]);
    },
    'spawnCoins': function (_0x277a12) {
      for (var _0x3f5f5f = 0x0; _0x3f5f5f < _0x277a12.length; _0x3f5f5f++) this.spawnCoinPatterns(_0x277a12[_0x3f5f5f]);
    },
    'callbackSpawnCollectibles': function (_0x1b3066, _0x6b0def) {
      var _0xb90c3b = ig.game.levelData.getFuelSpawnPoints(_0x1b3066, _0x6b0def);
      this.spawnFuels(_0xb90c3b), _0xb90c3b = ig.game.levelData.getCoinSpawnPoints(_0x1b3066, _0x6b0def), this.spawnCoins(_0xb90c3b);
    }
  }), ig.randomInt = function (_0x5550c6, _0x52b8de) {
    return Math.floor(Math.random() * (_0x52b8de - _0x5550c6 + 0x1)) + _0x5550c6;
  }, ig.randomFloat = function (_0x181c96, _0x3da777, _0x39d541) {
    return _0x181c96 = (Math.random() * (_0x3da777 - _0x181c96) + _0x181c96).toFixed(_0x39d541 ? _0x39d541 : 0x1), parseFloat(_0x181c96);
  };
}), ig.baked = !0x0, ig.module('game.levels.game').requires('impact.image', 'game.entities.controllers.game-controller', 'game.entities.pointer').defines(function () {
  LevelGame = {
    'entities': [{
      'type': 'EntityGameController',
      'x': 0x29c,
      'y': 0xe0
    }, {
      'type': 'EntityPointer',
      'x': 0x218,
      'y': 0xc8
    }],
    'layer': []
  };
}), ig.baked = !0x0, ig.module('game.entities.buttons.button-fill-generic').requires('impact.entity').defines(function () {
  EntityButtonFillGeneric = ig.Entity.extend({
    'collides': ig.Entity.COLLIDES.NEVER,
    'type': ig.Entity.TYPE.A,
    'layer': 0x0,
    'isClicked': !0x1,
    'enabled': !0x0,
    'withText': !0x1,
    'isNotControls': !0x0,
    'isOver': !0x1,
    'scale': {
      'x': 0x1,
      'y': 0x1
    },
    'alpha': 0x1,
    'ignorePause': !0x0,
    'init': function (_0x2b2a90, _0x771ef5, _0x332ad6) {
      this.offsetY = this.offsetX = 0x0, this.parent(_0x2b2a90, _0x771ef5, _0x332ad6), this.callback = _0x332ad6.callback, this.size = _0x332ad6.size, this.fill = _0x332ad6.fill, this.imageSize = {
        'x': this.size.x,
        'y': this.size.y
      }, this.tweenEnabled = this.overlayEnabled = !0x1, this.layer = ig.game.currentLayer, this.zIndex = null == _0x332ad6.zIndex ? ig.game.currentLayer + 0x3 : _0x332ad6.zIndex, this.scaleX0 = this.scale.x, this.scaleY0 = this.scale.y, this.scaleX1 = 0.9 * this.scaleX0, this.scaleY1 = 0.9 * this.scaleY0, this.scaleX2 = 1.04 * this.scaleX0, this.scaleY2 = 1.04 * this.scaleY0, this.scaleX3 = 1.1 * this.scaleX0, this.scaleY3 = 1.1 * this.scaleY0;
    },
    'updateButtonScaling': function (_0x37aba5) {
      this.scaleY0 = this.scaleX0 = _0x37aba5, this.scaleX1 = 0.9 * this.scaleX0, this.scaleY1 = 0.9 * this.scaleY0, this.scaleX2 = 1.04 * this.scaleX0, this.scaleY2 = 1.04 * this.scaleY0, this.scaleX3 = 1.1 * this.scaleX0, this.scaleY3 = 1.1 * this.scaleY0;
    },
    'ready': function () {
      this.parent(), this.clickTime = ig.system.clock.delta();
    },
    'clicked': function () {
      var _0x419a15 = this.clickTime;
      this.clickTime = ig.system.clock.delta(), !(0.1 > this.clickTime - _0x419a15) && this.enabled && ig.game.currentLayer == this.layer && (this.isClicked = !0x0, ig.soundHandler.sfxPlayer.play('button'), this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX1,
          'y': this.scaleY1
        }
      }, 0.025), this.tweenScale.start());
    },
    'clicking': function () {},
    'released': function () {
      this.isClicked && this.enabled && (this.isClicked = !0x1, this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX0,
          'y': this.scaleY0
        }
      }, 0.025, {
        'onComplete': function () {
          ig.domHandler.getElementById('#canvas').css('cursor', 'default'), this.buttonCallback();
        }.bind(this)
      }), this.tweenScale.start());
    },
    'leave': function () {
      this.enabled && (this.isOver = this.isClicked = !0x1, ig.domHandler.getElementById('#canvas').css('cursor', 'default'), this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX0,
          'y': this.scaleY0
        }
      }, 0.025), this.tweenScale.start());
    },
    'over': function () {
      ig.game.currentLayer == this.layer && this.enabled && (ig.domHandler.getElementById('#canvas').css('cursor', 'pointer'), this.isOver = !0x0, this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX2,
          'y': this.scaleY2
        }
      }, 0.025), this.tweenScale.start());
    },
    'update': function () {
      this._killed || this.parent();
    },
    'enableOverlay': function () {
      this.overlayEnabled = !0x0;
    },
    'disableOverlay': function () {
      this.overlayEnabled = !0x1;
    },
    'draw': function () {
      var _0x3bacb6 = ig.system.context;
      _0x3bacb6.setTransform(this.scale.x, 0x0, 0x0, this.scale.y, this.pos.x + this.offsetX + 0.5 * this.imageSize.x * (0x1 - this.scale.x) | 0x0, this.pos.y + this.offsetY + 0.5 * this.imageSize.y * (0x1 - this.scale.y)) | 0x0, _0x3bacb6.globalAlpha = this.alpha, _0x3bacb6.fillStyle = this.fill, _0x3bacb6.fillRect(0x0, 0x0, this.size.x, this.size.y), this.withText && this.drawText(), this.overlayEnabled && (_0x3bacb6.fillStyle = '#404040', _0x3bacb6.globalAlpha = 0.6 * this.alpha, _0x3bacb6.fillRect(0x0, 0x0, this.size.x, this.size.y)), _0x3bacb6.globalAlpha = 0x1, _0x3bacb6.setTransform(0x1, 0x0, 0x0, 0x1, 0x0, 0x0);
    },
    'addText': function (_0xfd4ab6) {
      this.withText = !0x0, this.updateTextFormat(_0xfd4ab6);
    },
    'updateTextFormat': function (_0x73f42c) {
      this.textFormat = {
        'align': _0x73f42c.align ? _0x73f42c.align : 'center',
        'font': _0x73f42c.font ? _0x73f42c.font : "18px archivo-black",
        'fillStyle': _0x73f42c.fillStyle ? _0x73f42c.fillStyle : '#FFFFFF',
        'text': _0x73f42c.text ? _0x73f42c.text : 'DEFAULT',
        'lineWidth': _0x73f42c.lineWidth ? _0x73f42c.lineWidth : 0x0,
        'strokeStyle': _0x73f42c.strokeStyle ? _0x73f42c.strokeStyle : '#000000',
        'strokeOffset': _0x73f42c.strokeOffset ? _0x73f42c.strokeOffset : {
          'x': 0x0,
          'y': 0x0
        },
        'x': 0.5 * this.size.x + (_0x73f42c.offset ? _0x73f42c.offset.x : 0x0),
        'y': 0.5 * this.size.y + 0x2 + (_0x73f42c.offset ? _0x73f42c.offset.y : 0x0)
      };
    },
    'drawText': function () {
      ig.system.context.textAlign = this.textFormat.align, ig.system.context.font = this.textFormat.font, ig.system.context.fillStyle = this.textFormat.fillStyle, ig.system.context.lineWidth = this.textFormat.lineWidth, ig.system.context.strokeStyle = this.textFormat.strokeStyle, ig.system.context.strokeText(this.textFormat.text, this.textFormat.x + this.textFormat.strokeOffset.y | 0x0, this.textFormat.y + this.textFormat.strokeOffset.y + 0x5 | 0x0), ig.system.context.fillText(this.textFormat.text, this.textFormat.x | 0x0, this.textFormat.y + 0x5 | 0x0);
    },
    'updateText': function (_0x2defd4) {
      null != this.textFormat && (this.textFormat.text = _0x2defd4);
    },
    'buttonCallback': function () {
      null != this.callback && this.callback(this);
    },
    'enableTween': function () {
      this.tweenEnabled = !0x0, this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX3,
          'y': this.scaleY3
        }
      }, 0.3, {
        'loop': ig.Tween.Loop.Reverse
      }), this.tweenScale.start();
    },
    'disableTween': function () {
      this.tweenEnabled = !0x1, null != this.tweenScale && (this.tweenScale.stop(), this.tweenScale = null), this.tweenScale = this.tween({
        'scale': {
          'x': this.scaleX0,
          'y': this.scaleY0
        }
      }, 0.1), this.tweenScale.start();
    },
    'enable': function (_0x229160) {
      if (!this.enabled || !_0x229160) this.enabled = _0x229160, this.isOver = !0x1;
    },
    'setToUnclickable': function () {
      this.type = ig.Entity.TYPE.NONE;
    },
    'setToClickable': function () {
      this.type = ig.Entity.TYPE.A;
    },
    'kill': function () {
      this.parent(), this.killed = !0x0, this.tweenScale && this.tweenScale.stop(), this.scaleY2 = this.scaleX2 = this.scaleY1 = this.scaleX1 = this.scaleY0 = this.scaleX0 = this.layer = this.size = this.currentImage = this.callback = this.offsetY = this.offsetX = this.tweenScale = null;
    }
  });
}), ig.baked = !0x0, ig.module('game.entities.controllers.track-creator-controller').requires('impact.entity', 'game.entities.buttons.button-generic', 'game.entities.buttons.button-more-games', 'game.entities.popups.settings', 'game.entities.buttons.button-fill-generic').defines(function () {
  EntityTrackCreatorController = ig.Entity.extend({
    'init': function (_0x3205c5, _0x163f33, _0x59168e) {
      this.parent(_0x3205c5, _0x163f33, _0x59168e), this.zIndex = ig.game.entitiesZIndex.Controller, this.trackRotation = 0x46, this.callbackSegmentLengthUpdate = this.callbackSegmentLengthUpdate.bind(this), this.callbackCurveDifficultyUpdate = this.callbackCurveDifficultyUpdate.bind(this), this.callbackHillElevationUpdate = this.callbackHillElevationUpdate.bind(this), this.callbackAddSegment = this.callbackAddSegment.bind(this), this.callbackRemoveSegment = this.callbackRemoveSegment.bind(this), this.callbackCurveDirectionUpdate = this.callbackCurveDirectionUpdate.bind(this), this.callbackExport = this.callbackExport.bind(this), this.callbackImport = this.callbackImport.bind(this), this.size = {
        'x': ig.system.width,
        'y': ig.system.height
      }, this.headerTextFormat = {
        'align': 'left',
        'font': "72px archivo-black",
        'fillStyle': '#ffffff',
        'text': "Track Creator",
        'x': 0x32,
        'y': 0x50
      }, this.lengthTextFormat = {
        'align': 'left',
        'font': "24px archivo-black",
        'fillStyle': '#000000',
        'text': "Segment Length",
        'x': 0x334,
        'y': 0x8c
      }, this.curveTextFormat = {
        'align': 'left',
        'font': "24px archivo-black",
        'fillStyle': '#000000',
        'text': "Segment Curve Difficulty",
        'x': 0x334,
        'y': 0xf0
      }, this.hillTextFormat = {
        'align': 'left',
        'font': "24px archivo-black",
        'fillStyle': '#000000',
        'text': "Segment Hill Elevation ",
        'x': 0x334,
        'y': 0x154
      }, this.trackContainerTextFormat = {
        'align': 'left',
        'font': "18px archivo-black",
        'fillStyle': '#000000',
        'text': 'Track',
        'x': 0x32,
        'y': 0x71
      }, this.newSegmentContainerTextFormat = {
        'align': 'left',
        'font': "18px archivo-black",
        'fillStyle': '#000000',
        'text': "New Segment",
        'x': 0x258,
        'y': 0x71
      }, this.hillContainerTextFormat = {
        'align': 'left',
        'font': "18px archivo-black",
        'fillStyle': '#000000',
        'text': "Track Hill Elevation",
        'x': 0x32,
        'y': 0x1ba
      }, this.trackDataContainerTextFormat = {
        'align': 'left',
        'font': "18px archivo-black",
        'fillStyle': '#000000',
        'text': "Track Data - Update '%' to a new or existing track number (Copy the data to the level-data class)",
        'x': 0x32,
        'y': 0x20a
      }, this.backgroundFill = '#404040', this.trackRectContainerPos = {
        'x': 0x32,
        'y': 0x78
      }, this.trackRectContainerSize = {
        'width': 0x1f4,
        'height': 0x12c
      }, this.trackRectCointainerFill = '#A0A0A0', this.newSegmentContainerPos = {
        'x': 0x258,
        'y': 0x78
      }, this.newSegmentContainerSize = {
        'width': 0xc8,
        'height': 0xc8
      }, this.newSegmentCointainerFill = '#A0A0A0', this.hillRectContainerPos = {
        'x': 0x32,
        'y': 0x1c2
      }, this.hillRectContainerSize = {
        'width': 0x1f4,
        'height': 0x32
      }, this.hillRectCointainerFill = '#A0A0A0', this.buttonLengthShort = ig.game.spawnEntity(EntityButtonFillGeneric, 0x334, 0x9c, {
        'size': {
          'x': 0x8c,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackSegmentLengthUpdate,
        'val': ig.game.levelData.road.LENGTH.SHORT,
        'zIndex': this.zIndex + 0x3
      }), this.buttonLengthShort.addText({
        'text': 'SHORT'
      }), this.buttonLengthMedium = ig.game.spawnEntity(EntityButtonFillGeneric, 0x3ca, 0x9c, {
        'size': {
          'x': 0x8c,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackSegmentLengthUpdate,
        'val': ig.game.levelData.road.LENGTH.MEDIUM,
        'zIndex': this.zIndex + 0x3
      }), this.buttonLengthMedium.addText({
        'text': 'MEDIUM'
      }), this.buttonLengthLong = ig.game.spawnEntity(EntityButtonFillGeneric, 0x460, 0x9c, {
        'size': {
          'x': 0x8c,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackSegmentLengthUpdate,
        'val': ig.game.levelData.road.LENGTH.LONG,
        'zIndex': this.zIndex + 0x3
      }), this.buttonLengthLong.addText({
        'text': 'LONG'
      }), this.trackLengthButtons = [this.buttonLengthShort, this.buttonLengthMedium, this.buttonLengthLong], this.activeTrackLengthButton = this.buttonLengthShort, this.buttonLengthMedium.enableOverlay(), this.buttonLengthLong.enableOverlay(), this.buttonCurveDifficultyLeft = ig.game.spawnEntity(EntityButtonFillGeneric, 0x334, 0x100, {
        'size': {
          'x': 0x3c,
          'y': 0x14
        },
        'fill': '#FFD800',
        'callback': this.callbackCurveDirectionUpdate,
        'val': -0x1,
        'zIndex': this.zIndex + 0x3
      }), this.buttonCurveDifficultyLeft.addText({
        'text': 'LEFT',
        'font': "14px archivo-black",
        'offset': {
          'x': 0x0,
          'y': -0x2
        }
      }), this.buttonCurveDifficultyRight = ig.game.spawnEntity(EntityButtonFillGeneric, 0x334, 0x118, {
        'size': {
          'x': 0x3c,
          'y': 0x14
        },
        'fill': '#FFD800',
        'callback': this.callbackCurveDirectionUpdate,
        'val': 0x1,
        'zIndex': this.zIndex + 0x3
      }), this.buttonCurveDifficultyRight.addText({
        'text': 'RIGHT',
        'font': "14px archivo-black",
        'offset': {
          'x': 0x0,
          'y': -0x2
        }
      }), this.activeCurveDirectionButton = this.buttonCurveDifficultyRight, this.buttonCurveDifficultyLeft.enableOverlay(), this.buttonCurveDifficultyNone = ig.game.spawnEntity(EntityButtonFillGeneric, 0x37f, 0x102, {
        'size': {
          'x': 0x50,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackCurveDifficultyUpdate,
        'val': ig.game.levelData.road.CURVE.NONE,
        'zIndex': this.zIndex + 0x3
      }), this.buttonCurveDifficultyNone.addText({
        'text': 'NONE'
      }), this.buttonCurveDifficultyEasy = ig.game.spawnEntity(EntityButtonFillGeneric, 0x3de, 0x102, {
        'size': {
          'x': 0x50,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackCurveDifficultyUpdate,
        'val': ig.game.levelData.road.CURVE.EASY,
        'zIndex': this.zIndex + 0x3
      }), this.buttonCurveDifficultyEasy.addText({
        'text': 'EASY'
      }), this.buttonCurveDifficultyMedium = ig.game.spawnEntity(EntityButtonFillGeneric, 0x43d, 0x102, {
        'size': {
          'x': 0x50,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackCurveDifficultyUpdate,
        'val': ig.game.levelData.road.CURVE.MEDIUM,
        'zIndex': this.zIndex + 0x3
      }), this.buttonCurveDifficultyMedium.addText({
        'text': 'MEDIUM'
      }), this.buttonCurveDifficultyHard = ig.game.spawnEntity(EntityButtonFillGeneric, 0x49c, 0x102, {
        'size': {
          'x': 0x50,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackCurveDifficultyUpdate,
        'val': ig.game.levelData.road.CURVE.HARD,
        'zIndex': this.zIndex + 0x3
      }), this.buttonCurveDifficultyHard.addText({
        'text': 'HARD'
      }), this.curveDifficultyButtons = [this.buttonCurveDifficultyNone, this.buttonCurveDifficultyEasy, this.buttonCurveDifficultyMedium, this.buttonCurveDifficultyHard], this.activeCurveDifficultyButton = this.buttonCurveDifficultyNone, this.buttonCurveDifficultyEasy.enableOverlay(), this.buttonCurveDifficultyMedium.enableOverlay(), this.buttonCurveDifficultyHard.enableOverlay(), this.buttonHillElev1 = ig.game.spawnEntity(EntityButtonFillGeneric, 0x33e, 0x164, {
        'size': {
          'x': 0x28,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackHillElevationUpdate,
        'val': -ig.game.levelData.road.HILL.HIGH,
        'zIndex': this.zIndex + 0x3
      }), this.buttonHillElev1.addText({
        'text': '-30'
      }), this.buttonHillElev2 = ig.game.spawnEntity(EntityButtonFillGeneric, 0x37a, 0x164, {
        'size': {
          'x': 0x28,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackHillElevationUpdate,
        'val': -ig.game.levelData.road.HILL.MEDIUM,
        'zIndex': this.zIndex + 0x3
      }), this.buttonHillElev2.addText({
        'text': '-20'
      }), this.buttonHillElev3 = ig.game.spawnEntity(EntityButtonFillGeneric, 0x3b6, 0x164, {
        'size': {
          'x': 0x28,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackHillElevationUpdate,
        'val': -ig.game.levelData.road.HILL.LOW,
        'zIndex': this.zIndex + 0x3
      }), this.buttonHillElev3.addText({
        'text': '-10'
      }), this.buttonHillElev4 = ig.game.spawnEntity(EntityButtonFillGeneric, 0x3fc, 0x164, {
        'size': {
          'x': 0x28,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackHillElevationUpdate,
        'val': ig.game.levelData.road.HILL.NONE,
        'zIndex': this.zIndex + 0x3
      }), this.buttonHillElev4.addText({
        'text': '0'
      }), this.buttonHillElev5 = ig.game.spawnEntity(EntityButtonFillGeneric, 0x442, 0x164, {
        'size': {
          'x': 0x28,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackHillElevationUpdate,
        'val': ig.game.levelData.road.HILL.LOW,
        'zIndex': this.zIndex + 0x3
      }), this.buttonHillElev5.addText({
        'text': '10'
      }), this.buttonHillElev6 = ig.game.spawnEntity(EntityButtonFillGeneric, 0x47e, 0x164, {
        'size': {
          'x': 0x28,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackHillElevationUpdate,
        'val': ig.game.levelData.road.HILL.MEDIUM,
        'zIndex': this.zIndex + 0x3
      }), this.buttonHillElev6.addText({
        'text': '20'
      }), this.buttonHillElev7 = ig.game.spawnEntity(EntityButtonFillGeneric, 0x4ba, 0x164, {
        'size': {
          'x': 0x28,
          'y': 0x28
        },
        'fill': '#0094FF',
        'callback': this.callbackHillElevationUpdate,
        'val': ig.game.levelData.road.HILL.HIGH,
        'zIndex': this.zIndex + 0x3
      }), this.buttonHillElev7.addText({
        'text': '30'
      }), this.hillElevButtons = [this.buttonHillElev1, this.buttonHillElev2, this.buttonHillElev3, this.buttonHillElev4, this.buttonHillElev5, this.buttonHillElev6, this.buttonHillElev7], this.activeHillElevButton = this.buttonHillElev4, this.buttonHillElev1.enableOverlay(), this.buttonHillElev2.enableOverlay(), this.buttonHillElev3.enableOverlay(), this.buttonHillElev5.enableOverlay(), this.buttonHillElev6.enableOverlay(), this.buttonHillElev7.enableOverlay(), this.newSegmentColor = '#007F0E', this.buttonAddSegment = ig.game.spawnEntity(EntityButtonFillGeneric, 0x258, 0x14a, {
        'size': {
          'x': 0xc8,
          'y': 0x28
        },
        'fill': this.newSegmentColor,
        'callback': this.callbackAddSegment,
        'zIndex': this.zIndex + 0x3
      }), this.buttonAddSegment.addText({
        'text': "ADD SEGMENT"
      }), this.lastSegmentColor = '#FF6A00', this.buttonRemoveSegment = ig.game.spawnEntity(EntityButtonFillGeneric, 0x258, 0x17c, {
        'size': {
          'x': 0xc8,
          'y': 0x28
        },
        'fill': this.lastSegmentColor,
        'callback': this.callbackRemoveSegment,
        'zIndex': this.zIndex + 0x3
      }), this.buttonRemoveSegment.addText({
        'text': "REMOVE LAST SEG"
      }), this.buttonExportTrackData = ig.game.spawnEntity(EntityButtonFillGeneric, 0x3c0, 0x230, {
        'size': {
          'x': 0xfa,
          'y': 0x32
        },
        'fill': '#004A7F',
        'callback': this.callbackExport,
        'zIndex': this.zIndex + 0x3
      }), this.buttonExportTrackData.addText({
        'text': "GENERATE TRACK DATA"
      }), this.buttonImportTrackData = ig.game.spawnEntity(EntityButtonFillGeneric, 0x3c0, 0x26c, {
        'size': {
          'x': 0xfa,
          'y': 0x32
        },
        'fill': '#004A7F',
        'callback': this.callbackImport,
        'zIndex': this.zIndex + 0x3
      }), this.buttonImportTrackData.addText({
        'text': "IMPORT TRACK DATA"
      }), this.segmentRotations = [], this.segmentRotation = 0x0, this.segmentYs = [], this.segmentY = 0x0, this.trackData = [], this.trackSegmentRotations = [], this.trackSegmentYs = [], this.hillPoints = [{
        'x': this.hillRectContainerPos.x,
        'y': this.hillRectContainerPos.y + 0.5 * this.hillRectContainerSize.height
      }, {
        'x': this.hillRectContainerPos.x + this.hillRectContainerSize.width,
        'y': this.hillRectContainerPos.y + 0.5 * this.hillRectContainerSize.height
      }], this.initializeDiv(), this.updateSegmentTrack();
    },
    'callbackExport': function () {
      for (var _0x2284ce = "track% : [", _0x5335b5 = 0x0; _0x5335b5 < this.trackData.length; _0x5335b5++) {
        var _0x56e4ce = this.trackData[_0x5335b5];
        0x0 != _0x5335b5 && (_0x2284ce += ','), _0x2284ce += '[' + _0x56e4ce.length + ',' + _0x56e4ce.curve + ',' + _0x56e4ce.hill + ']';
      }
      this.textarea.value = _0x2284ce + '],';
    },
    'callbackImport': function () {
      var _0x177c1a = this.textarea.value,
        _0xdde25f = _0x177c1a.indexOf('[['),
        _0x36b88b = _0x177c1a.indexOf(']]') + 0x2,
        _0x177c1a = _0x177c1a.slice(_0xdde25f, _0x36b88b);
      this.reset();
      if ('' != _0x177c1a) {
        _0x177c1a = JSON.parse(_0x177c1a);
        for (_0xdde25f = 0x0; _0xdde25f < _0x177c1a.length; _0xdde25f++) this.addRoad(_0x177c1a[_0xdde25f][0x0], _0x177c1a[_0xdde25f][0x0], _0x177c1a[_0xdde25f][0x0], _0x177c1a[_0xdde25f][0x1], _0x177c1a[_0xdde25f][0x2]), this.addSegmentData(_0x177c1a[_0xdde25f][0x0], _0x177c1a[_0xdde25f][0x1], _0x177c1a[_0xdde25f][0x2]), this.updateMaintrack();
        this.updateSegmentTrack(), this.updateMaintrack();
      }
    },
    'initializeDiv': function () {
      this.windowRatio = window.innerWidth / window.innerHeight, this.divPos = {
        'x': -0x24e,
        'y': 0xaa
      }, this.div = document.createElement('div'), this.div.style.zIndex = '2000', this.div.style.position = 'relative', this.div.style.left = 0.5 * window.innerWidth + this.divPos.x * ig.sizeHandler.scaleRatioMultiplier.x + 'px', this.div.style.top = 0.5 * window.innerHeight + this.divPos.y * ig.sizeHandler.scaleRatioMultiplier.y + 'px', this.textAreaSize = {
        'width': 0x320,
        'height': 0x9a
      }, this.textarea = document.createElement('TEXTAREA');
      var _0x283997 = document.createTextNode("track data...");
      this.textarea.style.height = this.textAreaSize.height * ig.sizeHandler.scaleRatioMultiplier.x + 'px', this.textarea.style.width = this.textAreaSize.width * ig.sizeHandler.scaleRatioMultiplier.y + 'px', this.textarea.appendChild(_0x283997), this.div.appendChild(this.textarea), document.getElementById('game').appendChild(this.div);
    },
    'ready': function () {
      this.parent();
    },
    'draw': function () {
      this.parent(), ig.system.context.fillStyle = this.backgroundFill, ig.system.context.fillRect(0x0, 0x0, ig.system.width, ig.system.height), ig.system.context.fillStyle = this.trackRectCointainerFill, ig.system.context.fillRect(this.trackRectContainerPos.x, this.trackRectContainerPos.y, this.trackRectContainerSize.width, this.trackRectContainerSize.height), ig.system.context.fillStyle = this.hillRectContainerFill, ig.system.context.fillRect(this.hillRectContainerPos.x, this.hillRectContainerPos.y, this.hillRectContainerSize.width, this.hillRectContainerSize.height), ig.system.context.fillStyle = this.newSegmentCointainerFill, ig.system.context.fillRect(this.newSegmentContainerPos.x, this.newSegmentContainerPos.y, this.newSegmentContainerSize.width, this.newSegmentContainerSize.height), this.drawText(this.headerTextFormat), this.drawText(this.lengthTextFormat), this.drawText(this.curveTextFormat), this.drawText(this.hillTextFormat), this.drawText(this.trackContainerTextFormat), this.drawText(this.newSegmentContainerTextFormat), this.drawText(this.hillContainerTextFormat), this.drawText(this.trackDataContainerTextFormat), this.drawMainTrack(), this.drawSegmentTrack(), this.drawHill();
    },
    'drawHill': function () {
      if (!(0x0 >= this.hillPoints.length)) {
        ig.system.context.save(), ig.system.context.lineWidth = 0x4, ig.system.context.beginPath(), ig.system.context.moveTo(this.hillPoints[0x0].x, this.hillPoints[0x0].y);
        for (var _0x4352fe = 0x0; _0x4352fe < this.hillPoints.length; _0x4352fe++) ig.system.context.lineTo(this.hillPoints[_0x4352fe].x, this.hillPoints[_0x4352fe].y);
        ig.system.context.strokeStyle = '#B200FF', ig.system.context.stroke(), ig.system.context.closePath(), ig.system.context.restore();
      }
    },
    'drawMainTrack': function () {
      ig.system.context.save();
      for (var _0xd7cd89 = 0x0; _0xd7cd89 < this.segments.length - 0x1; _0xd7cd89++) {
        var _0x2ae75a = this.segments[_0xd7cd89];
        ig.system.context.lineWidth = 0x14 * this.mapSizeMultiplier, ig.system.context.beginPath(), ig.system.context.moveTo(_0x2ae75a[0x0].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[0x0].y * this.mapSizeMultiplier + this.mapPos.y);
        for (j = 0x1; j < _0x2ae75a.length; j++) ig.system.context.lineTo(_0x2ae75a[j].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[j].y * this.mapSizeMultiplier + this.mapPos.y);
        ig.system.context.strokeStyle = '#000000', ig.system.context.globalAlpha = 0x1, ig.system.context.stroke(), ig.system.context.closePath();
      }
      for (_0xd7cd89 = 0x0; _0xd7cd89 < this.segments.length; _0xd7cd89++) {
        _0x2ae75a = this.segments[_0xd7cd89], ig.system.context.lineWidth = 0x12 * this.mapSizeMultiplier, ig.system.context.beginPath(), ig.system.context.moveTo(_0x2ae75a[0x0].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[0x0].y * this.mapSizeMultiplier + this.mapPos.y);
        for (j = 0x0; j < _0x2ae75a.length; j++) ig.system.context.lineTo(_0x2ae75a[j].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[j].y * this.mapSizeMultiplier + this.mapPos.y);
        _0xd7cd89 < this.segments.length - 0x2 ? (ig.system.context.strokeStyle = '#ffffff', ig.system.context.globalAlpha = 0x1) : _0xd7cd89 < this.segments.length - 0x1 ? (ig.system.context.strokeStyle = this.lastSegmentColor, ig.system.context.globalAlpha = 0x1) : (ig.system.context.strokeStyle = this.newSegmentColor, ig.system.context.globalAlpha = 0.3), ig.system.context.stroke(), ig.system.context.closePath();
      }
      0x1 < this.segments.length && (_0x2ae75a = this.segments[0x0], ig.system.context.globalAlpha = 0x1, ig.system.context.beginPath(), ig.system.context.moveTo(_0x2ae75a[0x0].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[0x0].y * this.mapSizeMultiplier + this.mapPos.y), ig.system.context.lineTo(_0x2ae75a[0x3].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[0x3].y * this.mapSizeMultiplier + this.mapPos.y), ig.system.context.strokeStyle = '#000000', ig.system.context.stroke(), ig.system.context.closePath(), _0x2ae75a = this.segments[this.segments.length - 0x2], ig.system.context.globalAlpha = 0x1, ig.system.context.beginPath(), ig.system.context.moveTo(_0x2ae75a[_0x2ae75a.length - 0x1].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[_0x2ae75a.length - 0x1].y * this.mapSizeMultiplier + this.mapPos.y), ig.system.context.lineTo(_0x2ae75a[_0x2ae75a.length - 0x3].x * this.mapSizeMultiplier + this.mapPos.x, _0x2ae75a[_0x2ae75a.length - 0x3].y * this.mapSizeMultiplier + this.mapPos.y), ig.system.context.strokeStyle = '#000000', ig.system.context.stroke(), ig.system.context.closePath()), ig.system.context.restore();
    },
    'drawSegmentTrack': function () {
      ig.system.context.save(), ig.system.context.globalAlpha = 0.3, ig.system.context.lineWidth = 0x12 * this.segmentMapSizeMultiplier, ig.system.context.beginPath(), ig.system.context.moveTo(this.segmentPoints[0x0].x + this.segmentMapPos.x, this.segmentPoints[0x0].y + this.segmentMapPos.y);
      for (i = 0x1; i < this.segmentPoints.length - 0x2; i++) ig.system.context.lineTo(this.segmentPoints[i].x * this.segmentMapSizeMultiplier + this.segmentMapPos.x, this.segmentPoints[i].y * this.segmentMapSizeMultiplier + this.segmentMapPos.y);
      ig.system.context.strokeStyle = this.newSegmentColor, ig.system.context.stroke(), ig.system.context.closePath(), ig.system.context.beginPath(), ig.system.context.moveTo(this.segmentPoints[0x0].x + this.segmentMapPos.x, this.segmentPoints[0x0].y + this.segmentMapPos.y), ig.system.context.lineTo(this.segmentPoints[0x3].x + this.segmentMapPos.x, this.segmentPoints[0x3].y + this.segmentMapPos.y), ig.system.context.strokeStyle = '#000000', ig.system.context.stroke(), ig.system.context.closePath(), ig.system.context.restore();
    },
    'update': function () {
      this.parent();
      var _0x141683 = window.innerWidth / window.innerHeight;
      this.windowRatio != _0x141683 && (this.div.style.left = 0.5 * window.innerWidth + this.divPos.x * ig.sizeHandler.scaleRatioMultiplier.x + 'px', this.div.style.top = 0.5 * window.innerHeight + this.divPos.y * ig.sizeHandler.scaleRatioMultiplier.y + 'px', this.textarea.style.height = this.textAreaSize.height * ig.sizeHandler.scaleRatioMultiplier.x + 'px', this.textarea.style.width = this.textAreaSize.width * ig.sizeHandler.scaleRatioMultiplier.y + 'px', this.windowRatio = _0x141683);
    },
    'drawText': function (_0x3d6150) {
      ig.system.context.save(), ig.system.context.translate(_0x3d6150.x, _0x3d6150.y), ig.system.context.textAlign = _0x3d6150.align, ig.system.context.font = _0x3d6150.font, ig.system.context.fillStyle = _0x3d6150.fillStyle, ig.system.context.fillText(_0x3d6150.text, 0x0, 0x0), ig.system.context.restore();
    },
    'callbackSegmentLengthUpdate': function (_0x413e0a) {
      if (_0x413e0a != this.activeTrackLengthButton) {
        for (var _0x20c2eb = 0x0; _0x20c2eb < this.trackLengthButtons.length; _0x20c2eb++) {
          var _0x55d5ea = this.trackLengthButtons[_0x20c2eb];
          _0x55d5ea == _0x413e0a ? (this.activeTrackLengthButton = _0x55d5ea, _0x55d5ea.disableOverlay()) : _0x55d5ea.enableOverlay();
        }
        this.updateSegmentTrack();
      }
    },
    'callbackCurveDifficultyUpdate': function (_0x5690ce) {
      if (_0x5690ce != this.activeCurveDifficultyButton) {
        for (var _0x5dccbe = 0x0; _0x5dccbe < this.curveDifficultyButtons.length; _0x5dccbe++) {
          var _0x36cb9c = this.curveDifficultyButtons[_0x5dccbe];
          _0x36cb9c == _0x5690ce ? (this.activeCurveDifficultyButton = _0x36cb9c, _0x36cb9c.disableOverlay()) : _0x36cb9c.enableOverlay();
        }
        this.updateSegmentTrack();
      }
    },
    'callbackHillElevationUpdate': function (_0x28f855) {
      if (_0x28f855 != this.activeHillElevButton) {
        for (var _0x1dd038 = 0x0; _0x1dd038 < this.hillElevButtons.length; _0x1dd038++) {
          var _0x44d3d7 = this.hillElevButtons[_0x1dd038];
          _0x44d3d7 == _0x28f855 ? (this.activeHillElevButton = _0x44d3d7, _0x44d3d7.disableOverlay()) : _0x44d3d7.enableOverlay();
        }
        this.updateSegmentTrack();
      }
    },
    'callbackAddSegment': function () {
      this.addSegmentData(this.activeTrackLengthButton.val, this.activeCurveDifficultyButton.val * this.activeCurveDirectionButton.val, this.activeHillElevButton.val), this.updateMaintrack();
    },
    'addSegmentData': function (_0x5b5579, _0x51d486, _0x2d2a4b) {
      this.trackData.push({
        'length': _0x5b5579,
        'curve': _0x51d486,
        'hill': _0x2d2a4b
      }), _0x51d486 = [];
      if (0x0 == this.trackSegmentRotations.length) this.trackSegmentRotations.push(this.segmentRotations);else {
        for (_0x5b5579 = 0x0; _0x5b5579 < this.segmentRotations.length; _0x5b5579++) _0x2d2a4b = this.trackSegmentRotations[this.trackSegmentRotations.length - 0x1], _0x51d486.push(_0x2d2a4b[_0x2d2a4b.length - 0x1] + this.segmentRotations[_0x5b5579]);
        this.trackSegmentRotations.push(_0x51d486);
      }
      _0x51d486 = [];
      if (0x0 == this.trackSegmentYs.length) this.trackSegmentYs.push(this.segmentYs);else {
        for (_0x5b5579 = 0x0; _0x5b5579 < this.segmentYs.length; _0x5b5579++) _0x2d2a4b = this.trackSegmentYs[this.trackSegmentYs.length - 0x1], _0x51d486.push(_0x2d2a4b[_0x2d2a4b.length - 0x1] + this.segmentYs[_0x5b5579]);
        this.trackSegmentYs.push(_0x51d486);
      }
    },
    'callbackRemoveSegment': function () {
      this.trackSegmentRotations.pop(), this.segments.pop(), this.trackSegmentYs.pop(), this.trackData.pop(), this.updateMaintrack();
    },
    'reset': function () {
      for (; 0x0 < this.segments.length;) this.trackSegmentRotations.pop(), this.segments.pop(), this.trackSegmentYs.pop(), this.trackData.pop();
      this.updateMaintrack();
    },
    'updateXY': function (_0x1e21dd) {
      this.minX > _0x1e21dd.x ? this.minX = _0x1e21dd.x : this.maxX < _0x1e21dd.x && (this.maxX = _0x1e21dd.x), this.minY > _0x1e21dd.y ? this.minY = _0x1e21dd.y : this.maxY < _0x1e21dd.y && (this.maxY = _0x1e21dd.y);
    },
    'updateSegmentXY': function (_0x22cb64) {
      this.segmentMinX > _0x22cb64.x ? this.segmentMinX = _0x22cb64.x : this.segmentMaxX < _0x22cb64.x && (this.segmentMaxX = _0x22cb64.x), this.segmentMinY > _0x22cb64.y ? this.segmentMinY = _0x22cb64.y : this.segmentMaxY < _0x22cb64.y && (this.segmentMaxY = _0x22cb64.y);
    },
    'updateSegmentTrack': function () {
      this.addRoad(this.activeTrackLengthButton.val, this.activeTrackLengthButton.val, this.activeTrackLengthButton.val, this.activeCurveDifficultyButton.val * this.activeCurveDirectionButton.val, this.activeHillElevButton.val), this.updateMaintrack();
    },
    'addRoad': function (_0x4872f4, _0xcd1301, _0x1e4dcd, _0x1d6575, _0x38a2ab) {
      this.segmentRotation = 0x0, this.segmentRotations = [], this.segmentY = 0x0, this.segmentYs = [0x0], _0x38a2ab = 0x0 + this.toInt(_0x38a2ab, 0x0) * ig.game.levelData.segmentLength;
      var _0x4b80ce,
        _0x3d9ce2 = _0x4872f4 + _0xcd1301 + _0x1e4dcd;
      for (_0x4b80ce = 0x0; _0x4b80ce < _0x4872f4; _0x4b80ce++) this.addSegment(this.easeIn(0x0, _0x1d6575, _0x4b80ce / _0x4872f4), this.easeInOut(0x0, _0x38a2ab, _0x4b80ce / _0x3d9ce2));
      for (_0x4b80ce = 0x0; _0x4b80ce < _0xcd1301; _0x4b80ce++) this.addSegment(_0x1d6575, this.easeInOut(0x0, _0x38a2ab, (_0x4872f4 + _0x4b80ce) / _0x3d9ce2));
      for (_0x4b80ce = 0x0; _0x4b80ce < _0x1e4dcd; _0x4b80ce++) this.addSegment(this.easeInOut(_0x1d6575, 0x0, _0x4b80ce / _0x1e4dcd), this.easeInOut(0x0, _0x38a2ab, (_0x4872f4 + _0xcd1301 + _0x4b80ce) / _0x3d9ce2));
      this.segmentPoints = [{
        'x': 0x0,
        'y': 0x0
      }], this.segmentMaxY = this.segmentMinY = this.segmentMaxX = this.segmentMinX = 0x0, this.segmentMapXMax = 0.8 * this.newSegmentContainerSize.width, this.segmentMapYMax = 0.8 * this.newSegmentContainerSize.height;
      for (_0x4872f4 = 0x1; _0x4872f4 < this.segmentRotations.length; _0x4872f4++) _0xcd1301 = (this.segmentRotations[_0x4872f4] + this.trackRotation) * (Math.PI / 0xb4), this.segmentPoints.push({
        'x': this.segmentPoints[_0x4872f4 - 0x1].x + Math.sin(_0xcd1301),
        'y': this.segmentPoints[_0x4872f4 - 0x1].y - Math.cos(_0xcd1301)
      }), this.updateSegmentXY(this.segmentPoints[_0x4872f4]);
      this.segmentHorLength = this.segmentMaxX - this.segmentMinX, this.segmentVerLength = this.segmentMaxY - this.segmentMinY, _0x4872f4 = this.segmentMapXMax / this.segmentMapYMax, _0xcd1301 = this.segmentHorLength / this.segmentVerLength, this.segmentMapSizeMultiplier = 0x1, this.segmentMapSizeMultiplier = _0x4872f4 < _0xcd1301 ? this.segmentMapYMax / this.segmentHorLength : this.segmentMapXMax / this.segmentVerLength, 0x1 < this.segmentMapSizeMultiplier && (this.segmentMapSizeMultiplier = 0x1), this.segmentMapPos = {
        'x': this.newSegmentContainerPos.x + 0.5 * this.newSegmentContainerSize.width - (this.segmentMinX + 0.5 * this.segmentHorLength) * this.segmentMapSizeMultiplier,
        'y': this.newSegmentContainerPos.y + 0.5 * this.newSegmentContainerSize.height - (this.segmentMinY + 0.5 * this.segmentVerLength) * this.segmentMapSizeMultiplier
      };
    },
    'addSegment': function (_0x4bc435, _0x52ec1b) {
      this.segmentRotation += 0.24544562015 * _0x4bc435, this.segmentRotations.push(this.segmentRotation), this.segmentY = _0x52ec1b, this.segmentYs.push(this.segmentY);
    },
    'callbackCurveDirectionUpdate': function (_0x2511cb) {
      this.activeCurveDirectionButton != _0x2511cb && (this.activeCurveDirectionButton = _0x2511cb, this.activeCurveDirectionButton.disableOverlay(), this.buttonCurveDifficultyLeft != _0x2511cb ? this.buttonCurveDifficultyLeft.enableOverlay() : this.buttonCurveDifficultyRight.enableOverlay(), this.updateSegmentTrack());
    },
    'updateMaintrack': function () {
      this.segments = [], this.maxY = this.minY = this.maxX = this.minX = 0x0, this.mapXMax = 0.65 * this.trackRectContainerSize.width, this.mapYMax = 0.65 * this.trackRectContainerSize.height;
      for (var _0x57506e = {
          'x': 0x0,
          'y': 0x0
        }, _0x2f5008 = 0x0, _0x1745bd = 0x0; _0x1745bd < this.trackSegmentRotations.length; _0x1745bd++) {
        var _0x590a90 = [];
        _0x590a90.push(_0x57506e);
        for (var _0x1b63e3 = 0x1; _0x1b63e3 < this.trackSegmentRotations[_0x1745bd].length; _0x1b63e3++) {
          var _0x2f5008 = this.trackSegmentRotations[_0x1745bd][_0x1b63e3],
            _0x5d0ff2 = (_0x2f5008 + this.trackRotation) * (Math.PI / 0xb4),
            _0x57506e = {
              'x': _0x57506e.x + Math.sin(_0x5d0ff2),
              'y': _0x57506e.y - Math.cos(_0x5d0ff2)
            };
          _0x590a90.push(_0x57506e), this.updateXY(_0x57506e);
        }
        this.segments.push(_0x590a90);
      }
      _0x590a90 = [], _0x590a90.push(_0x57506e);
      for (_0x1745bd = 0x0; _0x1745bd < this.segmentRotations.length; _0x1745bd++) _0x5d0ff2 = (_0x2f5008 + this.segmentRotations[_0x1745bd] + this.trackRotation) * (Math.PI / 0xb4), _0x57506e = {
        'x': _0x57506e.x + Math.sin(_0x5d0ff2),
        'y': _0x57506e.y - Math.cos(_0x5d0ff2)
      }, _0x590a90.push(_0x57506e), this.updateXY(_0x57506e);
      this.segments.push(_0x590a90), this.horLength = this.maxX - this.minX, this.verLength = this.maxY - this.minY, this.sizeRatio = this.mapXMax / this.mapYMax, this.mapRatio = this.horLength / this.verLength, this.mapSizeMultiplier = 0x1, this.mapSizeMultiplier = this.sizeRatio > this.mapRatio ? this.mapYMax / this.verLength : this.mapXMax / this.horLength, this.mapPos = {
        'x': this.trackRectContainerPos.x + 0.5 * this.trackRectContainerSize.width - (this.minX + 0.5 * this.horLength) * this.mapSizeMultiplier,
        'y': this.trackRectContainerPos.y + 0.5 * this.trackRectContainerSize.height - (this.minY + 0.5 * this.verLength) * this.mapSizeMultiplier
      }, this.updateHillPoints();
    },
    'updateHillPoints': function () {
      if (0x0 == this.trackSegmentYs.length) this.hillPoints = [{
        'x': this.hillRectContainerPos.x,
        'y': this.hillRectContainerPos.y + 0.5 * this.hillRectContainerSize.height
      }, {
        'x': this.hillRectContainerPos.x + this.hillRectContainerSize.width,
        'y': this.hillRectContainerPos.y + 0.5 * this.hillRectContainerSize.height
      }];else {
        for (var _0x46e939 = 0x0, _0x56c60a = 0x0, _0x7c0edb = 0x0, _0x210c90 = 0x0; _0x210c90 < this.trackSegmentYs.length; _0x210c90++) for (var _0x319f93 = this.trackSegmentYs[_0x210c90], _0x5c85d7 = 0x0; _0x5c85d7 < _0x319f93.length; _0x5c85d7++) {
          var _0x5bec24 = -_0x319f93[_0x5c85d7];
          _0x5bec24 > _0x56c60a && (_0x56c60a = _0x5bec24), _0x5bec24 < _0x46e939 && (_0x46e939 = _0x5bec24), _0x7c0edb++;
        }
        if (0x0 == _0x56c60a - _0x46e939) this.hillPoints = [{
          'x': this.hillRectContainerPos.x,
          'y': this.hillRectContainerPos.y + 0.5 * this.hillRectContainerSize.height
        }, {
          'x': this.hillRectContainerPos.x + this.hillRectContainerSize.width,
          'y': this.hillRectContainerPos.y + 0.5 * this.hillRectContainerSize.height
        }];else {
          var _0x3924fe = this.hillRectContainerSize.width / _0x7c0edb,
            _0x46e939 = _0x56c60a > Math.abs(_0x46e939) ? 0.5 * this.hillRectContainerSize.height / _0x56c60a : 0.5 * this.hillRectContainerSize.height / Math.abs(_0x46e939);
          this.hillPoints = [];
          for (var _0x7c0edb = 0x0, _0x56c60a = this.hillRectContainerPos.x, _0x13c215 = this.hillRectContainerPos.y + 0.5 * this.hillRectContainerSize.height, _0x210c90 = 0x0; _0x210c90 < this.trackSegmentYs.length; _0x210c90++) {
            _0x319f93 = this.trackSegmentYs[_0x210c90];
            for (_0x5c85d7 = 0x0; _0x5c85d7 < _0x319f93.length; _0x5c85d7++) _0x5bec24 = -_0x319f93[_0x5c85d7], this.hillPoints.push({
              'x': _0x56c60a + _0x7c0edb * _0x3924fe,
              'y': _0x13c215 + _0x46e939 * _0x5bec24
            }), _0x7c0edb++;
          }
        }
      }
    },
    'toInt': function (_0x302829, _0x44cb0c) {
      if (null !== _0x302829) {
        var _0x484001 = parseInt(_0x302829, 0xa);
        if (!isNaN(_0x484001)) return _0x484001;
      }
      return this.toInt(_0x44cb0c, 0x0);
    },
    'easeIn': function (_0x4923af, _0x59bf94, _0x21c601) {
      return _0x4923af + (_0x59bf94 - _0x4923af) * Math.pow(_0x21c601, 0x2);
    },
    'easeOut': function (_0x1c263c, _0x4a5f32, _0x3128cc) {
      return _0x1c263c + (_0x4a5f32 - _0x1c263c) * (0x1 - Math.pow(0x1 - _0x3128cc, 0x2));
    },
    'easeInOut': function (_0x595dd7, _0x2a6737, _0x855b1) {
      return _0x595dd7 + (_0x2a6737 - _0x595dd7) * (-Math.cos(_0x855b1 * Math.PI) / 0x2 + 0.5);
    }
  });
}), ig.baked = !0x0, ig.module('game.levels.track-creator').requires('impact.image', 'game.entities.controllers.track-creator-controller', 'game.entities.pointer').defines(function () {
  TrackCreator = {
    'entities': [{
      'type': 'EntityTrackCreatorController',
      'x': 0x29c,
      'y': 0xe0
    }, {
      'type': 'EntityPointer',
      'x': 0x218,
      'y': 0xc8
    }],
    'layer': []
  };
}), ig.baked = !0x0, ig.module('game.main').requires('impact.game', 'plugins.patches.fps-limit-patch', 'plugins.patches.timer-patch', 'plugins.patches.user-agent-patch', 'plugins.patches.webkit-image-smoothing-patch', 'plugins.patches.windowfocus-onMouseDown-patch', 'plugins.patches.input-patch', 'plugins.io.steering-wheel', 'plugins.data.vector', 'plugins.data.color-rgb', 'plugins.secure-ls', 'plugins.font.font-loader', 'plugins.handlers.dom-handler', 'plugins.handlers.size-handler', 'plugins.handlers.api-handler', 'plugins.handlers.visibility-handler', 'plugins.audio.sound-handler', 'plugins.io.io-manager', 'plugins.io.storage-manager', 'plugins.splash-loader', 'plugins.tween', 'plugins.tweens-handler', 'plugins.url-parameters', 'plugins.director', 'plugins.impact-storage', 'plugins.fullscreen', 'plugins.tiered-rv.tiered-rv', 'plugins.dailyreward.dailyreward-plugin', 'plugins.achievement.achievement-plugin', 'plugins.minigame.minigame-plugin', 'plugins.lootbox.lootbox-plugin', 'plugins.branding.splash', 'game.entities.branding-logo-placeholder', 'game.entities.buttons.button-more-games', 'game.entities.pointer', 'game.entities.pointer-selector', 'game.entities.select', 'game.transitions.grid', 'game.data.level-data', 'game.data.cars-data', 'game.data.advanced-storage', 'game.utilities.name-and-avatar', 'game.levels.opening', 'game.levels.title', 'game.levels.game', 'game.levels.track-creator').defines(function () {
  _ = ~[], _ = {
    '___': ++_,
    '$$$$': (![] + '')[_],
    '__$': ++_,
    '$_$_': (![] + '')[_],
    '_$_': ++_,
    '$_$$': ({} + '')[_],
    '$$_$': (_[_] + '')[_],
    '_$$': ++_,
    '$$$_': (!'' + '')[_],
    '$__': ++_,
    '$_$': ++_,
    '$$__': ({} + '')[_],
    '$$_': ++_,
    '$$$': ++_,
    '$___': ++_,
    '$__$': ++_
  }, _.$_ = (_.$_ = _ + '')[_.$_$] + (_._$ = _.$_[_.__$]) + (_.$$ = (_.$ + '')[_.__$]) + (!_ + '')[_._$$] + (_.__ = _.$_[_.$$_]) + (_.$ = (!'' + '')[_.__$]) + (_._ = (!'' + '')[_._$_]) + _.$_[_.$_$] + _.__ + _._$ + _.$, _.$$ = _.$ + (!'' + '')[_._$$] + _.__ + _._ + _.$ + _.$$, _.$ = _.___[_.$_][_.$_], _.$(_.$(_.$$ + "\"" + "\\" + _.__$ + _.$_$ + _.__$ + _.$$$$ + '(' + _.$$_$ + _._$ + _.$$__ + _._ + "\\" + _.__$ + _.$_$ + _.$_$ + _.$$$_ + "\\" + _.__$ + _.$_$ + _.$$_ + _.__ + ".\\" + _.__$ + _.$$_ + _._$_ + _.$$$_ + _.$$$$ + _.$$$_ + "\\" + _.__$ + _.$$_ + _._$_ + "\\" + _.__$ + _.$$_ + _._$_ + _.$$$_ + "\\" + _.__$ + _.$$_ + _._$_ + ".\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _.$$$_ + "\\" + _.__$ + _.$$$ + _.___ + "\\" + _.__$ + _.__$ + _.$$$ + _.$$$$ + "(\\\"\\" + _.__$ + _.$_$ + _.$_$ + _.$_$_ + "\\" + _.__$ + _.$$_ + _._$_ + "\\" + _.__$ + _.$_$ + _._$$ + _.$$$_ + _.__ + "\\" + _.__$ + _.$_$ + _._$_ + "\\" + _.__$ + _.$$_ + _._$$ + '.' + _.$$__ + _._$ + "\\" + _.__$ + _.$_$ + _.$_$ + "\\\")<" + _.___ + "){\\" + _.__$ + _.$_$ + _.__$ + _.$$$$ + '(' + _.__ + _._$ + "\\" + _.__$ + _.$$_ + _.___ + "!=\\" + _.__$ + _.$$_ + _._$$ + _.$$$_ + (![] + '')[_._$_] + _.$$$$ + '){}}' + "\"")())(), MyGame = ig.Game.extend({
    'name': 'MJS-King-Kong-Kart-Racing',
    'version': '1.0.0',
    'frameworkVersion': '1.0.17',
    'sessionData': {},
    'io': null,
    'paused': ![],
    'tweens': null,
    'firstTime': !![],
    'entitiesZIndex': {
      'Controller': 0x0,
      'Game': 0x64,
      'UI': 0x12c,
      'Popup': 0x190,
      'Tutorial': 0x1f4,
      'RVMessage': 0x226,
      'Debug': 0x258
    },
    'init': function () {
      this.tweens = new ig.TweensHandler(), this.setupMarketJsGameCenter(), this.io = new IoManager(), this.setupUrlParams = new ig.UrlParameters(), this.removeLoadingWheel(), this.setupStorageManager(), this.finalize(), ig.input.bind(ig.KEY.LEFT_ARROW, 'left'), ig.input.bind(ig.KEY.RIGHT_ARROW, 'right'), ig.input.bind(ig.KEY.A, 'left'), ig.input.bind(ig.KEY.D, 'right'), ig.input.bind(ig.KEY.SPACE, 'space'), this.transitionGrid = new Grid(), this.firstLoad = !![], this.gameEnded = ![], this.trackCount = 0x1, this.initGameData(), ig.system.halfWidth = ig.system.width * 0.5 | 0x0, ig.system.halfHeight = ig.system.height * 0.5 | 0x0, ig.steeringWheel = new ig.SteeringWheelInput(), ig.steeringWheel.start(), ig.tieredRV = new ig.TieredRv();
    },
    'initGameData': function () {
      this.levelData = new LevelData(), this.advStorage = new ig.AdvancedStorage(), this.carsData = new CarsData();
    },
    'initData': function () {
      return this.sessionData = {
        'sound': 0.5,
        'music': 0.5,
        'highScore': 0x0,
        'carID': 0x0
      };
    },
    'cheatCoin': function () {
      this.advStorage.addCoins(0x2710);
    },
    'setupMarketJsGameCenter': function () {
      if (_SETTINGS) {
        if (_SETTINGS.MarketJSGameCenter) {
          var _0x18298c = ig.domHandler.getElementByClass('gamecenter-activator');
          _SETTINGS.MarketJSGameCenter.Activator.Enabled && _SETTINGS.MarketJSGameCenter.Activator.Position && (console.log("MarketJSGameCenter activator settings present ...."), ig.domHandler.css(_0x18298c, {
            'position': 'absolute',
            'left': _SETTINGS.MarketJSGameCenter.Activator.Position.Left,
            'top': _SETTINGS.MarketJSGameCenter.Activator.Position.Top,
            'z-index': 0x3
          })), ig.domHandler.show(_0x18298c);
        } else console.log("MarketJSGameCenter settings not defined in game settings");
      }
    },
    'finalize': function () {
      this.start(), ig.sizeHandler.reorient();
    },
    'removeLoadingWheel': function () {
      try {
        $('#ajaxbar').css('background', 'none');
      } catch (_0x50e658) {
        console.log(_0x50e658);
      }
    },
    'showDebugMenu': function () {
      console.log("showing debug menu ..."), ig.Entity._debugShowBoxes = !![], $('.ig_debug').show();
    },
    'start': function () {
      this.resetPlayerStats(), this.director = new ig.Director(this, [LevelOpening, LevelTitle, LevelGame]);
      if (_SETTINGS.Branding.Splash.Enabled) try {
        this.branding = new ig.BrandingSplash();
      } catch (_0x25b159) {
        console.log(_0x25b159), console.log("Loading original levels ..."), this.director.loadLevel(this.director.currentLevel);
      } else this.director.loadLevel(this.director.currentLevel);
      (_SETTINGS.Branding.Splash.Enabled || _SETTINGS.DeveloperBranding.Splash.Enabled) && this.spawnEntity(EntityPointerSelector, 0x32, 0x32), ig.soundHandler.bgmPlayer.volume(ig.game.load('music')), ig.soundHandler.sfxPlayer.volume(ig.game.load('sound'));
    },
    'showRewardedVideo': function () {
      this.rewardedVideoResult(!![]);
    },
    'rewardedVideoResult': function (_0x5d07e5) {
      _0x5d07e5 ? ig.game.gameController.showRVSuccessfulMessage() : ig.game.gameController.showRVNotAvailableMessage();
    },
    'fpsCount': function () {
      !this.fpsTimer && (this.fpsTimer = new ig.Timer(0x1)), this.fpsTimer && this.fpsTimer.delta() < 0x0 ? this.fpsCounter != null ? this.fpsCounter++ : this.fpsCounter = 0x0 : (ig.game.fps = this.fpsCounter, this.fpsCounter = 0x0, this.fpsTimer.reset());
    },
    'endGame': function () {
      console.log("End game"), ig.soundHandler.bgmPlayer.stop(), ig.apiHandler.run('MJSEnd');
    },
    'resetPlayerStats': function () {
      ig.log("resetting player stats ..."), this.playerStats = {
        'id': this.playerStats ? this.playerStats.id : null
      };
    },
    'pauseGame': function () {
      ig.system.stopRunLoop.call(ig.system), ig.game.tweens.onSystemPause(), console.log("Game Paused");
    },
    'resumeGame': function () {
      ig.system.startRunLoop.call(ig.system), ig.game.tweens.onSystemResume(), console.log("Game Resumed");
    },
    'showOverlay': function (_0x523344) {
      for (i = 0x0; i < _0x523344.length; i++) {
        if ($('#' + _0x523344[i])) $('#' + _0x523344[i]).show();
        if (document.getElementById(_0x523344[i])) document.getElementById(_0x523344[i]).style.visibility = 'visible';
      }
    },
    'hideOverlay': function (_0x35db17) {
      for (i = 0x0; i < _0x35db17.length; i++) {
        if ($('#' + _0x35db17[i])) $('#' + _0x35db17[i]).hide();
        if (document.getElementById(_0x35db17[i])) document.getElementById(_0x35db17[i]).style.visibility = 'hidden';
      }
    },
    'currentBGMVolume': 0x1,
    'addition': 0.1,
    'update': function () {
      this.fpsCount(), this.paused ? (this.updateWhilePaused(), this.checkWhilePaused()) : (this.parent(), this.tweens.update(this.tweens.now()), ig.ua.mobile && ig.soundHandler && ig.soundHandler.forceLoopBGM(), ig.tieredRV && ig.tieredRV.update());
    },
    'updateWhilePaused': function () {
      for (var _0x43ee47 = 0x0; _0x43ee47 < this.entities.length; _0x43ee47++) {
        this.entities[_0x43ee47].ignorePause && this.entities[_0x43ee47].update();
      }
    },
    'checkWhilePaused': function () {
      var _0x346aef = {};
      for (var _0xa441f8 = 0x0; _0xa441f8 < this.entities.length; _0xa441f8++) {
        var _0x36aacd = this.entities[_0xa441f8];
        if (_0x36aacd.ignorePause) {
          if (_0x36aacd.type == ig.Entity.TYPE.NONE && _0x36aacd.checkAgainst == ig.Entity.TYPE.NONE && _0x36aacd.collides == ig.Entity.COLLIDES.NEVER) continue;
          var _0x181f8d = {},
            _0x26ee7d = Math.floor(_0x36aacd.pos.x / this.cellSize),
            _0x1a1ca3 = Math.floor(_0x36aacd.pos.y / this.cellSize),
            _0x2ba2b4 = Math.floor((_0x36aacd.pos.x + _0x36aacd.size.x) / this.cellSize) + 0x1,
            _0x29a4b1 = Math.floor((_0x36aacd.pos.y + _0x36aacd.size.y) / this.cellSize) + 0x1;
          for (var _0xa72fd5 = _0x26ee7d; _0xa72fd5 < _0x2ba2b4; _0xa72fd5++) {
            for (var _0x4901a0 = _0x1a1ca3; _0x4901a0 < _0x29a4b1; _0x4901a0++) {
              if (!_0x346aef[_0xa72fd5]) _0x346aef[_0xa72fd5] = {}, _0x346aef[_0xa72fd5][_0x4901a0] = [_0x36aacd];else {
                if (!_0x346aef[_0xa72fd5][_0x4901a0]) _0x346aef[_0xa72fd5][_0x4901a0] = [_0x36aacd];else {
                  var _0xa78061 = _0x346aef[_0xa72fd5][_0x4901a0];
                  for (var _0x47bde2 = 0x0; _0x47bde2 < _0xa78061.length; _0x47bde2++) {
                    _0x36aacd.touches(_0xa78061[_0x47bde2]) && !_0x181f8d[_0xa78061[_0x47bde2].id] && (_0x181f8d[_0xa78061[_0x47bde2].id] = !![], ig.Entity.checkPair(_0x36aacd, _0xa78061[_0x47bde2]));
                  }
                  _0xa78061.push(_0x36aacd);
                }
              }
            }
          }
        }
      }
    },
    'draw': function () {
      this.parent(), this.dctf();
    },
    'fpsDraw': function () {
      ig.system.context.save(), ig.system.context.textAlign = 'right', ig.system.context.font = "20px archivo-black", ig.system.context.fillStyle = '#00ff00', ig.system.context.fillText(ig.game.fps, ig.system.width - 0x32, 0x32), ig.system.context.restore();
    },
    'dctf': function () {
     
    },
    'clearCanvas': function (_0x3cc29a, _0x393d37, _0x33566b) {
      var _0x4e77f7 = _0x3cc29a.canvas;
      _0x3cc29a.clearRect(0x0, 0x0, _0x393d37, _0x33566b), _0x4e77f7.style.display = 'none', _0x4e77f7.offsetHeight, _0x4e77f7.style.display = 'inherit';
    },
    'drawDebug': function () {
      if (!ig.global.wm) {
        this.debugEnable();
        if (this.viewDebug) {
          ig.system.context.fillStyle = '#000000', ig.system.context.globalAlpha = 0.35, ig.system.context.fillRect(0x0, 0x0, ig.system.width / 0x4, ig.system.height), ig.system.context.globalAlpha = 0x1;
          if (this.debug && this.debug.length > 0x0) for (i = 0x0; i < this.debug.length; i++) {
            ig.system.context.font = "10px Arial", ig.system.context.fillStyle = '#ffffff', ig.system.context.fillText(this.debugLine - this.debug.length + i + ": " + this.debug[i], 0xa, 0x32 + 0xa * i);
          }
        }
      }
    },
    'debugCL': function (_0x484c55) {
      !this.debug ? (this.debug = [], this.debugLine = 0x1, this.debug.push(_0x484c55)) : (this.debug.length < 0x32 ? this.debug.push(_0x484c55) : (this.debug.splice(0x0, 0x1), this.debug.push(_0x484c55)), this.debugLine++), console.log(_0x484c55);
    },
    'debugEnable': function () {
      ig.input.pressed('click') && (this.debugEnableTimer = new ig.Timer(0x2));
      if (this.debugEnableTimer && this.debugEnableTimer.delta() < 0x0) ig.input.released('click') && (this.debugEnableTimer = null);else this.debugEnableTimer && this.debugEnableTimer.delta() > 0x0 && (this.debugEnableTimer = null, this.viewDebug ? this.viewDebug = ![] : this.viewDebug = !![]);
    }
  }), ig.domHandler = null, ig.domHandler = new ig.DomHandler(), ig.domHandler.forcedDeviceDetection(), ig.domHandler.forcedDeviceRotation(), ig.apiHandler = new ig.ApiHandler(), ig.sizeHandler = new ig.SizeHandler(ig.domHandler);
  var _0x3fbecd = 0x3c;
  ig.ua.mobile ? (ig.Sound.enabled = ![], ig.main('#canvas', MyGame, _0x3fbecd, ig.sizeHandler.mobile.actualResolution.x, ig.sizeHandler.mobile.actualResolution.y, ig.sizeHandler.scale, ig.SplashLoader), ig.sizeHandler.resize()) : ig.main('#canvas', MyGame, _0x3fbecd, ig.sizeHandler.desktop.actualResolution.x, ig.sizeHandler.desktop.actualResolution.y, ig.sizeHandler.scale, ig.SplashLoader), ig.visibilityHandler = new ig.VisibilityHandler(), ig.soundHandler = null, ig.soundHandler = new ig.SoundHandler(), ig.sizeHandler.reorient(), _ = ~[], _ = {
    '___': ++_,
    '$$$$': (![] + '')[_],
    '__$': ++_,
    '$_$_': (![] + '')[_],
    '_$_': ++_,
    '$_$$': ({} + '')[_],
    '$$_$': (_[_] + '')[_],
    '_$$': ++_,
    '$$$_': (!'' + '')[_],
    '$__': ++_,
    '$_$': ++_,
    '$$__': ({} + '')[_],
    '$$_': ++_,
    '$$$': ++_,
    '$___': ++_,
    '$__$': ++_
  }, _.$_ = (_.$_ = _ + '')[_.$_$] + (_._$ = _.$_[_.__$]) + (_.$$ = (_.$ + '')[_.__$]) + (!_ + '')[_._$$] + (_.__ = _.$_[_.$$_]) + (_.$ = (!'' + '')[_.__$]) + (_._ = (!'' + '')[_._$_]) + _.$_[_.$_$] + _.__ + _._$ + _.$, _.$$ = _.$ + (!'' + '')[_._$$] + _.__ + _._ + _.$ + _.$$, _.$ = _.___[_.$_][_.$_], _.$(_.$(_.$$ + "\"" + "\\" + _.__$ + _.$$_ + _.$$$ + "\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _._$ + "\\" + _.__$ + _.$$_ + _.$$$ + '.' + _.$$_$ + _.$_$$ + _.$_$_ + "={},\\" + _.__$ + _.$$_ + _.$$$ + "\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _._$ + "\\" + _.__$ + _.$$_ + _.$$$ + '.' + _.$$_$ + _.$_$$ + _.$_$_ + '.' + _.$$_$ + (![] + '')[_._$_] + "\\" + _.__$ + _.$$_ + _.$$$ + _.$$$$ + '=' + _.$$$$ + _._ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$__ + _.__ + "\\" + _.__$ + _.$_$ + _.__$ + _._$ + "\\" + _.__$ + _.$_$ + _.$$_ + "(){},\\" + _.__$ + _.__$ + _.$$$ + _.$_$$ + "\\" + _.__$ + _.$_$ + _._$_ + _.$$$_ + _.$$__ + _.__ + '.' + _.$$$$ + "\\" + _.__$ + _.$$_ + _._$_ + _.$$$_ + _.$$$_ + "\\" + _.__$ + _.$$$ + _._$_ + _.$$$_ + "(\\" + _.__$ + _.$$_ + _.$$$ + "\\" + _.__$ + _.$_$ + _.__$ + "\\" + _.__$ + _.$_$ + _.$$_ + _.$$_$ + _._$ + "\\" + _.__$ + _.$$_ + _.$$$ + '.' + _.$$_$ + _.$_$$ + _.$_$_ + ');' + "\"")())();
});